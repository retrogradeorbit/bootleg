/*
 * Copyright 2008 The Closure Compiler Authors
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/**
 * @fileoverview JavaScript Built-Ins that are not part of any specifications
 * but are still needed in some project's build.
 * @externs
 */
var opera = {};

opera.postError;

/** @nosideeffects */
opera.version = function() {};

/** @constructor */
function XSLTProcessor() {}

/**
 * @param {Node} styleSheet
 * @return {undefined}
 * @deprecated
 */
XSLTProcessor.prototype.importStylesheet = function(styleSheet) {};

/**
 * @param {Node} source
 * @return {Document}
 * @deprecated
 */
XSLTProcessor.prototype.transformToDocument = function(source) {};

/**
 * @param {Node} source
 * @param {Document} document
 * @return {DocumentFragment}
 * @deprecated
 */
XSLTProcessor.prototype.transformToFragment = function(source, document) {};

// The "methods" object is a place to hang arbitrary external
// properties. It is a throwback to pre-typed days, and should
// not be used for any new definitions; it exists only to bridge
// the gap between the old way and the new way.
var methods = {};
/*
 * Copyright 2018 The Closure Compiler Authors.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/**
 * @fileoverview Definitions for ECMAScript 6 Proxy objects.
 * @see https://tc39.github.io/ecma262/#sec-proxy-objects
 * @see https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Proxy
 * @externs
 */


/**
 * @record
 * @template TARGET
 * @see https://tc39.github.io/ecma262/#sec-proxy-object-internal-methods-and-internal-slots
 * @see https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Proxy/handler
 */
function ProxyHandler() {}

/**
 * @type {(function(TARGET):?Object)|undefined}
 * @see https://tc39.github.io/ecma262/#sec-proxy-object-internal-methods-and-internal-slots-getprototypeof
 * @see https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Proxy/handler/getPrototypeOf
 */
ProxyHandler.prototype.getPrototypeOf /* = function(target) {} */;

/**
 * @type {(function(TARGET, ?Object):boolean)|undefined}
 * @see https://tc39.github.io/ecma262/#sec-proxy-object-internal-methods-and-internal-slots-setprototypeof-v
 * @see https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Proxy/handler/setPrototypeOf
 */
ProxyHandler.prototype.setPrototypeOf /* = function(target, proto) {} */;

/**
 * @type {(function(TARGET):boolean)|undefined}
 * @see https://tc39.github.io/ecma262/#sec-proxy-object-internal-methods-and-internal-slots-isextensible
 * @see https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Proxy/handler/isExtensible
 */
ProxyHandler.prototype.isExtensible /* = function(target) {} */;

/**
 * @type {(function(TARGET):boolean)|undefined}
 * @see https://tc39.github.io/ecma262/#sec-proxy-object-internal-methods-and-internal-slots-preventextensions
 * @see https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Proxy/handler/preventExtensions
 */
ProxyHandler.prototype.preventExtensions /* = function(target) {} */;

/**
 * @type {(function(TARGET, (string|symbol)):(!ObjectPropertyDescriptor|undefined))|undefined}
 * @see https://tc39.github.io/ecma262/#sec-proxy-object-internal-methods-and-internal-slots-getownproperty-p
 * @see https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Proxy/handler/getOwnPropertyDescriptor
 */
ProxyHandler.prototype.getOwnPropertyDescriptor /* = function(target, prop) {} */;

/**
 * @type {(function(TARGET, (string|symbol), !ObjectPropertyDescriptor):boolean)|undefined}
 * @see https://tc39.github.io/ecma262/#sec-proxy-object-internal-methods-and-internal-slots-defineownproperty-p-desc
 * @see https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Proxy/handler/defineProperty
 */
ProxyHandler.prototype.defineProperty /* = function(target, prop, desc) {} */;

/**
 * @type {(function(TARGET, (string|symbol)):boolean)|undefined}
 * @see https://tc39.github.io/ecma262/#sec-proxy-object-internal-methods-and-internal-slots-hasproperty-p
 * @see https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Proxy/handler/has
 */
ProxyHandler.prototype.has /* = function(target, prop) {} */;

/**
 * @type {(function(TARGET, (string|symbol), !Object):*)|undefined}
 * @see https://tc39.github.io/ecma262/#sec-proxy-object-internal-methods-and-internal-slots-get-p-receiver
 * @see https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Proxy/handler/get
 */
ProxyHandler.prototype.get /* = function(target, prop, receiver) {} */;

/**
 * @type {(function(TARGET, (string|symbol), *, !Object):boolean)|undefined}
 * @see https://tc39.github.io/ecma262/#sec-proxy-object-internal-methods-and-internal-slots-set-p-v-receiver
 * @see https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Proxy/handler/set
 */
ProxyHandler.prototype.set /* = function(target, prop, value, receiver) {} */;

/**
 * @type {(function(TARGET, (string|symbol)):boolean)|undefined}
 * @see https://tc39.github.io/ecma262/#sec-proxy-object-internal-methods-and-internal-slots-delete-p
 * @see https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Proxy/handler/deleteProperty
 */
ProxyHandler.prototype.deleteProperty /* = function (target, prop) {} */;

/**
 * @type {(function(TARGET):!Array<(string|symbol)>)|undefined}
 * @see https://tc39.github.io/ecma262/#sec-proxy-object-internal-methods-and-internal-slots-ownpropertykeys
 * @see https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Proxy/handler/ownKeys
 */
ProxyHandler.prototype.ownKeys /* = function(target) {} */;

/**
 * @type {(function(TARGET, *, !Array):*)|undefined}
 * @see https://tc39.github.io/ecma262/#sec-proxy-object-internal-methods-and-internal-slots-call-thisargument-argumentslist
 * @see https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Proxy/handler/apply
 */
ProxyHandler.prototype.apply /* = function(target, thisArg, argList) {} */;

/**
 * @type {(function(TARGET, !Array, function(new: ?, ...?)):!Object)|undefined}
 * @see https://tc39.github.io/ecma262/#sec-proxy-object-internal-methods-and-internal-slots-construct-argumentslist-newtarget
 * @see https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Proxy/handler/construct
 */
ProxyHandler.prototype.construct /* = function(target, argList, newTarget) {} */;


/**
 * @constructor
 * @param {TARGET} target
 * @param {!ProxyHandler<TARGET>} handler
 * @template TARGET
 * @see https://tc39.github.io/ecma262/#sec-proxy-constructor
 * @see https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Proxy#Syntax
 */
function Proxy(target, handler) {}

/**
 * @param {TARGET} target
 * @param {!ProxyHandler<TARGET>} handler
 * @return {{proxy: !Proxy<TARGET>, revoke: function():void}}
 * @template TARGET
 * @see https://tc39.github.io/ecma262/#sec-proxy.revocable
 * @see https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Proxy/revocable
 */
Proxy.revocable = function(target, handler) {};
/*
 * Copyright 2014 The Closure Compiler Authors
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/**
 * @fileoverview Definitions of the fetch api.
 *
 * This api is still in development and not yet stable. Use at your
 * own risk.
 *
 * Based on Living Standard â€” Last Updated 17 August 2016
 *
 * @see https://fetch.spec.whatwg.org/
 * @externs
 */


/**
 * @typedef {string}
 * @see https://w3c.github.io/webappsec-referrer-policy/#enumdef-referrerpolicy
 * Possible values: '', 'no-referrer', 'no-referrer-when-downgrade',
 *  'same-origin', 'origin', 'strict-origin', 'origin-when-cross-origin',
 *  'strict-origin-when-cross-origin', 'unsafe-url'
 */
var ReferrerPolicy;


/**
 * @typedef {!Headers|!Array<!Array<string>>|!Object<string,string>}
 * @see https://fetch.spec.whatwg.org/#typedefdef-headersinit
 */
var HeadersInit;


/**
 * @param {!HeadersInit=} opt_headersInit
 * @constructor
 * @implements {Iterable<!Array<string>>}
 * @see https://fetch.spec.whatwg.org/#headers
 */
function Headers(opt_headersInit) {}

/**
 * @param {string} name
 * @param {string} value
 * @return {undefined}
 */
Headers.prototype.append = function(name, value) {};

/**
 * @param {string} name
 * @return {undefined}
 */
Headers.prototype.delete = function(name) {};

/** @return {!IteratorIterable<!Array<string>>} */
Headers.prototype.entries = function() {};

/**
 * @param {string} name
 * @return {?string}
 */
Headers.prototype.get = function(name) {};

/**
 * @param {string} name
 * @return {!Array<string>}
 */
Headers.prototype.getAll = function(name) {};

/**
 * @param {string} name
 * @return {boolean}
 */
Headers.prototype.has = function(name) {};

/** @return {!IteratorIterable<string>} */
Headers.prototype.keys = function() {};

/**
 * @param {string} name
 * @param {string} value
 * @return {undefined}
 */
Headers.prototype.set = function(name, value) {};

/** @return {!Iterator<string>} */
Headers.prototype.values = function() {};

/** @return {!Iterator<!Array<string>>} */
Headers.prototype[Symbol.iterator] = function() {};


/**
 * @typedef {
 *     !Blob|!BufferSource|!FormData|!URLSearchParams|!ReadableStream|string}
 * @see https://fetch.spec.whatwg.org/#bodyinit
 */
var BodyInit;


/**
 * @typedef {!BodyInit|!ReadableStream}
 * @see https://fetch.spec.whatwg.org/#responsebodyinit
 */
var ResponseBodyInit;


/**
 * @interface
 * @see https://fetch.spec.whatwg.org/#body
 */
function Body() {};

/** @type {boolean} */
Body.prototype.bodyUsed;

/** @return {!Promise<!ArrayBuffer>} */
Body.prototype.arrayBuffer = function() {};

/** @return {!Promise<!Blob>} */
Body.prototype.blob = function() {};

/** @return {!Promise<!FormData>} */
Body.prototype.formData = function() {};

/** @return {!Promise<*>} */
Body.prototype.json = function() {};

/** @return {!Promise<string>} */
Body.prototype.text = function() {};


/**
 * @typedef {!Request|string}
 * @see https://fetch.spec.whatwg.org/#requestinfo
 */
var RequestInfo;


/**
 * @param {!RequestInfo} input
 * @param {!RequestInit=} opt_init
 * @constructor
 * @implements {Body}
 * @see https://fetch.spec.whatwg.org/#request
 */
function Request(input, opt_init) {}

/** @override */
Request.prototype.bodyUsed;

/** @override */
Request.prototype.arrayBuffer = function() {};

/** @override */
Request.prototype.blob = function() {};

/** @override */
Request.prototype.formData = function() {};

/** @override */
Request.prototype.json = function() {};

/** @override */
Request.prototype.text = function() {};

/** @type {string} */
Request.prototype.method;

/** @type {string} */
Request.prototype.url;

/** @type {!Headers} */
Request.prototype.headers;

/** @type {!FetchRequestType} */
Request.prototype.type;

/** @type {!RequestDestination} */
Request.prototype.destination;

/** @type {string} */
Request.prototype.referrer;

/** @type {!RequestMode} */
Request.prototype.mode;

/** @type {!RequestCredentials} */
Request.prototype.credentials;

/** @type {!RequestCache} */
Request.prototype.cache;

/** @type {!RequestRedirect} */
Request.prototype.redirect;

/** @type {string} */
Request.prototype.integrity;

/** @type {boolean} */
Request.prototype.isHistoryNavigation;

/** @type {(undefined|boolean)} */
Request.prototype.keepalive;

/** @return {!Request} */
Request.prototype.clone = function() {};


/**
 * @record
 * @see https://fetch.spec.whatwg.org/#requestinit
 */
function RequestInit() {};

/** @type {(undefined|string)} */
RequestInit.prototype.method;

/** @type {(undefined|!HeadersInit)} */
RequestInit.prototype.headers;

/** @type {(undefined|?BodyInit)} */
RequestInit.prototype.body;

/** @type {(undefined|string)} */
RequestInit.prototype.referrer;

/** @type {(undefined|!ReferrerPolicy)} */
RequestInit.prototype.referrerPolicy;

/** @type {(undefined|!RequestMode)} */
RequestInit.prototype.mode;

/** @type {(undefined|!RequestCredentials)} */
RequestInit.prototype.credentials;

/** @type {(undefined|!RequestCache)} */
RequestInit.prototype.cache;

/** @type {(undefined|!RequestRedirect)} */
RequestInit.prototype.redirect;

/** @type {(undefined|string)} */
RequestInit.prototype.integrity;

/** @type {(undefined|!AbortSignal)} */
RequestInit.prototype.signal;

/** @type {(undefined|boolean)} */
RequestInit.prototype.keepalive;

/** @type {(undefined|null)} */
RequestInit.prototype.window;

/**
 * @typedef {string}
 * @see https://fetch.spec.whatwg.org/#requesttype
 *  Possible values: '', 'audio', 'font', 'image', 'script', 'style',
 *  'track', 'video'
 */
var FetchRequestType;


/**
 * @typedef {string}
 * @see https://fetch.spec.whatwg.org/#requestdestination
 * Possible values: '', 'document', 'embed', 'font', 'image', 'manifest',
 *  'media', 'object', 'report', 'script', 'serviceworker', 'sharedworker',
 *  'style', 'worker', 'xslt'
 */
var RequestDestination;


/**
 * @typedef {string}
 * @see https://fetch.spec.whatwg.org/#requestmode
 * Possible values: 'navigate', 'same-origin', 'no-cors', 'cors'
 */
var RequestMode ;


/**
 * @typedef {string}
 * @see https://fetch.spec.whatwg.org/#requestcredentials
 * Possible values: 'omit', 'same-origin', 'include'
 */
var RequestCredentials;


/**
 * @typedef {string}
 * @see https://fetch.spec.whatwg.org/#requestcache
 *  Possible values: 'default', 'no-store', 'reload', 'no-cache', 'force-cache',
 * 'only-if-cached'
 */
var RequestCache;


/**
 * @typedef {string}
 * @see https://fetch.spec.whatwg.org/#requestredirect
 * Possible values: 'follow', 'error', 'manual'
 */
var RequestRedirect;


/**
 * @param {?ResponseBodyInit=} opt_body
 * @param {!ResponseInit=} opt_init
 * @constructor
 * @implements {Body}
 * @see https://fetch.spec.whatwg.org/#response
 */
function Response(opt_body, opt_init) {}

/** @return {!Response} */
Response.error = function() {};

/**
 * @param {string} url
 * @param {number=} opt_status
 * @return {!Response}
 */
Response.redirect = function(url, opt_status) {};

/** @override */
Response.prototype.bodyUsed;

/** @override */
Response.prototype.arrayBuffer = function() {};

/** @override */
Response.prototype.blob = function() {};

/** @override */
Response.prototype.formData = function() {};

/** @override */
Response.prototype.json = function() {};

/** @override */
Response.prototype.text = function() {};

/** @type {!ResponseType} */
Response.prototype.type;

/** @type {string} */
Response.prototype.url;

/** @type {boolean} */
Response.prototype.redirected;

/** @type {number} */
Response.prototype.status;

/** @type {boolean} */
Response.prototype.ok;

/** @type {string} */
Response.prototype.statusText;

/** @type {!Headers} */
Response.prototype.headers;

/** @type {?ReadableStream} */
Response.prototype.body;

/** @type {!Promise<!Headers>} */
Response.prototype.trailer;

/** @return {!Response} */
Response.prototype.clone = function() {};


/**
 * @record
 * @see https://fetch.spec.whatwg.org/#responseinit
 */
function ResponseInit() {};

/** @type {(undefined|number)} */
ResponseInit.prototype.status;

/** @type {(undefined|string)} */
ResponseInit.prototype.statusText;

/** @type {(undefined|!HeadersInit)} */
ResponseInit.prototype.headers;


/**
 * @typedef {string}
 * @see https://fetch.spec.whatwg.org/#responsetype
 * Possible values: 'basic', 'cors', 'default', 'error', 'opaque',
 *  'opaqueredirect'
 */
var ResponseType;

/**
 * @param {!RequestInfo} input
 * @param {!RequestInit=} opt_init
 * @return {!Promise<!Response>}
 * @see https://fetch.spec.whatwg.org/#fetch-method
 */
function fetch(input, opt_init) {}

/**
 * @param {!RequestInfo} input
 * @param {!RequestInit=} opt_init
 * @return {!Promise<!Response>}
 * @see https://fetch.spec.whatwg.org/#fetch-method
 */
Window.prototype.fetch = function(input, opt_init) {};

/**
 * @param {!RequestInfo} input
 * @param {!RequestInit=} opt_init
 * @return {!Promise<!Response>}
 * @see https://fetch.spec.whatwg.org/#fetch-method
 */
WorkerGlobalScope.prototype.fetch = function(input, opt_init) {};

/**
 * if WorkerOptions.type = 'module', it specifies how `scriptURL` is fetched.
 * WorkerOptions is defined in html5.js.
 * @type {!RequestCredentials|undefined}
 */
WorkerOptions.prototype.credentials;
/*
 * Copyright 2018 The Closure Compiler Authors.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/**
 * @fileoverview Definitions from the FIDO Specifications
 * @see https://fidoalliance.org/download/
 *
 * @externs
 * @author arnarbi@gmail.com (Arnar Birgisson)
 */

/**
 * U2F JavaScript API namespace
 * @see https://fidoalliance.org/specs/fido-u2f-v1.2-ps-20170411/fido-u2f-javascript-api-v1.2-ps-20170411.html
 * @const
 */
var u2f = {};

/**
 * Data object for a single sign request.
 * @typedef {string}
 */
u2f.Transport;

/**
 * Data object for a registered key.
 * @typedef {{
 *   version: string,
 *   keyHandle: string,
 *   transports: (!Array<!u2f.Transport>|undefined),
 *   appId: ?string
 * }}
 */
u2f.RegisteredKey;

/**
 * An error object for responses
 * @typedef {{
 *   errorCode: number,
 *   errorMessage: ?string
 * }}
 */
u2f.Error;

/**
 * Data object for a sign response.
 * @typedef {{
 *   keyHandle: string,
 *   signatureData: string,
 *   clientData: string
 * }}
 */
u2f.SignResponse;

/**
 * @typedef {{
 *   version: string,
 *   challenge: string
 * }}
 */
u2f.RegisterRequest

/**
 * @param {string} appId
 * @param {string} challenge
 * @param {!Array<!u2f.RegisteredKey>} registeredKeys
 * @param {function((!u2f.Error|!u2f.SignResponse))} callback
 * @param {number=} opt_timeoutSeconds
 */
u2f.sign = function(
    appId, challenge, registeredKeys, callback, opt_timeoutSeconds) {};

/**
 * @param {string} appId
 * @param {!Array<!u2f.RegisterRequest>} registerRequests
 * @param {!Array<!u2f.RegisteredKey>} registeredKeys
 * @param {function((!u2f.Error|!u2f.SignResponse))} callback
 * @param {number=} opt_timeoutSeconds
 */
u2f.register = function(
    appId, registerRequests, registeredKeys, callback, opt_timeoutSeconds) {};
/*
 * Copyright 2008 The Closure Compiler Authors
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/**
 * @fileoverview Definitions for all the Flash Object JavaScript methods. This
 * file depends on w3c_dom2.js.
 * Created from
 * http://www.adobe.com/support/flash/publishexport/scriptingwithflash/scriptingwithflash_03.html
 *
 * @externs
 */


// Standard Methods.

/**
 * Call a Flash function exported by ExternalInterface.
 * @param {string} xmlString The XML string passed to Flash. The outer element
 *     should be {@code <invoke>}. A sample invocation string:
 *     {@code <invoke name="function_name" returntype="javascript">
 *     <string>test</string></invoke>}
 * @return {string} The serialized return value from Flash that you can eval.
 */
HTMLObjectElement.prototype.CallFunction = function(xmlString) {};

/**
 * Returns the value of the Flash variable specified by varName or null if the
 * variable does not exist.
 * @param {string} varName The variable name.
 * @return {?string} The variable value.
 */
HTMLObjectElement.prototype.GetVariable = function(varName) {};

/**
 * Activates the frame number specified by `frameNumber` in the current
 * movie.
 * @param {number} frameNumber A non-negative integer frame number.
 * @return {undefined}
 */
HTMLObjectElement.prototype.GotoFrame = function(frameNumber) {};

/**
 * @return {boolean} Whether the movie is currently playing.
 */
HTMLObjectElement.prototype.IsPlaying = function() {};

/**
 * Loads the movie identified by `url` to the layer specified by
 * `layerNumber`.
 * @param {number} layerNumber The layer number.
 * @param {string} url The movie URL.
 * @return {undefined}
 */
HTMLObjectElement.prototype.LoadMovie = function(layerNumber, url) {};

/**
 * Pans a zoomed-in movie to the coordinates specified by x and y. Use mode to
 * specify whether the values for x and y are pixels or a percent of the window.
 * When mode is 0, the coordinates are pixels; when mode is 1, the coordinates
 * are percent of the window.
 * @param {number} x The x-coordinate.
 * @param {number} y The y-coordinate.
 * @param {number} mode The mode.
 * @return {undefined}
 */
HTMLObjectElement.prototype.Pan = function(x, y, mode) {};

/**
 * @return {number} The percent of the Flash Player movie that has streamed
 *     into the browser so far; Possible values are from 0 to 100.
 */
HTMLObjectElement.prototype.PercentLoaded = function() {};

/**
 * Starts playing the movie.
 * @return {undefined}
 */
HTMLObjectElement.prototype.Play = function() {};

/**
 * Goes to the first frame.
 * @return {undefined}
 */
HTMLObjectElement.prototype.Rewind = function() {};

/**
 * Sets the value of the flash variable.
 * @param {string} variableName The variable name.
 * @param {string} value The value.
 * @return {undefined}
 */
HTMLObjectElement.prototype.SetVariable = function(variableName, value) {};

/**
 * Zooms in on a rectangular area of the movie. The units of the coordinates
 * are in twips (1440 units per inch).
 * @param {number} left The left coordinate.
 * @param {number} top The top coordinate.
 * @param {number} right The right coordinate.
 * @param {number} bottom The bottom coordinate.
 * @return {undefined}
 */
HTMLObjectElement.prototype.SetZoomRect = function(left, top, right, bottom) {};

/**
 * Stops playing the movie.
 * @return {undefined}
 */
HTMLObjectElement.prototype.StopPlay = function() {};

/**
 * @return {number} The total number of frames in the movie.
 */
HTMLObjectElement.prototype.TotalFrames = function() {};

/**
 * Zooms the view by a relative scale factor.
 * @param {number} percent The percentage scale factor, should be an integer.
 * @return {undefined}
 */
HTMLObjectElement.prototype.Zoom = function(percent) {};


// TellTarget Methods.

/**
 * Executes the action in the timeline specified by `target` in the
 * specified frame.
 * @param {string} target The timeline.
 * @param {number} frameNumber The frame number.
 * @return {undefined}
 */
HTMLObjectElement.prototype.TCallFrame = function(target, frameNumber) {};

/**
 * Executes the action in the timeline specified by `target` in the
 * specified frame.
 * @param {string} target The timeline.
 * @param {string} label The frame label.
 * @return {undefined}
 */
HTMLObjectElement.prototype.TCallLabel = function(target, label) {};

/**
 * Returns the number of the current frame for the specified timeline.
 * @param {string} target The timeline.
 * @return {number} The number of the current frame.
 */
HTMLObjectElement.prototype.TCurentFrame = function(target) {};

/**
 * Returns the label of the current frame for the specified timeline.
 * @param {string} target The timeline.
 * @return {string} The label of the current frame, empty string if no
 *     current frame.
 */
HTMLObjectElement.prototype.TCurrentLabel = function(target) {};

/**
 * Returns a string indicating the value of the property in the
 * specified timeline.
 * @param {string} target The timeline.
 * @param {number} property The integer corresponding to the desired property.
 * @return {string} The value of the property.
 */
HTMLObjectElement.prototype.TGetProperty = function(target, property) {};

/**
 * Returns a number indicating the value of the property in the specified
 * timeline.
 * @param {string} target The timeline.
 * @param {number} property The integer corresponding to the desired property.
 * @return {number} A number indicating the value of the property.
 */
HTMLObjectElement.prototype.TGetPropertyAsNumber = function(target, property) {};

/**
 * Goes to the specified frame number in the specified timeline.
 * @param {string} target The timeline.
 * @param {number} frameNumber The frame number.
 * @return {undefined}
 */
HTMLObjectElement.prototype.TGotoFrame = function(target, frameNumber) {};

/**
 * Goes to the specified frame label in the specified timeline.
 * @param {string} target The timeline.
 * @param {string} label The framelabel.
 * @return {undefined}
 */
HTMLObjectElement.prototype.TGotoLabel = function(target, label) {};

/**
 * Plays the specified timeline.
 * @param {number} target The timeline.
 * @return {undefined}
 */
HTMLObjectElement.prototype.TPlay = function(target) {};

/**
 * Sets the value of the property in the specified timeline.
 * @param {number} target The timeline.
 * @param {number} property The integer corresponding to the desired property.
 * @param {string|number} value The value.
 * @return {undefined}
 */
HTMLObjectElement.prototype.TSetProperty = function(target, property, value) {};

/**
 * Stops the specified timeline.
 * @param {number} target The timeline.
 * @return {undefined}
 */
HTMLObjectElement.prototype.TStopPlay = function(target) {};
/*
 * Copyright 2008 The Closure Compiler Authors
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/**
 * @fileoverview Definitions for Gecko's custom CSS properties. Copied from:
 * http://mxr.mozilla.org/mozilla2.0/source/dom/interfaces/css/nsIDOMCSS2Properties.idl
 *
 * @externs
 * @author nicksantos@google.com (Nick Santos)
 */


/** @type {string} */ CSSProperties.prototype.MozAppearance;
/** @type {string} */ CSSProperties.prototype.MozBackfaceVisibility;
/** @type {string} */ CSSProperties.prototype.MozBackgroundClip;
/** @type {string} */ CSSProperties.prototype.MozBackgroundInlinePolicy;
/** @type {string} */ CSSProperties.prototype.MozBackgroundOrigin;
/** @type {string} */ CSSProperties.prototype.MozBinding;
/** @type {string} */ CSSProperties.prototype.MozBorderBottomColors;
/** @type {string} */ CSSProperties.prototype.MozBorderEnd;
/** @type {string} */ CSSProperties.prototype.MozBorderEndColor;
/** @type {string} */ CSSProperties.prototype.MozBorderEndStyle;
/** @type {string} */ CSSProperties.prototype.MozBorderEndWidth;
/** @type {string} */ CSSProperties.prototype.MozBorderImage;
/** @type {string} */ CSSProperties.prototype.MozBorderLeftColors;
/** @type {string} */ CSSProperties.prototype.MozBorderRadius;
/** @type {string} */ CSSProperties.prototype.MozBorderRadiusTopleft;
/** @type {string} */ CSSProperties.prototype.MozBorderRadiusTopright;
/** @type {string} */ CSSProperties.prototype.MozBorderRadiusBottomleft;
/** @type {string} */ CSSProperties.prototype.MozBorderRadiusBottomright;
/** @type {string} */ CSSProperties.prototype.MozBorderRightColors;
/** @type {string} */ CSSProperties.prototype.MozBorderStart;
/** @type {string} */ CSSProperties.prototype.MozBorderStartColor;
/** @type {string} */ CSSProperties.prototype.MozBorderStartStyle;
/** @type {string} */ CSSProperties.prototype.MozBorderStartWidth;
/** @type {string} */ CSSProperties.prototype.MozBorderTopColors;
/** @type {string} */ CSSProperties.prototype.MozBoxAlign;
/** @type {string} */ CSSProperties.prototype.MozBoxDirection;
/** @type {string} */ CSSProperties.prototype.MozBoxFlex;
/** @type {string} */ CSSProperties.prototype.MozBoxOrdinalGroup;
/** @type {string} */ CSSProperties.prototype.MozBoxOrient;
/** @type {string} */ CSSProperties.prototype.MozBoxPack;
/** @type {string} */ CSSProperties.prototype.MozBoxSizing;
/** @type {string} */ CSSProperties.prototype.MozBoxShadow;
/** @type {string} */ CSSProperties.prototype.MozColumnCount;
/** @type {string} */ CSSProperties.prototype.MozColumnGap;
/** @type {string} */ CSSProperties.prototype.MozColumnRule;
/** @type {string} */ CSSProperties.prototype.MozColumnRuleColor;
/** @type {string} */ CSSProperties.prototype.MozColumnRuleStyle;
/** @type {string} */ CSSProperties.prototype.MozColumnRuleWidth;
/** @type {string} */ CSSProperties.prototype.MozColumnWidth;
/** @type {string} */ CSSProperties.prototype.MozFloatEdge;
/** @type {string} */ CSSProperties.prototype.MozFontFeatureSettings;
/** @type {string} */ CSSProperties.prototype.MozFontLanguageOverride;
/** @type {string} */ CSSProperties.prototype.MozForceBrokenImageIcon;
/** @type {string} */ CSSProperties.prototype.MozImageRegion;
/** @type {string} */ CSSProperties.prototype.MozMarginEnd;
/** @type {string} */ CSSProperties.prototype.MozMarginStart;
/** @type {number|string} */ CSSProperties.prototype.MozOpacity;
/** @type {string} */ CSSProperties.prototype.MozOutline;
/** @type {string} */ CSSProperties.prototype.MozOutlineColor;
/** @type {string} */ CSSProperties.prototype.MozOutlineOffset;
/** @type {string} */ CSSProperties.prototype.MozOutlineRadius;
/** @type {string} */ CSSProperties.prototype.MozOutlineRadiusBottomleft;
/** @type {string} */ CSSProperties.prototype.MozOutlineRadiusBottomright;
/** @type {string} */ CSSProperties.prototype.MozOutlineRadiusTopleft;
/** @type {string} */ CSSProperties.prototype.MozOutlineRadiusTopright;
/** @type {string} */ CSSProperties.prototype.MozOutlineStyle;
/** @type {string} */ CSSProperties.prototype.MozOutlineWidth;
/** @type {string} */ CSSProperties.prototype.MozPaddingEnd;
/** @type {string} */ CSSProperties.prototype.MozPaddingStart;
/** @type {string} */ CSSProperties.prototype.MozPerspective;
/** @type {string} */ CSSProperties.prototype.MozStackSizing;
/** @type {string} */ CSSProperties.prototype.MozTabSize;
/** @type {string} */ CSSProperties.prototype.MozTransform;
/** @type {string} */ CSSProperties.prototype.MozTransformOrigin;
/** @type {string} */ CSSProperties.prototype.MozTransition;
/** @type {string} */ CSSProperties.prototype.MozTransitionDelay;
/** @type {string} */ CSSProperties.prototype.MozTransitionDuration;
/** @type {string} */ CSSProperties.prototype.MozTransitionProperty;
/** @type {string} */ CSSProperties.prototype.MozTransitionTimingFunction;
/** @type {string} */ CSSProperties.prototype.MozUserFocus;
/** @type {string} */ CSSProperties.prototype.MozUserInput;
/** @type {string} */ CSSProperties.prototype.MozUserModify;
/** @type {string} */ CSSProperties.prototype.MozUserSelect;
/** @type {string} */ CSSProperties.prototype.MozWindowShadow;


// These are non-standard Gecko CSSOM properties on Window.prototype.screen.

/**
 * @type {number}
 * @see https://developer.mozilla.org/En/DOM/window.screen.availTop
 */
Screen.prototype.availTop;

/**
 * @type {number}
 * @see https://developer.mozilla.org/En/DOM/window.screen.availLeft
 */
Screen.prototype.availLeft;

/**
 * @type {number}
 * @see https://developer.mozilla.org/En/DOM/window.screen.left
 */
Screen.prototype.left;

/**
 * @type {number}
 * @see https://developer.mozilla.org/En/DOM/window.screen.top
 */
Screen.prototype.top;
/*
 * Copyright 2008 The Closure Compiler Authors
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/**
 * @fileoverview Definitions for all the extensions over
 *  W3C's DOM specification by Gecko. This file depends on
 *  w3c_dom2.js.
 *
 * When a non-standard extension appears in both Gecko and IE, we put
 * it in gecko_dom.js
 *
 * @externs
 */

// TODO: Almost all of it has not been annotated with types.

// Gecko DOM;

/**
 * Mozilla only???
 * @constructor
 * @extends {HTMLElement}
 */
function HTMLSpanElement() {}

/**
 * @see https://developer.mozilla.org/en/Components_object
 */
Window.prototype.Components;

/**
 * @type {Window}
 * @see https://developer.mozilla.org/en/DOM/window.content
 */
Window.prototype.content;

/** @see https://developer.mozilla.org/en/DOM/window.controllers */
Window.prototype.controllers;

/** @see https://developer.mozilla.org/en/DOM/window.crypto */
Window.prototype.crypto;

/**
 * Gets/sets the status bar text for the given window.
 * @type {string}
 * @see https://developer.mozilla.org/en/DOM/window.defaultStatus
 */
Window.prototype.defaultStatus;

/** @see https://developer.mozilla.org/en/DOM/window.dialogArguments */
Window.prototype.dialogArguments;

/** @see https://developer.mozilla.org/en/DOM/window.directories */
Window.prototype.directories;

/**
 * @type {boolean}
 * @see https://developer.mozilla.org/en/DOM/window.fullScreen
 */
Window.prototype.fullScreen;

/** @see https://developer.mozilla.org/en/DOM/window.pkcs11 */
Window.prototype.pkcs11;

/** @see https://developer.mozilla.org/en/DOM/window */
Window.prototype.returnValue;

/**
 * @type {number}
 * @see https://developer.mozilla.org/En/DOM/window.scrollMaxX
 */
Window.prototype.scrollMaxX;

/**
 * @type {number}
 * @see https://developer.mozilla.org/En/DOM/window.scrollMaxY
 */
Window.prototype.scrollMaxY;

/** @see https://developer.mozilla.org/en/DOM/window.sidebar */
Window.prototype.sidebar;

/**
 * @see https://developer.mozilla.org/en/DOM/window.back
 * @return {undefined}
 */
Window.prototype.back = function() {};

/** @deprecated */
Window.prototype.captureEvents;

/**@see https://developer.mozilla.org/en/DOM/window.find */
Window.prototype.find;

/**
 * @see https://developer.mozilla.org/en/DOM/window.forward
 * @return {undefined}
 */
Window.prototype.forward = function() {};

/**
 * @see https://developer.mozilla.org/en/DOM/window.getAttention
 * @return {undefined}
 */
Window.prototype.getAttention = function() {};

/**
 * @see https://developer.mozilla.org/en/DOM/window.home
 * @return {undefined}
 */
Window.prototype.home = function() {};

Window.prototype.openDialog;
Window.prototype.releaseEvents;
Window.prototype.scrollByLines;
Window.prototype.scrollByPages;

/**
 * @param {string} uri
 * @param {?=} opt_arguments
 * @param {string=} opt_options
 * @see https://developer.mozilla.org/en/DOM/window.showModalDialog
 */
Window.prototype.showModalDialog;

Window.prototype.sizeToContent;

Window.prototype.updateCommands;

// properties of Document

/**
 * @see https://developer.mozilla.org/en/DOM/document.alinkColor
 * @type {string}
 */
Document.prototype.alinkColor;

/**
 * @see https://developer.mozilla.org/en/DOM/document.anchors
 * @type {HTMLCollection<!HTMLAnchorElement>}
 */
Document.prototype.anchors;

/**
 * @see https://developer.mozilla.org/en/DOM/document.applets
 * @type {HTMLCollection<!HTMLAppletElement>}
 */
Document.prototype.applets;
/** @type {?string} */ Document.prototype.baseURI;

/**
 * @see https://developer.mozilla.org/en/DOM/document.bgColor
 * @type {string}
 */
Document.prototype.bgColor;

/** @type {HTMLBodyElement} */ Document.prototype.body;
Document.prototype.characterSet;

/**
 * @see https://developer.mozilla.org/en/DOM/document.compatMode
 * @type {string}
 */
Document.prototype.compatMode;

Document.prototype.contentType;
/** @type {string} */ Document.prototype.cookie;

/**
 * @see https://developer.mozilla.org/en-US/docs/Web/API/Document/defaultView
 * @type {?Window}
 */
Document.prototype.defaultView;

/**
 * @see https://developer.mozilla.org/en/DOM/document.designMode
 * @type {string}
 */
Document.prototype.designMode;

Document.prototype.documentURIObject;

/**
 * @see https://developer.mozilla.org/en/DOM/document.domain
 * @type {string}
 */
Document.prototype.domain;

/**
 * @see https://developer.mozilla.org/en/DOM/document.embeds
 * @type {HTMLCollection<!HTMLEmbedElement>}
 */
Document.prototype.embeds;

/**
 * @see https://developer.mozilla.org/en/DOM/document.fgColor
 * @type {string}
 */
Document.prototype.fgColor;

/** @type {Element} */ Document.prototype.firstChild;

/**
 * @see https://developer.mozilla.org/en/DOM/document.forms
 * @type {HTMLCollection<!HTMLFormElement>}
 */
Document.prototype.forms;

/** @type {HTMLCollection<!HTMLImageElement>} */
Document.prototype.images;

/**
 * @type {string}
 * @see https://developer.mozilla.org/en/DOM/document.lastModified
 */
Document.prototype.lastModified;

/**
 * @type {string}
 * @see https://developer.mozilla.org/en/DOM/document.linkColor
 */
Document.prototype.linkColor;

/**
 * @see https://developer.mozilla.org/en/DOM/document.links
 * @type {HTMLCollection<(!HTMLAreaElement|!HTMLAnchorElement)>}
 */
Document.prototype.links;

/**
 * @type {!Location}
 * @implicitCast
 */
Document.prototype.location;

Document.prototype.namespaceURI;
Document.prototype.nodePrincipal;
Document.prototype.plugins;
Document.prototype.popupNode;

/**
 * @type {string}
 * @see https://developer.mozilla.org/en/DOM/document.referrer
 */
Document.prototype.referrer;

/**
 * @type {StyleSheetList}
 * @see https://developer.mozilla.org/en/DOM/document.styleSheets
 */
Document.prototype.styleSheets;

/** @type {?string} */ Document.prototype.title;
Document.prototype.tooltipNode;
/** @type {string} */ Document.prototype.URL;

/**
 * @type {string}
 * @see https://developer.mozilla.org/en/DOM/document.vlinkColor
 */
Document.prototype.vlinkColor;

/** @type {number} */ Document.prototype.width;

// Methods of Document
/**
 * @see https://developer.mozilla.org/en/DOM/document.clear
 * @return {undefined}
 */
Document.prototype.clear = function() {};

/**
 * @param {string} type
 * @return {Event}
 */
Document.prototype.createEvent = function(type) {};
Document.prototype.createNSResolver;
/** @return {Range} */ Document.prototype.createRange = function() {};
Document.prototype.createTreeWalker;

Document.prototype.evaluate;

/**
 * @param {string} commandName
 * @param {?boolean=} opt_showUi
 * @param {*=} opt_value
 * @see https://developer.mozilla.org/en/Rich-Text_Editing_in_Mozilla#Executing_Commands
 */
Document.prototype.execCommand;

Document.prototype.loadOverlay;

/**
 * @see https://developer.mozilla.org/en/Midas
 * @see http://msdn.microsoft.com/en-us/library/ms536676(VS.85).aspx
 */
Document.prototype.queryCommandEnabled;

/**
 * @see https://developer.mozilla.org/en/Midas
 * @see http://msdn.microsoft.com/en-us/library/ms536678(VS.85).aspx
 */
Document.prototype.queryCommandIndeterm;

/**
 * @see https://developer.mozilla.org/en/Midas
 * @see http://msdn.microsoft.com/en-us/library/ms536679(VS.85).aspx
 */
Document.prototype.queryCommandState;

/**
 * @see https://developer.mozilla.org/en/DOM/document.queryCommandSupported
 * @see http://msdn.microsoft.com/en-us/library/ms536681(VS.85).aspx
 * @param {string} command
 * @return {?} Implementation-specific.
 */
Document.prototype.queryCommandSupported;

/**
 * @see https://developer.mozilla.org/en/Midas
 * @see http://msdn.microsoft.com/en-us/library/ms536683(VS.85).aspx
 */
Document.prototype.queryCommandValue;

Document.prototype.ononline;
Document.prototype.onoffline;

// XUL
/**
 * @see http://developer.mozilla.org/en/DOM/document.getBoxObjectFor
 * @return {BoxObject}
 * @nosideeffects
 */
Document.prototype.getBoxObjectFor = function(element) {};

// From:
// http://lxr.mozilla.org/mozilla1.8/source/dom/public/idl/range/nsIDOMNSRange.idl

/**
 * @param {!TrustedHTML|string} tag
 * @return {DocumentFragment}
 */
Range.prototype.createContextualFragment;

/**
 * @param {Node} parent
 * @param {number} offset
 * @return {boolean}
 * @nosideeffects
 */
Range.prototype.isPointInRange;

/**
 * @param {Node} parent
 * @param {number} offset
 * @return {number}
 * @nosideeffects
 */
Range.prototype.comparePoint;

/**
 * @param {Node} n
 * @return {boolean}
 * @nosideeffects
 */
Range.prototype.intersectsNode;

/**
 * @param {Node} n
 * @return {number}
 * @nosideeffects
 */
Range.prototype.compareNode;

/**
 * @type {!NodeList<!Element>}
 * @see https://developer.mozilla.org/en/DOM/element.children
 */
Element.prototype.children;

/**
 * Firebug sets this property on elements it is inserting into the DOM.
 * @type {boolean}
 */
Element.prototype.firebugIgnore;

/**
 * Note: According to the spec, name is defined on specific types of
 * HTMLElements, rather than on Node, Element, or HTMLElement directly.
 * Ignore this.
 * @type {string}
 */
Element.prototype.name;

Element.prototype.nodePrincipal;

/**
 * @type {!CSSStyleDeclaration}
 * This belongs on HTMLElement rather than Element, but that
 * breaks a lot.
 * TODO(rdcronin): Remove this declaration once the breakage is fixed.
 */
Element.prototype.style;

/** @return {undefined} */
Element.prototype.click = function() {};

/** @type {number} */
HTMLTextAreaElement.prototype.selectionStart;

/** @type {number} */
HTMLTextAreaElement.prototype.selectionEnd;

/**
 * @param {number} selectionStart
 * @param {number} selectionEnd
 * @see http://www.whatwg.org/specs/web-apps/current-work/multipage/editing.html#dom-textarea/input-setselectionrange
 * @return {undefined}
 */
HTMLTextAreaElement.prototype.setSelectionRange =
    function(selectionStart, selectionEnd) {};

/**
 * @param {string} replacement
 * @param {number=} start
 * @param {number=} end
 * @param {string=} selectionMode
 * @see https://html.spec.whatwg.org/#dom-textarea/input-setrangetext
 * @return {undefined}
 */
HTMLTextAreaElement.prototype.setRangeText =
    function(replacement, start, end, selectionMode) {};

/**
 * @type {string}
 * @see https://developer.mozilla.org/en/Navigator.buildID
 */
Navigator.prototype.buildID;

/**
 * @type {!Array<string>|undefined}
 * @see https://developer.mozilla.org/en/Navigator.languages
 */
Navigator.prototype.languages;

/**
 * @type {string}
 * @see https://developer.mozilla.org/en/Navigator.oscpu
 */
Navigator.prototype.oscpu;

/**
 * @type {string}
 * @see https://developer.mozilla.org/en/Navigator.productSub
 */
Navigator.prototype.productSub;

/**
 * @type {string}
 * @see https://developer.mozilla.org/en/Navigator.securityPolicy
 */
Navigator.prototype.securityPolicy;

/**
 * @param {string} url
 * @param {ArrayBufferView|Blob|string|FormData|URLSearchParams=} opt_data
 * @return {boolean}
 * @see https://developer.mozilla.org/en-US/docs/Web/API/navigator.sendBeacon
 */
Navigator.prototype.sendBeacon = function(url, opt_data) {};

/**
 * @type {string}
 * @see https://developer.mozilla.org/en/Navigator.vendor
 */
Navigator.prototype.vendor;

/**
 * @type {string}
 * @see https://developer.mozilla.org/en/Navigator.vendorSub
 */
Navigator.prototype.vendorSub;


/** @constructor */
function BoxObject() {}

/** @type {Element} */
BoxObject.prototype.element;

/** @type {number} */
BoxObject.prototype.screenX;

/** @type {number} */
BoxObject.prototype.screenY;

/** @type {number} */
BoxObject.prototype.x;

/** @type {number} */
BoxObject.prototype.y;

/** @type {number} */
BoxObject.prototype.width;


/**
 * @param {Element} element
 * @param {?string=} pseudoElt
 * @return {?CSSStyleDeclaration}
 * @nosideeffects
 * @see https://bugzilla.mozilla.org/show_bug.cgi?id=548397
 */
function getComputedStyle(element, pseudoElt) {}
/*
 * Copyright 2008 The Closure Compiler Authors
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/**
 * @fileoverview Definitions for all the extensions over
 *  W3C's event specification by Gecko. This file depends on
 *  w3c_event.js.
 *
 * @externs
 */

// TODO: Almost all of it has not been annotated with types.

/** @const {number} */ Event.prototype.HORIZONTAL_AXIS;
/** @const {number} */ Event.prototype.VERTICAL_AXIS;
/** @type {boolean} */ Event.prototype.altKey;
/** @type {number} */ Event.prototype.axis;
/** @type {number} */ Event.prototype.button;
/** @type {number} */ Event.prototype.charCode;
/** @type {number} */ Event.prototype.clientX;
/** @type {number} */ Event.prototype.clientY;
/** @type {boolean} */ Event.prototype.ctrlKey;
/** @type {EventTarget} */ Event.prototype.explicitOriginalTarget;
/** @type {boolean} */ Event.prototype.isChar;
/** @type {boolean} */ Event.prototype.isTrusted;
/** @type {number} */ Event.prototype.keyCode;
/** @type {number} */ Event.prototype.layerX;
/** @type {number} */ Event.prototype.layerY;
/** @type {boolean} */ Event.prototype.metaKey;
/** @type {EventTarget} */ Event.prototype.originalTarget;
/** @type {number} */ Event.prototype.pageX;
/** @type {number} */ Event.prototype.pageY;
/** @type {EventTarget|undefined} */ Event.prototype.relatedTarget;
/** @type {number} */ Event.prototype.screenX;
/** @type {number} */ Event.prototype.screenY;
/** @type {boolean} */ Event.prototype.shiftKey;
/** @type {Window} */ Event.prototype.view;
/** @type {number} */ Event.prototype.which;

/**
 * @type {boolean}
 * @deprecated cancelBubble is obsolete and is no-op in modern browsers. Use
 *     stopPropagation() instead.
 */
Event.prototype.cancelBubble;

/** @constructor */ function nsIDOMPageTransitionEvent() {}
/** @type {boolean} */ nsIDOMPageTransitionEvent.prototype.persisted;

//Methods
Event.prototype.initKeyEvent;
/**
 * @param {string} typeArg
 * @param {boolean=} canBubbleArg
 * @param {boolean=} cancelableArg
 * @param {?Window=} viewArg
 * @param {?number=} detailArg
 * @param {number=} screenXArg
 * @param {number=} screenYArg
 * @param {number=} clientXArg
 * @param {number=} clientYArg
 * @param {boolean=} ctrlKeyArg
 * @param {boolean=} altKeyArg
 * @param {boolean=} shiftKeyArg
 * @param {boolean=} metaKeyArg
 * @param {?number=} buttonArg
 * @param {?EventTarget=} relatedTargetArg
 */
Event.prototype.initMouseEvent = function(typeArg, canBubbleArg, cancelableArg, viewArg, detailArg, screenXArg, screenYArg, clientXArg, clientYArg, ctrlKeyArg, altKeyArg, shiftKeyArg, metaKeyArg, buttonArg, relatedTargetArg) {};
Event.prototype.initUIEvent;
Event.prototype.initMessageEvent;
Event.prototype.preventBubble;
Event.prototype.preventCapture;
/*
 * Copyright 2008 The Closure Compiler Authors
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/**
 * @fileoverview Definitions for all the extensions over some of the
 *  W3C's XML specifications by Gecko. This file depends on
 *  w3c_xml.js. The whole file has been fully type annotated.
 *
 * @externs
 */

/**
 * XMLSerializer can be used to convert DOM subtree or DOM document into text.
 * XMLSerializer is available to unprivileged scripts.
 *
 * XMLSerializer is mainly useful for applications and extensions based on
 * Mozilla platform. While it's available to web pages, it's not part of any
 * standard and level of support in other browsers is unknown.
 *
 * @constructor
 */
function XMLSerializer() {}

/**
 * Returns the serialized subtree in the form of a string
 * @param {Node} subtree
 * @return {string}
 */
XMLSerializer.prototype.serializeToString = function(subtree) {};

/**
 * The subtree rooted by the specified element is serialized to a byte stream
 * using the character set specified.
 *
 * @param {Node} subtree
 * @return {Object}
 */
XMLSerializer.prototype.serializeToStream = function(subtree) {};

/**
 * DOMParser is mainly useful for applications and extensions based on Mozilla
 * platform. While it's available to web pages, it's not part of any standard and
 * level of support in other browsers is unknown.
 *
 * @constructor
 */
function DOMParser() {}

/**
 * The string passed in is parsed into a DOM document.
 *
 * Example:
 *  var parser = new DOMParser();
 *  var doc = parser.parseFromString(aStr, "text/xml");
 *
 * @param {!TrustedHTML|string} src The UTF16 string to be parsed.
 * @param {string} type The content type of the string.
 * @return {!Document}
 */
DOMParser.prototype.parseFromString = function(src, type) {};
/*
 * Copyright 2010 The Closure Compiler Authors
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/**
 * @fileoverview Declaration of the type level google namespace.
 * @externs
 * @author nicksantos@google.com (Nick Santos)
 */

/**
 * Suppresses the compiler warning when multiple externs files declare the
 * google namespace.
 * @suppress {duplicate,strictMissingProperties}
 * NOTE: This definition should be marked \@const, and when it is we can remove
 * the "strictMissingProperties" suppression.
 */
// TODO(nicksantos): Consolidate to one google namespace declaration.
var google = {};
/*
 * Copyright 2008 The Closure Compiler Authors
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/**
 * @fileoverview Definitions for all the extensions over the
 *  W3C's DOM3 specification in HTML5. This file depends on
 *  w3c_dom3.js. The whole file has been fully type annotated.
 *
 *  @see http://www.whatwg.org/specs/web-apps/current-work/multipage/index.html
 *  @see http://dev.w3.org/html5/spec/Overview.html
 *
 *  This also includes Typed Array definitions from
 *  http://www.khronos.org/registry/typedarray/specs/latest/
 *
 *  This relies on w3c_event.js being included first.
 *
 * @externs
 */

/** @type {?HTMLSlotElement} */
Node.prototype.assignedSlot;

/**
 * @type {string}
 * @see https://dom.spec.whatwg.org/#dom-element-slot
 */
Element.prototype.slot;

/**
 * Note: In IE, the contains() method only exists on Elements, not Nodes.
 * Therefore, it is recommended that you use the Conformance framework to
 * prevent calling this on Nodes which are not Elements.
 * @see https://connect.microsoft.com/IE/feedback/details/780874/node-contains-is-incorrect
 *
 * @param {Node} n The node to check
 * @return {boolean} If 'n' is this Node, or is contained within this Node.
 * @see https://developer.mozilla.org/en-US/docs/Web/API/Node.contains
 * @nosideeffects
 */
Node.prototype.contains = function(n) {};

/** @type {boolean} */
Node.prototype.isConnected;

/**
 * @type {boolean}
 * @see https://html.spec.whatwg.org/multipage/scripting.html#the-script-element
 */
HTMLScriptElement.prototype.async;

/**
 * @type {string?}
 * @see https://html.spec.whatwg.org/multipage/scripting.html#the-script-element
 */
HTMLScriptElement.prototype.crossOrigin;

/**
 * @type {string}
 * @see https://html.spec.whatwg.org/multipage/scripting.html#the-script-element
 */
HTMLScriptElement.prototype.integrity;

/**
 * @type {boolean}
 * @see https://html.spec.whatwg.org/multipage/scripting.html#the-script-element
 */
HTMLScriptElement.prototype.noModule;

/**
 * @type {string}
 * @see https://html.spec.whatwg.org/multipage/scripting.html#the-script-element
 */
HTMLScriptElement.prototype.referrerPolicy;

/**
 * @constructor
 * @see http://www.whatwg.org/specs/web-apps/current-work/multipage/the-canvas-element.html#the-canvas-element
 * @extends {HTMLElement}
 */
function HTMLCanvasElement() {}

/** @type {number} */
HTMLCanvasElement.prototype.width;

/** @type {number} */
HTMLCanvasElement.prototype.height;

/**
 * @see https://www.w3.org/TR/html5/scripting-1.html#dom-canvas-toblob
 * @param {function(!Blob)} callback
 * @param {string=} opt_type
 * @param {...*} var_args
 * @throws {Error}
 */
HTMLCanvasElement.prototype.toBlob = function(callback, opt_type, var_args) {};

/**
 * @param {string=} opt_type
 * @param {...*} var_args
 * @return {string}
 * @throws {Error}
 */
HTMLCanvasElement.prototype.toDataURL = function(opt_type, var_args) {};

/**
 * @modifies {this}
 * @param {string} contextId
 * @param {Object=} opt_args
 * @return {Object}
 */
HTMLCanvasElement.prototype.getContext = function(contextId, opt_args) {};

/**
 * @see https://www.w3.org/TR/mediacapture-fromelement/
 * @param {number=} opt_framerate
 * @return {!MediaStream}
 * @throws {Error}
 * */
HTMLCanvasElement.prototype.captureStream = function(opt_framerate) {};

/**
 * @see https://html.spec.whatwg.org/multipage/canvas.html#dom-canvas-transfercontroltooffscreen
 * @return {!OffscreenCanvas}
 * @throws {Error}
 * */
HTMLCanvasElement.prototype.transferControlToOffscreen = function() {};


/**
 * @interface
 * @extends {MediaStreamTrack}
 * @see https://w3c.github.io/mediacapture-fromelement/#the-canvascapturemediastreamtrack
 */
function CanvasCaptureMediaStreamTrack() {}

/**
 * The canvas element that this media stream captures.
 * @type {!HTMLCanvasElement}
 */
CanvasCaptureMediaStreamTrack.prototype.canvas;

/**
 * Allows applications to manually request that a frame from the canvas be
 * captured and rendered into the track.
 * @return {undefined}
 */
CanvasCaptureMediaStreamTrack.prototype.requestFrame = function() {};


/**
 * @see https://html.spec.whatwg.org/multipage/canvas.html#the-offscreencanvas-interface
 * @implements {EventTarget}
 * @implements {Transferable}
 * @param {number} width
 * @param {number} height
 * @nosideeffects
 * @constructor
 */
function OffscreenCanvas(width, height) {}

/** @override */
OffscreenCanvas.prototype.addEventListener = function(
    type, listener, opt_options) {};

/** @override */
OffscreenCanvas.prototype.removeEventListener = function(
    type, listener, opt_options) {};

/** @override */
OffscreenCanvas.prototype.dispatchEvent = function(evt) {};

/** @type {number} */
OffscreenCanvas.prototype.width;

/** @type {number} */
OffscreenCanvas.prototype.height;

/**
 * @param {string} contextId
 * @param {!Object=} opt_options
 * @modifies {this}
 * @return {!Object}
 */
OffscreenCanvas.prototype.getContext = function(contextId, opt_options) {};

/**
 * @return {!ImageBitmap}
 */
OffscreenCanvas.prototype.transferToImageBitmap = function() {};

/**
 * @param {{type: (string|undefined), quality: (number|undefined)}=} opt_options
 * @return {!Promise<!Blob>}
 */
OffscreenCanvas.prototype.convertToBlob = function(opt_options) {};

// TODO(tjgq): Find a way to add SVGImageElement to this typedef without making
// svg.js part of core.
/**
 * @typedef {HTMLImageElement|HTMLVideoElement|HTMLCanvasElement|ImageBitmap|
 *     OffscreenCanvas}
 */
var CanvasImageSource;

/**
 * @interface
 * @see https://www.w3.org/TR/2dcontext/#canvaspathmethods
 */
function CanvasPathMethods() {}

/**
 * @return {undefined}
 */
CanvasPathMethods.prototype.closePath = function() {};

/**
 * @param {number} x
 * @param {number} y
 * @return {undefined}
 */
CanvasPathMethods.prototype.moveTo = function(x, y) {};

/**
 * @param {number} x
 * @param {number} y
 * @return {undefined}
 */
CanvasPathMethods.prototype.lineTo = function(x, y) {};

/**
 * @param {number} cpx
 * @param {number} cpy
 * @param {number} x
 * @param {number} y
 * @return {undefined}
 */
CanvasPathMethods.prototype.quadraticCurveTo = function(cpx, cpy, x, y) {};

/**
 * @param {number} cp1x
 * @param {number} cp1y
 * @param {number} cp2x
 * @param {number} cp2y
 * @param {number} x
 * @param {number} y
 * @return {undefined}
 */
CanvasPathMethods.prototype.bezierCurveTo = function(
    cp1x, cp1y, cp2x, cp2y, x, y) {};

/**
 * @param {number} x1
 * @param {number} y1
 * @param {number} x2
 * @param {number} y2
 * @param {number} radius
 * @return {undefined}
 */
CanvasPathMethods.prototype.arcTo = function(x1, y1, x2, y2, radius) {};

/**
 * @param {number} x
 * @param {number} y
 * @param {number} w
 * @param {number} h
 * @return {undefined}
 */
CanvasPathMethods.prototype.rect = function(x, y, w, h) {};

/**
 * @param {number} x
 * @param {number} y
 * @param {number} radius
 * @param {number} startAngle
 * @param {number} endAngle
 * @param {boolean=} opt_anticlockwise
 * @return {undefined}
 */
CanvasPathMethods.prototype.arc = function(
    x, y, radius, startAngle, endAngle, opt_anticlockwise) {};

/**
 * @constructor
 * @param {!Path2D|string=} arg
 * @implements {CanvasPathMethods}
 * @see https://html.spec.whatwg.org/multipage/scripting.html#path2d-objects
 */
function Path2D(arg) {}

/**
 * @return {undefined}
 * @override
 */
Path2D.prototype.closePath = function() {};

/**
 * @param {number} x
 * @param {number} y
 * @return {undefined}
 * @override
 */
Path2D.prototype.moveTo = function(x, y) {};

/**
 * @param {number} x
 * @param {number} y
 * @return {undefined}
 * @override
 */
Path2D.prototype.lineTo = function(x, y) {};

/**
 * @param {number} cpx
 * @param {number} cpy
 * @param {number} x
 * @param {number} y
 * @return {undefined}
 * @override
 */
Path2D.prototype.quadraticCurveTo = function(cpx, cpy, x, y) {};

/**
 * @param {number} cp1x
 * @param {number} cp1y
 * @param {number} cp2x
 * @param {number} cp2y
 * @param {number} x
 * @param {number} y
 * @return {undefined}
 * @override
 */
Path2D.prototype.bezierCurveTo = function(
    cp1x, cp1y, cp2x, cp2y, x, y) {};

/**
 * @param {number} x1
 * @param {number} y1
 * @param {number} x2
 * @param {number} y2
 * @param {number} radius
 * @return {undefined}
 * @override
 */
Path2D.prototype.arcTo = function(x1, y1, x2, y2, radius) {};

/**
 * @param {number} x
 * @param {number} y
 * @param {number} w
 * @param {number} h
 * @return {undefined}
 * @override
 */
Path2D.prototype.rect = function(x, y, w, h) {};

/**
 * @param {number} x
 * @param {number} y
 * @param {number} radius
 * @param {number} startAngle
 * @param {number} endAngle
 * @param {boolean=} optAnticlockwise
 * @return {undefined}
 * @override
 */
Path2D.prototype.arc = function(
    x, y, radius, startAngle, endAngle, optAnticlockwise) {};

/**
 * @param {Path2D} path
 * @return {undefined}
 */
Path2D.prototype.addPath = function(path) {};

/**
 * @interface
 * @see https://www.w3.org/TR/2dcontext/#canvasdrawingstyles
 */
function CanvasDrawingStyles() {}

/** @type {number} */
CanvasDrawingStyles.prototype.lineWidth;

/** @type {string} */
CanvasDrawingStyles.prototype.lineCap;

/** @type {string} */
CanvasDrawingStyles.prototype.lineJoin;

/** @type {number} */
CanvasDrawingStyles.prototype.miterLimit;

/**
 * @param {Array<number>} segments
 * @return {undefined}
 */
CanvasDrawingStyles.prototype.setLineDash = function(segments) {};

/**
 * @return {!Array<number>}
 */
CanvasDrawingStyles.prototype.getLineDash = function() {};

/** @type {string} */
CanvasDrawingStyles.prototype.font;

/** @type {string} */
CanvasDrawingStyles.prototype.textAlign;

/** @type {string} */
CanvasDrawingStyles.prototype.textBaseline;

// TODO(dramaix): replace this with @record.
/**
 * @constructor
 * @abstract
 * @implements {CanvasDrawingStyles}
 * @implements {CanvasPathMethods}
 * @see http://www.w3.org/TR/2dcontext/#canvasrenderingcontext2d
 */
function BaseRenderingContext2D() {}

/** @const {!HTMLCanvasElement|!OffscreenCanvas} */
BaseRenderingContext2D.prototype.canvas;

/**
 * @return {undefined}
 */
BaseRenderingContext2D.prototype.save = function() {};

/**
 * @return {undefined}
 */
BaseRenderingContext2D.prototype.restore = function() {};

/**
 * @param {number} x
 * @param {number} y
 * @return {undefined}
 */
BaseRenderingContext2D.prototype.scale = function(x, y) {};

/**
 * @param {number} angle
 * @return {undefined}
 */
BaseRenderingContext2D.prototype.rotate = function(angle) {};

/**
 * @param {number} x
 * @param {number} y
 * @return {undefined}
 */
BaseRenderingContext2D.prototype.translate = function(x, y) {};

/**
 * @param {number} m11
 * @param {number} m12
 * @param {number} m21
 * @param {number} m22
 * @param {number} dx
 * @param {number} dy
 * @return {undefined}
 */
BaseRenderingContext2D.prototype.transform = function(
    m11, m12, m21, m22, dx, dy) {};

/**
 * @param {number} m11
 * @param {number} m12
 * @param {number} m21
 * @param {number} m22
 * @param {number} dx
 * @param {number} dy
 * @return {undefined}
 */
BaseRenderingContext2D.prototype.setTransform = function(
    m11, m12, m21, m22, dx, dy) {};

/**
 * @return {undefined}
 */
BaseRenderingContext2D.prototype.resetTransform = function() {};

/**
 * @return {!DOMMatrixReadOnly}
 */
BaseRenderingContext2D.prototype.getTransform = function() {};

/**
 * @param {number} x0
 * @param {number} y0
 * @param {number} x1
 * @param {number} y1
 * @return {!CanvasGradient}
 * @throws {Error}
 */
BaseRenderingContext2D.prototype.createLinearGradient = function(
    x0, y0, x1, y1) {};

/**
 * @param {number} x0
 * @param {number} y0
 * @param {number} r0
 * @param {number} x1
 * @param {number} y1
 * @param {number} r1
 * @return {!CanvasGradient}
 * @throws {Error}
 */
BaseRenderingContext2D.prototype.createRadialGradient = function(
    x0, y0, r0, x1, y1, r1) {};

/**
 * @param {CanvasImageSource} image
 * @param {string} repetition
 * @return {?CanvasPattern}
 * @throws {Error}
 * @see https://html.spec.whatwg.org/multipage/scripting.html#dom-context-2d-createpattern
 */
BaseRenderingContext2D.prototype.createPattern = function(
    image, repetition) {};

/**
 * @param {number} x
 * @param {number} y
 * @param {number} w
 * @param {number} h
 * @return {undefined}
 */
BaseRenderingContext2D.prototype.clearRect = function(x, y, w, h) {};

/**
 * @param {number} x
 * @param {number} y
 * @param {number} w
 * @param {number} h
 * @return {undefined}
 */
BaseRenderingContext2D.prototype.fillRect = function(x, y, w, h) {};

/**
 * @param {number} x
 * @param {number} y
 * @param {number} w
 * @param {number} h
 * @return {undefined}
 */
BaseRenderingContext2D.prototype.strokeRect = function(x, y, w, h) {};

/**
 * @return {undefined}
 */
BaseRenderingContext2D.prototype.beginPath = function() {};

/**
 * @return {undefined}
 * @override
 */
BaseRenderingContext2D.prototype.closePath = function() {};

/**
 * @param {number} x
 * @param {number} y
 * @return {undefined}
 * @override
 */
BaseRenderingContext2D.prototype.moveTo = function(x, y) {};

/**
 * @param {number} x
 * @param {number} y
 * @return {undefined}
 * @override
 */
BaseRenderingContext2D.prototype.lineTo = function(x, y) {};

/**
 * @param {number} cpx
 * @param {number} cpy
 * @param {number} x
 * @param {number} y
 * @return {undefined}
 * @override
 */
BaseRenderingContext2D.prototype.quadraticCurveTo = function(
    cpx, cpy, x, y) {};

/**
 * @param {number} cp1x
 * @param {number} cp1y
 * @param {number} cp2x
 * @param {number} cp2y
 * @param {number} x
 * @param {number} y
 * @return {undefined}
 * @override
 */
BaseRenderingContext2D.prototype.bezierCurveTo = function(
    cp1x, cp1y, cp2x, cp2y, x, y) {};

/**
 * @param {number} x1
 * @param {number} y1
 * @param {number} x2
 * @param {number} y2
 * @param {number} radius
 * @return {undefined}
 * @override
 */
BaseRenderingContext2D.prototype.arcTo = function(x1, y1, x2, y2, radius) {};

/**
 * @param {number} x
 * @param {number} y
 * @param {number} w
 * @param {number} h
 * @return {undefined}
 * @override
 */
BaseRenderingContext2D.prototype.rect = function(x, y, w, h) {};

/**
 * @param {number} x
 * @param {number} y
 * @param {number} radius
 * @param {number} startAngle
 * @param {number} endAngle
 * @param {boolean=} opt_anticlockwise
 * @return {undefined}
 * @override
 */
BaseRenderingContext2D.prototype.arc = function(
    x, y, radius, startAngle, endAngle, opt_anticlockwise) {};

/**
 * @param {number} x
 * @param {number} y
 * @param {number} radiusX
 * @param {number} radiusY
 * @param {number} rotation
 * @param {number} startAngle
 * @param {number} endAngle
 * @param {boolean=} opt_anticlockwise
 * @return {undefined}
 * @see http://developer.mozilla.org/en/docs/Web/API/CanvasRenderingContext2D/ellipse
 */
BaseRenderingContext2D.prototype.ellipse = function(
    x, y, radiusX, radiusY, rotation, startAngle, endAngle, opt_anticlockwise) {
};

/**
 * @param {Path2D|string=} optFillRuleOrPath
 * @param {string=} optFillRule
 * @return {undefined}
 */
BaseRenderingContext2D.prototype.fill = function(optFillRuleOrPath, optFillRule) {};

/**
 * @param {Path2D=} optStroke
 * @return {undefined}
 */
BaseRenderingContext2D.prototype.stroke = function(optStroke) {};

/**
 * @param {Element} element
 * @return {undefined}
 */
BaseRenderingContext2D.prototype.drawFocusIfNeeded = function(element) {};

/**
 * @param {Path2D|string=} optFillRuleOrPath
 * @param {string=} optFillRule
 * @return {undefined}
 */
BaseRenderingContext2D.prototype.clip = function(optFillRuleOrPath, optFillRule) {};

/**
 * @param {number} x
 * @param {number} y
 * @return {boolean}
 * @nosideeffects
 * @see http://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/isPointInStroke
 */
BaseRenderingContext2D.prototype.isPointInStroke = function(x, y) {};

/**
 * @param {number} x
 * @param {number} y
 * @param {string=} opt_fillRule
 * @return {boolean}
 * @nosideeffects
 */
BaseRenderingContext2D.prototype.isPointInPath = function(
    x, y, opt_fillRule) {};

/**
 * @param {string} text
 * @param {number} x
 * @param {number} y
 * @param {number=} opt_maxWidth
 * @return {undefined}
 */
BaseRenderingContext2D.prototype.fillText = function(
    text, x, y, opt_maxWidth) {};

/**
 * @param {string} text
 * @param {number} x
 * @param {number} y
 * @param {number=} opt_maxWidth
 * @return {undefined}
 */
BaseRenderingContext2D.prototype.strokeText = function(
    text, x, y, opt_maxWidth) {};

/**
 * @param {string} text
 * @return {!TextMetrics}
 * @nosideeffects
 */
BaseRenderingContext2D.prototype.measureText = function(text) {};

/**
 * @param {CanvasImageSource} image
 * @param {number} dx Destination x coordinate.
 * @param {number} dy Destination y coordinate.
 * @param {number=} opt_dw Destination box width.  Defaults to the image width.
 * @param {number=} opt_dh Destination box height.
 *     Defaults to the image height.
 * @param {number=} opt_sx Source box x coordinate.  Used to select a portion of
 *     the source image to draw.  Defaults to 0.
 * @param {number=} opt_sy Source box y coordinate.  Used to select a portion of
 *     the source image to draw.  Defaults to 0.
 * @param {number=} opt_sw Source box width.  Used to select a portion of
 *     the source image to draw.  Defaults to the full image width.
 * @param {number=} opt_sh Source box height.  Used to select a portion of
 *     the source image to draw.  Defaults to the full image height.
 * @return {undefined}
 */
BaseRenderingContext2D.prototype.drawImage = function(
    image, dx, dy, opt_dw, opt_dh, opt_sx, opt_sy, opt_sw, opt_sh) {};

/**
 * @param {number} sw
 * @param {number} sh
 * @return {!ImageData}
 * @throws {Error}
 * @nosideeffects
 */
BaseRenderingContext2D.prototype.createImageData = function(sw, sh) {};

/**
 * @param {number} sx
 * @param {number} sy
 * @param {number} sw
 * @param {number} sh
 * @return {!ImageData}
 * @throws {Error}
 */
BaseRenderingContext2D.prototype.getImageData = function(sx, sy, sw, sh) {};

/**
 * @param {ImageData} imagedata
 * @param {number} dx
 * @param {number} dy
 * @param {number=} opt_dirtyX
 * @param {number=} opt_dirtyY
 * @param {number=} opt_dirtyWidth
 * @param {number=} opt_dirtyHeight
 * @return {undefined}
 */
BaseRenderingContext2D.prototype.putImageData = function(imagedata, dx, dy,
    opt_dirtyX, opt_dirtyY, opt_dirtyWidth, opt_dirtyHeight) {};

/**
 * Note: WebKit only
 * @param {number|string=} opt_a
 * @param {number=} opt_b
 * @param {number=} opt_c
 * @param {number=} opt_d
 * @param {number=} opt_e
 * @see http://developer.apple.com/library/safari/#documentation/appleapplications/reference/WebKitDOMRef/CanvasRenderingContext2D_idl/Classes/CanvasRenderingContext2D/index.html
 * @return {undefined}
 * @deprecated
 */
BaseRenderingContext2D.prototype.setFillColor = function(
    opt_a, opt_b, opt_c, opt_d, opt_e) {};

/**
 * Note: WebKit only
 * @param {number|string=} opt_a
 * @param {number=} opt_b
 * @param {number=} opt_c
 * @param {number=} opt_d
 * @param {number=} opt_e
 * @see http://developer.apple.com/library/safari/#documentation/appleapplications/reference/WebKitDOMRef/CanvasRenderingContext2D_idl/Classes/CanvasRenderingContext2D/index.html
 * @return {undefined}
 * @deprecated
 */
BaseRenderingContext2D.prototype.setStrokeColor = function(
    opt_a, opt_b, opt_c, opt_d, opt_e) {};

/**
 * @return {!Array<number>}
 * @override
 */
BaseRenderingContext2D.prototype.getLineDash = function() {};

/**
 * @param {Array<number>} segments
 * @return {undefined}
 * @override
 */
BaseRenderingContext2D.prototype.setLineDash = function(segments) {};

/** @type {string} */
BaseRenderingContext2D.prototype.fillColor;

/**
 * @type {string|!CanvasGradient|!CanvasPattern}
 * @see https://html.spec.whatwg.org/multipage/scripting.html#fill-and-stroke-styles:dom-context-2d-fillstyle
 * @implicitCast
 */
BaseRenderingContext2D.prototype.fillStyle;

/** @type {string} */
BaseRenderingContext2D.prototype.font;

/** @type {number} */
BaseRenderingContext2D.prototype.globalAlpha;

/** @type {string} */
BaseRenderingContext2D.prototype.globalCompositeOperation;

/** @type {number} */
BaseRenderingContext2D.prototype.lineWidth;

/** @type {string} */
BaseRenderingContext2D.prototype.lineCap;

/** @type {string} */
BaseRenderingContext2D.prototype.lineJoin;

/** @type {number} */
BaseRenderingContext2D.prototype.miterLimit;

/** @type {number} */
BaseRenderingContext2D.prototype.shadowBlur;

/** @type {string} */
BaseRenderingContext2D.prototype.shadowColor;

/** @type {number} */
BaseRenderingContext2D.prototype.shadowOffsetX;

/** @type {number} */
BaseRenderingContext2D.prototype.shadowOffsetY;

/** @type {boolean} */
BaseRenderingContext2D.prototype.imageSmoothingEnabled;

/**
 * @type {string}
 * @see https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/imageSmoothingQuality
 */
BaseRenderingContext2D.prototype.imageSmoothingQuality;

/**
 * @type {string|!CanvasGradient|!CanvasPattern}
 * @see https://html.spec.whatwg.org/multipage/scripting.html#fill-and-stroke-styles:dom-context-2d-strokestyle
 * @implicitCast
 */
BaseRenderingContext2D.prototype.strokeStyle;

/** @type {string} */
BaseRenderingContext2D.prototype.strokeColor;

/** @type {string} */
BaseRenderingContext2D.prototype.textAlign;

/** @type {string} */
BaseRenderingContext2D.prototype.textBaseline;

/** @type {number} */
BaseRenderingContext2D.prototype.lineDashOffset;

/**
 * @type {string}
 * @see https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/direction
 */
BaseRenderingContext2D.prototype.direction;

/**
 * @constructor
 * @extends {BaseRenderingContext2D}
 * @see http://www.w3.org/TR/2dcontext/#canvasrenderingcontext2d
 */
function CanvasRenderingContext2D() {}

/** @const {!HTMLCanvasElement} */
CanvasRenderingContext2D.prototype.canvas;

/**
 * @type {string}
 * @see https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/filter
 */
CanvasRenderingContext2D.prototype.filter;

/**
 * @constructor
 * @extends {BaseRenderingContext2D}
 * @see http://www.w3.org/TR/2dcontext/#canvasrenderingcontext2d
 */
function OffscreenCanvasRenderingContext2D() {}

/** @const {!OffscreenCanvas} */
OffscreenCanvasRenderingContext2D.prototype.canvas;

/**
 * @constructor
 */
function CanvasGradient() {}

/**
 * @param {number} offset
 * @param {string} color
 * @return {undefined}
 */
CanvasGradient.prototype.addColorStop = function(offset, color) {};

/**
 * @constructor
 */
function CanvasPattern() {}

/**
 * @constructor
 */
function TextMetrics() {}

/** @const {number} */
TextMetrics.prototype.width;

/** @const {number|undefined} */
TextMetrics.prototype.actualBoundingBoxAscent;

/** @const {number|undefined} */
TextMetrics.prototype.actualBoundingBoxDescent;

/** @const {number|undefined} */
TextMetrics.prototype.actualBoundingBoxLeft;

/** @const {number|undefined} */
TextMetrics.prototype.actualBoundingBoxRight;

/**
 * @param {!Uint8ClampedArray|number} dataOrWidth In the first form, this is the
 *     array of pixel data.  In the second form, this is the image width.
 * @param {number} widthOrHeight In the first form, this is the image width.  In
 *     the second form, this is the image height.
 * @param {number=} opt_height In the first form, this is the optional image
 *     height.  The second form omits this argument.
 * @see https://html.spec.whatwg.org/multipage/scripting.html#imagedata
 * @constructor
 */
function ImageData(dataOrWidth, widthOrHeight, opt_height) {}

/** @const {!Uint8ClampedArray} */
ImageData.prototype.data;

/** @const {number} */
ImageData.prototype.width;

/** @const {number} */
ImageData.prototype.height;

/**
 * @see https://www.w3.org/TR/html51/webappapis.html#webappapis-images
 * @interface
 */
function ImageBitmap() {}

/**
 * @const {number}
 */
ImageBitmap.prototype.width;

/**
 * @const {number}
 */
ImageBitmap.prototype.height;

/**
 * Releases ImageBitmap's underlying bitmap data.
 * @return {undefined}
 * @see https://html.spec.whatwg.org/multipage/imagebitmap-and-animations.html#images-2
 */
ImageBitmap.prototype.close = function() {};

/**
 * @typedef {!CanvasImageSource | !Blob | !ImageData}
 * @see https://html.spec.whatwg.org/multipage/imagebitmap-and-animations.html#imagebitmapsource
 */
var ImageBitmapSource;

/**
 * @typedef {{
 *   imageOrientation: (string|undefined),
 *   premultiplyAlpha: (string|undefined),
 *   colorSpaceConversion: (string|undefined),
 *   resizeWidth: (number|undefined),
 *   resizeHeight: (number|undefined),
 *   resizeQuality: (string|undefined)
 * }}
 * @see https://html.spec.whatwg.org/multipage/imagebitmap-and-animations.html#images-2
 */
var ImageBitmapOptions;

/**
 * @param {!ImageBitmapSource} image
 * @param {(number|!ImageBitmapOptions)=} sxOrOptions
 * @param {number=} sy
 * @param {number=} sw
 * @param {number=} sh
 * @param {!ImageBitmapOptions=} options
 * @return {!Promise<!ImageBitmap>}
 * @see https://html.spec.whatwg.org/multipage/imagebitmap-and-animations.html#dom-createimagebitmap
 * @see https://html.spec.whatwg.org/multipage/webappapis.html#windoworworkerglobalscope-mixin
 */
function createImageBitmap(image, sxOrOptions, sy, sw, sh, options) {}


/**
 * @constructor
 */
function ClientInformation() {}

/** @type {boolean} */
ClientInformation.prototype.onLine;

/**
 * @param {string} protocol
 * @param {string} uri
 * @param {string} title
 * @return {undefined}
 */
ClientInformation.prototype.registerProtocolHandler = function(
    protocol, uri, title) {};

/**
 * @param {string} mimeType
 * @param {string} uri
 * @param {string} title
 * @return {undefined}
 */
ClientInformation.prototype.registerContentHandler = function(
    mimeType, uri, title) {};

// HTML5 Database objects
/**
 * @constructor
 */
function Database() {}

/**
 * @type {string}
 */
Database.prototype.version;

/**
 * @param {function(!SQLTransaction) : void} callback
 * @param {(function(!SQLError) : void)=} opt_errorCallback
 * @param {Function=} opt_Callback
 * @return {undefined}
 */
Database.prototype.transaction = function(
    callback, opt_errorCallback, opt_Callback) {};

/**
 * @param {function(!SQLTransaction) : void} callback
 * @param {(function(!SQLError) : void)=} opt_errorCallback
 * @param {Function=} opt_Callback
 * @return {undefined}
 */
Database.prototype.readTransaction = function(
    callback, opt_errorCallback, opt_Callback) {};

/**
 * @param {string} oldVersion
 * @param {string} newVersion
 * @param {function(!SQLTransaction) : void} callback
 * @param {function(!SQLError) : void} errorCallback
 * @param {Function} successCallback
 * @return {undefined}
 */
Database.prototype.changeVersion = function(
    oldVersion, newVersion, callback, errorCallback, successCallback) {};

/**
 * @interface
 */
function DatabaseCallback() {}

/**
 * @param {!Database} db
 * @return {undefined}
 */
DatabaseCallback.prototype.handleEvent = function(db) {};

/**
 * @constructor
 */
function SQLError() {}

/**
 * @type {number}
 */
SQLError.prototype.code;

/**
 * @type {string}
 */
SQLError.prototype.message;

/**
 * @constructor
 */
function SQLTransaction() {}

/**
 * @param {string} sqlStatement
 * @param {Array<*>=} opt_queryArgs
 * @param {SQLStatementCallback=} opt_callback
 * @param {(function(!SQLTransaction, !SQLError) : (boolean|void))=}
 *     opt_errorCallback
 * @return {undefined}
 */
SQLTransaction.prototype.executeSql = function(
    sqlStatement, opt_queryArgs, opt_callback, opt_errorCallback) {};

/**
 * @typedef {(function(!SQLTransaction, !SQLResultSet) : void)}
 */
var SQLStatementCallback;

/**
 * @constructor
 */
function SQLResultSet() {}

/**
 * @type {number}
 */
SQLResultSet.prototype.insertId;

/**
 * @type {number}
 */
SQLResultSet.prototype.rowsAffected;

/**
 * @type {!SQLResultSetRowList}
 */
SQLResultSet.prototype.rows;

/**
 * @constructor
 * @implements {IArrayLike<!Object>}
 * @see http://www.w3.org/TR/webdatabase/#sqlresultsetrowlist
 */
function SQLResultSetRowList() {}

/**
 * @type {number}
 */
SQLResultSetRowList.prototype.length;

/**
 * @param {number} index
 * @return {Object}
 * @nosideeffects
 */
SQLResultSetRowList.prototype.item = function(index) {};

/**
 * @param {string} name
 * @param {string} version
 * @param {string} description
 * @param {number} size
 * @param {(DatabaseCallback|function(Database))=} opt_callback
 * @return {!Database}
 */
function openDatabase(name, version, description, size, opt_callback) {}

/**
 * @param {string} name
 * @param {string} version
 * @param {string} description
 * @param {number} size
 * @param {(DatabaseCallback|function(Database))=} opt_callback
 * @return {!Database}
 */
Window.prototype.openDatabase =
    function(name, version, description, size, opt_callback) {};

/**
 * @type {boolean}
 * @see https://www.w3.org/TR/html5/embedded-content-0.html#dom-img-complete
 */
HTMLImageElement.prototype.complete;

/**
 * @type {number}
 * @see https://www.w3.org/TR/html5/embedded-content-0.html#dom-img-naturalwidth
 */
HTMLImageElement.prototype.naturalWidth;

/**
 * @type {number}
 * @see https://www.w3.org/TR/html5/embedded-content-0.html#dom-img-naturalheight
 */
HTMLImageElement.prototype.naturalHeight;

/**
 * @type {string}
 * @see http://www.whatwg.org/specs/web-apps/current-work/multipage/embedded-content-1.html#attr-img-crossorigin
 */
HTMLImageElement.prototype.crossOrigin;

/**
 * @type {string}
 * @see https://html.spec.whatwg.org/multipage/embedded-content.html#dom-img-currentsrc
 */
HTMLImageElement.prototype.currentSrc;

/**
 * @type {string}
 * @see https://html.spec.whatwg.org/multipage/images.html#image-decoding-hint
 */
HTMLImageElement.prototype.decoding;

/**
 * @return {!Promise<undefined>}
 * @see https://html.spec.whatwg.org/multipage/embedded-content.html#dom-img-decode
 */
HTMLImageElement.prototype.decode;


/**
 * This is a superposition of the Window and Worker postMessage methods.
 * @param {*} message
 * @param {(string|!Array<!Transferable>)=} opt_targetOriginOrTransfer
 * @param {(string|!Array<!MessagePort>|!Array<!Transferable>)=}
 *     opt_targetOriginOrPortsOrTransfer
 * @return {void}
 */
function postMessage(message, opt_targetOriginOrTransfer,
    opt_targetOriginOrPortsOrTransfer) {}

/**
 * @param {*} message
 * @param {string=} targetOrigin
 * @param {(!Array<!Transferable>)=} transfer
 * @return {void}
 * @see https://developer.mozilla.org/en-US/docs/Web/API/Window/postMessage
 */
Window.prototype.postMessage = function(message, targetOrigin, transfer) {};

/**
 * The postMessage method (as implemented in Opera).
 * @param {string} message
 */
Document.prototype.postMessage = function(message) {};

/**
 * Document head accessor.
 * @see http://www.whatwg.org/specs/web-apps/current-work/multipage/dom.html#the-head-element-0
 * @type {HTMLHeadElement}
 */
Document.prototype.head;

/**
 * @type {string}
 * @see https://html.spec.whatwg.org/multipage/dom.html#current-document-readiness
 */
Document.prototype.readyState;

/**
 * @see https://html.spec.whatwg.org/#application-cache-api
 * @constructor
 * @implements {EventTarget}
 */
function ApplicationCache() {}

/** @override */
ApplicationCache.prototype.addEventListener = function(
    type, listener, opt_options) {};

/** @override */
ApplicationCache.prototype.removeEventListener = function(
    type, listener, opt_options) {};

/** @override */
ApplicationCache.prototype.dispatchEvent = function(evt) {};

/**
 * The object isn't associated with an application cache. This can occur if the
 * update process fails and there is no previous cache to revert to, or if there
 * is no manifest file.
 * @const {number}
 */
ApplicationCache.prototype.UNCACHED;

/**
 * The object isn't associated with an application cache. This can occur if the
 * update process fails and there is no previous cache to revert to, or if there
 * is no manifest file.
 * @const {number}
 */
ApplicationCache.UNCACHED;

/**
 * The cache is idle.
 * @const {number}
 */
ApplicationCache.prototype.IDLE;

/**
 * The cache is idle.
 * @const {number}
 */
ApplicationCache.IDLE;

/**
 * The update has started but the resources are not downloaded yet - for
 * example, this can happen when the manifest file is fetched.
 * @const {number}
 */
ApplicationCache.prototype.CHECKING;

/**
 * The update has started but the resources are not downloaded yet - for
 * example, this can happen when the manifest file is fetched.
 * @const {number}
 */
ApplicationCache.CHECKING;

/**
 * The resources are being downloaded into the cache.
 * @const {number}
 */
ApplicationCache.prototype.DOWNLOADING;

/**
 * The resources are being downloaded into the cache.
 * @const {number}
 */
ApplicationCache.DOWNLOADING;

/**
 * Resources have finished downloading and the new cache is ready to be used.
 * @const {number}
 */
ApplicationCache.prototype.UPDATEREADY;

/**
 * Resources have finished downloading and the new cache is ready to be used.
 * @const {number}
 */
ApplicationCache.UPDATEREADY;

/**
 * The cache is obsolete.
 * @const {number}
 */
ApplicationCache.prototype.OBSOLETE;

/**
 * The cache is obsolete.
 * @const {number}
 */
ApplicationCache.OBSOLETE;

/**
 * The current status of the application cache.
 * @type {number}
 */
ApplicationCache.prototype.status;

/**
 * Sent when the update process finishes for the first time; that is, the first
 * time an application cache is saved.
 * @type {?function(!Event): void}
 */
ApplicationCache.prototype.oncached;

/**
 * Sent when the cache update process begins.
 * @type {?function(!Event): void}
 */
ApplicationCache.prototype.onchecking;

/**
 * Sent when the update process begins downloading resources in the manifest
 * file.
 * @type {?function(!Event): void}
 */
ApplicationCache.prototype.ondownloading;

/**
 * Sent when an error occurs.
 * @type {?function(!Event): void}
 */
ApplicationCache.prototype.onerror;

/**
 * Sent when the update process finishes but the manifest file does not change.
 * @type {?function(!Event): void}
 */
ApplicationCache.prototype.onnoupdate;

/**
 * Sent when each resource in the manifest file begins to download.
 * @type {?function(!Event): void}
 */
ApplicationCache.prototype.onprogress;

/**
 * Sent when there is an existing application cache, the update process
 * finishes, and there is a new application cache ready for use.
 * @type {?function(!Event): void}
 */
ApplicationCache.prototype.onupdateready;

/**
 * Replaces the active cache with the latest version.
 * @throws {DOMException}
 * @return {undefined}
 */
ApplicationCache.prototype.swapCache = function() {};

/**
 * Manually triggers the update process.
 * @throws {DOMException}
 * @return {undefined}
 */
ApplicationCache.prototype.update = function() {};

/** @type {?ApplicationCache} */
var applicationCache;

/** @type {ApplicationCache} */
Window.prototype.applicationCache;

/**
 * @see https://developer.mozilla.org/En/DOM/Worker/Functions_available_to_workers
 * @param {...!TrustedScriptURL|string} var_args
 * @return {undefined}
 */
Window.prototype.importScripts = function(var_args) {};

/**
 * Decodes a string of data which has been encoded using base-64 encoding.
 *
 * @param {string} encodedData
 * @return {string}
 * @nosideeffects
 * @see https://html.spec.whatwg.org/multipage/webappapis.html#dom-atob
 */
function atob(encodedData) {}

/**
 * @param {string} stringToEncode
 * @return {string}
 * @nosideeffects
 * @see https://html.spec.whatwg.org/multipage/webappapis.html#dom-btoa
 */
function btoa(stringToEncode) {}

/**
 * @see https://developer.mozilla.org/En/DOM/Worker/Functions_available_to_workers
 * @param {...!TrustedScriptURL|string} var_args
 * @return {undefined}
 */
function importScripts(var_args) {}

/**
 * @see http://dev.w3.org/html5/workers/
 * @param {!TrustedScriptURL|string} scriptURL
 * @param {!WorkerOptions=} opt_options
 * @constructor
 * @implements {EventTarget}
 */
function Worker(scriptURL, opt_options) {}

/** @override */
Worker.prototype.addEventListener = function(type, listener, opt_options) {};

/** @override */
Worker.prototype.removeEventListener = function(type, listener, opt_options) {};

/** @override */
Worker.prototype.dispatchEvent = function(evt) {};

/**
 * Stops the worker process
 * @return {undefined}
 */
Worker.prototype.terminate = function() {};

/**
 * Posts a message to the worker thread.
 * @param {*} message
 * @param {Array<!Transferable>=} opt_transfer
 * @return {undefined}
 */
Worker.prototype.postMessage = function(message, opt_transfer) {};

/**
 * Posts a message to the worker thread.
 * @param {*} message
 * @param {Array<!Transferable>=} opt_transfer
 * @return {undefined}
 */
Worker.prototype.webkitPostMessage = function(message, opt_transfer) {};

/**
 * Sent when the worker thread posts a message to its creator.
 * @type {?function(!MessageEvent<*>): void}
 */
Worker.prototype.onmessage;

/**
 * Sent when the worker thread encounters an error.
 * @type {?function(!ErrorEvent): void}
 */
Worker.prototype.onerror;

/**
 * @see http://dev.w3.org/html5/workers/
 * @record
 */
function WorkerOptions() {}

/**
 * Defines a name for the new global environment of the worker, primarily for
 * debugging purposes.
 * @type {string|undefined}
 */
WorkerOptions.prototype.name;

/**
 * 'classic' or 'module'. Default: 'classic'.
 * Specifying 'module' ensures the worker environment supports JavaScript
 * modules.
 * @type {string|undefined}
 */
WorkerOptions.prototype.type;

// WorkerOptions.prototype.credentials is defined in fetchapi.js.
// if type = 'module', it specifies how scriptURL is fetched.

/**
 * @see http://dev.w3.org/html5/workers/
 * @param {!TrustedScriptURL|string} scriptURL The URL of the script to run in
 *     the SharedWorker.
 * @param {(string|!WorkerOptions)=} options A name that can
 *     later be used to obtain a reference to the same SharedWorker or a
 *     WorkerOptions object which can be be used to specify how scriptURL is
 *     fetched through the credentials option.
 * @constructor
 * @implements {EventTarget}
 */
function SharedWorker(scriptURL, options) {}

/** @override */
SharedWorker.prototype.addEventListener = function(
    type, listener, opt_options) {};

/** @override */
SharedWorker.prototype.removeEventListener = function(
    type, listener, opt_options) {};

/** @override */
SharedWorker.prototype.dispatchEvent = function(evt) {};

/**
 * @type {!MessagePort}
 */
SharedWorker.prototype.port;

/**
 * Called on network errors for loading the initial script.
 * @type {?function(!ErrorEvent): void}
 */
SharedWorker.prototype.onerror;

/**
 * @see http://dev.w3.org/html5/workers/
 * @see http://www.w3.org/TR/url-1/#dom-urlutilsreadonly
 * @interface
 */
function WorkerLocation() {}

/** @type {string} */
WorkerLocation.prototype.href;

/** @type {string} */
WorkerLocation.prototype.origin;

/** @type {string} */
WorkerLocation.prototype.protocol;

/** @type {string} */
WorkerLocation.prototype.host;

/** @type {string} */
WorkerLocation.prototype.hostname;

/** @type {string} */
WorkerLocation.prototype.port;

/** @type {string} */
WorkerLocation.prototype.pathname;

/** @type {string} */
WorkerLocation.prototype.search;

/** @type {string} */
WorkerLocation.prototype.hash;

/**
 * @see http://dev.w3.org/html5/workers/
 * @interface
 * @extends {EventTarget}
 */
function WorkerGlobalScope() {}

/** @type {!WorkerGlobalScope} */
WorkerGlobalScope.prototype.self;

/** @type {!WorkerLocation} */
WorkerGlobalScope.prototype.location;

/**
 * @const {string}
 * @see https://html.spec.whatwg.org/#windoworworkerglobalscope-mixin
 */
WorkerGlobalScope.prototype.origin;

/**
 * @const {string}
 * Duplicate definition, since we don't model WindowOrWorkerGlobalScope.
 * @see https://html.spec.whatwg.org/#windoworworkerglobalscope-mixin
 */
Window.prototype.origin;

/**
 * Closes the worker represented by this WorkerGlobalScope.
 * @return {undefined}
 */
WorkerGlobalScope.prototype.close = function() {};

/**
 * Sent when the worker encounters an error.
 * @type {?function(string, string, number, number, !Error): void}
 */
WorkerGlobalScope.prototype.onerror;

/**
 * Sent when the worker goes offline.
 * @type {?function(!Event): void}
 */
WorkerGlobalScope.prototype.onoffline;

/**
 * Sent when the worker goes online.
 * @type {?function(!Event): void}
 */
WorkerGlobalScope.prototype.ononline;

/** @type {!WorkerPerformance} */
WorkerGlobalScope.prototype.performance;

/** @type {!WorkerNavigator} */
WorkerGlobalScope.prototype.navigator;

/**
 * Worker postMessage method.
 * @param {*} message
 * @param {(!Array<!Transferable>)=} transfer
 * @return {void}
 */
WorkerGlobalScope.prototype.postMessage = function(message, transfer) {};

/**
 * @see http://dev.w3.org/html5/workers/
 * @interface
 * @extends {WorkerGlobalScope}
 */
function DedicatedWorkerGlobalScope() {}

/**
 * Posts a message to creator of this worker.
 * @param {*} message
 * @param {Array<!Transferable>=} opt_transfer
 * @return {undefined}
 */
DedicatedWorkerGlobalScope.prototype.postMessage =
    function(message, opt_transfer) {};

/**
 * Posts a message to creator of this worker.
 * @param {*} message
 * @param {Array<!Transferable>=} opt_transfer
 * @return {undefined}
 */
DedicatedWorkerGlobalScope.prototype.webkitPostMessage =
    function(message, opt_transfer) {};

/**
 * Sent when the creator posts a message to this worker.
 * @type {?function(!MessageEvent<*>): void}
 */
DedicatedWorkerGlobalScope.prototype.onmessage;

/**
 * @see http://dev.w3.org/html5/workers/
 * @interface
 * @extends {WorkerGlobalScope}
 */
function SharedWorkerGlobalScope() {}

/** @type {string} */
SharedWorkerGlobalScope.prototype.name;

/**
 * Sent when a connection to this worker is opened.
 * @type {?function(!Event)}
 */
SharedWorkerGlobalScope.prototype.onconnect;

/** @type {!Array<string>|undefined} */
HTMLElement.observedAttributes;

/**
 * @param {!Document} oldDocument
 * @param {!Document} newDocument
 */
HTMLElement.prototype.adoptedCallback = function(oldDocument, newDocument) {};

/**
 * @param {!ShadowRootInit} options
 * @return {!ShadowRoot}
 */
HTMLElement.prototype.attachShadow = function(options) {};

/**
 * @param {string} attributeName
 * @param {?string} oldValue
 * @param {?string} newValue
 * @param {?string} namespace
 */
HTMLElement.prototype.attributeChangedCallback = function(attributeName, oldValue, newValue, namespace) {};

/** @type {function()|undefined} */
HTMLElement.prototype.connectedCallback;

/** @type {Element} */
HTMLElement.prototype.contextMenu;

/** @type {function()|undefined} */
HTMLElement.prototype.disconnectedCallback;

/** @type {boolean} */
HTMLElement.prototype.draggable;

/**
 * This is actually a DOMSettableTokenList property. However since that
 * interface isn't currently defined and no known browsers implement this
 * feature, just define the property for now.
 *
 * @const {Object}
 */
HTMLElement.prototype.dropzone;

/** @type {boolean} */
HTMLElement.prototype.hidden;

/** @type {boolean} */
HTMLElement.prototype.inert;

/** @type {boolean} */
HTMLElement.prototype.spellcheck;

/**
 * @see https://dom.spec.whatwg.org/#dictdef-getrootnodeoptions
 * @typedef {{
 *   composed: boolean
 * }}
 */
var GetRootNodeOptions;

/**
 * @see https://dom.spec.whatwg.org/#dom-node-getrootnode
 * @param {GetRootNodeOptions=} opt_options
 * @return {!Node}
 */
Node.prototype.getRootNode = function(opt_options) {};

/**
 * @see http://www.w3.org/TR/components-intro/
 * @return {!ShadowRoot}
 */
HTMLElement.prototype.createShadowRoot;

/**
 * @see http://www.w3.org/TR/components-intro/
 * @return {!ShadowRoot}
 */
HTMLElement.prototype.webkitCreateShadowRoot;

/**
 * @see http://www.w3.org/TR/shadow-dom/
 * @type {ShadowRoot}
 */
HTMLElement.prototype.shadowRoot;

/**
 * @see http://www.w3.org/TR/shadow-dom/
 * @return {!NodeList<!Node>}
 */
HTMLElement.prototype.getDestinationInsertionPoints = function() {};

/**
 * @see http://www.w3.org/TR/components-intro/
 * @type {function()}
 */
HTMLElement.prototype.createdCallback;

/**
 * @see http://w3c.github.io/webcomponents/explainer/#lifecycle-callbacks
 * @type {function()}
 */
HTMLElement.prototype.attachedCallback;

/**
 * @see http://w3c.github.io/webcomponents/explainer/#lifecycle-callbacks
 * @type {function()}
 */
HTMLElement.prototype.detachedCallback;

/**
 * Cryptographic nonce used by Content Security Policy.
 * @see https://html.spec.whatwg.org/multipage/dom.html#elements-in-the-dom:noncedelement
 * @type {?string}
 */
HTMLElement.prototype.nonce;

/** @type {string} */
HTMLAnchorElement.prototype.download;

/** @type {string} */
HTMLAnchorElement.prototype.hash;

/** @type {string} */
HTMLAnchorElement.prototype.host;

/** @type {string} */
HTMLAnchorElement.prototype.hostname;

/** @type {string} */
HTMLAnchorElement.prototype.pathname;

/**
 * The 'ping' attribute is known to be supported in recent versions (as of
 * mid-2014) of Chrome, Safari, and Firefox, and is not supported in any
 * current version of Internet Explorer.
 *
 * @type {string}
 * @see http://www.whatwg.org/specs/web-apps/current-work/multipage/semantics.html#hyperlink-auditing
 */
HTMLAnchorElement.prototype.ping;

/** @type {string} */
HTMLAnchorElement.prototype.port;

/** @type {string} */
HTMLAnchorElement.prototype.protocol;

/** @type {!DOMTokenList} */
HTMLAnchorElement.prototype.relList;

/** @type {string} */
HTMLAnchorElement.prototype.search;

/** @type {string} */
HTMLAreaElement.prototype.download;

/**
 * @type {string}
 * @see http://www.whatwg.org/specs/web-apps/current-work/multipage/semantics.html#hyperlink-auditing
 */
HTMLAreaElement.prototype.ping;

/**
 * @type {string}
 * @implicitCast
 * @see http://www.w3.org/TR/html-markup/iframe.html#iframe.attrs.srcdoc
 */
HTMLIFrameElement.prototype.srcdoc;

/**
 * @type {?DOMTokenList}
 * @see http://www.w3.org/TR/2012/WD-html5-20121025/the-iframe-element.html#attr-iframe-sandbox
 */
HTMLIFrameElement.prototype.sandbox;

/**
 * @type {string}
 * @see https://html.spec.whatwg.org/multipage/iframe-embed-object.html#attr-iframe-allow
 */
HTMLIFrameElement.prototype.allow;

/**
 * @type {Window}
 * @see https://developer.mozilla.org/en-US/docs/Web/API/HTMLIFrameElement/contentWindow
 */
HTMLIFrameElement.prototype.contentWindow;

/** @type {string} */
HTMLInputElement.prototype.autocomplete;

/** @type {string} */
HTMLInputElement.prototype.dirname;

/** @type {FileList} */
HTMLInputElement.prototype.files;

/**
 * @type {boolean}
 * @see https://www.w3.org/TR/html5/forms.html#dom-input-indeterminate
 */
HTMLInputElement.prototype.indeterminate;

/** @type {string} */
HTMLInputElement.prototype.list;

/** @implicitCast @type {string} */
HTMLInputElement.prototype.max;

/** @implicitCast @type {string} */
HTMLInputElement.prototype.min;

/** @type {string} */
HTMLInputElement.prototype.pattern;

/** @type {boolean} */
HTMLInputElement.prototype.multiple;

/** @type {string} */
HTMLInputElement.prototype.placeholder;

/** @type {boolean} */
HTMLInputElement.prototype.required;

/** @implicitCast @type {string} */
HTMLInputElement.prototype.step;

/** @type {Date} */
HTMLInputElement.prototype.valueAsDate;

/** @type {number} */
HTMLInputElement.prototype.valueAsNumber;

/**
 * Changes the form control's value by the value given in the step attribute
 * multiplied by opt_n.
 * @param {number=} opt_n step multiplier.  Defaults to 1.
 * @return {undefined}
 */
HTMLInputElement.prototype.stepDown = function(opt_n) {};

/**
 * Changes the form control's value by the value given in the step attribute
 * multiplied by opt_n.
 * @param {number=} opt_n step multiplier.  Defaults to 1.
 * @return {undefined}
 */
HTMLInputElement.prototype.stepUp = function(opt_n) {};



/**
 * @constructor
 * @extends {HTMLElement}
 * @see https://developer.mozilla.org/en-US/docs/Web/API/HTMLMediaElement
 */
function HTMLMediaElement() {}

/**
 * @see https://html.spec.whatwg.org/multipage/media.html#dom-media-network_empty
 * @const {number}
 */
HTMLMediaElement.NETWORK_EMPTY;

/**
 * @see https://html.spec.whatwg.org/multipage/media.html#dom-media-network_empty
 * @const {number}
 */
HTMLMediaElement.prototype.NETWORK_EMPTY;

/**
 * @see https://html.spec.whatwg.org/multipage/media.html#dom-media-network_idle
 * @const {number}
 */
HTMLMediaElement.NETWORK_IDLE;

/**
 * @see https://html.spec.whatwg.org/multipage/media.html#dom-media-network_idle
 * @const {number}
 */
HTMLMediaElement.prototype.NETWORK_IDLE;

/**
 * @see https://html.spec.whatwg.org/multipage/media.html#dom-media-network_loading
 * @const {number}
 */
HTMLMediaElement.NETWORK_LOADING;

/**
 * @see https://html.spec.whatwg.org/multipage/media.html#dom-media-network_loading
 * @const {number}
 */
HTMLMediaElement.prototype.NETWORK_LOADING;

/**
 * @see https://html.spec.whatwg.org/multipage/media.html#dom-media-network_no_source
 * @const {number}
 */
HTMLMediaElement.NETWORK_NO_SOURCE;

/**
 * @see https://html.spec.whatwg.org/multipage/media.html#dom-media-network_no_source
 * @const {number}
 */
HTMLMediaElement.prototype.NETWORK_NO_SOURCE;

/**
 * @see https://html.spec.whatwg.org/multipage/media.html#dom-media-have_nothing
 * @const {number}
 */
HTMLMediaElement.HAVE_NOTHING;

/**
 * @see https://html.spec.whatwg.org/multipage/media.html#dom-media-have_nothing
 * @const {number}
 */
HTMLMediaElement.prototype.HAVE_NOTHING;

/**
 * @see https://html.spec.whatwg.org/multipage/media.html#dom-media-have_metadata
 * @const {number}
 */
HTMLMediaElement.HAVE_METADATA;

/**
 * @see https://html.spec.whatwg.org/multipage/media.html#dom-media-have_metadata
 * @const {number}
 */
HTMLMediaElement.prototype.HAVE_METADATA;

/**
 * @see https://html.spec.whatwg.org/multipage/media.html#dom-media-have_current_data
 * @const {number}
 */
HTMLMediaElement.HAVE_CURRENT_DATA;

/**
 * @see https://html.spec.whatwg.org/multipage/media.html#dom-media-have_current_data
 * @const {number}
 */
HTMLMediaElement.prototype.HAVE_CURRENT_DATA;

/**
 * @see https://html.spec.whatwg.org/multipage/media.html#dom-media-have_future_data
 * @const {number}
 */
HTMLMediaElement.HAVE_FUTURE_DATA;

/**
 * @see https://html.spec.whatwg.org/multipage/media.html#dom-media-have_future_data
 * @const {number}
 */
HTMLMediaElement.prototype.HAVE_FUTURE_DATA;

/**
 * @see https://html.spec.whatwg.org/multipage/media.html#dom-media-have_enough_data
 * @const {number}
 */
HTMLMediaElement.HAVE_ENOUGH_DATA;

/**
 * @see https://html.spec.whatwg.org/multipage/media.html#dom-media-have_enough_data
 * @const {number}
 */
HTMLMediaElement.prototype.HAVE_ENOUGH_DATA;

/** @type {MediaError} */
HTMLMediaElement.prototype.error;

/** @type {string} @implicitCast */
HTMLMediaElement.prototype.src;

/** @type {string} */
HTMLMediaElement.prototype.currentSrc;

/** @type {number} */
HTMLMediaElement.prototype.networkState;

/** @type {boolean} */
HTMLMediaElement.prototype.autobuffer;

/** @type {!TimeRanges} */
HTMLMediaElement.prototype.buffered;

/** @type {?MediaStream} */
HTMLMediaElement.prototype.srcObject;

/**
 * Loads the media element.
 * @return {undefined}
 */
HTMLMediaElement.prototype.load = function() {};

/**
 * @param {string} type Type of the element in question in question.
 * @return {string} Whether it can play the type.
 * @nosideeffects
 */
HTMLMediaElement.prototype.canPlayType = function(type) {};

/** Event handlers */

/** @type {?function(Event)} */
HTMLMediaElement.prototype.onabort;

/** @type {?function(!Event)} */
HTMLMediaElement.prototype.oncanplay;

/** @type {?function(!Event)} */
HTMLMediaElement.prototype.oncanplaythrough;

/** @type {?function(!Event)} */
HTMLMediaElement.prototype.ondurationchange;

/** @type {?function(!Event)} */
HTMLMediaElement.prototype.onemptied;

/** @type {?function(!Event)} */
HTMLMediaElement.prototype.onended;

/** @type {?function(Event)} */
HTMLMediaElement.prototype.onerror;

/** @type {?function(!Event)} */
HTMLMediaElement.prototype.onloadeddata;

/** @type {?function(!Event)} */
HTMLMediaElement.prototype.onloadedmetadata;

/** @type {?function(!Event)} */
HTMLMediaElement.prototype.onloadstart;

/** @type {?function(!Event)} */
HTMLMediaElement.prototype.onpause;

/** @type {?function(!Event)} */
HTMLMediaElement.prototype.onplay;

/** @type {?function(!Event)} */
HTMLMediaElement.prototype.onplaying;

/** @type {?function(!Event)} */
HTMLMediaElement.prototype.onprogress;

/** @type {?function(!Event)} */
HTMLMediaElement.prototype.onratechange;

/** @type {?function(!Event)} */
HTMLMediaElement.prototype.onseeked;

/** @type {?function(!Event)} */
HTMLMediaElement.prototype.onseeking;

/** @type {?function(!Event)} */
HTMLMediaElement.prototype.onstalled;

/** @type {?function(!Event)} */
HTMLMediaElement.prototype.onsuspend;

/** @type {?function(!Event)} */
HTMLMediaElement.prototype.ontimeupdate;

/** @type {?function(!Event)} */
HTMLMediaElement.prototype.onvolumechange;

/** @type {?function(!Event)} */
HTMLMediaElement.prototype.onwaiting;

/** @type {?function(Event)} */
HTMLImageElement.prototype.onload;

/** @type {?function(Event)} */
HTMLImageElement.prototype.onerror;

/** @type {string} */
HTMLMediaElement.prototype.preload;

/** @type {number} */
HTMLMediaElement.prototype.readyState;

/** @type {boolean} */
HTMLMediaElement.prototype.seeking;

/**
 * @type {string}
 * @see https://html.spec.whatwg.org/multipage/media.html#dom-media-crossorigin
 */
HTMLMediaElement.prototype.crossOrigin;

/**
 * The current time, in seconds.
 * @type {number}
 */
HTMLMediaElement.prototype.currentTime;

/**
 * The absolute timeline offset.
 * @return {!Date}
 */
HTMLMediaElement.prototype.getStartDate = function() {};

/**
 * The length of the media in seconds.
 * @type {number}
 */
HTMLMediaElement.prototype.duration;

/** @type {boolean} */
HTMLMediaElement.prototype.paused;

/** @type {number} */
HTMLMediaElement.prototype.defaultPlaybackRate;

/** @type {number} */
HTMLMediaElement.prototype.playbackRate;

/** @type {TimeRanges} */
HTMLMediaElement.prototype.played;

/** @type {TimeRanges} */
HTMLMediaElement.prototype.seekable;

/** @type {boolean} */
HTMLMediaElement.prototype.ended;

/** @type {boolean} */
HTMLMediaElement.prototype.autoplay;

/** @type {boolean} */
HTMLMediaElement.prototype.loop;

/**
 * Starts playing the media.
 * @return {?Promise<undefined>} This is a *nullable* Promise on purpose unlike
 *     the HTML5 spec because supported older browsers (incl. Smart TVs) don't
 *     return a Promise.
 */
HTMLMediaElement.prototype.play = function() {};

/**
 * Pauses the media.
 * @return {undefined}
 */
HTMLMediaElement.prototype.pause = function() {};

/** @type {boolean} */
HTMLMediaElement.prototype.controls;

/**
 * The audio volume, from 0.0 (silent) to 1.0 (loudest).
 * @type {number}
 */
HTMLMediaElement.prototype.volume;

/** @type {boolean} */
HTMLMediaElement.prototype.muted;

/**
 * @see http://www.whatwg.org/specs/web-apps/current-work/multipage/the-video-element.html#dom-media-addtexttrack
 * @param {string} kind Kind of the text track.
 * @param {string=} opt_label Label of the text track.
 * @param {string=} opt_language Language of the text track.
 * @return {!TextTrack} TextTrack object added to the media element.
 */
HTMLMediaElement.prototype.addTextTrack =
    function(kind, opt_label, opt_language) {};

/** @type {!TextTrackList} */
HTMLMediaElement.prototype.textTracks;

/**
 * The ID of the audio device through which output is being delivered, or an
 * empty string if using the default device.
 *
 * Implemented as a draft spec in Chrome 49+.
 *
 * @see https://w3c.github.io/mediacapture-output/#htmlmediaelement-extensions
 * @type {string}
 */
HTMLMediaElement.prototype.sinkId;

/**
 * Sets the audio device through which output should be delivered.
 *
 * Implemented as a draft spec in Chrome 49+.
 *
 * @param {string} sinkId The ID of the audio output device, or empty string
 * for default device.
 *
 * @see https://w3c.github.io/mediacapture-output/#htmlmediaelement-extensions
 * @return {!Promise<void>}
 */
HTMLMediaElement.prototype.setSinkId = function(sinkId) {};


/**
 * Produces a real-time capture of the media that is rendered to the media
 * element.
 * @return {!MediaStream}
 * @see https://w3c.github.io/mediacapture-fromelement/#html-media-element-media-capture-extensions
 */
HTMLMediaElement.prototype.captureStream = function() {};

/**
 * The Firefox flavor of captureStream.
 * @return {!MediaStream}
 * @see https://developer.mozilla.org/en-US/docs/Web/API/HTMLMediaElement/captureStream#Browser_compatibility
 */
HTMLMediaElement.prototype.mozCaptureStream = function() {};

/**
 * @constructor
 * @extends {HTMLElement}
 * @see https://html.spec.whatwg.org/multipage/dom.html#htmlunknownelement
 * @see https://html.spec.whatwg.org/multipage/scripting.html#customized-built-in-element-restrictions
 * @see https://w3c.github.io/webcomponents/spec/custom/#custom-elements-api
 */
function HTMLUnknownElement() {}



/**
 * @see http://www.w3.org/TR/shadow-dom/
 * @return {!NodeList<!Node>}
 */
Text.prototype.getDestinationInsertionPoints = function() {};


/**
 * @see http://www.whatwg.org/specs/web-apps/current-work/multipage/the-video-element.html#texttracklist
 * @constructor
 * @implements {EventTarget}
 * @implements {IArrayLike<!TextTrack>}
 */
function TextTrackList() {}

/** @type {number} */
TextTrackList.prototype.length;

/**
 * @param {string} id
 * @return {TextTrack}
 */
TextTrackList.prototype.getTrackById = function(id) {};

/** @override */
TextTrackList.prototype.addEventListener = function(
    type, listener, opt_useCapture) {};

/** @override */
TextTrackList.prototype.dispatchEvent = function(evt) {};

/** @override */
TextTrackList.prototype.removeEventListener = function(
    type, listener, opt_options) {};

/**
 * @see http://www.whatwg.org/specs/web-apps/current-work/multipage/the-video-element.html#texttrack
 * @constructor
 * @implements {EventTarget}
 */
function TextTrack() {}

/**
 * @param {TextTrackCue} cue
 * @return {undefined}
 */
TextTrack.prototype.addCue = function(cue) {};

/**
 * @param {TextTrackCue} cue
 * @return {undefined}
 */
TextTrack.prototype.removeCue = function(cue) {};

/**
 * @const {TextTrackCueList}
 */
TextTrack.prototype.activeCues;

/**
 * @const {TextTrackCueList}
 */
TextTrack.prototype.cues;

/**
 * @type {string}
 */
TextTrack.prototype.mode;

/** @override */
TextTrack.prototype.addEventListener = function(
    type, listener, opt_useCapture) {};

/** @override */
TextTrack.prototype.dispatchEvent = function(evt) {};

/** @override */
TextTrack.prototype.removeEventListener = function(
    type, listener, opt_options) {};



/**
 * @see http://www.whatwg.org/specs/web-apps/current-work/multipage/the-video-element.html#texttrackcuelist
 * @constructor
 * @implements {IArrayLike<!TextTrackCue>}
 */
function TextTrackCueList() {}

/** @const {number} */
TextTrackCueList.prototype.length;

/**
 * @param {string} id
 * @return {TextTrackCue}
 */
TextTrackCueList.prototype.getCueById = function(id) {};



/**
 * @see http://www.whatwg.org/specs/web-apps/current-work/multipage/the-video-element.html#texttrackcue
 * @constructor
 * @param {number} startTime
 * @param {number} endTime
 * @param {string} text
 */
function TextTrackCue(startTime, endTime, text) {}

/** @type {string} */
TextTrackCue.prototype.id;

/** @type {number} */
TextTrackCue.prototype.startTime;

/** @type {number} */
TextTrackCue.prototype.endTime;

/** @type {string} */
TextTrackCue.prototype.text;



/**
 * @see https://w3c.github.io/webvtt/#vttregion
 * @constructor
 */
function VTTRegion() {}

/** @type {string} */
VTTRegion.prototype.id;

/** @type {number} */
VTTRegion.prototype.width;

/** @type {number} */
VTTRegion.prototype.lines;

/** @type {number} */
VTTRegion.prototype.regionAnchorX;

/** @type {number} */
VTTRegion.prototype.regionAnchorY;

/** @type {number} */
VTTRegion.prototype.viewportAnchorX;

/** @type {number} */
VTTRegion.prototype.viewportAnchorY;

/**
 * @see https://w3c.github.io/webvtt/#enumdef-scrollsetting
 * @type {string}
 */
VTTRegion.prototype.scroll;



/**
 * @see http://dev.w3.org/html5/webvtt/#the-vttcue-interface
 * @constructor
 * @extends {TextTrackCue}
 * @param {number} startTime
 * @param {number} endTime
 * @param {string} text
 */
function VTTCue(startTime, endTime, text) {}

/** @type {?VTTRegion} */
VTTCue.prototype.region;

/**
 * @see https://w3c.github.io/webvtt/#enumdef-directionsetting
 * @type {string}
 */
VTTCue.prototype.vertical;

/** @type {boolean} */
VTTCue.prototype.snapToLines;

/** @type {(number|string)} */
VTTCue.prototype.line;

/**
 * @see https://w3c.github.io/webvtt/#enumdef-linealignsetting
 * @type {string}
 */
VTTCue.prototype.lineAlign;

/** @type {(number|string)} */
VTTCue.prototype.position;

/**
 * @see https://w3c.github.io/webvtt/#enumdef-positionalignsetting
 * @type {string}
 */
VTTCue.prototype.positionAlign;

/** @type {number} */
VTTCue.prototype.size;

/**
 * @see https://w3c.github.io/webvtt/#enumdef-alignsetting
 * @type {string}
 */
VTTCue.prototype.align;

/** @type {string} */
VTTCue.prototype.text;

/** @return {!DocumentFragment} */
VTTCue.prototype.getCueAsHTML = function() {};


/**
 * @constructor
 * @extends {HTMLMediaElement}
 */
function HTMLAudioElement() {}

/**
 * @constructor
 * @extends {HTMLMediaElement}
 * The webkit-prefixed attributes are defined in
 * https://cs.chromium.org/chromium/src/third_party/WebKit/Source/core/html/media/HTMLMediaElement.idl
 */
function HTMLVideoElement() {}

/**
 * Starts displaying the video in full screen mode.
 * @return {undefined}
 */
HTMLVideoElement.prototype.webkitEnterFullscreen = function() {};

/**
 * Starts displaying the video in full screen mode.
 * @return {undefined}
 */
HTMLVideoElement.prototype.webkitEnterFullScreen = function() {};

/**
 * Stops displaying the video in full screen mode.
 * @return {undefined}
 */
HTMLVideoElement.prototype.webkitExitFullscreen = function() {};

/**
 * Stops displaying the video in full screen mode.
 * @return {undefined}
 */
HTMLVideoElement.prototype.webkitExitFullScreen = function() {};

/** @type {number} */
HTMLVideoElement.prototype.width;

/** @type {number} */
HTMLVideoElement.prototype.height;

/** @type {number} */
HTMLVideoElement.prototype.videoWidth;

/** @type {number} */
HTMLVideoElement.prototype.videoHeight;

/** @type {string} */
HTMLVideoElement.prototype.poster;

/** @type {boolean} */
HTMLVideoElement.prototype.webkitSupportsFullscreen;

/** @type {boolean} */
HTMLVideoElement.prototype.webkitDisplayingFullscreen;

/** @type {number} */
HTMLVideoElement.prototype.webkitDecodedFrameCount;

/** @type {number} */
HTMLVideoElement.prototype.webkitDroppedFrameCount;

/**
 * @typedef {{
 *    creationTime: number,
 *    totalVideoFrames: number,
 *    droppedVideoFrames: number,
 *    corruptedVideoFrames: number,
 *    totalFrameDelay: number,
 *    displayCompositedVideoFrames: (number|undefined)
 * }}
 */
var VideoPlaybackQuality;

/**
 * @see https://w3c.github.io/media-source/#htmlvideoelement-extensions
 * @return {!VideoPlaybackQuality} Stats about the current playback.
 */
HTMLVideoElement.prototype.getVideoPlaybackQuality = function() {};


/**
 * The metadata provided by the callback given to
 * HTMLVideoElement.requestVideoFrameCallback().
 *
 * See https://wicg.github.io/video-rvfc/#video-frame-metadata
 *
 * @record
 */
function VideoFrameMetadata() {};

/**
 * The time at which the user agent submitted the frame for composition.
 * @const {number}
 */
VideoFrameMetadata.prototype.presentationTime;

/**
 * The time at which the user agent expects the frame to be visible.
 * @const {number}
 */
VideoFrameMetadata.prototype.expectedDisplayTime;

/**
 * The width of the video frame, in media pixels.
 * @const {number}
 */
VideoFrameMetadata.prototype.width;

/**
 * The height of the video frame, in media pixels.
 * @const {number}
 */
VideoFrameMetadata.prototype.height;

/**
 * The media presentation timestamp (PTS) in seconds of the frame presented
 * (e.g. its timestamp on the video.currentTime timeline).
 * @const {number}
 */
VideoFrameMetadata.prototype.mediaTime;

/**
 * A count of the number of frames submitted for composition.
 * @const {number}
 */
VideoFrameMetadata.prototype.presentedFrames;

/**
 * The elapsed duration in seconds from submission of the encoded packet with
 * the same presentation timestamp (PTS) as this frame (e.g. same as the
 * mediaTime) to the decoder until the decoded frame was ready for presentation.
 * @const {number|undefined}
 */
VideoFrameMetadata.prototype.processingDuration;

/**
 * For video frames coming from either a local or remote source, this is the
 * time at which the frame was captured by the camera.
 * @const {number|undefined}
 */
VideoFrameMetadata.prototype.captureTime;

/**
 * For video frames coming from a remote source, this is the time the encoded
 * frame was received by the platform, i.e., the time at which the last packet
 * belonging to this frame was received over the network.
 * @const {number|undefined}
 */
VideoFrameMetadata.prototype.receiveTime;

/**
 * The RTP timestamp associated with this video frame.
 * @const {number|undefined}
 */
VideoFrameMetadata.prototype.rtpTimestamp;

/**
 * @typedef {function(number,  ?VideoFrameMetadata): undefined}
 * @see https://wicg.github.io/video-rvfc/#dom-htmlvideoelement-requestvideoframecallback
 */
var VideoFrameRequestCallback;

/**
 * Registers a callback to be fired the next time a frame is presented to the
 * compositor.
 * @param {!VideoFrameRequestCallback} callback
 * @return {number}
 */
HTMLVideoElement.prototype.requestVideoFrameCallback = function(callback) {};

/**
 * Cancels an existing video frame request callback given its handle.
 * @param {number} handle
 * @return {undefined}
 */
HTMLVideoElement.prototype.cancelVideoFrameCallback = function(handle) {};


/**
 * @constructor
 * @see https://html.spec.whatwg.org/multipage/media.html#error-codes
 */
function MediaError() {}

/** @type {number} */
MediaError.prototype.code;

/** @type {string} */
MediaError.prototype.message;

/**
 * The fetching process for the media resource was aborted by the user agent at
 * the user's request.
 * @const {number}
 */
MediaError.MEDIA_ERR_ABORTED;

/**
 * A network error of some description caused the user agent to stop fetching
 * the media resource, after the resource was established to be usable.
 * @const {number}
 */
MediaError.MEDIA_ERR_NETWORK;

/**
 * An error of some description occurred while decoding the media resource,
 * after the resource was established to be usable.
 * @const {number}
 */
MediaError.MEDIA_ERR_DECODE;

/**
 * The media resource indicated by the src attribute was not suitable.
 * @const {number}
 */
MediaError.MEDIA_ERR_SRC_NOT_SUPPORTED;

// HTML5 MessageChannel
/**
 * @see http://dev.w3.org/html5/spec/comms.html#messagechannel
 * @constructor
 */
function MessageChannel() {}

/**
 * Returns the first port.
 * @type {!MessagePort}
 */
MessageChannel.prototype.port1;

/**
 * Returns the second port.
 * @type {!MessagePort}
 */
MessageChannel.prototype.port2;

// HTML5 MessagePort
/**
 * @see http://dev.w3.org/html5/spec/comms.html#messageport
 * @constructor
 * @implements {EventTarget}
 * @implements {Transferable}
 */
function MessagePort() {}

/** @override */
MessagePort.prototype.addEventListener = function(type, listener, opt_options) {
};

/** @override */
MessagePort.prototype.removeEventListener = function(
    type, listener, opt_options) {};

/** @override */
MessagePort.prototype.dispatchEvent = function(evt) {};


/**
 * Posts a message through the channel, optionally with the given
 * Array of Transferables.
 * @param {*} message
 * @param {Array<!Transferable>=} opt_transfer
 * @return {undefined}
 */
MessagePort.prototype.postMessage = function(message, opt_transfer) {
};

/**
 * Begins dispatching messages received on the port.
 * @return {undefined}
 */
MessagePort.prototype.start = function() {};

/**
 * Disconnects the port, so that it is no longer active.
 * @return {undefined}
 */
MessagePort.prototype.close = function() {};

/**
 * TODO(blickly): Change this to MessageEvent<*> and add casts as needed
 * @type {?function(!MessageEvent<?>): void}
 */
MessagePort.prototype.onmessage;

// HTML5 MessageEvent class
/**
 * @typedef {Window|MessagePort|ServiceWorker}
 * @see https://html.spec.whatwg.org/multipage/comms.html#messageeventsource
 */
var MessageEventSource;


/**
 * @record
 * @extends {EventInit}
 * @template T
 * @see https://html.spec.whatwg.org/multipage/comms.html#messageeventinit
 */
function MessageEventInit() {}

/** @type {T|undefined} */
MessageEventInit.prototype.data;

/** @type {(string|undefined)} */
MessageEventInit.prototype.origin;

/** @type {(string|undefined)} */
MessageEventInit.prototype.lastEventId;

/** @type {(?MessageEventSource|undefined)} */
MessageEventInit.prototype.source;

/** @type {(!Array<MessagePort>|undefined)} */
MessageEventInit.prototype.ports;


/**
 * @see https://html.spec.whatwg.org/multipage/comms.html#messageevent
 * @constructor
 * @extends {Event}
 * @param {string} type
 * @param {MessageEventInit<T>=} opt_eventInitDict
 * @template T
 */
function MessageEvent(type, opt_eventInitDict) {}

/**
 * The data payload of the message.
 * @type {T}
 */
MessageEvent.prototype.data;

/**
 * The origin of the message, for server-sent events and cross-document
 * messaging.
 * @type {string}
 */
MessageEvent.prototype.origin;

/**
 * The last event ID, for server-sent events.
 * @type {string}
 */
MessageEvent.prototype.lastEventId;

/**
 * The window that dispatched the event.
 * @type {Window}
 */
MessageEvent.prototype.source;

/**
 * The Array of MessagePorts sent with the message, for cross-document
 * messaging and channel messaging.
 * @type {!Array<MessagePort>}
 */
MessageEvent.prototype.ports;

/**
 * Initializes the event in a manner analogous to the similarly-named methods in
 * the DOM Events interfaces.
 * @param {string} typeArg
 * @param {boolean=} canBubbleArg
 * @param {boolean=} cancelableArg
 * @param {T=} dataArg
 * @param {string=} originArg
 * @param {string=} lastEventIdArg
 * @param {?MessageEventSource=} sourceArg
 * @param {!Array<MessagePort>=} portsArg
 * @return {undefined}
 */
MessageEvent.prototype.initMessageEvent = function(typeArg, canBubbleArg,
    cancelableArg, dataArg, originArg, lastEventIdArg, sourceArg, portsArg) {};

/**
 * Initializes the event in a manner analogous to the similarly-named methods in
 * the DOM Events interfaces.
 * @param {string} namespaceURI
 * @param {string=} typeArg
 * @param {boolean=} canBubbleArg
 * @param {boolean=} cancelableArg
 * @param {T=} dataArg
 * @param {string=} originArg
 * @param {string=} lastEventIdArg
 * @param {?MessageEventSource=} sourceArg
 * @param {!Array<MessagePort>=} portsArg
 * @return {undefined}
 */
MessageEvent.prototype.initMessageEventNS = function(namespaceURI, typeArg,
    canBubbleArg, cancelableArg, dataArg, originArg, lastEventIdArg, sourceArg,
    portsArg) {};

/**
 * @record
 * @extends {EventInit}
 * @see https://html.spec.whatwg.org/multipage/web-sockets.html#the-closeevent-interface
 */
function CloseEventInit() {}

/**
 * @type {undefined|boolean}
 */
CloseEventInit.prototype.wasClean;

/**
 * @type {undefined|number}
 */
CloseEventInit.prototype.code;

/**
 * @type {undefined|string}
 */
CloseEventInit.prototype.reason;

/**
 * @constructor
 * @extends {Event}
 * @param {string} type
 * @param {!CloseEventInit=} opt_init
 */
var CloseEvent = function(type, opt_init) {};

/**
 * @type {boolean}
 */
CloseEvent.prototype.wasClean;

/**
 * @type {number}
 */
CloseEvent.prototype.code;

/**
 * @type {string}
 */
CloseEvent.prototype.reason;

/**
 * HTML5 BroadcastChannel class.
 * @param {string} channelName
 * @see https://developer.mozilla.org/en-US/docs/Web/API/BroadcastChannel
 * @see https://html.spec.whatwg.org/multipage/comms.html#dom-broadcastchannel
 * @implements {EventTarget}
 * @constructor
 */
function BroadcastChannel(channelName) {}

/**
 * Sends the message, of any type of object, to each BroadcastChannel object
 * listening to the same channel.
 * @param {*} message
 */
BroadcastChannel.prototype.postMessage = function(message) {};

/**
 * Closes the channel object, indicating it won't get any new messages, and
 * allowing it to be, eventually, garbage collected.
 * @return {void}
 */
BroadcastChannel.prototype.close = function() {};

/** @override */
BroadcastChannel.prototype.addEventListener = function(
    type, listener, opt_options) {};

/** @override */
BroadcastChannel.prototype.dispatchEvent = function(evt) {};

/** @override */
BroadcastChannel.prototype.removeEventListener = function(
    type, listener, opt_options) {};

/**
 * An EventHandler property that specifies the function to execute when a
 * message event is fired on this object.
 * @type {?function(!MessageEvent<*>)}
 */
BroadcastChannel.prototype.onmessage;

/**
 * The name of the channel.
 * @type {string}
 */
BroadcastChannel.prototype.name;

/**
 * HTML5 DataTransfer class.
 *
 * @see http://www.w3.org/TR/2011/WD-html5-20110113/dnd.html
 * @see http://www.whatwg.org/specs/web-apps/current-work/multipage/dnd.html
 * @see http://developers.whatwg.org/dnd.html#datatransferitem
 * @constructor
 */
function DataTransfer() {}

/** @type {string} */
DataTransfer.prototype.dropEffect;

/** @type {string} */
DataTransfer.prototype.effectAllowed;

/** @type {!Array<string>} */
DataTransfer.prototype.types;

/** @type {!FileList} */
DataTransfer.prototype.files;

/**
 * @param {string=} opt_format Format for which to remove data.
 * @return {undefined}
 */
DataTransfer.prototype.clearData = function(opt_format) {};

/**
 * @param {string} format Format for which to set data.
 * @param {string} data Data to add.
 * @return {boolean}
 */
DataTransfer.prototype.setData = function(format, data) {};

/**
 * @param {string} format Format for which to set data.
 * @return {string} Data for the given format.
 */
DataTransfer.prototype.getData = function(format) { return ''; };

/**
 * @param {HTMLElement} img The image to use when dragging.
 * @param {number} x Horizontal position of the cursor.
 * @param {number} y Vertical position of the cursor.
 * @return {undefined}
 */
DataTransfer.prototype.setDragImage = function(img, x, y) {};

/**
 * @param {HTMLElement} elem Element to receive drag result events.
 * @return {undefined}
 */
DataTransfer.prototype.addElement = function(elem) {};

/**
 * Addition for accessing clipboard file data that are part of the proposed
 * HTML5 spec.
 * @type {DataTransfer}
 */
MouseEvent.prototype.dataTransfer;

/**
 * @record
 * @extends {MouseEventInit}
 * @see https://w3c.github.io/uievents/#idl-wheeleventinit
 */
function WheelEventInit() {}

/** @type {undefined|number} */
WheelEventInit.prototype.deltaX;

/** @type {undefined|number} */
WheelEventInit.prototype.deltaY;

/** @type {undefined|number} */
WheelEventInit.prototype.deltaZ;

/** @type {undefined|number} */
WheelEventInit.prototype.deltaMode;

/**
 * @param {string} type
 * @param {WheelEventInit=} opt_eventInitDict
 * @see http://www.w3.org/TR/DOM-Level-3-Events/#interface-WheelEvent
 * @constructor
 * @extends {MouseEvent}
 */
function WheelEvent(type, opt_eventInitDict) {}

/** @const {number} */
WheelEvent.DOM_DELTA_PIXEL;

/** @const {number} */
WheelEvent.DOM_DELTA_LINE;

/** @const {number} */
WheelEvent.DOM_DELTA_PAGE;

/** @const {number} */
WheelEvent.prototype.deltaX;

/** @const {number} */
WheelEvent.prototype.deltaY;

/** @const {number} */
WheelEvent.prototype.deltaZ;

/** @const {number} */
WheelEvent.prototype.deltaMode;

/**
 * HTML5 DataTransferItem class.
 *
 * @see http://www.w3.org/TR/2011/WD-html5-20110113/dnd.html
 * @see http://www.whatwg.org/specs/web-apps/current-work/multipage/dnd.html
 * @see http://developers.whatwg.org/dnd.html#datatransferitem
 * @constructor
 */
function DataTransferItem() {}

/** @type {string} */
DataTransferItem.prototype.kind;

/** @type {string} */
DataTransferItem.prototype.type;

/**
 * @param {function(string)} callback
 * @return {undefined}
 */
DataTransferItem.prototype.getAsString = function(callback) {};

/**
 * @return {?File} The file corresponding to this item, or null.
 * @nosideeffects
 */
DataTransferItem.prototype.getAsFile = function() { return null; };

/**
 * HTML5 DataTransferItemList class. There are some discrepancies in the docs
 * on the whatwg.org site. When in doubt, these prototypes match what is
 * implemented as of Chrome 30.
 *
 * @see http://www.w3.org/TR/2011/WD-html5-20110113/dnd.html
 * @see http://www.whatwg.org/specs/web-apps/current-work/multipage/dnd.html
 * @see http://developers.whatwg.org/dnd.html#datatransferitem
 * @constructor
 * @implements {IArrayLike<!DataTransferItem>}
 */
function DataTransferItemList() {}

/** @type {number} */
DataTransferItemList.prototype.length;

/**
 * @param {number} i File to return from the list.
 * @return {DataTransferItem} The ith DataTransferItem in the list, or null.
 * @nosideeffects
 */
DataTransferItemList.prototype.item = function(i) { return null; };

/**
 * Adds an item to the list.
 * @param {string|!File} data Data for the item being added.
 * @param {string=} opt_type Mime type of the item being added. MUST be present
 *     if the {@code data} parameter is a string.
 * @return {DataTransferItem}
 */
DataTransferItemList.prototype.add = function(data, opt_type) {};

/**
 * Removes an item from the list.
 * @param {number} i File to remove from the list.
 * @return {undefined}
 */
DataTransferItemList.prototype.remove = function(i) {};

/**
 * Removes all items from the list.
 * @return {undefined}
 */
DataTransferItemList.prototype.clear = function() {};

/** @type {!DataTransferItemList} */
DataTransfer.prototype.items;

/**
 * @record
 * @extends {MouseEventInit}
 * @see http://w3c.github.io/html/editing.html#dictdef-drageventinit
 */
function DragEventInit() {}

/** @type {undefined|?DataTransfer} */
DragEventInit.prototype.dataTransfer;


/**
 * @see http://www.whatwg.org/specs/web-apps/current-work/multipage/dnd.html#the-dragevent-interface
 * @constructor
 * @extends {MouseEvent}
 * @param {string} type
 * @param {DragEventInit=} opt_eventInitDict
 */
function DragEvent(type, opt_eventInitDict) {}

/** @type {DataTransfer} */
DragEvent.prototype.dataTransfer;


/**
 * @record
 * @extends {EventInit}
 * @see https://www.w3.org/TR/progress-events/#progresseventinit
 */
function ProgressEventInit() {}

/** @type {undefined|boolean} */
ProgressEventInit.prototype.lengthComputable;

/** @type {undefined|number} */
ProgressEventInit.prototype.loaded;

/** @type {undefined|number} */
ProgressEventInit.prototype.total;

/**
 * @constructor
 * @template TARGET
 * @param {string} type
 * @param {ProgressEventInit=} opt_progressEventInitDict
 * @extends {Event}
 * @see https://developer.mozilla.org/en-US/docs/Web/API/ProgressEvent
 */
function ProgressEvent(type, opt_progressEventInitDict) {}

/**
 * @override
 * @type {TARGET}
 */
ProgressEvent.prototype.target;

/** @type {number} */
ProgressEvent.prototype.total;

/** @type {number} */
ProgressEvent.prototype.loaded;

/** @type {boolean} */
ProgressEvent.prototype.lengthComputable;


/**
 * @constructor
 */
function TimeRanges() {}

/** @type {number} */
TimeRanges.prototype.length;

/**
 * @param {number} index The index.
 * @return {number} The start time of the range at index.
 * @throws {DOMException}
 */
TimeRanges.prototype.start = function(index) { return 0; };

/**
 * @param {number} index The index.
 * @return {number} The end time of the range at index.
 * @throws {DOMException}
 */
TimeRanges.prototype.end = function(index) { return 0; };


// HTML5 Web Socket class
/**
 * @see https://html.spec.whatwg.org/multipage/web-sockets.html
 * @constructor
 * @param {string} url
 * @param {(string|!Array<string>)=} opt_protocol
 * @implements {EventTarget}
 */
function WebSocket(url, opt_protocol) {}

/**
 * The connection has not yet been established.
 * @const {number}
 */
WebSocket.CONNECTING;

/**
 * The connection has not yet been established.
 * @const {number}
 */
WebSocket.prototype.CONNECTING;

/**
 * The WebSocket connection is established and communication is possible.
 * @const {number}
 */
WebSocket.OPEN;

/**
 * The WebSocket connection is established and communication is possible.
 * @const {number}
 */
WebSocket.prototype.OPEN;

/**
 * The connection is going through the closing handshake, or the close() method has been invoked.
 * @const {number}
 */
WebSocket.CLOSING;

/**
 * The connection is going through the closing handshake, or the close() method has been invoked.
 * @const {number}
 */
WebSocket.prototype.CLOSING;

/**
 * The connection has been closed or could not be opened.
 * @const {number}
 */
WebSocket.CLOSED;

/**
 * The connection has been closed or could not be opened.
 * @const {number}
 */
WebSocket.prototype.CLOSED;

/** @override */
WebSocket.prototype.addEventListener = function(type, listener, opt_options) {};

/** @override */
WebSocket.prototype.removeEventListener = function(
    type, listener, opt_options) {};

/** @override */
WebSocket.prototype.dispatchEvent = function(evt) {};

/**
 * Returns the URL value that was passed to the constructor.
 * @type {string}
 */
WebSocket.prototype.url;

/**
 * Represents the state of the connection.
 * @type {number}
 */
WebSocket.prototype.readyState;

/**
 * Returns the number of bytes that have been queued but not yet sent.
 * @type {number}
 */
WebSocket.prototype.bufferedAmount;

/**
 * An event handler called on error event.
 * @type {?function(!Event): void}
 */
WebSocket.prototype.onerror;

/**
 * An event handler called on open event.
 * @type {?function(!Event): void}
 */
WebSocket.prototype.onopen;

/**
 * An event handler called on message event.
 * @type {?function(!MessageEvent<string|!ArrayBuffer|!Blob>): void}
 */
WebSocket.prototype.onmessage;

/**
 * An event handler called on close event.
 * @type {?function(!CloseEvent): void}
 */
WebSocket.prototype.onclose;

/**
 * Transmits data using the connection.
 * @param {string|!ArrayBuffer|!ArrayBufferView|!Blob} data
 * @return {void}
 */
WebSocket.prototype.send = function(data) {};

/**
 * Closes the Web Socket connection or connection attempt, if any.
 * @param {number=} opt_code
 * @param {string=} opt_reason
 * @return {undefined}
 */
WebSocket.prototype.close = function(opt_code, opt_reason) {};

/**
 * @type {string} Sets the type of data (blob or arraybuffer) for binary data.
 */
WebSocket.prototype.binaryType;

// HTML5 History
/**
 * @constructor
 * @see http://w3c.github.io/html/browsers.html#the-history-interface
 */
function History() {}

/**
 * Goes back one step in the joint session history.
 * If there is no previous page, does nothing.
 *
 * @see https://html.spec.whatwg.org/multipage/history.html#dom-history-back
 *
 * @return {undefined}
 */
History.prototype.back = function() {};

/**
 * Goes forward one step in the joint session history.
 * If there is no next page, does nothing.
 *
 * @return {undefined}
 */
History.prototype.forward = function() {};

/**
 * The number of entries in the joint session history.
 *
 * @type {number}
 */
History.prototype.length;

/**
 * Goes back or forward the specified number of steps in the joint session
 * history. A zero delta will reload the current page. If the delta is out of
 * range, does nothing.
 *
 * @param {number} delta The number of entries to go back.
 * @return {undefined}
 */
History.prototype.go = function(delta) {};

/**
 * Pushes a new state into the session history.
 * @see http://www.w3.org/TR/html5/history.html#the-history-interface
 * @param {*} data New state.
 * @param {string} title The title for a new session history entry.
 * @param {string=} opt_url The URL for a new session history entry.
 * @return {undefined}
 */
History.prototype.pushState = function(data, title, opt_url) {};

/**
 * Replaces the current state in the session history.
 * @see http://www.w3.org/TR/html5/history.html#the-history-interface
 * @param {*} data New state.
 * @param {string} title The title for a session history entry.
 * @param {string=} opt_url The URL for a new session history entry.
 * @return {undefined}
 */
History.prototype.replaceState = function(data, title, opt_url) {};

/**
 * Pending state object.
 * @see https://developer.mozilla.org/en-US/docs/Web/Guide/API/DOM/Manipulating_the_browser_history#Reading_the_current_state
 * @type {*}
 */
History.prototype.state;

/**
 * Allows web applications to explicitly set default scroll restoration behavior
 * on history navigation. This property can be either auto or manual.
 *
 * Non-standard. Only supported in Chrome 46+.
 *
 * @see https://developer.mozilla.org/en-US/docs/Web/API/History
 * @see https://majido.github.io/scroll-restoration-proposal/history-based-api.html
 * @type {string}
 */
History.prototype.scrollRestoration;

/**
 * Add history property to Window.
 *
 * @type {!History}
 */
Window.prototype.history;

/**
 * @constructor
 * @see https://html.spec.whatwg.org/multipage/history.html#the-location-interface
 */
function Location() {}

/**
 * Returns the Location object's URL. Can be set, to navigate to the given URL.
 * @implicitCast
 * @type {string}
 * @see https://html.spec.whatwg.org/multipage/history.html#dom-location-href
 */
Location.prototype.href;

/**
 * Returns the Location object's URL's origin.
 * @const {string}
 * @see https://html.spec.whatwg.org/multipage/history.html#dom-location-origin
 */
Location.prototype.origin;

/**
 * Returns the Location object's URL's scheme. Can be set, to navigate to the
 * same URL with a changed scheme.
 * @type {string}
 * @see https://html.spec.whatwg.org/multipage/history.html#dom-location-protocol
 */
Location.prototype.protocol;

/**
 * Returns the Location object's URL's host and port (if different from the
 * default port for the scheme). Can be set, to navigate to the same URL with
 * a changed host and port.
 * @type {string}
 * @see https://html.spec.whatwg.org/multipage/history.html#dom-location-host
 */
Location.prototype.host;

/**
 * Returns the Location object's URL's host. Can be set, to navigate to the
 * same URL with a changed host.
 * @type {string}
 * @see https://html.spec.whatwg.org/multipage/history.html#dom-location-hostname
 */
Location.prototype.hostname;

/**
 * Returns the Location object's URL's port. Can be set, to navigate to the
 * same URL with a changed port.
 * @type {string}
 * @see https://html.spec.whatwg.org/multipage/history.html#the-location-interface:dom-location-port
 */
Location.prototype.port;

/**
 * Returns the Location object's URL's path. Can be set, to navigate to the
 * same URL with a changed path.
 * @type {string}
 * @see https://html.spec.whatwg.org/multipage/history.html#dom-location-pathname
 */
Location.prototype.pathname;

/**
 * Returns the Location object's URL's query (includes leading "?" if
 * non-empty). Can be set, to navigate to the same URL with a changed query
 * (ignores leading "?").
 * @type {string}
 * @see https://html.spec.whatwg.org/multipage/history.html#dom-location-search
 */
Location.prototype.search;

/**
 * Returns the Location object's URL's fragment (includes leading "#" if
 * non-empty). Can be set, to navigate to the same URL with a changed fragment
 * (ignores leading "#").
 * @type {string}
 * @see https://html.spec.whatwg.org/multipage/history.html#dom-location-hash
 */
Location.prototype.hash;

/**
 * Navigates to the given page.
 * @param {string} url
 * @return {undefined}
 * @see https://html.spec.whatwg.org/multipage/history.html#dom-location-assign
 */
Location.prototype.assign = function(url) {};

/**
 * Removes the current page from the session history and navigates to the given
 * page.
 * @param {string} url
 * @return {undefined}
 * @see https://html.spec.whatwg.org/multipage/history.html#dom-location-replace
 */
Location.prototype.replace = function(url) {};

/**
 * Reloads the current page.
 * @param {boolean=} forceReload If true, reloads the page from
 *     the server. Defaults to false.
 * @return {undefined}
 * @see https://html.spec.whatwg.org/multipage/history.html#dom-location-reload
 */
Location.prototype.reload = function(forceReload) {};

/**
 * Returns a DOMStringList object listing the origins of the ancestor browsing
 * contexts, from the parent browsing context to the top-level browsing
 * context.
 * @type {DOMStringList}
 * @see https://html.spec.whatwg.org/multipage/history.html#dom-location-ancestororigins
 */
Location.prototype.ancestorOrigins;

/**
 * @see http://www.whatwg.org/specs/web-apps/current-work/#popstateevent
 * @constructor
 * @extends {Event}
 *
 * @param {string} type
 * @param {{state: *}=} opt_eventInitDict
 */
function PopStateEvent(type, opt_eventInitDict) {}

/**
 * @type {*}
 */
PopStateEvent.prototype.state;

/**
 * Initializes the event after it has been created with document.createEvent
 * @param {string} typeArg
 * @param {boolean} canBubbleArg
 * @param {boolean} cancelableArg
 * @param {*} stateArg
 * @return {undefined}
 */
PopStateEvent.prototype.initPopStateEvent = function(typeArg, canBubbleArg,
    cancelableArg, stateArg) {};

/**
 * @see http://www.whatwg.org/specs/web-apps/current-work/#hashchangeevent
 * @constructor
 * @extends {Event}
 *
 * @param {string} type
 * @param {{oldURL: string, newURL: string}=} opt_eventInitDict
 */
function HashChangeEvent(type, opt_eventInitDict) {}

/** @type {string} */
HashChangeEvent.prototype.oldURL;

/** @type {string} */
HashChangeEvent.prototype.newURL;

/**
 * Initializes the event after it has been created with document.createEvent
 * @param {string} typeArg
 * @param {boolean} canBubbleArg
 * @param {boolean} cancelableArg
 * @param {string} oldURLArg
 * @param {string} newURLArg
 * @return {undefined}
 */
HashChangeEvent.prototype.initHashChangeEvent = function(typeArg, canBubbleArg,
    cancelableArg, oldURLArg, newURLArg) {};

/**
 * @see http://www.whatwg.org/specs/web-apps/current-work/#pagetransitionevent
 * @constructor
 * @extends {Event}
 *
 * @param {string} type
 * @param {{persisted: boolean}=} opt_eventInitDict
 */
function PageTransitionEvent(type, opt_eventInitDict) {}

/** @type {boolean} */
PageTransitionEvent.prototype.persisted;

/**
 * Initializes the event after it has been created with document.createEvent
 * @param {string} typeArg
 * @param {boolean} canBubbleArg
 * @param {boolean} cancelableArg
 * @param {*} persistedArg
 * @return {undefined}
 */
PageTransitionEvent.prototype.initPageTransitionEvent = function(typeArg,
    canBubbleArg, cancelableArg, persistedArg) {};

/**
 * @constructor
 * @implements {IArrayLike<!File>}
 */
function FileList() {}

/** @type {number} */
FileList.prototype.length;

/**
 * @param {number} i File to return from the list.
 * @return {File} The ith file in the list.
 * @nosideeffects
 */
FileList.prototype.item = function(i) { return null; };

/**
 * @type {boolean}
 * @see http://dev.w3.org/2006/webapi/XMLHttpRequest-2/#withcredentials
 */
XMLHttpRequest.prototype.withCredentials;

/**
 * @type {?function(!ProgressEvent): void}
 * @see https://xhr.spec.whatwg.org/#handler-xhr-onloadstart
 */
XMLHttpRequest.prototype.onloadstart;

/**
 * @type {?function(!ProgressEvent): void}
 * @see https://dvcs.w3.org/hg/xhr/raw-file/tip/Overview.html#handler-xhr-onprogress
 */
XMLHttpRequest.prototype.onprogress;

/**
 * @type {?function(!ProgressEvent): void}
 * @see https://xhr.spec.whatwg.org/#handler-xhr-onabort
 */
XMLHttpRequest.prototype.onabort;

/**
 * @type {?function(!ProgressEvent): void}
 * @see https://xhr.spec.whatwg.org/#handler-xhr-onload
 */
XMLHttpRequest.prototype.onload;

/**
 * @type {?function(!ProgressEvent): void}
 * @see https://xhr.spec.whatwg.org/#handler-xhr-ontimeout
 */
XMLHttpRequest.prototype.ontimeout;

/**
 * @type {?function(!ProgressEvent): void}
 * @see https://xhr.spec.whatwg.org/#handler-xhr-onloadend
 */
XMLHttpRequest.prototype.onloadend;

/**
 * @type {XMLHttpRequestUpload}
 * @see http://dev.w3.org/2006/webapi/XMLHttpRequest-2/#the-upload-attribute
 */
XMLHttpRequest.prototype.upload;

/**
 * @param {string} mimeType The mime type to override with.
 * @return {undefined}
 */
XMLHttpRequest.prototype.overrideMimeType = function(mimeType) {};

/**
 * @type {string}
 * @see http://dev.w3.org/2006/webapi/XMLHttpRequest-2/#the-responsetype-attribute
 */
XMLHttpRequest.prototype.responseType;

/**
 * @type {?(ArrayBuffer|Blob|Document|Object|string)}
 * @see http://dev.w3.org/2006/webapi/XMLHttpRequest-2/#the-response-attribute
 */
XMLHttpRequest.prototype.response;


/**
 * @type {ArrayBuffer}
 * Implemented as a draft spec in Firefox 4 as the way to get a requested array
 * buffer from an XMLHttpRequest.
 * @see https://developer.mozilla.org/En/Using_XMLHttpRequest#Receiving_binary_data_using_JavaScript_typed_arrays
 *
 * This property is not used anymore and should be removed.
 * @see https://github.com/google/closure-compiler/pull/1389
 */
XMLHttpRequest.prototype.mozResponseArrayBuffer;

/**
 * XMLHttpRequestEventTarget defines events for checking the status of a data
 * transfer between a client and a server. This should be a common base class
 * for XMLHttpRequest and XMLHttpRequestUpload.
 *
 * @constructor
 * @implements {EventTarget}
 */
function XMLHttpRequestEventTarget() {}

/** @override */
XMLHttpRequestEventTarget.prototype.addEventListener = function(
    type, listener, opt_options) {};

/** @override */
XMLHttpRequestEventTarget.prototype.removeEventListener = function(
    type, listener, opt_options) {};

/** @override */
XMLHttpRequestEventTarget.prototype.dispatchEvent = function(evt) {};

/**
 * An event target to track the status of an upload.
 *
 * @constructor
 * @extends {XMLHttpRequestEventTarget}
 */
function XMLHttpRequestUpload() {}

/**
 * @type {?function(!ProgressEvent): void}
 * @see https://dvcs.w3.org/hg/xhr/raw-file/tip/Overview.html#handler-xhr-onprogress
 */
XMLHttpRequestUpload.prototype.onprogress;

/**
 * @param {number=} opt_width
 * @param {number=} opt_height
 * @constructor
 * @extends {HTMLImageElement}
 */
function Image(opt_width, opt_height) {}


/**
 * Dataset collection.
 * This is really a DOMStringMap but it behaves close enough to an object to
 * pass as an object.
 * @const {!Object<string, string>}
 */
HTMLElement.prototype.dataset;


/**
 * @constructor
 * @implements {IArrayLike<string>}
 * @see https://dom.spec.whatwg.org/#interface-domtokenlist
 */
function DOMTokenList() {}

/**
 * Returns the number of CSS classes applied to this Element.
 * @type {number}
 */
DOMTokenList.prototype.length;

/**
 * Returns the string value applied to this Element.
 * @type {string|undefined}
 */
DOMTokenList.prototype.value;

/**
 * @param {number} index The index of the item to return.
 * @return {string} The CSS class at the specified index.
 * @nosideeffects
 */
DOMTokenList.prototype.item = function(index) {};

/**
 * @param {string} token The CSS class to check for.
 * @return {boolean} Whether the CSS class has been applied to the Element.
 * @nosideeffects
 */
DOMTokenList.prototype.contains = function(token) {};

/**
 * @param {...string} var_args The CSS class(es) to add to this element.
 * @return {undefined}
 */
DOMTokenList.prototype.add = function(var_args) {};

/**
 * @param {...string} var_args The CSS class(es) to remove from this element.
 * @return {undefined}
 */
DOMTokenList.prototype.remove = function(var_args) {};

/**
 * Replaces token with newToken.
 * @param {string} token The CSS class to replace.
 * @param {string} newToken The new CSS class to use.
 * @return {undefined}
 */
DOMTokenList.prototype.replace = function(token, newToken) {};

/**
 * @param {string} token The token to query for.
 * @return {boolean} Whether the token was found.
 * @see https://developer.mozilla.org/en-US/docs/Web/API/DOMTokenList/supports
 * @nosideeffects
 */
DOMTokenList.prototype.supports = function(token) {};

/**
 * @param {string} token The CSS class to toggle from this element.
 * @param {boolean=} opt_force True to add the class whether it exists
 *     or not. False to remove the class whether it exists or not.
 *     This argument is not supported on IE 10 and below, according to
 *     the MDN page linked below.
 * @return {boolean} False if the token was removed; True otherwise.
 * @see https://developer.mozilla.org/en-US/docs/Web/API/Element.classList
 */
DOMTokenList.prototype.toggle = function(token, opt_force) {};

/**
 * @return {string} A stringified representation of CSS classes.
 * @nosideeffects
 * @override
 */
DOMTokenList.prototype.toString = function() {};

/**
 * @return {!IteratorIterable<string>} An iterator to go through all values of
 *     the key/value pairs contained in this object.
 * @nosideeffects
 * @see https://developer.mozilla.org/en-US/docs/Web/API/DOMTokenList/values
 */
DOMTokenList.prototype.values = function() {};

/**
 * A better interface to CSS classes than className.
 * @const {!DOMTokenList}
 * @see https://developer.mozilla.org/en-US/docs/Web/API/Element/classList
 */
Element.prototype.classList;

/**
 * Requests to submit the form.
 * @param {?HTMLElement=} submitter Submit button, whose attributes can impact
 *     submission.
 * @see https://html.spec.whatwg.org/multipage/forms.html#dom-form-requestsubmit-dev
 */
HTMLFormElement.prototype.requestSubmit = function(submitter) {};

/**
 * Constraint Validation API properties and methods
 * @see http://www.w3.org/TR/2009/WD-html5-20090423/forms.html#the-constraint-validation-api
 */

/** @return {boolean} */
HTMLFormElement.prototype.checkValidity = function() {};

/** @return {boolean} */
HTMLFormElement.prototype.reportValidity = function() {};

/** @type {boolean} */
HTMLFormElement.prototype.noValidate;

/** @constructor */
function ValidityState() {}

/** @type {boolean} */
ValidityState.prototype.badInput;

/** @type {boolean} */
ValidityState.prototype.customError;

/** @type {boolean} */
ValidityState.prototype.patternMismatch;

/** @type {boolean} */
ValidityState.prototype.rangeOverflow;

/** @type {boolean} */
ValidityState.prototype.rangeUnderflow;

/** @type {boolean} */
ValidityState.prototype.stepMismatch;

/** @type {boolean} */
ValidityState.prototype.typeMismatch;

/** @type {boolean} */
ValidityState.prototype.tooLong;

/** @type {boolean} */
ValidityState.prototype.tooShort;

/** @type {boolean} */
ValidityState.prototype.valid;

/** @type {boolean} */
ValidityState.prototype.valueMissing;


/** @type {boolean} */
HTMLButtonElement.prototype.autofocus;

/**
 * Can return null when hidden.
 * See https://html.spec.whatwg.org/multipage/forms.html#dom-lfe-labels
 * @const {?NodeList<!HTMLLabelElement>}
 */
HTMLButtonElement.prototype.labels;

/** @type {string} */
HTMLButtonElement.prototype.validationMessage;

/**
 * @const {ValidityState}
 */
HTMLButtonElement.prototype.validity;

/** @type {boolean} */
HTMLButtonElement.prototype.willValidate;

/** @return {boolean} */
HTMLButtonElement.prototype.checkValidity = function() {};

/** @return {boolean} */
HTMLButtonElement.prototype.reportValidity = function() {};

/**
 * @param {string} message
 * @return {undefined}
 */
HTMLButtonElement.prototype.setCustomValidity = function(message) {};

/**
 * @type {string}
 * @implicitCast
 * @see http://www.w3.org/TR/html5/forms.html#attr-fs-formaction
 */
HTMLButtonElement.prototype.formAction;

/**
 * @type {string}
 * @see http://www.w3.org/TR/html5/forms.html#attr-fs-formenctype
 */
HTMLButtonElement.prototype.formEnctype;

/**
 * @type {string}
 * @see http://www.w3.org/TR/html5/forms.html#attr-fs-formmethod
 */
HTMLButtonElement.prototype.formMethod;

/**
 * @type {string}
 * @see http://www.w3.org/TR/html5/forms.html#attr-fs-formtarget
 */
HTMLButtonElement.prototype.formTarget;

/** @type {boolean} */
HTMLInputElement.prototype.autofocus;

/** @type {boolean} */
HTMLInputElement.prototype.formNoValidate;

/**
 * @type {string}
 * @implicitCast
 * @see http://www.w3.org/TR/html5/forms.html#attr-fs-formaction
 */
HTMLInputElement.prototype.formAction;

/**
 * @type {string}
 * @see http://www.w3.org/TR/html5/forms.html#attr-fs-formenctype
 */
HTMLInputElement.prototype.formEnctype;

/**
 * @type {string}
 * @see http://www.w3.org/TR/html5/forms.html#attr-fs-formmethod
 */
HTMLInputElement.prototype.formMethod;

/**
 * @type {string}
 * @see http://www.w3.org/TR/html5/forms.html#attr-fs-formtarget
 */
HTMLInputElement.prototype.formTarget;

/**
 * Can return null when hidden.
 * See https://html.spec.whatwg.org/multipage/forms.html#dom-lfe-labels
 * @const {?NodeList<!HTMLLabelElement>}
 */
HTMLInputElement.prototype.labels;

/** @type {string} */
HTMLInputElement.prototype.validationMessage;

/**
 * @type {number}
 * @implicitCast
 */
HTMLInputElement.prototype.selectionStart;

/**
 * @type {number}
 * @implicitCast
 */
HTMLInputElement.prototype.selectionEnd;

/** @type {string} */
HTMLInputElement.prototype.selectionDirection;

/**
 * @param {number} start
 * @param {number} end
 * @param {string=} direction
 * @see https://html.spec.whatwg.org/#dom-textarea/input-setselectionrange
 * @return {undefined}
 */
HTMLInputElement.prototype.setSelectionRange = function(start, end, direction) {};

/**
 * @param {string} replacement
 * @param {number=} start
 * @param {number=} end
 * @param {string=} selectionMode
 * @see https://html.spec.whatwg.org/#dom-textarea/input-setrangetext
 * @return {undefined}
 */
HTMLInputElement.prototype.setRangeText =
    function(replacement, start, end, selectionMode) {};

/**
 * @const {ValidityState}
 */
HTMLInputElement.prototype.validity;

/** @type {boolean} */
HTMLInputElement.prototype.willValidate;

/** @return {boolean} */
HTMLInputElement.prototype.checkValidity = function() {};

/** @return {boolean} */
HTMLInputElement.prototype.reportValidity = function() {};

/**
 * @param {string} message
 * @return {undefined}
 */
HTMLInputElement.prototype.setCustomValidity = function(message) {};

/** @type {Element} */
HTMLLabelElement.prototype.control;

/** @type {boolean} */
HTMLSelectElement.prototype.autofocus;

/**
 * Can return null when hidden.
 * See https://html.spec.whatwg.org/multipage/forms.html#dom-lfe-labels
 * @const {?NodeList<!HTMLLabelElement>}
 */
HTMLSelectElement.prototype.labels;

/** @type {boolean} */
HTMLSelectElement.prototype.required;

/** @type {HTMLCollection<!HTMLOptionElement>} */
HTMLSelectElement.prototype.selectedOptions;

/** @type {string} */
HTMLSelectElement.prototype.validationMessage;

/**
 * @const {ValidityState}
 */
HTMLSelectElement.prototype.validity;

/** @type {boolean} */
HTMLSelectElement.prototype.willValidate;

/** @return {boolean} */
HTMLSelectElement.prototype.checkValidity = function() {};

/** @return {boolean} */
HTMLSelectElement.prototype.reportValidity = function() {};

/**
 * @param {string} message
 * @return {undefined}
 */
HTMLSelectElement.prototype.setCustomValidity = function(message) {};

/** @type {boolean} */
HTMLTextAreaElement.prototype.autofocus;

/**
 * Can return null when hidden.
 * See https://html.spec.whatwg.org/multipage/forms.html#dom-lfe-labels
 * @const {?NodeList<!HTMLLabelElement>}
 */
HTMLTextAreaElement.prototype.labels;

/** @type {number} */
HTMLTextAreaElement.prototype.maxLength;

/** @type {number} */
HTMLTextAreaElement.prototype.minLength;

/** @type {string} */
HTMLTextAreaElement.prototype.placeholder;

/** @type {number} */
HTMLTextAreaElement.prototype.textLength;

/** @type {string} */
HTMLTextAreaElement.prototype.validationMessage;

/**
 * @const {ValidityState}
 */
HTMLTextAreaElement.prototype.validity;

/** @type {boolean} */
HTMLTextAreaElement.prototype.willValidate;

/** @return {boolean} */
HTMLTextAreaElement.prototype.checkValidity = function() {};

/** @return {boolean} */
HTMLTextAreaElement.prototype.reportValidity = function() {};

/**
 * @param {string} message
 * @return {undefined}
 */
HTMLTextAreaElement.prototype.setCustomValidity = function(message) {};

/**
 * @constructor
 * @extends {HTMLElement}
 * @see http://www.w3.org/TR/html5/the-embed-element.html#htmlembedelement
 */
function HTMLEmbedElement() {}

/**
 * @type {string}
 * @see http://www.w3.org/TR/html5/dimension-attributes.html#dom-dim-width
 */
HTMLEmbedElement.prototype.width;

/**
 * @type {string}
 * @see http://www.w3.org/TR/html5/dimension-attributes.html#dom-dim-height
 */
HTMLEmbedElement.prototype.height;

/**
 * @type {string}
 * @implicitCast
 * @see http://www.w3.org/TR/html5/the-embed-element.html#dom-embed-src
 */
HTMLEmbedElement.prototype.src;

/**
 * @type {string}
 * @see http://www.w3.org/TR/html5/the-embed-element.html#dom-embed-type
 */
HTMLEmbedElement.prototype.type;

// Fullscreen APIs.

/**
 * @record
 * @see https://fullscreen.spec.whatwg.org/#dictdef-fullscreenoptions
 */
function FullscreenOptions() {}

/** @type {string} */
FullscreenOptions.prototype.navigationUI;

/**
 * @see https://fullscreen.spec.whatwg.org/#dom-element-requestfullscreen
 * @param {!FullscreenOptions=} options
 * @return {!Promise<undefined>}
 */
Element.prototype.requestFullscreen = function(options) {};

/**
 * @type {boolean}
 * @see http://www.w3.org/TR/2012/WD-fullscreen-20120703/#dom-document-fullscreenenabled
 */
Document.prototype.fullscreenEnabled;

/**
 * @type {Element}
 * @see http://www.w3.org/TR/2012/WD-fullscreen-20120703/#dom-document-fullscreenelement
 */
Document.prototype.fullscreenElement;

/**
 * @see http://www.w3.org/TR/2012/WD-fullscreen-20120703/#dom-document-exitfullscreen
 * @return {undefined}
 */
Document.prototype.exitFullscreen = function() {};

// Externs definitions of browser current implementations.
// Firefox 10 implementation.
Element.prototype.mozRequestFullScreen = function() {};

Element.prototype.mozRequestFullScreenWithKeys = function() {};

/** @type {boolean} */
Document.prototype.mozFullScreen;

Document.prototype.mozCancelFullScreen = function() {};

/** @type {Element} */
Document.prototype.mozFullScreenElement;

/** @type {boolean} */
Document.prototype.mozFullScreenEnabled;

// Chrome 21 implementation.
/**
 * The current fullscreen element for the document is set to this element.
 * Valid only for Webkit browsers.
 * @param {number=} opt_allowKeyboardInput Whether keyboard input is desired.
 *     Should use ALLOW_KEYBOARD_INPUT constant.
 * @return {undefined}
 */
Element.prototype.webkitRequestFullScreen = function(opt_allowKeyboardInput) {};

/**
 * The current fullscreen element for the document is set to this element.
 * Valid only for Webkit browsers.
 * @param {number=} opt_allowKeyboardInput Whether keyboard input is desired.
 *     Should use ALLOW_KEYBOARD_INPUT constant.
 * @return {undefined}
 */
Element.prototype.webkitRequestFullscreen = function(opt_allowKeyboardInput) {};

/** @type {boolean} */
Document.prototype.webkitIsFullScreen;

Document.prototype.webkitCancelFullScreen = function() {};

/** @type {boolean} */
Document.prototype.webkitFullscreenEnabled;

/** @type {Element} */
Document.prototype.webkitCurrentFullScreenElement;

/** @type {Element} */
Document.prototype.webkitFullscreenElement;

/** @type {boolean} */
Document.prototype.webkitFullScreenKeyboardInputAllowed;

// IE 11 implementation.
// http://msdn.microsoft.com/en-us/library/ie/dn265028(v=vs.85).aspx
/** @return {void} */
Element.prototype.msRequestFullscreen = function() {};

/** @return {void} */
Document.prototype.msExitFullscreen = function() {};

/** @type {boolean} */
Document.prototype.msFullscreenEnabled;

/** @type {Element} */
Document.prototype.msFullscreenElement;

/** @const {number} */
Element.ALLOW_KEYBOARD_INPUT;

/** @const {number} */
Element.prototype.ALLOW_KEYBOARD_INPUT;


/**
 * @typedef {{
 *   childList: (boolean|undefined),
 *   attributes: (boolean|undefined),
 *   characterData: (boolean|undefined),
 *   subtree: (boolean|undefined),
 *   attributeOldValue: (boolean|undefined),
 *   characterDataOldValue: (boolean|undefined),
 *   attributeFilter: (!Array<string>|undefined)
 * }}
 */
var MutationObserverInit;


/** @constructor */
function MutationRecord() {}

/** @type {string} */
MutationRecord.prototype.type;

/** @type {Node} */
MutationRecord.prototype.target;

/** @type {!NodeList<!Node>} */
MutationRecord.prototype.addedNodes;

/** @type {!NodeList<!Node>} */
MutationRecord.prototype.removedNodes;

/** @type {?Node} */
MutationRecord.prototype.previousSibling;

/** @type {?Node} */
MutationRecord.prototype.nextSibling;

/** @type {?string} */
MutationRecord.prototype.attributeName;

/** @type {?string} */
MutationRecord.prototype.attributeNamespace;

/** @type {?string} */
MutationRecord.prototype.oldValue;


/**
 * @see http://www.w3.org/TR/domcore/#mutation-observers
 * @param {function(!Array<!MutationRecord>, !MutationObserver)} callback
 * @constructor
 */
function MutationObserver(callback) {}

/**
 * @param {Node} target
 * @param {MutationObserverInit=} options
 * @return {undefined}
 */
MutationObserver.prototype.observe = function(target, options) {};

MutationObserver.prototype.disconnect = function() {};

/**
 * @return {!Array<!MutationRecord>}
 */
MutationObserver.prototype.takeRecords = function() {};

/**
 * @type {function(new:MutationObserver, function(Array<MutationRecord>))}
 */
Window.prototype.WebKitMutationObserver;

/**
 * @type {function(new:MutationObserver, function(Array<MutationRecord>))}
 */
Window.prototype.MozMutationObserver;


/**
 * @see http://www.w3.org/TR/page-visibility/
 * @type {VisibilityState}
 */
Document.prototype.visibilityState;

/**
 * @type {string}
 */
Document.prototype.mozVisibilityState;

/**
 * @type {string}
 */
Document.prototype.webkitVisibilityState;

/**
 * @type {string}
 */
Document.prototype.msVisibilityState;

/**
 * @see http://www.w3.org/TR/page-visibility/
 * @type {boolean}
 */
Document.prototype.hidden;

/**
 * @type {boolean}
 */
Document.prototype.mozHidden;

/**
 * @type {boolean}
 */
Document.prototype.webkitHidden;

/**
 * @type {boolean}
 */
Document.prototype.msHidden;

/**
 * @see http://www.w3.org/TR/components-intro/
 * @see http://w3c.github.io/webcomponents/spec/custom/#extensions-to-document-interface-to-register
 * @param {string} type
 * @param {{extends: (string|undefined), prototype: (Object|undefined)}=}
 *     options
 * @return {function(new:Element, ...*)} a constructor for the new tag.
 * @deprecated document.registerElement() is deprecated in favor of
 *     customElements.define()
 */
Document.prototype.registerElement = function(type, options) {};

/**
 * @see http://www.w3.org/TR/components-intro/
 * @see http://w3c.github.io/webcomponents/spec/custom/#extensions-to-document-interface-to-register
 * @param {string} type
 * @param {{extends: (string|undefined), prototype: (Object|undefined)}} options
 * @deprecated This method has been removed and will be removed soon from this file.
 */
Document.prototype.register = function(type, options) {};

/**
 * @type {!FontFaceSet}
 * @see http://dev.w3.org/csswg/css-font-loading/#dom-fontfacesource-fonts
 */
Document.prototype.fonts;


/**
 * @type {?HTMLScriptElement}
 * @see https://developer.mozilla.org/en-US/docs/Web/API/Document/currentScript
 */
Document.prototype.currentScript;

/**
 * Definition of ShadowRoot interface,
 * @see http://www.w3.org/TR/shadow-dom/#api-shadow-root
 * @constructor
 * @extends {DocumentFragment}
 */
function ShadowRoot() {}

/**
 * The host element that a ShadowRoot is attached to.
 * Note: this is not yet W3C standard but is undergoing development.
 * W3C feature tracking bug:
 * https://www.w3.org/Bugs/Public/show_bug.cgi?id=22399
 * Draft specification:
 * https://dvcs.w3.org/hg/webcomponents/raw-file/6743f1ace623/spec/shadow/index.html#shadow-root-object
 * @type {!Element}
 */
ShadowRoot.prototype.host;

/**
 * @param {string} id id.
 * @return {HTMLElement}
 * @nosideeffects
 */
ShadowRoot.prototype.getElementById = function(id) {};


/**
 * @return {Selection}
 * @nosideeffects
 */
ShadowRoot.prototype.getSelection = function() {};


/**
 * @param {number} x
 * @param {number} y
 * @return {Element}
 * @nosideeffects
 */
ShadowRoot.prototype.elementFromPoint = function(x, y) {};


/**
 * @param {number} x
 * @param {number} y
 * @return {!IArrayLike<!Element>}
 * @nosideeffects
 */
ShadowRoot.prototype.elementsFromPoint = function(x, y) {};


/**
 * @type {?Element}
 */
ShadowRoot.prototype.activeElement;


/**
 * @type {!ShadowRootMode}
 */
ShadowRoot.prototype.mode;


/**
 * @type {?ShadowRoot}
 * @deprecated
 */
ShadowRoot.prototype.olderShadowRoot;


/**
 * @type {string}
 * @implicitCast
 */
ShadowRoot.prototype.innerHTML;


/**
 * @type {!StyleSheetList}
 */
ShadowRoot.prototype.styleSheets;


/**
 * @typedef {string}
 * @see https://dom.spec.whatwg.org/#enumdef-shadowrootmode
 */
var ShadowRootMode;


/**
 * @typedef {string}
 * @see https://dom.spec.whatwg.org/#enumdef-slotassignmentmode
 */
var SlotAssignmentMode;


/**
 * @record
 * @see https://dom.spec.whatwg.org/#dictdef-shadowrootinit
 */
function ShadowRootInit() {}

/** @type {!ShadowRootMode} */
ShadowRootInit.prototype.mode;

/** @type {(undefined|boolean)} */
ShadowRootInit.prototype.delegatesFocus;

/** @type {(undefined|SlotAssignmentMode)} */
ShadowRootInit.prototype.slotAssignment;


/**
 * @see http://www.w3.org/TR/shadow-dom/#the-content-element
 * @constructor
 * @extends {HTMLElement}
 */
function HTMLContentElement() {}

/**
 * @type {string}
 */
HTMLContentElement.prototype.select;

/**
 * @return {!NodeList<!Node>}
 */
HTMLContentElement.prototype.getDistributedNodes = function() {};


/**
 * @see http://www.w3.org/TR/shadow-dom/#the-shadow-element
 * @constructor
 * @extends {HTMLElement}
 */
function HTMLShadowElement() {}

/**
 * @return {!NodeList<!Node>}
 */
HTMLShadowElement.prototype.getDistributedNodes = function() {};


/**
 * @see http://www.w3.org/TR/html5/webappapis.html#the-errorevent-interface
 *
 * @constructor
 * @extends {Event}
 *
 * @param {string} type
 * @param {ErrorEventInit=} opt_eventInitDict
 */
function ErrorEvent(type, opt_eventInitDict) {}

/** @const {string} */
ErrorEvent.prototype.message;

/** @const {string} */
ErrorEvent.prototype.filename;

/** @const {number} */
ErrorEvent.prototype.lineno;

/** @const {number} */
ErrorEvent.prototype.colno;

/** @const {*} */
ErrorEvent.prototype.error;


/**
 * @record
 * @extends {EventInit}
 * @see https://www.w3.org/TR/html5/webappapis.html#erroreventinit
 */
function ErrorEventInit() {}

/** @type {undefined|string} */
ErrorEventInit.prototype.message;

/** @type {undefined|string} */
ErrorEventInit.prototype.filename;

/** @type {undefined|number} */
ErrorEventInit.prototype.lineno;

/** @type {undefined|number} */
ErrorEventInit.prototype.colno;

/** @type {*} */
ErrorEventInit.prototype.error;


/**
 * @see http://dom.spec.whatwg.org/#dom-domimplementation-createhtmldocument
 * @param {string=} opt_title A title to give the new HTML document
 * @return {!HTMLDocument}
 */
DOMImplementation.prototype.createHTMLDocument = function(opt_title) {};



/**
 * @constructor
 * @see https://html.spec.whatwg.org/multipage/embedded-content.html#the-picture-element
 * @extends {HTMLElement}
 */
function HTMLPictureElement() {}

/**
 * @constructor
 * @see https://html.spec.whatwg.org/multipage/embedded-content.html#the-picture-element
 * @extends {HTMLElement}
 */
function HTMLSourceElement() {}

/** @type {string} */
HTMLSourceElement.prototype.media;

/** @type {string} */
HTMLSourceElement.prototype.sizes;

/** @type {string} @implicitCast */
HTMLSourceElement.prototype.src;

/** @type {string} */
HTMLSourceElement.prototype.srcset;

/** @type {string} */
HTMLSourceElement.prototype.type;

/** @type {string} */
HTMLImageElement.prototype.sizes;

/** @type {string} */
HTMLImageElement.prototype.srcset;


/**
 * 4.11 Interactive elements
 * @see http://www.w3.org/html/wg/drafts/html/master/interactive-elements.html
 */

/**
 * @see http://www.w3.org/html/wg/drafts/html/master/interactive-elements.html#the-details-element
 * @constructor
 * @extends {HTMLElement}
 */
function HTMLDetailsElement() {}

/**
 * @see http://www.w3.org/html/wg/drafts/html/master/interactive-elements.html#dom-details-open
 * @type {boolean}
 */
HTMLDetailsElement.prototype.open;


// As of 2/20/2015, <summary> has no special web IDL interface nor global
// constructor (i.e. HTMLSummaryElement).


/**
 * @see http://www.w3.org/html/wg/drafts/html/master/interactive-elements.html#dom-menu-type
 * @type {string}
 */
HTMLMenuElement.prototype.type;

/**
 * @see http://www.w3.org/html/wg/drafts/html/master/interactive-elements.html#dom-menu-label
 * @type {string}
 */
HTMLMenuElement.prototype.label;


/**
 * @see http://www.w3.org/html/wg/drafts/html/master/interactive-elements.html#the-menuitem-element
 * @constructor
 * @extends {HTMLElement}
 */
function HTMLMenuItemElement() {}

/**
 * @see http://www.w3.org/html/wg/drafts/html/master/interactive-elements.html#dom-menuitem-type
 * @type {string}
 */
HTMLMenuItemElement.prototype.type;

/**
 * @see http://www.w3.org/html/wg/drafts/html/master/interactive-elements.html#dom-menuitem-label
 * @type {string}
 */
HTMLMenuItemElement.prototype.label;

/**
 * @see http://www.w3.org/html/wg/drafts/html/master/interactive-elements.html#dom-menuitem-icon
 * @type {string}
 */
HTMLMenuItemElement.prototype.icon;

/**
 * @see http://www.w3.org/html/wg/drafts/html/master/interactive-elements.html#dom-menuitem-disabled
 * @type {boolean}
 */
HTMLMenuItemElement.prototype.disabled;

/**
 * @see http://www.w3.org/html/wg/drafts/html/master/interactive-elements.html#dom-menuitem-checked
 * @type {boolean}
 */
HTMLMenuItemElement.prototype.checked;

/**
 * @see http://www.w3.org/html/wg/drafts/html/master/interactive-elements.html#dom-menuitem-radiogroup
 * @type {string}
 */
HTMLMenuItemElement.prototype.radiogroup;

/**
 * @see http://www.w3.org/html/wg/drafts/html/master/interactive-elements.html#dom-menuitem-default
 * @type {boolean}
 */
HTMLMenuItemElement.prototype.default;

// TODO(dbeam): add HTMLMenuItemElement.prototype.command if it's implemented.


/**
 * @see http://www.w3.org/html/wg/drafts/html/master/interactive-elements.html#relatedevent
 * @param {string} type
 * @param {{relatedTarget: (EventTarget|undefined)}=} opt_eventInitDict
 * @constructor
 * @extends {Event}
 */
function RelatedEvent(type, opt_eventInitDict) {}

/**
 * @see http://www.w3.org/html/wg/drafts/html/master/interactive-elements.html#dom-relatedevent-relatedtarget
 * @type {EventTarget|undefined}
 */
RelatedEvent.prototype.relatedTarget;


/**
 * @see http://www.w3.org/html/wg/drafts/html/master/interactive-elements.html#the-dialog-element
 * @constructor
 * @extends {HTMLElement}
 */
function HTMLDialogElement() {}

/**
 * @see http://www.w3.org/html/wg/drafts/html/master/interactive-elements.html#dom-dialog-open
 * @type {boolean}
 */
HTMLDialogElement.prototype.open;

/**
 * @see http://www.w3.org/html/wg/drafts/html/master/interactive-elements.html#dom-dialog-returnvalue
 * @type {string}
 */
HTMLDialogElement.prototype.returnValue;

/**
 * @see http://www.w3.org/html/wg/drafts/html/master/interactive-elements.html#dom-dialog-show
 * @param {(MouseEvent|Element)=} opt_anchor
 * @return {undefined}
 */
HTMLDialogElement.prototype.show = function(opt_anchor) {};

/**
 * @see http://www.w3.org/html/wg/drafts/html/master/interactive-elements.html#dom-dialog-showmodal
 * @param {(MouseEvent|Element)=} opt_anchor
 * @return {undefined}
 */
HTMLDialogElement.prototype.showModal = function(opt_anchor) {};

/**
 * @see http://www.w3.org/html/wg/drafts/html/master/interactive-elements.html#dom-dialog-close
 * @param {string=} opt_returnValue
 * @return {undefined}
 */
HTMLDialogElement.prototype.close = function(opt_returnValue) {};


/**
 * @see https://html.spec.whatwg.org/multipage/scripting.html#the-template-element
 * @constructor
 * @extends {HTMLElement}
 */
function HTMLTemplateElement() {}

/**
 * @see https://html.spec.whatwg.org/multipage/scripting.html#the-template-element
 * @type {!DocumentFragment}
 */
HTMLTemplateElement.prototype.content;


/**
 * @type {?Document}
 * @see w3c_dom2.js
 * @see http://www.w3.org/TR/html-imports/#interface-import
 */
HTMLLinkElement.prototype.import;

/**
 * @type {string}
 * @see https://html.spec.whatwg.org/#attr-link-as
 * @see https://w3c.github.io/preload/#as-attribute
 */
HTMLLinkElement.prototype.as;

/**
 * @see https://html.spec.whatwg.org/#attr-link-crossorigin
 * @type {string}
 */
HTMLLinkElement.prototype.crossOrigin;


/**
 * @return {boolean}
 * @see https://www.w3.org/TR/html5/forms.html#dom-fieldset-elements
 */
HTMLFieldSetElement.prototype.checkValidity = function() {};

/**
 * @type {HTMLCollection}
 * @see https://www.w3.org/TR/html5/forms.html#dom-fieldset-elements
 */
HTMLFieldSetElement.prototype.elements;

/**
 * @type {string}
 * @see https://www.w3.org/TR/html5/forms.html#the-fieldset-element
 */
HTMLFieldSetElement.prototype.name;

/**
 * @param {string} message
 * @see https://www.w3.org/TR/html5/forms.html#dom-fieldset-elements
 * @return {undefined}
 */
HTMLFieldSetElement.prototype.setCustomValidity = function(message) {};

/**
 * @type {string}
 * @see https://www.w3.org/TR/html5/forms.html#dom-fieldset-type
 */
HTMLFieldSetElement.prototype.type;

/**
 * @type {string}
 * @see https://www.w3.org/TR/html5/forms.html#the-fieldset-element
 */
HTMLFieldSetElement.prototype.validationMessage;

/**
 * @type {ValidityState}
 * @see https://www.w3.org/TR/html5/forms.html#the-fieldset-element
 */
HTMLFieldSetElement.prototype.validity;

/**
 * @type {boolean}
 * @see https://www.w3.org/TR/html5/forms.html#the-fieldset-element
 */
HTMLFieldSetElement.prototype.willValidate;

/**
 * @constructor
 * @extends {NodeList<T>}
 * @template T
 * @see https://html.spec.whatwg.org/multipage/infrastructure.html#radionodelist
 */
function RadioNodeList() {}

/**
 * @type {string}
 * @see https://html.spec.whatwg.org/multipage/infrastructure.html#radionodelist
 */
RadioNodeList.prototype.value;


/**
 * @see https://html.spec.whatwg.org/multipage/forms.html#the-datalist-element
 * @constructor
 * @extends {HTMLElement}
 */
function HTMLDataListElement() {}


/** @type {HTMLCollection<!HTMLOptionElement>} */
HTMLDataListElement.prototype.options;


/**
 * @return {boolean}
 * @see https://html.spec.whatwg.org/multipage/iframe-embed-object.html#the-object-element
 */
HTMLObjectElement.prototype.checkValidity;

/**
 * @param {string} message
 * @see https://html.spec.whatwg.org/multipage/iframe-embed-object.html#the-object-element
 * @return {undefined}
 */
HTMLObjectElement.prototype.setCustomValidity;

/**
 * @type {string}
 * @see https://html.spec.whatwg.org/multipage/iframe-embed-object.html#the-object-element
 */
HTMLObjectElement.prototype.validationMessage;

/**
 * @type {!ValidityState}
 * @see https://html.spec.whatwg.org/multipage/iframe-embed-object.html#the-object-element
 */
HTMLObjectElement.prototype.validity;

/**
 * @type {boolean}
 * @see https://html.spec.whatwg.org/multipage/iframe-embed-object.html#the-object-element
 */
HTMLObjectElement.prototype.willValidate;


/**
 * @see https://html.spec.whatwg.org/multipage/forms.html#the-output-element
 * @constructor
 * @extends {HTMLElement}
 */
function HTMLOutputElement() {}

/**
 * @const {!DOMTokenList}
 */
HTMLOutputElement.prototype.htmlFor;

/**
 * @type {HTMLFormElement}
 */
HTMLOutputElement.prototype.form;

/**
 * @type {string}
 */
HTMLOutputElement.prototype.name;

/**
 * @const {string}
 */
HTMLOutputElement.prototype.type;

/**
 * @type {string}
 */
HTMLOutputElement.prototype.defaultValue;

/**
 * @type {string}
 */
HTMLOutputElement.prototype.value;

/**
 * @const {?NodeList<!HTMLLabelElement>}
 */
HTMLOutputElement.prototype.labels;

/** @type {string} */
HTMLOutputElement.prototype.validationMessage;

/**
 * @const {ValidityState}
 */
HTMLOutputElement.prototype.validity;

/** @type {boolean} */
HTMLOutputElement.prototype.willValidate;

/** @return {boolean} */
HTMLOutputElement.prototype.checkValidity = function() {};

/** @return {boolean} */
HTMLOutputElement.prototype.reportValidity = function() {};

/** @param {string} message */
HTMLOutputElement.prototype.setCustomValidity = function(message) {};



/**
 * @see https://html.spec.whatwg.org/multipage/forms.html#the-progress-element
 * @constructor
 * @extends {HTMLElement}
 */
function HTMLProgressElement() {}


/** @type {number} */
HTMLProgressElement.prototype.value;


/** @type {number} */
HTMLProgressElement.prototype.max;


/** @type {number} */
HTMLProgressElement.prototype.position;


/** @type {?NodeList<!Node>} */
HTMLProgressElement.prototype.labels;



/**
 * @see https://html.spec.whatwg.org/multipage/embedded-content.html#the-track-element
 * @constructor
 * @extends {HTMLElement}
 */
function HTMLTrackElement() {}


/** @type {string} */
HTMLTrackElement.prototype.kind;


/** @type {string} @implicitCast */
HTMLTrackElement.prototype.src;


/** @type {string} */
HTMLTrackElement.prototype.srclang;


/** @type {string} */
HTMLTrackElement.prototype.label;


/** @type {boolean} */
HTMLTrackElement.prototype.default;


/** @const {number} */
HTMLTrackElement.prototype.readyState;


/** @const {!TextTrack} */
HTMLTrackElement.prototype.track;



/**
 * @see https://html.spec.whatwg.org/multipage/forms.html#the-meter-element
 * @constructor
 * @extends {HTMLElement}
 */
function HTMLMeterElement() {}


/** @type {number} */
HTMLMeterElement.prototype.value;


/** @type {number} */
HTMLMeterElement.prototype.min;


/** @type {number} */
HTMLMeterElement.prototype.max;


/** @type {number} */
HTMLMeterElement.prototype.low;


/** @type {number} */
HTMLMeterElement.prototype.high;


/** @type {number} */
HTMLMeterElement.prototype.optimum;


/** @type {?NodeList<!Node>} */
HTMLMeterElement.prototype.labels;


/**
 * @interface
 * @see https://storage.spec.whatwg.org/#api
 */
function NavigatorStorage() {};

/**
 * @type {!StorageManager}
 */
NavigatorStorage.prototype.storage;

/**
 * @constructor
 * @implements NavigatorStorage
 * @see https://www.w3.org/TR/html5/webappapis.html#navigator
 */
function Navigator() {}

/**
 * @type {string}
 * @see https://www.w3.org/TR/html5/webappapis.html#dom-navigator-appcodename
 */
Navigator.prototype.appCodeName;

/**
 * @type {string}
 * @see https://www.w3.org/TR/html5/webappapis.html#dom-navigator-appname
 */
Navigator.prototype.appName;

/**
 * @type {string}
 * @see https://www.w3.org/TR/html5/webappapis.html#dom-navigator-appversion
 */
Navigator.prototype.appVersion;

/**
 * @type {string}
 * @see https://www.w3.org/TR/html5/webappapis.html#dom-navigator-platform
 */
Navigator.prototype.platform;

/**
 * @type {string}
 * @see https://www.w3.org/TR/html5/webappapis.html#dom-navigator-product
 */
Navigator.prototype.product;

/**
 * @type {string}
 * @see https://www.w3.org/TR/html5/webappapis.html#dom-navigator-useragent
 */
Navigator.prototype.userAgent;

/**
 * @return {boolean}
 * @see https://www.w3.org/TR/html5/webappapis.html#dom-navigator-taintenabled
 */
Navigator.prototype.taintEnabled = function() {};

/**
 * @type {string}
 * @see https://www.w3.org/TR/html5/webappapis.html#dom-navigator-language
 */
Navigator.prototype.language;

/**
 * @type {boolean}
 * @see https://www.w3.org/TR/html5/browsers.html#navigatoronline
 */
Navigator.prototype.onLine;

/**
 * @type {boolean}
 * @see https://www.w3.org/TR/html5/webappapis.html#dom-navigator-cookieenabled
 */
Navigator.prototype.cookieEnabled;

/**
 * @param {string} scheme
 * @param {string} url
 * @param {string} title
 * @return {undefined}
 */
Navigator.prototype.registerProtocolHandler = function(scheme, url, title) {}

/**
 * @param {string} mimeType
 * @param {string} url
 * @param {string} title
 * @return {undefined}
 */
Navigator.prototype.registerContentHandler = function(mimeType, url, title) {}

/**
 * @param {string} scheme
 * @param {string} url
 * @return {undefined}
 */
Navigator.prototype.unregisterProtocolHandler = function(scheme, url) {}

/**
 * @param {string} mimeType
 * @param {string} url
 * @return {undefined}
 */
Navigator.prototype.unregisterContentHandler = function(mimeType, url) {}

/**
 * @type {!MimeTypeArray}
 * @see https://www.w3.org/TR/html5/webappapis.html#dom-navigator-mimetypes
 */
Navigator.prototype.mimeTypes;

/**
 * @type {!PluginArray}
 * @see https://www.w3.org/TR/html5/webappapis.html#dom-navigator-plugins
 */
Navigator.prototype.plugins;

/**
 * @return {boolean}
 * @see https://www.w3.org/TR/html5/webappapis.html#dom-navigator-javaenabled
 * @nosideeffects
 */
Navigator.prototype.javaEnabled = function() {};

/**
 * @type {number}
 * @see https://developers.google.com/web/updates/2017/12/device-memory
 * https://github.com/w3c/device-memory
 */
Navigator.prototype.deviceMemory;

/**
 * @type {!StorageManager}
 * @see https://storage.spec.whatwg.org
 */
Navigator.prototype.storage;

/**
 * @param {!ShareData=} data
 * @return {boolean}
 * @see https://developer.mozilla.org/en-US/docs/Web/API/Navigator/canShare
 */
Navigator.prototype.canShare = function(data) {};

/**
 * @param {!ShareData=} data
 * @return {!Promise<undefined>}
 * @see https://wicg.github.io/web-share/#share-method
 */
Navigator.prototype.share = function(data) {};

/**
 * @type {number}
 * @see https://developer.mozilla.org/en-US/docs/Web/API/NavigatorConcurrentHardware/hardwareConcurrency
 */
Navigator.prototype.hardwareConcurrency;

/**
 * @constructor
 * @implements NavigatorStorage
 * @see https://html.spec.whatwg.org/multipage/workers.html#the-workernavigator-object
 */
function WorkerNavigator() {}

/**
 * @type {number}
 * @see https://developers.google.com/web/updates/2017/12/device-memory
 * https://github.com/w3c/device-memory
 */
WorkerNavigator.prototype.deviceMemory;

/**
 * @type {number}
 * @see https://developer.mozilla.org/en-US/docs/Web/API/NavigatorConcurrentHardware/hardwareConcurrency
 */
WorkerNavigator.prototype.hardwareConcurrency;

/**
 * @type {!StorageManager}
 * @see https://storage.spec.whatwg.org
 */
WorkerNavigator.prototype.storage;

/**
 * @record
 * @see https://wicg.github.io/web-share/#sharedata-dictionary
 */
function ShareData() {}

/** @type {string|undefined} */
ShareData.prototype.title;

/** @type {string|undefined} */
ShareData.prototype.text;

/** @type {string|undefined} */
ShareData.prototype.url;

/**
 * @constructor
 * @implements {IObject<(string|number),!Plugin>}
 * @implements {IArrayLike<!Plugin>}
 * @see https://www.w3.org/TR/html5/webappapis.html#pluginarray
 */
function PluginArray() {}

/** @type {number} */
PluginArray.prototype.length;

/**
 * @param {number} index
 * @return {Plugin}
 */
PluginArray.prototype.item = function(index) {};

/**
 * @param {string} name
 * @return {Plugin}
 */
PluginArray.prototype.namedItem = function(name) {};

/**
 * @param {boolean=} reloadDocuments
 * @return {undefined}
 */
PluginArray.prototype.refresh = function(reloadDocuments) {};

/**
 * @constructor
 * @implements {IObject<(string|number),!MimeType>}
 * @implements {IArrayLike<!MimeType>}
 * @see https://www.w3.org/TR/html5/webappapis.html#mimetypearray
 */
function MimeTypeArray() {}

/**
 * @param {number} index
 * @return {MimeType}
 */
MimeTypeArray.prototype.item = function(index) {};

/**
 * @type {number}
 * @see https://developer.mozilla.org/en/DOM/window.navigator.mimeTypes
 */
MimeTypeArray.prototype.length;

/**
 * @param {string} name
 * @return {MimeType}
 */
MimeTypeArray.prototype.namedItem = function(name) {};

/**
 * @constructor
 * @see https://www.w3.org/TR/html5/webappapis.html#mimetype
 */
function MimeType() {}

/** @type {string} */
MimeType.prototype.description;

/** @type {Plugin} */
MimeType.prototype.enabledPlugin;

/** @type {string} */
MimeType.prototype.suffixes;

/** @type {string} */
MimeType.prototype.type;

/**
 * @constructor
 * @see https://www.w3.org/TR/html5/webappapis.html#dom-plugin
 */
function Plugin() {}

/** @type {string} */
Plugin.prototype.description;

/** @type {string} */
Plugin.prototype.filename;

/** @type {number} */
Plugin.prototype.length;

/** @type {string} */
Plugin.prototype.name;

/**
 * @see https://html.spec.whatwg.org/multipage/custom-elements.html#customelementregistry
 * @constructor
 */
function CustomElementRegistry() {}

/**
 * @param {string} tagName
 * @param {function(new:HTMLElement)} klass
 * @param {{extends: string}=} options
 * @return {undefined}
 */
CustomElementRegistry.prototype.define = function (tagName, klass, options) {};

/**
 * @param {string} tagName
 * @return {function(new:HTMLElement)|undefined}
 */
CustomElementRegistry.prototype.get = function(tagName) {};

/**
 * @param {string} tagName
 * @return {!Promise<undefined>}
 */
CustomElementRegistry.prototype.whenDefined = function(tagName) {};

/**
 * @param {!Node} root
 * @return {undefined}
 */
CustomElementRegistry.prototype.upgrade = function(root) {};

/** @type {!CustomElementRegistry} */
var customElements;

/**
 * @constructor
 * @extends {HTMLElement}
 */
function HTMLSlotElement() {}

/** @typedef {{flatten: boolean}} */
var AssignedNodesOptions;

/**
 * @param {!AssignedNodesOptions=} options
 * @return {!Array<!Node>}
 */
HTMLSlotElement.prototype.assignedNodes = function(options) {};

/**
 * @param {!AssignedNodesOptions=} options
 * @return {!Array<!HTMLElement>}
 */
HTMLSlotElement.prototype.assignedElements = function(options) {};

/** @type {boolean} */
Event.prototype.composed;

/**
 * @return {!Array<!EventTarget>}
 * @see https://developer.mozilla.org/en-US/docs/Web/API/Event/composedPath
 */
Event.prototype.composedPath = function() {};

/**
 * @constructor
 * @param {{
 *     firesTouchEvents: (string|undefined),
 *     pointerMovementScrolls: (string|undefined)
 *   }=} opt_options
 */
function InputDeviceCapabilities(opt_options){}

/** @type {boolean} */
InputDeviceCapabilities.prototype.firesTouchEvents;

/** @type {boolean} */
InputDeviceCapabilities.prototype.pointerMovementScrolls;

/** @type {?InputDeviceCapabilities} */
UIEvent.prototype.sourceCapabilities;

/**
 * @see https://developer.mozilla.org/en-US/docs/Web/API/VisualViewport
 * @constructor
 * @implements {EventTarget}
 */
function VisualViewport() {}

/** @type {number} */
VisualViewport.prototype.offsetLeft;

/** @type {number} */
VisualViewport.prototype.offsetTop;

/** @type {number} */
VisualViewport.prototype.pageLeft;

/** @type {number} */
VisualViewport.prototype.pageTop;

/** @type {number} */
VisualViewport.prototype.width;

/** @type {number} */
VisualViewport.prototype.height;

/** @type {number} */
VisualViewport.prototype.scale;

/** @override */
VisualViewport.prototype.addEventListener = function(type, listener,
    opt_options) {};

/** @override */
VisualViewport.prototype.removeEventListener = function(type, listener,
    opt_options) {};

/** @override */
VisualViewport.prototype.dispatchEvent = function(evt) {};

/** @type {?function(!Event)} */
VisualViewport.prototype.onresize;

/** @type {?function(!Event)} */
VisualViewport.prototype.onscroll;

/**
 * @see https://storage.spec.whatwg.org/
 * @constructor
 */
function StorageManager() {}

/** @return {!Promise<boolean>} */
StorageManager.prototype.persisted = function() {};

/** @return {!Promise<boolean>} */
StorageManager.prototype.persist = function() {};

/** @return {!Promise<StorageEstimate>} */
StorageManager.prototype.estimate = function() {};

/**
 * @see https://storage.spec.whatwg.org/
 * @typedef {{
 *   usage: number,
 *   quota: number
 * }}
 */
var StorageEstimate;

/*
 * Focus Management APIs
 *
 * See https://html.spec.whatwg.org/multipage/interaction.html#focus-management-apis
 */


/**
 * @type {?Element}
 * @see https://html.spec.whatwg.org/multipage/interaction.html#dom-document-activeelement
 */
Document.prototype.activeElement;

/**
 * @see https://html.spec.whatwg.org/multipage/interaction.html#dom-document-hasfocus
 * @return {boolean}
 */
Document.prototype.hasFocus = function() {};

/**
 * @param {{preventScroll: boolean}=} options
 * @return {undefined}
 * @see https://html.spec.whatwg.org/multipage/interaction.html#dom-focus
 */
Element.prototype.focus = function(options) {};

/**
 * @return {undefined}
 * @see https://html.spec.whatwg.org/multipage/interaction.html#dom-blur
 */
Element.prototype.blur = function() {};

/**
 * @see https://www.w3.org/TR/CSP3/#securitypolicyviolationevent
 *
 * @constructor
 * @extends {Event}
 *
 * @param {string} type
 * @param {SecurityPolicyViolationEventInit=}
 *     opt_securityPolicyViolationEventInitDict
 */
function SecurityPolicyViolationEvent(
    type, opt_securityPolicyViolationEventInitDict) {}

/** @const {string} */
SecurityPolicyViolationEvent.prototype.documentURI;

/** @const {string} */
SecurityPolicyViolationEvent.prototype.referrer;

/** @const {string} */
SecurityPolicyViolationEvent.prototype.blockedURI;

/** @const {string} */
SecurityPolicyViolationEvent.prototype.effectiveDirective;

/** @const {string} */
SecurityPolicyViolationEvent.prototype.violatedDirective;

/** @const {string} */
SecurityPolicyViolationEvent.prototype.originalPolicy;

/** @const {string} */
SecurityPolicyViolationEvent.prototype.sourceFile;

/** @const {string} */
SecurityPolicyViolationEvent.prototype.sample;

/**
 * @see https://www.w3.org/TR/CSP3/#enumdef-securitypolicyviolationeventdisposition
 * @const {string}
 */
SecurityPolicyViolationEvent.prototype.disposition;

/** @const {number} */
SecurityPolicyViolationEvent.prototype.statusCode;

/** @const {number} */
SecurityPolicyViolationEvent.prototype.lineNumber;

/** @const {number} */
SecurityPolicyViolationEvent.prototype.columnNumber;



/**
 * @record
 * @extends {EventInit}
 * @see https://www.w3.org/TR/CSP3/#dictdef-securitypolicyviolationeventinit
 */
function SecurityPolicyViolationEventInit() {}

/** @type {string} */
SecurityPolicyViolationEventInit.prototype.documentURI;

/** @type {undefined|string} */
SecurityPolicyViolationEventInit.prototype.referrer;

/** @type {undefined|string} */
SecurityPolicyViolationEventInit.prototype.blockedURI;

/** @type {string} */
SecurityPolicyViolationEventInit.prototype.disposition;

/** @type {string} */
SecurityPolicyViolationEventInit.prototype.effectiveDirective;

/** @type {string} */
SecurityPolicyViolationEventInit.prototype.violatedDirective;

/** @type {string} */
SecurityPolicyViolationEventInit.prototype.originalPolicy;

/** @type {undefined|string} */
SecurityPolicyViolationEventInit.prototype.sourceFile;

/** @type {undefined|string} */
SecurityPolicyViolationEventInit.prototype.sample;

/** @type {number} */
SecurityPolicyViolationEventInit.prototype.statusCode;

/** @type {undefined|number} */
SecurityPolicyViolationEventInit.prototype.lineNumber;

/** @type {undefined|number} */
SecurityPolicyViolationEventInit.prototype.columnNumber;


/**
 * @see https://html.spec.whatwg.org/multipage/form-control-infrastructure.html#formdataevent
 *
 * @constructor
 * @extends {Event}
 *
 * @param {string} type
 * @param {FormDataEventInit=} eventInitDict
 */
function FormDataEvent(type, eventInitDict) {}

/** @const {!FormData} */
FormDataEvent.prototype.formData;

/**
 * @see https://html.spec.whatwg.org/multipage/form-control-infrastructure.html#formdataeventinit
 *
 * @record
 * @extends {EventInit}
 */
function FormDataEventInit() {}

/** @type {!FormData} */
FormDataEventInit.prototype.formData;

/**
 * @see https://html.spec.whatwg.org/multipage/indices.html#event-formdata
 * @type {?function(FormDataEvent)}
 */
HTMLFormElement.prototype.onformdata;

/**
 * @const {boolean}
 * Whether the document has opted in to cross-origin isolation.
 * @see https://html.spec.whatwg.org/multipage/webappapis.html#dom-crossoriginisolated
 */
Window.prototype.crossOriginIsolated;
/*
 * Copyright 2008 The Closure Compiler Authors
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/**
 * @fileoverview Definitions for IE's custom CSS properties, as defined here:
 * http://msdn.microsoft.com/en-us/library/aa768661(VS.85).aspx
 *
 * This page is also useful for the IDL definitions:
 * http://source.winehq.org/source/include/mshtml.idl
 *
 * @externs
 * @author nicksantos@google.com
 */

/** @type {Element} */
StyleSheet.prototype.owningElement;

/** @type {boolean} */
StyleSheet.prototype.readOnly;

/** @type {StyleSheetList} */
StyleSheet.prototype.imports;

/** @type {string} */
StyleSheet.prototype.id;

/**
 * @param {string} bstrURL
 * @param {number} lIndex
 * @return {number}
 */
StyleSheet.prototype.addImport;

/**
 * @param {string} bstrSelector
 * @param {string} bstrStyle
 * @param {number=} opt_iIndex
 * @return {number}
 * @see http://msdn.microsoft.com/en-us/library/aa358796%28v=vs.85%29.aspx
 */
StyleSheet.prototype.addRule;

/**
 * @param {number} lIndex
 */
StyleSheet.prototype.removeImport;

/**
 * @param {number} lIndex
 */
StyleSheet.prototype.removeRule;

/** @type {string} */
StyleSheet.prototype.cssText;

/** @type {CSSRuleList} */
StyleSheet.prototype.rules;

// StyleSheet methods

/**
 * @param {string} propName
 * @return {string}
 * @see http://msdn.microsoft.com/en-us/library/aa358797(VS.85).aspx
 */
StyleSheet.prototype.getExpression;

/**
 * @param {string} name
 * @param {string} expression
 * @return {undefined}
 * @see http://msdn.microsoft.com/en-us/library/ms531196(VS.85).aspx
 */
StyleSheet.prototype.setExpression;

/**
 * @param {string} expression
 * @return {undefined}
 * @see http://msdn.microsoft.com/en-us/library/aa358798(VS.85).aspx
 */
StyleSheet.prototype.removeExpression;

// IE-only CSS style names.

/** @type {string} */ CSSProperties.prototype.backgroundPositionX;

/** @type {string} */ CSSProperties.prototype.backgroundPositionY;

/**
 * @see http://msdn.microsoft.com/en-us/library/ie/ms531081(v=vs.85).aspx
 * NOTE: Left untyped to avoid conflict with caller.
 */
CSSProperties.prototype.behavior;

/**
 * @type {string}
 * @see http://msdn.microsoft.com/en-us/library/ms533883.aspx
 */
CSSProperties.prototype.imeMode;

/**
 * @type {string}
 * @see http://msdn.microsoft.com/en-us/library/ms534176(VS.85).aspx
 */
CSSProperties.prototype.msInterpolationMode;

/** @type {string} */ CSSProperties.prototype.overflowX;

/** @type {string} */ CSSProperties.prototype.overflowY;

/** @type {number} */ CSSProperties.prototype.pixelWidth;

/** @type {number} */ CSSProperties.prototype.pixelHeight;

/** @type {number} */ CSSProperties.prototype.pixelLeft;

/** @type {number} */ CSSProperties.prototype.pixelTop;

/** @type {string} */ CSSProperties.prototype.styleFloat;

/**
 * @type {string|number}
 * @see http://msdn.microsoft.com/en-us/library/ms535169(VS.85).aspx
 */
CSSProperties.prototype.zoom;

/**
 * @type {string}
 * @see http://msdn.microsoft.com/en-us/library/ms535153(VS.85).aspx
 */
CSSProperties.prototype.writingMode;

/**
 * IE-specific extensions.
 * @see http://blogs.msdn.com/b/ie/archive/2008/09/08/microsoft-css-vendor-extensions.aspx
 */

/** @type {string} */
CSSProperties.prototype.MsAccelerator;

/** @type {string} */
CSSProperties.prototype.MsBackgroundPositionX;

/** @type {string} */
CSSProperties.prototype.MsBackgroundPositionY;

/** @type {string} */
CSSProperties.prototype.MsBehavior;

/** @type {string} */
CSSProperties.prototype.MsBlockProgression;

/** @type {string} */
CSSProperties.prototype.MsFilter;

/** @type {string} */
CSSProperties.prototype.MsImeMode;

/** @type {string} */
CSSProperties.prototype.MsLayoutGrid;

/** @type {string} */
CSSProperties.prototype.MsLayoutGridChar;

/** @type {string} */
CSSProperties.prototype.MsLayoutGridLine;

/** @type {string} */
CSSProperties.prototype.MsLayoutGridMode;

/** @type {string} */
CSSProperties.prototype.MsLayoutGridType;

/** @type {string} */
CSSProperties.prototype.MsLineBreak;

/** @type {string} */
CSSProperties.prototype.MsLineGridMode;

/** @type {string} */
CSSProperties.prototype.MsInterpolationMode;

/** @type {string} */
CSSProperties.prototype.MsOverflowX;

/** @type {string} */
CSSProperties.prototype.MsOverflowY;

/** @type {string} */
CSSProperties.prototype.MsScrollbar3dlightColor;

/** @type {string} */
CSSProperties.prototype.MsScrollbarArrowColor;

/** @type {string} */
CSSProperties.prototype.MsScrollbarBaseColor;

/** @type {string} */
CSSProperties.prototype.MsScrollbarDarkshadowColor;

/** @type {string} */
CSSProperties.prototype.MsScrollbarFaceColor;

CSSProperties.prototype.MsScrollbarHighlightColor;

/** @type {string} */
CSSProperties.prototype.MsScrollbarShadowColor;

/** @type {string} */
CSSProperties.prototype.MsScrollbarTrackColor;

/** @type {string} */
CSSProperties.prototype.MsTextAlignLast;

/** @type {string} */
CSSProperties.prototype.MsTextAutospace;

/** @type {string} */
CSSProperties.prototype.MsTextJustify;

/** @type {string} */
CSSProperties.prototype.MsTextKashidaSpace;

/** @type {string} */
CSSProperties.prototype.MsTextOverflow;

/** @type {string} */
CSSProperties.prototype.MsTextUnderlinePosition;

/** @type {string} */
CSSProperties.prototype.MsWordBreak;

/** @type {string} */
CSSProperties.prototype.MsWordWrap;

/** @type {string} */
CSSProperties.prototype.MsWritingMode;

/** @type {string} */
CSSProperties.prototype.MsZoom;

/** @type {string} */
CSSProperties.prototype.msUserSelect;

// See: http://msdn.microsoft.com/en-us/library/windows/apps/Hh702466.aspx

/** @type {string} */
CSSProperties.prototype.msContentZooming;

/** @type {string} */
CSSProperties.prototype.msTouchAction;

/** @type {string} */
CSSProperties.prototype.msTransform;

/** @type {string} */
CSSProperties.prototype.msTransition;
/*
 * Copyright 2008 The Closure Compiler Authors
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/**
 * @fileoverview Definitions for all the extensions over the
 *  W3C's DOM specification by IE in JScript. This file depends on
 *  w3c_dom2.js. The whole file has NOT been fully type annotated.
 *
 * When a non-standard extension appears in both Gecko and IE, we put
 * it in gecko_dom.js
 *
 * @externs
 * @author stevey@google.com (Steve Yegge)
 */

// TODO(nicksantos): Rewrite all the DOM interfaces as interfaces, instead
// of kludging them as an inheritance hierarchy.

/**
 * @constructor
 * @extends {Document}
 * @see http://msdn.microsoft.com/en-us/library/ms757878(VS.85).aspx
 */
function XMLDOMDocument() {}

/**
 * @type {boolean}
 * @see http://msdn.microsoft.com/en-us/library/ms761398(VS.85).aspx
 */
XMLDOMDocument.prototype.async;

/**
 * @type {!Function}
 * @see http://msdn.microsoft.com/en-us/library/ms762647(VS.85).aspx
 */
XMLDOMDocument.prototype.ondataavailable;

/**
 * @type {!Function}
 * @see http://msdn.microsoft.com/en-us/library/ms764640(VS.85).aspx
 */
XMLDOMDocument.prototype.onreadystatechange;

/**
 * @type {!Function}
 * @see http://msdn.microsoft.com/en-us/library/ms753795(VS.85).aspx
 */
XMLDOMDocument.prototype.ontransformnode;

/**
 * @type {Object}
 * @see http://msdn.microsoft.com/en-us/library/ms756041(VS.85).aspx
 */
XMLDOMDocument.prototype.parseError;

/**
 * @type {boolean}
 * @see http://msdn.microsoft.com/en-us/library/ms761353(VS.85).aspx
 */
XMLDOMDocument.prototype.preserveWhiteSpace;

/**
 * @type {number}
 * @see http://msdn.microsoft.com/en-us/library/ms753702(VS.85).aspx
 */
XMLDOMDocument.prototype.readyState;

/**
 * @see http://msdn.microsoft.com/en-us/library/ms762283(VS.85).aspx
 * @type {boolean}
 */
XMLDOMDocument.prototype.resolveExternals;

/**
 * @see http://msdn.microsoft.com/en-us/library/ms760290(v=vs.85).aspx
 * @param {string} name
 * @param {*} value
 * @return {undefined}
 */
XMLDOMDocument.prototype.setProperty = function(name, value) {};

/**
 * @type {string}
 * @see http://msdn.microsoft.com/en-us/library/ms767669(VS.85).aspx
 */
XMLDOMDocument.prototype.url;

/**
 * @type {boolean}
 * @see http://msdn.microsoft.com/en-us/library/ms762791(VS.85).aspx
 */
XMLDOMDocument.prototype.validateOnParse;

/**
 * @see http://msdn.microsoft.com/en-us/library/ms763830(VS.85).aspx
 * @return {undefined}
 */
XMLDOMDocument.prototype.abort = function() {};

/**
 * @param {*} type
 * @param {string} name
 * @param {string} namespaceURI
 * @return {Node}
 * @see http://msdn.microsoft.com/en-us/library/ms757901(VS.85).aspx
 * @nosideeffects
 */
XMLDOMDocument.prototype.createNode = function(type, name, namespaceURI) {};

/**
 * @param {string} xmlString
 * @return {boolean}
 * @see http://msdn.microsoft.com/en-us/library/ms754585(VS.85).aspx
 * @override
 */
XMLDOMDocument.prototype.loadXML = function(xmlString) {};

/**
 * @param {string} id
 * @return {Node}
 * @see http://msdn.microsoft.com/en-us/library/ms766397(VS.85).aspx
 */
XMLDOMDocument.prototype.nodeFromID = function(id) {};

//==============================================================================
// XMLNode methods and properties
// In a real DOM hierarchy, XMLDOMDocument inherits from XMLNode and Document.
// Since we can't express that in our type system, we put XMLNode properties
// on Node.

/**
 * @type {string}
 * @see http://msdn.microsoft.com/en-us/library/ms767570(VS.85).aspx
 */
Node.prototype.baseName;

/**
 * @type {?string}
 * @see http://msdn.microsoft.com/en-us/library/ms762763(VS.85).aspx
 */
Node.prototype.dataType;

/**
 * @type {Node}
 * @see http://msdn.microsoft.com/en-us/library/ms764733(VS.85).aspx
 */
Node.prototype.definition;

/**
 * IE5 used document instead of ownerDocument.
 * Old versions of WebKit used document instead of contentDocument.
 * @type {Document}
 */
Node.prototype.document;


/**
 * Inserts the given HTML text into the element at the location.
 * @param {string} sWhere Where to insert the HTML text, one of 'beforeBegin',
 *     'afterBegin', 'beforeEnd', 'afterEnd'.
 * @param {!TrustedHTML|string} sText HTML text to insert.
 * @see http://msdn.microsoft.com/en-us/library/ms536452(VS.85).aspx
 * @return {undefined}
 */
Node.prototype.insertAdjacentHTML = function(sWhere, sText) {};

/**
 * @type {*}
 * @see http://msdn.microsoft.com/en-us/library/ms762308(VS.85).aspx
 */
Node.prototype.nodeTypedValue;

/**
 * @type {string}
 * @see http://msdn.microsoft.com/en-us/library/ms757895(VS.85).aspx
 */
Node.prototype.nodeTypeString;

/**
 * @type {boolean}
 * @see http://msdn.microsoft.com/en-us/library/ms762237(VS.85).aspx
 */
Node.prototype.parsed;

/**
 * @type {boolean}
 * @see http://msdn.microsoft.com/en-us/library/ms753816(VS.85).aspx
 */
Node.prototype.specified;

/**
 * @type {string}
 * @see http://msdn.microsoft.com/en-us/library/ms762687(VS.85).aspx
 */
Node.prototype.text;

/**
 * @type {string}
 * @see http://msdn.microsoft.com/en-us/library/ms755989(VS.85).aspx
 */
Node.prototype.xml;

/**
 * @param {string} expression An XPath expression.
 * @return {!NodeList<!Node>}
 * @see http://msdn.microsoft.com/en-us/library/ms754523(VS.85).aspx
 * @nosideeffects
 */
Node.prototype.selectNodes = function(expression) {};

/**
 * @param {string} expression An XPath expression.
 * @return {Node}
 * @see http://msdn.microsoft.com/en-us/library/ms757846(VS.85).aspx
 * @nosideeffects
 */
Node.prototype.selectSingleNode = function(expression) {};

/**
 * @param {Node} stylesheet XSLT stylesheet.
 * @return {string}
 * @see http://msdn.microsoft.com/en-us/library/ms761399(VS.85).aspx
 * @nosideeffects
 */
Node.prototype.transformNode = function(stylesheet) {};

/**
 * @param {Node} stylesheet XSLT stylesheet.
 * @param {Object} outputObject
 * @see http://msdn.microsoft.com/en-us/library/ms766561(VS.85).aspx
 * @return {Object}
 */
Node.prototype.transformNodeToObject =
    function(stylesheet, outputObject) {};

//==============================================================================
// Node methods

/**
 * @param {boolean=} opt_bRemoveChildren Whether to remove the entire sub-tree.
 *    Defaults to false.
 * @return {Node} The object that was removed.
 * @see http://msdn.microsoft.com/en-us/library/ms536708(VS.85).aspx
 */
Node.prototype.removeNode = function(opt_bRemoveChildren) {};

/**
 * @constructor
 */
function ClipboardData() {}

/**
 * @see http://msdn.microsoft.com/en-us/library/ms535220(VS.85).aspx
 * @param {string=} opt_type Type of clipboard data to clear. 'Text' or
 *     'URL' or 'File' or 'HTML' or 'Image'.
 * @return {undefined}
 */
ClipboardData.prototype.clearData = function(opt_type) {};

/**
 * @see http://msdn.microsoft.com/en-us/library/ms535220(VS.85).aspx
 * @param {string} type Type of clipboard data to set ('Text' or 'URL').
 * @param {string} data Data to set
 * @return {boolean} Whether the data were set correctly.
 */
ClipboardData.prototype.setData = function(type, data) {};

/**
 * @see http://msdn.microsoft.com/en-us/library/ms535220(VS.85).aspx
 * @param {string} type Type of clipboard data to get ('Text' or 'URL').
 * @return {string} The current data
 */
ClipboardData.prototype.getData = function(type) { };

/**
 * @see http://msdn.microsoft.com/en-us/library/ms535220(VS.85).aspx
 * @type {ClipboardData}
 */
Window.prototype.clipboardData;

/**
 * @see http://msdn.microsoft.com/en-us/library/ms533724(VS.85).aspx
 */
Window.prototype.dialogHeight;

/**
 * @see http://msdn.microsoft.com/en-us/library/ms533725(VS.85).aspx
 */
Window.prototype.dialogLeft;

/**
 * @see http://msdn.microsoft.com/en-us/library/ms533726(VS.85).aspx
 */
Window.prototype.dialogTop;

/**
 * @see http://msdn.microsoft.com/en-us/library/ms533727(VS.85).aspx
 */
Window.prototype.dialogWidth;

/**
 * @see http://msdn.microsoft.com/en-us/library/ms535863(VS.85).aspx
 */
Window.prototype.event;

/**
 * @see http://msdn.microsoft.com/en-us/library/cc197012(VS.85).aspx
 */
Window.prototype.maxConnectionsPer1_0Server;

/**
 * @see http://msdn.microsoft.com/en-us/library/cc197013(VS.85).aspx
 */
Window.prototype.maxConnectionsPerServer;

/**
 * @see http://msdn.microsoft.com/en-us/library/ms534198(VS.85).aspx
 */
Window.prototype.offscreenBuffering;

/**
 * @see http://msdn.microsoft.com/en-us/library/ms534389(VS.85).aspx
 * @type {number|undefined}
 */
Window.prototype.screenLeft;

/**
 * @see http://msdn.microsoft.com/en-us/library/ms534389(VS.85).aspx
 * @type {number|undefined}
 */
Window.prototype.screenTop;

// Functions

/**
 * @param {string} event
 * @param {Function} handler
 * @see http://msdn.microsoft.com/en-us/library/ms536343(VS.85).aspx
 */
Window.prototype.attachEvent;

/**
 * @see http://msdn.microsoft.com/en-us/library/ms536392(VS.85).aspx
 */
Window.prototype.createPopup;

/**
 * @param {string} event
 * @param {Function} handler
 * @see http://msdn.microsoft.com/en-us/library/ms536411(VS.85).aspx
 */
Window.prototype.detachEvent;

/**
 * @see http://msdn.microsoft.com/en-us/library/ms536420(VS.85).aspx
 */
Window.prototype.execScript;


/**
 * @see http://msdn.microsoft.com/en-us/library/ms536638(VS.85).aspx
 */
Window.prototype.navigate;

/**
 * @see http://msdn.microsoft.com/en-us/library/ms536738(VS.85).aspx
 */
Window.prototype.setActive;

/**
 * @see http://msdn.microsoft.com/en-us/library/ms536758(VS.85).aspx
 */
Window.prototype.showHelp;

/**
 * @see http://msdn.microsoft.com/en-us/library/ms536761(VS.85).aspx
 */
Window.prototype.showModelessDialog;

/**
 * @see http://msdn.microsoft.com/en-us/library/ms535246%28v=vs.85%29.aspx
 * @const {!Object}
 */
Window.prototype.external;

/**
 * @see https://msdn.microsoft.com/en-us/ie/dn265046(v=vs.94)
 * @const {!Object}
 */
Window.prototype.msCrypto;

/**
 * @type {boolean}
 * @implicitCast
 * @see http://msdn.microsoft.com/en-us/library/ie/ms533072(v=vs.85).aspx
 */
HTMLFrameElement.prototype.allowTransparency;

/**
 * @type {Window}
 * @see http://msdn.microsoft.com/en-us/library/ms533692(VS.85).aspx
 */
HTMLFrameElement.prototype.contentWindow;

/**
 * @type {boolean}
 * @implicitCast
 * @see http://msdn.microsoft.com/en-us/library/ie/ms533072(v=vs.85).aspx
 */
HTMLIFrameElement.prototype.allowTransparency;

/**
 * @see http://msdn.microsoft.com/en-us/library/ms536385(VS.85).aspx
 */
HTMLBodyElement.prototype.createControlRange;

/**
 * @type {string}
 * @see http://msdn.microsoft.com/en-us/library/ms534359(VS.85).aspx
 */
HTMLScriptElement.prototype.readyState;

/**
 * @type {string}
 * @see http://msdn.microsoft.com/en-us/library/ms534359(VS.85).aspx
 */
HTMLIFrameElement.prototype.readyState;

/**
 * @type {string}
 * @see http://msdn.microsoft.com/en-us/library/ms534359(VS.85).aspx
 */
HTMLImageElement.prototype.readyState;

/**
 * @type {string}
 * @see http://msdn.microsoft.com/en-us/library/ms534359(VS.85).aspx
 */
HTMLObjectElement.prototype.readyState;


/**
 * @constructor
 */
function ControlRange() {}

ControlRange.prototype.add;
ControlRange.prototype.addElement;
ControlRange.prototype.execCommand;
ControlRange.prototype.item;
ControlRange.prototype.queryCommandEnabled;
ControlRange.prototype.queryCommandIndeterm;
ControlRange.prototype.queryCommandState;
ControlRange.prototype.queryCommandSupported;
ControlRange.prototype.queryCommandValue;
ControlRange.prototype.remove;
ControlRange.prototype.scrollIntoView;
ControlRange.prototype.select;

/**
 * @constructor
 * @see http://msdn.microsoft.com/en-us/library/ms535872.aspx
 */
function TextRange() {}

/**
 * @see http://msdn.microsoft.com/en-us/library/ms533538(VS.85).aspx
 */
TextRange.prototype.boundingHeight;

/**
 * @see http://msdn.microsoft.com/en-us/library/ms533539(VS.85).aspx
 */
TextRange.prototype.boundingLeft;

/**
 * @see http://msdn.microsoft.com/en-us/library/ms533540(VS.85).aspx
 */
TextRange.prototype.boundingTop;

/**
 * @see http://msdn.microsoft.com/en-us/library/ms533541(VS.85).aspx
 */
TextRange.prototype.boundingWidth;

/**
 * @see http://msdn.microsoft.com/en-us/library/ms533874(VS.85).aspx
 */
TextRange.prototype.htmlText;

/**
 * @see http://msdn.microsoft.com/en-us/library/ms534200(VS.85).aspx
 */
TextRange.prototype.offsetLeft;

/**
 * @see http://msdn.microsoft.com/en-us/library/ms534303(VS.85).aspx
 */
TextRange.prototype.offsetTop;

/**
 * @type {string}
 * @see http://msdn.microsoft.com/en-us/library/ms534676(VS.85).aspx
 */
TextRange.prototype.text;

/**
 * @param {boolean=} opt_toStart
 * @see http://msdn.microsoft.com/en-us/library/ms536371(VS.85).aspx
 */
TextRange.prototype.collapse;

/**
 * @see http://msdn.microsoft.com/en-us/library/ms536373(VS.85).aspx
 */
TextRange.prototype.compareEndPoints;

/**
 * @see http://msdn.microsoft.com/en-us/library/ms536416(VS.85).aspx
 */
TextRange.prototype.duplicate;

/**
 * @see http://msdn.microsoft.com/en-us/library/ms536419(VS.85).aspx
 */
TextRange.prototype.execCommand;

/**
 * @see http://msdn.microsoft.com/en-us/library/ms536421(VS.85).aspx
 */
TextRange.prototype.expand;

/**
 * @see http://msdn.microsoft.com/en-us/library/ms536422(VS.85).aspx
 */
TextRange.prototype.findText;

/**
 * @see http://msdn.microsoft.com/en-us/library/ms536432(VS.85).aspx
 */
TextRange.prototype.getBookmark;

/**
 * @see http://msdn.microsoft.com/en-us/library/ms536433(VS.85).aspx
 */
TextRange.prototype.getBoundingClientRect;

/**
 * @see http://msdn.microsoft.com/en-us/library/ms536435(VS.85).aspx
 */
TextRange.prototype.getClientRects;

/**
 * @param {TextRange|ControlRange} range
 * @return {boolean}
 * @see http://msdn.microsoft.com/en-us/library/ms536450(VS.85).aspx
 */
TextRange.prototype.inRange;

/**
 * @see http://msdn.microsoft.com/en-us/library/ms536458(VS.85).aspx
 */
TextRange.prototype.isEqual;

/**
 * @see http://msdn.microsoft.com/en-us/library/ms536616(VS.85).aspx
 */
TextRange.prototype.move;

/**
 * @see http://msdn.microsoft.com/en-us/library/ms536620(VS.85).aspx
 */
TextRange.prototype.moveEnd;

/**
 * @param {string} unit
 * @param {number=} opt_count
 * @see http://msdn.microsoft.com/en-us/library/ms536623(VS.85).aspx
 */
TextRange.prototype.moveStart;

/**
 * @see http://msdn.microsoft.com/en-us/library/ms536628(VS.85).aspx
 */
TextRange.prototype.moveToBookmark;

/**
 * @see http://msdn.microsoft.com/en-us/library/ms536630(VS.85).aspx
 */
TextRange.prototype.moveToElementText;

/**
 * @see http://msdn.microsoft.com/en-us/library/ms536632(VS.85).aspx
 */
TextRange.prototype.moveToPoint;

/**
 * @see http://msdn.microsoft.com/en-us/library/ms536654(VS.85).aspx
 * @return {?Element}
 */
TextRange.prototype.parentElement;

/**
 * @see http://msdn.microsoft.com/en-us/library/ms536656(VS.85).aspx
 */
TextRange.prototype.pasteHTML;

/**
 * @see http://msdn.microsoft.com/en-us/library/ms536676(VS.85).aspx
 */
TextRange.prototype.queryCommandEnabled;

/**
 * @see http://msdn.microsoft.com/en-us/library/ms536678(VS.85).aspx
 */
TextRange.prototype.queryCommandIndeterm;

/**
 * @see http://msdn.microsoft.com/en-us/library/ms536679(VS.85).aspx
 */
TextRange.prototype.queryCommandState;

/**
 * @see http://msdn.microsoft.com/en-us/library/ms536681(VS.85).aspx
 */
TextRange.prototype.queryCommandSupported;

/**
 * @see http://msdn.microsoft.com/en-us/library/ms536683(VS.85).aspx
 */
TextRange.prototype.queryCommandValue;

/**
 * @see http://msdn.microsoft.com/en-us/library/ms536730(VS.85).aspx
 */
TextRange.prototype.scrollIntoView;

/**
 * @return {undefined}
 * @see http://msdn.microsoft.com/en-us/library/ms536735(VS.85).aspx
 */
TextRange.prototype.select = function() {};

/**
 * @param {string} how
 * @param {TextRange|ControlRange} sourceRange
 * @see http://msdn.microsoft.com/en-us/library/ms536745(VS.85).aspx
 */
TextRange.prototype.setEndPoint;

/**
 * @constructor
 * @see http://msdn.microsoft.com/en-us/library/ms537447(VS.85).aspx
 */
function controlRange() {}


Document.prototype.loadXML;


// http://msdn.microsoft.com/en-us/library/ms531073(VS.85).aspx

/**
 * @see http://msdn.microsoft.com/en-us/library/ms533553(VS.85).aspx
 */
Document.prototype.charset;

/**
 * @see http://msdn.microsoft.com/en-us/library/ms533693(VS.85).aspx
 */
Document.prototype.cookie;

/**
 * @see http://msdn.microsoft.com/en-us/library/ms533731(VS.85).aspx
 */
Document.prototype.dir;

/**
 * @see http://msdn.microsoft.com/en-us/library/cc196988(VS.85).aspx
 */
Document.prototype.documentMode;

/**
 * @see http://msdn.microsoft.com/en-us/library/ms533747(VS.85).aspx
 */
Document.prototype.expando;

/**
 * @see http://msdn.microsoft.com/en-us/library/ms533750(VS.85).aspx
 */
Document.prototype.fileCreatedDate;

/**
 * @see http://msdn.microsoft.com/en-us/library/ms533751(VS.85).aspx
 */
Document.prototype.fileModifiedDate;

/**
 * @see http://msdn.microsoft.com/en-us/library/ms533752(VS.85).aspx
 */
Document.prototype.fileSize;

/**
 * @see http://msdn.microsoft.com/en-us/library/ms534331(VS.85).aspx
 * @type {?Window}
 */
Document.prototype.parentWindow;

/**
 * @see http://msdn.microsoft.com/en-us/library/ms534353(VS.85).aspx
 */
Document.prototype.protocol;

/**
 * @type {string}
 * @see http://msdn.microsoft.com/en-us/library/ms534359(VS.85).aspx
 */
HTMLDocument.prototype.readyState;

/**
 * @see http://msdn.microsoft.com/en-us/library/ms534704(VS.85).aspx
 */
Document.prototype.uniqueID;

/**
 * @see http://msdn.microsoft.com/en-us/library/ms534709(VS.85).aspx
 */
Document.prototype.URLUnencoded;

/**
 * @see http://msdn.microsoft.com/en-us/library/ms535155(VS.85).aspx
 */
Document.prototype.XMLDocument;

/**
 * @see http://msdn.microsoft.com/en-us/library/ms535163(VS.85).aspx
 */
Document.prototype.XSLDocument;

// functions

/**
 * @param {string} event
 * @param {Function} handler
 * @see http://msdn.microsoft.com/en-us/library/ms536343(VS.85).aspx
 */
Document.prototype.attachEvent;

/**
 * @see http://msdn.microsoft.com/en-us/library/ms536390(VS.85).aspx
 */
Document.prototype.createEventObject;

/**
 * @see http://msdn.microsoft.com/en-us/library/ms531194(VS.85).aspx
 */
Document.prototype.createStyleSheet;

/**
 * @param {string} event
 * @param {Function} handler
 * @see http://msdn.microsoft.com/en-us/library/ms536411(VS.85).aspx
 */
Document.prototype.detachEvent;

/**
 * @see http://msdn.microsoft.com/en-us/library/ms536425(VS.85).aspx
 */
Document.prototype.focus;

/**
 * @see http://msdn.microsoft.com/en-us/library/ms536614(VS.85).aspx
 */
Document.prototype.mergeAttributes;

/**
 * @see http://msdn.microsoft.com/en-us/library/ms536685(VS.85).aspx
 */
Document.prototype.recalc;

/**
 * @see http://msdn.microsoft.com/en-us/library/ms536689(VS.85).aspx
 */
Document.prototype.releaseCapture;

/**
 * @see http://msdn.microsoft.com/en-us/library/ms536738(VS.85).aspx
 */
Document.prototype.setActive;


// collections

/**
 * @see http://msdn.microsoft.com/en-us/library/ms537434(VS.85).aspx
 */
Document.prototype.all;

/**
 * @see http://msdn.microsoft.com/en-us/library/ms537445(VS.85).aspx
 */
Document.prototype.childNodes;

/**
 * @see http://msdn.microsoft.com/en-us/library/ms537459(VS.85).aspx
 */
Document.prototype.frames;

/**
 * @see http://msdn.microsoft.com/en-us/library/ms537470(VS.85).aspx
 */
Document.prototype.namespaces;

/**
 * @see http://msdn.microsoft.com/en-us/library/ms537487(VS.85).aspx
 * @type {!HTMLCollection<!HTMLScriptElement>}
 */
Document.prototype.scripts;

/**
 * @param {string} sUrl
 * @return {number}
 * @see http://msdn.microsoft.com/en-us/library/ms535922(VS.85).aspx
 */
Element.prototype.addBehavior = function(sUrl) {};

/**
 * @param {string} event
 * @param {Function} handler
 * @see http://msdn.microsoft.com/en-us/library/mm536343(v=vs.85).aspx
 */
Element.prototype.attachEvent;

/**
 * @type {boolean}
 * @see http://msdn.microsoft.com/en-us/library/ms533546(VS.85).aspx
 */
Element.prototype.canHaveChildren;

/**
 * @type {string}
 * @see http://msdn.microsoft.com/en-us/library/ms533559(v=vs.85).aspx
 */
Element.prototype.classid;

/**
 * @param {number} iCoordX Integer that specifies the client window coordinate
 *     of x.
 * @param {number} iCoordY Integer that specifies the client window coordinate
 *     of y.
 * @return {string} The component of an element located at the specified
 *     coordinates.
 * @see http://msdn.microsoft.com/en-us/library/ms536375(VS.85).aspx
 * @nosideeffects
 */
Element.prototype.componentFromPoint = function(iCoordX, iCoordY) {};


/**
 * TODO(tjgq): Make this string once existing usages have been migrated.
 * @type {string|boolean}
 * @see http://msdn.microsoft.com/en-us/library/ms533690(VS.85).aspx
 */
Element.prototype.contentEditable;

/**
 * @return {TextRange}
 * @see http://msdn.microsoft.com/en-us/library/ms536401(VS.85).aspx
 */
Element.prototype.createTextRange;

/**
 * @see http://msdn.microsoft.com/en-us/library/ms535231(VS.85).aspx
 * @type {?CSSStyleDeclaration}
 */
Element.prototype.currentStyle;

/**
 * @param {string} event
 * @param {Function} handler
 * @see http://msdn.microsoft.com/en-us/library/ie/ms536411(v=vs.85).aspx
 */
Element.prototype.detachEvent;

/**
 * @param {string=} opt_action
 * @see http://msdn.microsoft.com/en-us/library/ms536414%28VS.85%29.aspx
 * @return {undefined}
 */
Element.prototype.doScroll = function(opt_action) {};

/**
 * @see http://msdn.microsoft.com/en-us/library/ms536423(VS.85).aspx
 */
Element.prototype.fireEvent;

/**
 * @type {boolean}
 * @see http://msdn.microsoft.com/en-us/library/ms533783(VS.85).aspx
 */
Element.prototype.hideFocus;

/**
 * @type {string}
 * @implicitCast
 *
 * TODO(lharker): remove the @implicitCast to enforce assigning an explicit
 * string to innerText instead of relying on coercion.
 *
 * @see http://msdn.microsoft.com/en-us/library/ms533899.aspx
 */
Element.prototype.innerText;

/**
 * @type {boolean}
 * @see http://msdn.microsoft.com/en-us/library/ms537838(VS.85).aspx
 */
Element.prototype.isContentEditable;

/**
 * @see http://msdn.microsoft.com/en-us/library/ms531395(v=vs.85).aspx
 * NOTE: Left untyped to avoid conflict with subclasses.
 */
Element.prototype.load;

/**
 * @param {number} pointerId Id of the pointer that is assign to the element.
 * @see http://msdn.microsoft.com/en-us/library/ie/hh771882(v=vs.85).aspx
 * @return {undefined}
 */
Element.prototype.msSetPointerCapture = function(pointerId) {};

/**
 * @param {number} pointerId
 * @see http://msdn.microsoft.com/en-us/library/ie/hh771880.aspx
 * @return {undefined}
 */
Element.prototype.msReleasePointerCapture = function(pointerId) {};

/**
 * @type {?function(Event)}
 * @see http://msdn.microsoft.com/en-us/library/ms536903(v=vs.85).aspx
 */
Element.prototype.onbeforedeactivate;

/**
 * @type {?function(Event)}
 * @see http://msdn.microsoft.com/en-us/library/ms536945(VS.85).aspx
 */
Element.prototype.onmouseenter;

/**
 * @type {?function(Event)}
 * @see http://msdn.microsoft.com/en-us/library/ms536946(VS.85).aspx
 */
Element.prototype.onmouseleave;

/**
 * @see http://msdn.microsoft.com/en-us/library/ms536689(VS.85).aspx
 * @return {undefined}
 */
Element.prototype.releaseCapture = function() {};

/**
 * @param {number} iID
 * @return {boolean}
 * @see http://msdn.microsoft.com/en-us/library/ms536700(VS.85).aspx
 */
Element.prototype.removeBehavior = function(iID) {};

/**
 * @see http://msdn.microsoft.com/en-us/library/aa703996(VS.85).aspx
 */
Element.prototype.runtimeStyle;

/**
 * @param {string} sStoreName The arbitrary name assigned to a persistent object
 *     in a UserData store.
 * @see http://msdn.microsoft.com/en-us/library/ms531403(v=vs.85).aspx
 * @return {undefined}
 */
Element.prototype.save = function(sStoreName) {};

/**
 * @param {boolean=} opt_bContainerCapture Events originating in a container are
 *     captured by the container. Defaults to true.
 * @see http://msdn.microsoft.com/en-us/library/ms536742(VS.85).aspx
 * @return {undefined}
 */
Element.prototype.setCapture = function(opt_bContainerCapture) {};

/**
 * @see http://msdn.microsoft.com/en-us/library/ms534635(VS.85).aspx
 */
Element.prototype.sourceIndex;

/**
 * @type {string}
 * @see http://msdn.microsoft.com/en-us/library/ms537840.aspx
 */
Element.prototype.unselectable;

/**
 * @constructor
 * @see http://msdn.microsoft.com/en-us/library/aa752462(v=vs.85).aspx
 */
function HTMLFiltersCollection() {}

/**
 * @see http://msdn.microsoft.com/en-us/library/aa752463(v=vs.85).aspx
 * @type {number}
 */
HTMLFiltersCollection.prototype.length;

/**
 * @see http://msdn.microsoft.com/en-us/library/ms537452(v=vs.85).aspx
 * @type {HTMLFiltersCollection}
 */
Element.prototype.filters;

/**
 * @constructor
 * @see http://msdn.microsoft.com/en-us/library/ms532853(v=vs.85).aspx
 */
function HTMLFilter() {}

/**
 * @see http://msdn.microsoft.com/en-us/library/ms532954(v=vs.85).aspx
 * @return {undefined}
 */
HTMLFilter.prototype.apply = function() {};

/**
 * @constructor
 * @extends {HTMLFilter}
 * @see http://msdn.microsoft.com/en-us/library/ms532967(v=vs.85).aspx
 */
function AlphaFilter() {}

/**
 * @see http://msdn.microsoft.com/en-us/library/ms532910(v=vs.85).aspx
 * @type {number}
 */
AlphaFilter.prototype.Opacity;

/**
 * @constructor
 * @extends {HTMLFilter}
 * @see http://msdn.microsoft.com/en-us/library/ms532969(v=vs.85).aspx
 */
function AlphaImageLoaderFilter() {}

/**
 * @see http://msdn.microsoft.com/en-us/library/ms532920(v=vs.85).aspx
 * @type {string}
 */
AlphaImageLoaderFilter.prototype.sizingMethod;

// For IE, returns an object representing key-value pairs for all the global
// variables prefixed with str, e.g. test*

/** @param {*=} opt_str
 */
function RuntimeObject(opt_str) {}


/**
 * @type {StyleSheet}
 * @see http://msdn.microsoft.com/en-us/library/dd347030(VS.85).aspx
 */
HTMLStyleElement.prototype.styleSheet;


/**
 * IE implements Cross Origin Resource Sharing (cross-domain XMLHttpRequests)
 * via the XDomainRequest object.
 *
 * @constructor
 * @see http://msdn.microsoft.com/en-us/library/cc288060(v=vs.85).aspx
 * @see http://www.w3.org/TR/cors/
 */
function XDomainRequest() {}

/**
 * Aborts the request.
 * @see http://msdn.microsoft.com/en-us/library/cc288129(v=vs.85).aspx
 * @return {undefined}
 */
XDomainRequest.prototype.abort = function() {};

/**
 * Sets the method and URL for the request.
 * @param {string} bstrMethod Either "GET" or "POST"
 * @param {string} bstrUrl The target URL
 * @see http://msdn.microsoft.com/en-us/library/cc288168(v=vs.85).aspx
 * @return {undefined}
 */
XDomainRequest.prototype.open = function(bstrMethod, bstrUrl) {};

/**
 * Sends the request.
 * @param {string=} varBody The POST body to send to the server. If omitted,
 *     the behavior is identical to sending an empty string.
 * @see http://msdn.microsoft.com/en-us/library/cc288207(v=vs.85).aspx
 * @return {undefined}
 */
XDomainRequest.prototype.send = function(varBody) {};

/**
 * Called if the request could not be completed. Note that error information is
 * not available.
 * @see http://msdn.microsoft.com/en-us/library/ms536930%28v=VS.85%29.aspx
 * @type {?function()}
 */
XDomainRequest.prototype.onerror;

/**
 * Called when the response has finished.
 * @see http://msdn.microsoft.com/en-us/library/ms536942%28v=VS.85%29.aspx
 * @type {?function()}
 */
XDomainRequest.prototype.onload;

/**
 * Called every time part of the response has been received.
 * @see http://msdn.microsoft.com/en-us/library/cc197058%28v=VS.85%29.aspx
 * @type {?function()}
 */
XDomainRequest.prototype.onprogress;

/**
 * Called if the timeout period has elapsed.
 * @see http://msdn.microsoft.com/en-us/library/cc197061%28v=VS.85%29.aspx
 * @type {?function()}
 */
XDomainRequest.prototype.ontimeout;

/**
 * The current response body.
 * @see http://msdn.microsoft.com/en-us/library/cc287956%28v=VS.85%29.aspx
 * @type {string}
 */
XDomainRequest.prototype.responseText;

/**
 * The timeout (in milliseconds) for the request.
 * @type {number}
 */
XDomainRequest.prototype.timeout;

/**
 * The Content-Type of the response, or an empty string.
 * @type {string}
 */
XDomainRequest.prototype.contentType;

/**
 * @type {string}
 * @see http://msdn.microsoft.com/en-us/library/ms533542(v=vs.85).aspx
 */
Navigator.prototype.browserLanguage;

/**
 * @type {number}
 * @see https://msdn.microsoft.com/en-us/library/ie/hh772144(v=vs.85).aspx
 */
Navigator.prototype.msMaxTouchPoints;

/**
 * @type {boolean}
 * @see http://blogs.msdn.com/b/ie/archive/2011/09/20/touch-input-for-ie10-and-metro-style-apps.aspx
 */
Navigator.prototype.msPointerEnabled;

/**
 * @param {(!File|!Blob)} blob
 * @param {string=} opt_defaultName
 * @return {boolean}
 * @see https://msdn.microsoft.com/en-us/library/hh772331(v=vs.85).aspx
 */
Navigator.prototype.msSaveBlob = function(blob, opt_defaultName) {};

/**
 * @param {(!File|!Blob)} blob
 * @param {string=} opt_defaultName
 * @return {boolean}
 * @see https://msdn.microsoft.com/en-us/library/hh772332(v=vs.85).aspx
 */
Navigator.prototype.msSaveOrOpenBlob = function(blob, opt_defaultName) {};

/**
 * @type {number}
 * @see http://msdn.microsoft.com/en-us/library/ms533721(v=vs.85).aspx
 */
Screen.prototype.deviceXDPI;

/**
 * @type {number}
 * @see http://msdn.microsoft.com/en-us/library/ms534128%28v=vs.85%29.aspx
 */
Screen.prototype.logicalXDPI;

/**
 * @type {number}
 * @see http://msdn.microsoft.com/en-us/library/ms534130%28v=vs.85%29.aspx
 */
Screen.prototype.logicalYDPI;
/*
 * Copyright 2008 The Closure Compiler Authors
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/**
 * @fileoverview Definitions for all the extensions over the
 *  W3C's event specification by IE in JScript. This file depends on
 *  w3c_event.js.
 *
 * @see http://msdn.microsoft.com/en-us/library/ms535863.aspx
 * @externs
 */

/** @type {string} */
Event.prototype.Abstract;

/** @type {boolean} */
Event.prototype.altLeft;

/** @type {string} */
Event.prototype.Banner;

/**
 * A ClipboardData on IE, but a DataTransfer on WebKit.
 * @see http://msdn.microsoft.com/en-us/library/ms535220.aspx
 * @type {(ClipboardData|undefined)}
 */
Event.prototype.clipboardData;

/** @type {boolean} */
Event.prototype.contentOverflow;

/** @type {boolean} */
Event.prototype.ctrlLeft;

/** @type {string} */
Event.prototype.dataFld;

Event.prototype.domain;

/** @type {Element} */
Event.prototype.fromElement;

/** @type {string} */
Event.prototype.MoreInfo;

/** @type {string} */
Event.prototype.nextPage;

/** @type {number} */
Event.prototype.offsetX;

/** @type {number} */
Event.prototype.offsetY;

/** @type {string} */
Event.prototype.propertyName;

/** @type {string} */
Event.prototype.qualifier;

/** @type {?} */
Event.prototype.reason;

/** @type {Object<*>} */
Event.prototype.recordset;

/** @type {boolean} */
Event.prototype.repeat;

/** @type {(boolean|string|undefined)} */
Event.prototype.returnValue;

/** @type {string} */
Event.prototype.saveType;

Event.prototype.scheme;

/** @type {boolean} */
Event.prototype.shiftLeft;

/** @type {Window} */
Event.prototype.source;

/** @type {Element} */
Event.prototype.srcElement;

Event.prototype.srcFilter;

/** @type {string} */
Event.prototype.srcUrn;

/** @type {Element} */
Event.prototype.toElement;

Event.prototype.userName;

/** @type {number} */
Event.prototype.wheelDelta;

/** @type {number} */
Event.prototype.x;

/** @type {number} */
Event.prototype.y;

/**
 * @constructor
 * @see http://msdn.microsoft.com/en-us/library/windows/apps/hh441257.aspx
 */
function MSPointerPoint() {}

/** @type {number} */
MSPointerPoint.prototype.pointerId;

/** @type {number} */
MSPointerPoint.prototype.pointerType;

/**
 * @constructor
 * @extends {Event}
 * @see http://msdn.microsoft.com/en-us/library/windows/apps/hh441233.aspx
 */
function MSPointerEvent() {}

/** @const {number} */
MSPointerEvent.MSPOINTER_TYPE_MOUSE;

/** @const {number} */
MSPointerEvent.MSPOINTER_TYPE_PEN;

/** @const {number} */
MSPointerEvent.MSPOINTER_TYPE_TOUCH;

/** @type {number} */
MSPointerEvent.prototype.height;

/** @type {number} */
MSPointerEvent.prototype.hwTimestamp;

/** @type {boolean} */
MSPointerEvent.prototype.isPrimary;

/** @type {number} */
MSPointerEvent.prototype.pointerId;

/** @type {number} */
MSPointerEvent.prototype.pointerType;

/** @type {number} */
MSPointerEvent.prototype.pressure;

/** @type {number} */
MSPointerEvent.prototype.rotation;

/** @type {number} */
MSPointerEvent.prototype.tiltX;

/** @type {number} */
MSPointerEvent.prototype.tiltY;

/** @type {number} */
MSPointerEvent.prototype.timeStamp;

/** @type {number} */
MSPointerEvent.prototype.width;

/**
 * @param {number} pointerId
 * @return {undefined}
 */
MSPointerEvent.prototype.msReleasePointerCapture;

/**
 * @param {number} pointerId
 * @return {undefined}
 */
MSPointerEvent.prototype.msSetPointerCapture;

/**
 * @param {string} typeArg
 * @param {boolean} canBubbleArg
 * @param {boolean} cancelableArg
 * @param {Window} viewArg
 * @param {number} detailArg
 * @param {number} screenXArg
 * @param {number} screenYArg
 * @param {number} clientXArg
 * @param {number} clientYArg
 * @param {boolean} ctrlKeyArg
 * @param {boolean} altKeyArg
 * @param {boolean} shiftKeyArg
 * @param {boolean} metaKeyArg
 * @param {number} buttonArg
 * @param {Element} relatedTargetArg
 * @param {number} offsetXArg
 * @param {number} offsetYArg
 * @param {number} widthArg
 * @param {number} heightArg
 * @param {number} pressure
 * @param {number} rotation
 * @param {number} tiltX
 * @param {number} tiltY
 * @param {number} pointerIdArg
 * @param {number} pointerType
 * @param {number} hwTimestampArg
 * @param {boolean} isPrimary
 * @return {undefined}
 * @see http://msdn.microsoft.com/en-us/library/windows/apps/hh441246.aspx
 */
MSPointerEvent.prototype.initPointerEvent;

/**
 * @constructor
 * @see http://msdn.microsoft.com/en-us/library/ie/hh968249(v=vs.85).aspx
 */
function MSGesture() {}

/**
 * @type {Element}
 */
MSGesture.prototype.target;

/**
 * @param {number} pointerId
 * @return {undefined}
 */
MSGesture.prototype.addPointer = function(pointerId) {};

MSGesture.prototype.stop = function() {};

/**
 * @constructor
 * @extends {Event}
 * @see http://msdn.microsoft.com/en-us/library/ie/hh772076(v=vs.85).aspx
 */
function MSGestureEvent() {}

/** @type {number} */
MSGestureEvent.prototype.expansion;

/** @type {!MSGesture} */
MSGestureEvent.prototype.gestureObject;

/** @type {number} */
MSGestureEvent.prototype.hwTimestamp;

/** @type {number} */
MSGestureEvent.prototype.rotation;

/** @type {number} */
MSGestureEvent.prototype.scale;

/** @type {number} */
MSGestureEvent.prototype.translationX;

/** @type {number} */
MSGestureEvent.prototype.translationY;

/** @type {number} */
MSGestureEvent.prototype.velocityAngular;

/** @type {number} */
MSGestureEvent.prototype.velocityExpansion;

/** @type {number} */
MSGestureEvent.prototype.velocityX;

/** @type {number} */
MSGestureEvent.prototype.velocityY;

/**
 * @param {string} typeArg
 * @param {boolean} canBubbleArg
 * @param {boolean} cancelableArg
 * @param {Window} viewArg
 * @param {number} detailArg
 * @param {number} screenXArg
 * @param {number} screenYArg
 * @param {number} clientXArg
 * @param {number} clientYArg
 * @param {number} offsetXArg
 * @param {number} offsetYArg
 * @param {number} translationXArg
 * @param {number} translationYArg
 * @param {number} scaleArg
 * @param {number} expansionArg
 * @param {number} rotationArg
 * @param {number} velocityXArg
 * @param {number} velocityYArg
 * @param {number} velocityExpansionArg
 * @param {number} velocityAngularArg
 * @param {number} hwTimestampArg
 * @param {EventTarget} relatedTargetArg
 * @return {undefined}
 * @see http://msdn.microsoft.com/en-us/library/windows/apps/hh441187.aspx
 */
MSGestureEvent.prototype.initGestureEvent;
/*
 * Copyright 2009 The Closure Compiler Authors
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/**
 * @fileoverview Definitions for IE's vector markup language, or VML.
 *
 * @externs
 * @author robbyw@google.com (Robby Walker)
 */


/**
 * @type {Object|string}
 * @see http://msdn.microsoft.com/en-us/library/bb263836(VS.85).aspx
 */
Element.prototype.coordorigin;

/**
 * @type {Object|string}
 * @see http://msdn.microsoft.com/en-us/library/bb263837(VS.85).aspx
 */
Element.prototype.coordsize;

/**
 * @type {string}
 * @see http://msdn.microsoft.com/en-us/library/bb263839(VS.85).aspx
 */
Element.prototype.fillcolor;

/**
 * @type {boolean}
 * @see http://msdn.microsoft.com/en-us/library/bb263840(VS.85).aspx
 */
Element.prototype.filled;

/**
 * @type {string}
 * @see http://msdn.microsoft.com/en-us/library/bb263871(VS.85).aspx
 */
Element.prototype.path;

/**
 * @type {number|string}
 * @see http://msdn.microsoft.com/en-us/library/bb263877(VS.85).aspx
 */
Element.prototype.rotation;

/**
 * @type {string}
 * @see http://msdn.microsoft.com/en-us/library/bb263881(VS.85).aspx
 */
Element.prototype.strokecolor;

/**
 * @type {boolean}
 * @see http://msdn.microsoft.com/en-us/library/bb263882(VS.85).aspx
 */
Element.prototype.stroked;

/**
 * @type {number|string}
 * @see http://msdn.microsoft.com/en-us/library/bb263883(VS.85).aspx
 */
Element.prototype.strokeweight;
/*
 * Copyright 2016 The Closure Compiler Authors
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/**
 * @fileoverview Externs for Intersection Observer objects.
 * @see https://w3c.github.io/IntersectionObserver/
 * @externs
 */

// TODO(user): Once the Intersection Observer spec is adopted by W3C, add
// a w3c_ prefix to this file's name.


/**
 * These contain the information provided from a change event.
 * @see https://w3c.github.io/IntersectionObserver/#intersection-observer-entry
 * @record
 */
function IntersectionObserverEntry() {}

/**
 * The time the change was observed.
 * @see https://w3c.github.io/IntersectionObserver/#dom-intersectionobserverentry-time
 * @const {number}
 */
IntersectionObserverEntry.prototype.time;

/**
 * The root intersection rectangle, if target belongs to the same unit of
 * related similar-origin browsing contexts as the intersection root, null
 * otherwise.
 * @see https://w3c.github.io/IntersectionObserver/#dom-intersectionobserverentry-rootbounds
 * @const {{top: number, right: number, bottom: number, left: number,
 *     height: number, width: number}}
 */
IntersectionObserverEntry.prototype.rootBounds;

/**
 * The rectangle describing the element being observed.
 * @see https://w3c.github.io/IntersectionObserver/#dom-intersectionobserverentry-boundingclientrect
 * @const {!{top: number, right: number, bottom: number, left: number,
 *     height: number, width: number}}
 */
IntersectionObserverEntry.prototype.boundingClientRect;

/**
 * The rectangle describing the intersection between the observed element and
 * the viewport.
 * @see https://w3c.github.io/IntersectionObserver/#dom-intersectionobserverentry-intersectionrect
 * @const {!{top: number, right: number, bottom: number, left: number,
 *     height: number, width: number}}
 */
IntersectionObserverEntry.prototype.intersectionRect;

/**
 * Ratio of intersectionRect area to boundingClientRect area.
 * @see https://w3c.github.io/IntersectionObserver/#dom-intersectionobserverentry-intersectionratio
 * @const {number}
 */
IntersectionObserverEntry.prototype.intersectionRatio;

/**
 * The Element whose intersection with the intersection root changed.
 * @see https://w3c.github.io/IntersectionObserver/#dom-intersectionobserverentry-target
 * @const {!Element}
 */
IntersectionObserverEntry.prototype.target;

/**
 * Whether or not the target is intersecting with the root.
 * @see https://w3c.github.io/IntersectionObserver/#dom-intersectionobserverentry-isintersecting
 * @const {boolean}
 */
IntersectionObserverEntry.prototype.isIntersecting;

/**
 * Whether or not the target is visible with the root.
 * @see https://w3c.github.io/IntersectionObserver/v2/#dom-intersectionobserverentry-isvisible
 * @const {boolean|undefined}
 */
IntersectionObserverEntry.prototype.isVisible;

/**
 * Callback for the IntersectionObserver.
 * @see https://w3c.github.io/IntersectionObserver/#intersection-observer-callback
 * @typedef {function(!Array<!IntersectionObserverEntry>,!IntersectionObserver)}
 */
var IntersectionObserverCallback;

/**
 * Options for the IntersectionObserver.
 * @see https://w3c.github.io/IntersectionObserver/v2/#intersection-observer-init
 * @typedef {{
 *   threshold: (!Array<number>|number|undefined),
 *   delay: (number|undefined),
 *   trackVisibility: (boolean|undefined),
 *   root: (?Document|?Element|undefined),
 *   rootMargin: (string|undefined)
 * }}
 */
var IntersectionObserverInit;

/**
 * This is the constructor for Intersection Observer objects.
 * @see https://w3c.github.io/IntersectionObserver/#intersection-observer-interface
 * @param {!IntersectionObserverCallback} handler The callback for the observer.
 * @param {!IntersectionObserverInit=} opt_options The object defining the
 *     thresholds, etc.
 * @constructor
 */
function IntersectionObserver(handler, opt_options) {};

/**
 * The root Element to use for intersection, or null if the observer uses the
 * implicit root.
 * @see https://w3c.github.io/IntersectionObserver/#dom-intersectionobserver-root
 * @const {?Element}
 */
IntersectionObserver.prototype.root;

/**
 * Offsets applied to the intersection rootâ€™s bounding box, effectively growing
 * or shrinking the box that is used to calculate intersections.
 * @see https://w3c.github.io/IntersectionObserver/#dom-intersectionobserver-rootmargin
 * @const {string}
 */
IntersectionObserver.prototype.rootMargin;

/**
 * A list of thresholds, sorted in increasing numeric order, where each
 * threshold is a ratio of intersection area to bounding box area of an observed
 * target.
 * @see https://w3c.github.io/IntersectionObserver/#dom-intersectionobserver-thresholds
 * @const {!Array<number>}
 */
IntersectionObserver.prototype.thresholds;

/**
 * This is used to set which element to observe.
 * @see https://w3c.github.io/IntersectionObserver/#dom-intersectionobserver-observe
 * @param {!Element} element The element to observe.
 * @return {undefined}
 */
IntersectionObserver.prototype.observe = function(element) {};

/**
 * This is used to stop observing a given element.
 * @see https://w3c.github.io/IntersectionObserver/#dom-intersectionobserver-unobserve
 * @param {!Element} element The elmenent to stop observing.
 * @return {undefined}
 */
IntersectionObserver.prototype.unobserve = function(element) {};

/**
 * Disconnect.
 * @see https://w3c.github.io/IntersectionObserver/#dom-intersectionobserver-disconnect
 */
IntersectionObserver.prototype.disconnect = function() {};

/**
 * Take records.
 * @see https://w3c.github.io/IntersectionObserver/#dom-intersectionobserver-takerecords
 * @return {!Array.<!IntersectionObserverEntry>}
 */
IntersectionObserver.prototype.takeRecords = function() {};
/*
 * Copyright 2013 The Closure Compiler Authors
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/**
 * @fileoverview Definitions for the JS Internationalization API as defined in
 * http://www.ecma-international.org/ecma-402/1.0/
 *
 * @externs
 */

/** @const */
var Intl = {};

/**
 * NOTE: this API is not from ecma402 and is subject to change.
 * @param {string|Array<string>=} locales
 * @param {{type: (string|undefined)}=}
 *         options
 * @constructor
 */
Intl.v8BreakIterator = function(locales, options) {};

/**
 * @param {string} text
 * @return {undefined}
 */
Intl.v8BreakIterator.prototype.adoptText = function(text) {};

/**
 * @return {string}
 */
Intl.v8BreakIterator.prototype.breakType = function() {};

/**
 * @return {number}
 */
Intl.v8BreakIterator.prototype.current = function() {};

/**
 * @return {number}
 */
Intl.v8BreakIterator.prototype.first = function() {};

/**
 * @return {number}
 */
Intl.v8BreakIterator.prototype.next = function() {};

/**
 * @constructor
 * @param {string|Array<string>=} locales
 * @param {{usage: (string|undefined), localeMatcher: (string|undefined),
 *     sensitivity: (string|undefined), ignorePunctuation: (boolean|undefined),
 *     numeric: (boolean|undefined), caseFirst: (string|undefined)}=}
 *         options
 */
Intl.Collator = function(locales, options) {};

/**
 * @param {Array<string>} locales
 * @param {{localeMatcher: (string|undefined)}=} options
 * @return {Array<string>}
 */
Intl.Collator.supportedLocalesOf = function(locales, options) {};

/**
 * @param {string} arg1
 * @param {string} arg2
 * @return {number}
 */
Intl.Collator.prototype.compare = function(arg1, arg2) {};

/**
 * @return {{locale: string, usage: string, sensitivity: string,
 *     ignorePunctuation: boolean, collation: string, numeric: boolean,
 *     caseFirst: string}}
 */
Intl.Collator.prototype.resolvedOptions = function() {};

/**
 * @constructor
 * @param {string|Array<string>=} locales
 * @param {{
 *     notation: (string|undefined),
 *     localeMatcher: (string|undefined), useGrouping: (boolean|undefined),
 *     numberingSystem: (string|undefined), style: (string|undefined),
 *     currency: (string|undefined), currencyDisplay: (string|undefined),
 *     minimumIntegerDigits: (number|undefined),
 *     minimumFractionDigits: (number|undefined),
 *     maximumFractionDigits: (number|undefined),
 *     minimumSignificantDigits: (number|undefined),
 *     maximumSignificantDigits: (number|undefined),
 *     compactDisplay: (string|undefined), currencySign: (string|undefined),
 *     signDisplay: (string|undefined), unit: (string|undefined),
 *     unitDisplay: (string|undefined)
 *     }=}
 *         options
 */
Intl.NumberFormat = function(locales, options) {};

/**
 * @param {Array<string>} locales
 * @param {{localeMatcher: (string|undefined)}=} options
 * @return {Array<string>}
 */
Intl.NumberFormat.supportedLocalesOf = function(locales, options) {};

/**
 * @param {number} num
 * @return {string}
 */
Intl.NumberFormat.prototype.format = function(num) {};

/**
 * @param {number} num
 * @return {!Array<{type: string, value: string}>}
 * @see http://www.ecma-international.org/ecma-402/#sec-intl.numberformat.prototype.formattoparts
 */
Intl.NumberFormat.prototype.formatToParts = function(num) {};

/**
 * @return {{locale: string, numberingSystem: string, style: string,
 *     currency: (string|undefined), currencyDisplay: (string|undefined),
 *     minimumIntegerDigits: number, minimumFractionDigits: number,
 *     maximumFractionDigits: number, minimumSignificantDigits: number,
 *     maximumSignificantDigits: number, useGrouping: boolean,
 *     compactDisplay: (string|undefined), currencySign: (string|undefined),
 *     signDisplay: (string|undefined), unit: (string|undefined),
 *     unitDisplay: (string|undefined)}}
 */
Intl.NumberFormat.prototype.resolvedOptions = function() {};

/**
 * @constructor
 * @param {string|Array<string>=} locales
 * @param {{localeMatcher: (string|undefined),
 *    formatMatcher: (string|undefined), calendar: (string|undefined),
 *    numberingSystem: (string|undefined), tz: (string|undefined),
 *    weekday: (string|undefined), era: (string|undefined),
 *    year: (string|undefined), month: (string|undefined),
 *    day: (string|undefined), hour: (string|undefined),
 *    minute: (string|undefined), second: (string|undefined),
 *    timeZoneName: (string|undefined), hour12: (boolean|undefined),
 *    dateStyle: (string|undefined), timeStyle: (string|undefined),
 *    timeZone: (string|undefined), dayPeriod: (string|undefined),
 *    hourCycle: (string|undefined),
 *    fractionalSecondDigits: (number|undefined)}=}
 *        options
 */
Intl.DateTimeFormat = function(locales, options) {};

/**
 * @param {Array<string>} locales
 * @param {{localeMatcher: string}=} options
 * @return {Array<string>}
 */
Intl.DateTimeFormat.supportedLocalesOf = function(locales, options) {};

/**
 * @param {(!Date|number)=} date
 * @return {string}
 */
Intl.DateTimeFormat.prototype.format = function(date) {};

/**
 * @param {(!Date|number)=} date
 * @return {Array<{type: string, value: string}>}
 */
Intl.DateTimeFormat.prototype.formatToParts = function(date) {};

/**
 * @return {{locale: string, calendar: string, numberingSystem: string,
 *    timeZone: (string|undefined), weekday: (string|undefined),
 *    era: (string|undefined), year: (string|undefined),
 *    month: (string|undefined), day: (string|undefined),
 *    hour: (string|undefined), minute: (string|undefined),
 *    second: (string|undefined), timeZoneName: (string|undefined),
 *    hour12: (boolean|undefined),
 *    dateStyle: (string|undefined), datimeStyle: (string|undefined),
 *    dayPeriod: (string|undefined), hourCycle: (string|undefined),
 *    fractionalSecondDigits: (number|undefined)}}
 */
Intl.DateTimeFormat.prototype.resolvedOptions = function() {};

/**
 * @constructor
 * @see https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/PluralRules#Syntax
 * @param {string|Array<string>=} locales
 * @param {{localeMatcher: (string|undefined), type: (string|undefined),
 *     minimumIntegerDigits: (number|undefined),
 *     minimumFractionDigits: (number|undefined),
 *     maximumFractionDigits: (number|undefined),
 *     minimumSignificantDigits: (number|undefined),
 *     maximumSignificantDigits: (number|undefined)}=}
 *         options
 */
Intl.PluralRules = function(locales, options) {};

/**
 * @see https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/PluralRules/supportedLocalesOf#Syntax
 * @param {Array<string>} locales
 * @param {{localeMatcher: string}=} options
 * @return {Array<string>}
 */
Intl.PluralRules.supportedLocalesOf = function(locales, options) {};

/**
 * @see https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/PluralRules/resolvedOptions#Syntax
 * @return {{locale: string, pluralCategories: Array<string>, type: string,
 *            minimumIntegerDigits: number, minimumFractionDigits: number,
 *            maximumFractionDigits: number, minimumSignificantDigits: number,
 *            maximumSignificantDigits: number }}
 */
Intl.PluralRules.prototype.resolvedOptions = function() {};

/**
 * @see https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/PluralRules/select#Syntax
 * @param {number} number
 * @return {string}
 */
Intl.PluralRules.prototype.select = function(number) {};

/**
 * @constructor
 * @see https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/RelativeTimeFormat#Syntax
 * @param {string|Array<string>=} locales
 * @param {{localeMatcher: (string|undefined),
 *    numeric: (string|undefined),
 *    style: (string|undefined)}=}
 *        options
 */
Intl.RelativeTimeFormat = function(locales, options) {};

/**
 * @see https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/RelativeTimeFormat/supportedLocalesOf#Syntax
 * @param {Array<string>} locales
 * @param {{localeMatcher: string}=} options
 * @return {Array<string>}
 */
Intl.RelativeTimeFormat.supportedLocalesOf = function(locales, options) {};

/**
 * @see https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/RelativeTimeFormat/format#Syntax
 * @param {number} value
 * @param {string} unit
 * @return {string}
 */
Intl.RelativeTimeFormat.prototype.format = function(value, unit) {};

/**
 * @see https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/RelativeTimeFormat/formatToParts#Syntax
 * @param {number} value
 * @param {string} unit
 * @return {Array<string>}
 */
Intl.RelativeTimeFormat.prototype.formatToParts = function(value, unit) {};

/**
 * @see https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/RelativeTimeFormat/resolvedOptions#Syntax
 * @return {{locale: string, pluralCategories: Array<string>, type: string}}
 */
Intl.RelativeTimeFormat.prototype.resolvedOptions = function() {};

/**
 * @constructor
 * @param {string|Array<string>=} locales
 * @param {{
 *     localeMatcher: (string|undefined),
 *     type: (string|undefined),
 *     style: (string|undefined)
 *     }=} options
 */
Intl.ListFormat = function(locales, options) {};

/**
 * @param {Array<string>} locales
 * @param {{localeMatcher: (string|undefined)}=} options
 * @return {Array<string>}
 */
Intl.ListFormat.supportedLocalesOf = function(locales, options) {};

/**
 * @param {Array<string|number>} items
 * @return {string}
 */
Intl.ListFormat.prototype.format = function(items) {};

/**
 * @param {Array<string|number>} items
 * @return {!Array<{type: string, value: string}>}
 * @see http://www.ecma-international.org/ecma-402/#sec-intl.listformat.prototype.formattoparts
 */
Intl.ListFormat.prototype.formatToParts = function(items) {};

/**
 * @see https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/ListFormat/resolvedOptions#Syntax
 * @return {{locale: string, style: string, type: string}}
 */
Intl.ListFormat.prototype.resolvedOptions = function() {};
/*
 * Copyright 2009 The Closure Compiler Authors
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/**
 * @fileoverview Definitions for all iPhone extensions. Created from:
 * http://developer.apple.com/library/safari/navigation/
 *
 * @externs
 * @author agrieve@google.com (Andrew Grieve)
 */


/**
 * @type {number}
 */
Touch.prototype.webkitForce;

/**
 * @type {number}
 */
Touch.prototype.webkitRadiusX;

/**
 * @type {number}
 */
Touch.prototype.webkitRadiusY;

/**
 * The distance between two fingers since the start of an event as a multiplier
 * of the initial distance. The initial value is 1.0. If less than 1.0, the
 * gesture is pinch close (to zoom out). If greater than 1.0, the gesture is
 * pinch open (to zoom in).
 * @type {number}
 */
TouchEvent.prototype.scale;

/**
 * The delta rotation since the start of an event, in degrees, where clockwise
 * is positive and counter-clockwise is negative. The initial value is 0.0.
 * @type {number}
 */
TouchEvent.prototype.rotation;

/**
 * Initializes a newly created TouchEvent object.
 * @param {string} type
 * @param {boolean} canBubble
 * @param {boolean} cancelable
 * @param {Window} view
 * @param {number} detail
 * @param {number} screenX
 * @param {number} screenY
 * @param {number} clientX
 * @param {number} clientY
 * @param {boolean} ctrlKey
 * @param {boolean} altKey
 * @param {boolean} shiftKey
 * @param {boolean} metaKey
 * @param {TouchList} touches
 * @param {TouchList} targetTouches
 * @param {TouchList} changedTouches
 * @param {number} scale
 * @param {number} rotation
 * @return {undefined}
 */
TouchEvent.prototype.initTouchEvent = function(type, canBubble, cancelable,
    view, detail, screenX, screenY, clientX, clientY, ctrlKey, altKey, shiftKey,
    metaKey, touches, targetTouches, changedTouches, scale, rotation) {};

/**
 * The GestureEvent class encapsulates information about a multi-touch gesture.
 *
 * GestureEvent objects are high-level events that encapsulate the low-level
 * TouchEvent objects. Both GestureEvent and TouchEvent events are sent during
 * a multi-touch sequence. Gesture events contain scaling and rotation
 * information allowing gestures to be combined, if supported by the platform.
 * If not supported, one gesture ends before another starts. Listen for
 * GestureEvent events if you want to respond to gestures only, not process
 * the low-level TouchEvent objects.
 *
 * @see http://developer.apple.com/library/safari/#documentation/UserExperience/Reference/GestureEventClassReference/GestureEvent/GestureEvent.html
 * @extends {UIEvent}
 * @constructor
 */
function GestureEvent() {}

/**
 * The distance between two fingers since the start of an event as a multiplier
 * of the initial distance. The initial value is 1.0. If less than 1.0, the
 * gesture is pinch close (to zoom out). If greater than 1.0, the gesture is
 * pinch open (to zoom in).
 * @type {number}
 */
GestureEvent.prototype.scale;

/**
 * The delta rotation since the start of an event, in degrees, where clockwise
 * is positive and counter-clockwise is negative. The initial value is 0.0.
 * @type {number}
 */
GestureEvent.prototype.rotation;

/**
 * The target of this gesture.
 * @type {EventTarget}
 */
GestureEvent.prototype.target;

/**
 * Initializes a newly created GestureEvent object.
 * @param {string} type
 * @param {boolean} canBubble
 * @param {boolean} cancelable
 * @param {Window} view
 * @param {number} detail
 * @param {number} screenX
 * @param {number} screenY
 * @param {number} clientX
 * @param {number} clientY
 * @param {boolean} ctrlKey
 * @param {boolean} altKey
 * @param {boolean} shiftKey
 * @param {boolean} metaKey
 * @param {EventTarget} target
 * @param {number} scale
 * @param {number} rotation
 * @return {undefined}
 */
GestureEvent.prototype.initGestureEvent = function(type, canBubble, cancelable,
    view, detail, screenX, screenY, clientX, clientY, ctrlKey, altKey, shiftKey,
    metaKey, target, scale, rotation) {};


/**
 * Specifies the JavaScript method to invoke when a gesture is started by
 * two or more fingers touching the surface.
 * @type {?function(!GestureEvent)}
 */
Element.prototype.ongesturestart;

/**
 * Specifies the JavaScript method to invoke when fingers are moved during a
 * gesture.
 * @type {?function(!GestureEvent)}
 */
Element.prototype.ongesturechange;

/**
 * Specifies the JavaScript method to invoke when a gesture ends (when there are
 * 0 or 1 fingers touching the surface).
 * @type {?function(!GestureEvent)}
 */
Element.prototype.ongestureend;

/**
 * Specifies the JavaScript method to invoke when the browser device's
 * orientation changes, i.e.the device is rotated.
 * @type {?function(!Event)}
 * @see http://developer.apple.com/library/IOS/#documentation/AppleApplications/Reference/SafariWebContent/HandlingEvents/HandlingEvents.html
 */
Window.prototype.onorientationchange;

/**
 * Returns the orientation of the browser's device, one of [-90, 0, 90, 180].
 * @type {number}
 * @see http://developer.apple.com/library/IOS/#documentation/AppleApplications/Reference/SafariWebContent/HandlingEvents/HandlingEvents.html
 */
Window.prototype.orientation;

/**
 * @implicitCast
 * @type {boolean}
 */
HTMLInputElement.prototype.autocorrect;

/**
 * @implicitCast
 * @type {boolean}
 */
HTMLInputElement.prototype.autocapitalize;

/**
 * @implicitCast
 * @type {boolean}
 */
HTMLTextAreaElement.prototype.autocorrect;

/**
 * @implicitCast
 * @type {boolean}
 */
HTMLTextAreaElement.prototype.autocapitalize;
/*
 * Copyright 2015 The Closure Compiler authors
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/**
 * @fileoverview MediaKey externs.
 * Based on {@link https://w3c.github.io/encrypted-media/ EME draft 5 December
 * 2019}.
 * @externs
 */


/**
 * @typedef {{
 *   contentType: string,
 *   encryptionScheme: (?string|undefined),
 *   robustness: (string|undefined)
 * }}
 * @see https://w3c.github.io/encrypted-media/#mediakeysystemmediacapability-dictionary
 */
var MediaKeySystemMediaCapability;


/** @typedef {{
 *   label: (string|undefined),
 *   initDataTypes: (!Array<string>|undefined),
 *   audioCapabilities: (!Array<!MediaKeySystemMediaCapability>|undefined),
 *   videoCapabilities: (!Array<!MediaKeySystemMediaCapability>|undefined),
 *   distinctiveIdentifier: (string|undefined),
 *   persistentState: (string|undefined),
 *   sessionTypes: (!Array<string>|undefined)
 * }}
 * @see https://w3c.github.io/encrypted-media/#mediakeysystemconfiguration-dictionary
 */
var MediaKeySystemConfiguration;


/**
 * @param {string} keySystem
 * @param {!Array<!MediaKeySystemConfiguration>} supportedConfigurations
 * @return {!Promise<!MediaKeySystemAccess>}
 * @see https://w3c.github.io/encrypted-media/#navigator-extension-requestmediakeysystemaccess
 */
Navigator.prototype.requestMediaKeySystemAccess =
    function(keySystem, supportedConfigurations) {};


/** @const {MediaKeys} */
HTMLMediaElement.prototype.mediaKeys;


/**
 * @param {MediaKeys} mediaKeys
 * @return {!Promise}
 * @see https://w3c.github.io/encrypted-media/#dom-htmlmediaelement-setmediakeys
 */
HTMLMediaElement.prototype.setMediaKeys = function(mediaKeys) {};



/**
 * @interface
 * @see https://w3c.github.io/encrypted-media/#mediakeysystemaccess-interface
 */
function MediaKeySystemAccess() {}


/** @return {!Promise<!MediaKeys>} */
MediaKeySystemAccess.prototype.createMediaKeys = function() {};


/** @return {!MediaKeySystemConfiguration} */
MediaKeySystemAccess.prototype.getConfiguration = function() {};


/** @const {string} */
MediaKeySystemAccess.prototype.keySystem;



/**
 * @interface
 * @see https://w3c.github.io/encrypted-media/#mediakeys-interface
 */
function MediaKeys() {}


/**
 * @param {string=} opt_sessionType defaults to "temporary"
 * @return {!MediaKeySession}
 * @throws {TypeError} if opt_sessionType is invalid.
 */
MediaKeys.prototype.createSession = function(opt_sessionType) {};


/**
 * @param {!BufferSource} serverCertificate
 * @return {!Promise}
 */
MediaKeys.prototype.setServerCertificate = function(serverCertificate) {};



/**
 * @interface
 * @see https://w3c.github.io/encrypted-media/#mediakeystatusmap-interface
 */
function MediaKeyStatusMap() {}


/** @const {number} */
MediaKeyStatusMap.prototype.size;


/**
 * Array entry 0 is the key, 1 is the value.
 * @return {!Iterator<!Array<!BufferSource|string>>}
 */
MediaKeyStatusMap.prototype.entries = function() {};


/**
 * The function is called with each value.
 * @param {function(string, !BufferSource)} callback A callback function to run for
 *     each media key. The first parameter is the key status; the second
 *     parameter is the key ID.
 * @return {undefined}
 */
MediaKeyStatusMap.prototype.forEach = function(callback) {};


/**
 * @param {!BufferSource} keyId
 * @return {string|undefined}
 */
MediaKeyStatusMap.prototype.get = function(keyId) {};


/**
 * @param {!BufferSource} keyId
 * @return {boolean}
 */
MediaKeyStatusMap.prototype.has = function(keyId) {};


/**
 * @return {!Iterator<!BufferSource>}
 */
MediaKeyStatusMap.prototype.keys = function() {};


/**
 * @return {!Iterator<string>}
 */
MediaKeyStatusMap.prototype.values = function() {};



/**
 * @interface
 * @extends {EventTarget}
 * @see https://w3c.github.io/encrypted-media/#mediakeysession-interface
 */
function MediaKeySession() {}


/** @const {string} */
MediaKeySession.prototype.sessionId;


/** @const {number} */
MediaKeySession.prototype.expiration;


/** @const {!Promise} */
MediaKeySession.prototype.closed;


/** @const {!MediaKeyStatusMap} */
MediaKeySession.prototype.keyStatuses;


/**
 * @param {string} initDataType
 * @param {!BufferSource} initData
 * @return {!Promise}
 */
MediaKeySession.prototype.generateRequest = function(initDataType, initData) {};


/**
 * @param {string} sessionId
 * @return {!Promise<boolean>}}
 */
MediaKeySession.prototype.load = function(sessionId) {};


/**
 * @param {!BufferSource} response
 * @return {!Promise}
 */
MediaKeySession.prototype.update = function(response) {};


/** @return {!Promise} */
MediaKeySession.prototype.close = function() {};


/** @return {!Promise} */
MediaKeySession.prototype.remove = function() {};


/** @override */
MediaKeySession.prototype.addEventListener = function(
    type, listener, opt_options) {};


/** @override */
MediaKeySession.prototype.removeEventListener = function(
    type, listener, opt_options) {};


/** @override */
MediaKeySession.prototype.dispatchEvent = function(evt) {};

/**
 * @record
 * @extends {EventInit}
 * @see https://w3c.github.io/encrypted-media/#dom-mediakeymessageeventinit
 */
function MediaKeyMessageEventInit() {};

/** @type {string} */
MediaKeyMessageEventInit.prototype.messageType;

/** @type {!ArrayBuffer} */
MediaKeyMessageEventInit.prototype.message;


/**
 * @constructor
 * @param {string} type
 * @param {MediaKeyMessageEventInit} eventInitDict
 * @extends {Event}
 * @see https://w3c.github.io/encrypted-media/#mediakeymessageevent
 */
function MediaKeyMessageEvent(type, eventInitDict) {}


/** @const {string} */
MediaKeyMessageEvent.prototype.messageType;


/** @const {!ArrayBuffer} */
MediaKeyMessageEvent.prototype.message;


/** @const {!MediaKeySession} */
MediaKeyMessageEvent.prototype.target;

/**
 * @record
 * @extends {EventInit}
 * @see https://w3c.github.io/encrypted-media/#dom-mediaencryptedeventinit
 */
function MediaEncryptedEventInit() {};

/** @type {(string | undefined)} */
MediaEncryptedEventInit.prototype.initDataType;

/** @type {(ArrayBuffer | undefined)} */
MediaEncryptedEventInit.prototype.initData;

/**
 * @constructor
 * @param {string} type
 * @param {MediaEncryptedEventInit=} opt_eventInitDict
 * @extends {Event}
 * @see https://w3c.github.io/encrypted-media/#mediaencryptedevent
 */
function MediaEncryptedEvent(type, opt_eventInitDict) {}


/** @const {string} */
MediaEncryptedEvent.prototype.initDataType;


/** @const {ArrayBuffer} */
MediaEncryptedEvent.prototype.initData;


/** @const {!HTMLMediaElement} */
MediaEncryptedEvent.prototype.target;

/*
 * Copyright 2012 The Closure Compiler Authors
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/**
 * @fileoverview Definitions for the Media Source Extensions. Note that the
 * properties available here are the union of several versions of the spec.
 * @see http://dvcs.w3.org/hg/html-media/raw-file/tip/media-source/media-source.html
 *
 * @externs
 */

/**
 * @constructor
 * @implements {EventTarget}
 */
function MediaSource() {}

/** @override */
MediaSource.prototype.addEventListener = function(type, listener, opt_options) {
};

/** @override */
MediaSource.prototype.removeEventListener = function(
    type, listener, opt_options) {};

/** @override */
MediaSource.prototype.dispatchEvent = function(evt) {};

/** @type {Array<SourceBuffer>} */
MediaSource.prototype.sourceBuffers;

/** @type {Array<SourceBuffer>} */
MediaSource.prototype.activeSourceBuffers;

/** @type {number} */
MediaSource.prototype.duration;

/**
 * @param {string} type
 * @return {SourceBuffer}
 */
MediaSource.prototype.addSourceBuffer = function(type) {};

/**
 * @param {SourceBuffer} sourceBuffer
 * @return {undefined}
 */
MediaSource.prototype.removeSourceBuffer = function(sourceBuffer) {};

/**
 * Updates the live seekable range.
 * @param {number} start
 * @param {number} end
 */
MediaSource.prototype.setLiveSeekableRange = function(start, end) {};

/**
 * Clears the live seekable range.
 * @return {void}
 */
MediaSource.prototype.clearLiveSeekableRange = function() {};

/** @type {string} */
MediaSource.prototype.readyState;

/**
 * @param {string=} opt_error
 * @return {undefined}
 */
MediaSource.prototype.endOfStream = function(opt_error) {};

/**
 * @param {string} type
 * @return {boolean}
 */
MediaSource.isTypeSupported = function(type) {};


/**
 * @constructor
 * @implements {EventTarget}
 */
function SourceBuffer() {}

/** @override */
SourceBuffer.prototype.addEventListener = function(
    type, listener, opt_options) {};

/** @override */
SourceBuffer.prototype.removeEventListener = function(
    type, listener, opt_options) {};

/** @override */
SourceBuffer.prototype.dispatchEvent = function(evt) {};

/** @type {string} */
SourceBuffer.prototype.appendMode;

/** @type {boolean} */
SourceBuffer.prototype.updating;

/** @type {TimeRanges} */
SourceBuffer.prototype.buffered;

/** @type {number} */
SourceBuffer.prototype.timestampOffset;

/** @type {number} */
SourceBuffer.prototype.appendWindowStart;

/** @type {number} */
SourceBuffer.prototype.appendWindowEnd;

/**
 * @param {Uint8Array} data
 * @return {undefined}
 */
SourceBuffer.prototype.append = function(data) {};

/**
 * @param {ArrayBuffer|ArrayBufferView} data
 * @return {undefined}
 */
SourceBuffer.prototype.appendBuffer = function(data) {};

/**
 * Abort the current segment append sequence.
 * @return {undefined}
 */
SourceBuffer.prototype.abort = function() {};

/**
 * @param {number} start
 * @param {number} end
 * @return {undefined}
 */
SourceBuffer.prototype.remove = function(start, end) {};

/**
 * @param {string} type
 * @return {undefined}
 */
SourceBuffer.prototype.changeType = function(type) {};
/*
 * Copyright 2011 The Closure Compiler Authors
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/**
 * @fileoverview Nonstandard definitions for timing control for script base animations.
 *
 * @externs
 */

/**
 * @param {!FrameRequestCallback} callback
 * @param {Element=} opt_element
 * @return {number}
 */
function webkitRequestAnimationFrame(callback, opt_element) {};

/**
 * @param {number} handle
 * @return {undefined}
 */
function webkitCancelRequestAnimationFrame(handle) {};

/**
 * @param {number} handle
 * @return {undefined}
 */
function webkitCancelAnimationFrame(handle) {};

/**
 * @param {?FrameRequestCallback} callback It's legitimate to pass a null
 *     callback and listen on the MozBeforePaint event instead.
 * @param {Element=} opt_element
 * @return {number}
 */
function mozRequestAnimationFrame(callback, opt_element) {};

/**
 * @param {number} handle
 * @return {undefined}
 */
function mozCancelRequestAnimationFrame(handle) {};

/**
 * @param {number} handle
 * @return {undefined}
 */
function mozCancelAnimationFrame(handle) {};

/**
 * @param {!FrameRequestCallback} callback
 * @param {Element=} opt_element
 * @return {number}
 */
function msRequestAnimationFrame(callback, opt_element) {};

/**
 * @param {number} handle
 * @return {undefined}
 */
function msCancelRequestAnimationFrame(handle) {};

/**
 * @param {number} handle
 * @return {undefined}
 */
function msCancelAnimationFrame(handle) {};

/**
 * @param {!FrameRequestCallback} callback
 * @param {Element=} opt_element
 * @return {number}
 */
function oRequestAnimationFrame(callback, opt_element) {};

/**
 * @param {number} handle
 * @return {undefined}
 */
function oCancelRequestAnimationFrame(handle) {};

/**
 * @param {number} handle
 * @return {undefined}
 */
function oCancelAnimationFrame(handle) {};
/*
 * Copyright 2012 The Closure Compiler Authors.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/**
 * @fileoverview Nonstandard definitions for the API related to audio.
 *
 * @externs
 */

/**
 * Definitions for the Web Audio API with webkit prefix.
 */

/**
 * @constructor
 * @extends {AudioContext}
 */
function webkitAudioContext() {}

/**
 * @param {number} numberOfChannels
 * @param {number} length
 * @param {number} sampleRate
 * @constructor
 * @extends {OfflineAudioContext}
 */
function webkitOfflineAudioContext(numberOfChannels, length, sampleRate) {}

/**
 * @constructor
 * @extends {AudioPannerNode}
 */
function webkitAudioPannerNode() {}

/**
 * @constructor
 * @extends {PannerNode}
 */
function webkitPannerNode() {}

/**
 * Definitions for the Audio API as implemented in Firefox.
 *   Please note that this document describes a non-standard experimental API.
 *   This API is considered deprecated.
 * @see https://developer.mozilla.org/en/DOM/HTMLAudioElement
 */

/**
 * @param {string=} src
 * @constructor
 * @extends {HTMLAudioElement}
 */
function Audio(src) {}

/**
 * @param {number} channels
 * @param {number} rate
 */
Audio.prototype.mozSetup = function(channels, rate) {};

/**
 * @param {Array|Float32Array} buffer
 */
Audio.prototype.mozWriteAudio = function(buffer) {};

/**
 * @return {number}
 */
Audio.prototype.mozCurrentSampleOffset = function() {};
/*
 * Copyright 2019 The Closure Compiler Authors
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/**
 * @fileoverview Definitions for console debugging facilities implemented in
 *     various browsers but not part of https://console.spec.whatwg.org/.
 * @externs
 */

/**
 * @constructor
 * @see https://cs.chromium.org/search/?q=%22interface+MemoryInfo%22+file:idl+file:WebKit+package:chromium&type=cs
 */
function MemoryInfo() {};

/** @type {number} */
MemoryInfo.prototype.totalJSHeapSize;

/** @type {number} */
MemoryInfo.prototype.usedJSHeapSize;

/** @type {number} */
MemoryInfo.prototype.jsHeapSizeLimit;

/**
 * @param {*} value
 * @return {undefined}
 */
Console.prototype.markTimeline = function(value) {};

/**
 * @param {string=} title
 * @return {undefined}
 */
Console.prototype.profile = function(title) {};

/** @type {Array<ScriptProfile>} */
Console.prototype.profiles;

/**
 * @param {string=} title
 * @return {undefined}
 */
Console.prototype.profileEnd = function(title) {};

/**
 * @param {*} value
 * @return {undefined}
 */
Console.prototype.timeStamp = function(value) {};

/** @type {MemoryInfo} */
Console.prototype.memory;
/*
 * Copyright 2019 The Closure Compiler Authors
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/**
 * @fileoverview Definitions for file api implemented in
 *     various browsers but not part of https://www.w3.org/TR/FileAPI.
 * @externs
 */

/**
 * This replaces Blob.slice in Chrome since WebKit revision 84005.
 * @see http://lists.w3.org/Archives/Public/public-webapps/2011AprJun/0222.html
 * @param {number=} start
 * @param {number=} end
 * @param {string=} contentType
 * @return {!Blob}
 * @nosideeffects
 */
Blob.prototype.webkitSlice = function(start, end, contentType) {};

/**
 * This replaces Blob.slice in Firefox.
 * @see http://lists.w3.org/Archives/Public/public-webapps/2011AprJun/0222.html
 * @param {number=} start
 * @param {number=} end
 * @param {string=} contentType
 * @return {!Blob}
 * @nosideeffects
 */
Blob.prototype.mozSlice = function(start, end, contentType) {};

/**
 * @see http://www.w3.org/TR/file-writer-api/#the-blobbuilder-interface
 * @constructor
 */
function BlobBuilder() {}

/**
 * @see http://www.w3.org/TR/file-writer-api/#widl-BlobBuilder-append0
 * @see http://www.w3.org/TR/file-writer-api/#widl-BlobBuilder-append1
 * @see http://www.w3.org/TR/file-writer-api/#widl-BlobBuilder-append2
 * @param {string|Blob|ArrayBuffer} data
 * @param {string=} endings
 * @return {undefined}
 */
BlobBuilder.prototype.append = function(data, endings) {};

/**
 * @see http://www.w3.org/TR/file-writer-api/#widl-BlobBuilder-getBlob
 * @param {string=} contentType
 * @return {!Blob}
 */
BlobBuilder.prototype.getBlob = function(contentType) {};

/**
 * This has replaced BlobBuilder in Chrome since WebKit revision 84008.
 * @see http://lists.w3.org/Archives/Public/public-webapps/2011AprJun/0222.html
 * @constructor
 */
function WebKitBlobBuilder() {}

/**
 * @see http://www.w3.org/TR/file-writer-api/#widl-BlobBuilder-append0
 * @see http://www.w3.org/TR/file-writer-api/#widl-BlobBuilder-append1
 * @see http://www.w3.org/TR/file-writer-api/#widl-BlobBuilder-append2
 * @param {string|Blob|ArrayBuffer} data
 * @param {string=} endings
 * @return {undefined}
 */
WebKitBlobBuilder.prototype.append = function(data, endings) {};

/**
 * @see http://www.w3.org/TR/file-writer-api/#widl-BlobBuilder-getBlob
 * @param {string=} contentType
 * @return {!Blob}
 */
WebKitBlobBuilder.prototype.getBlob = function(contentType) {};

/**
 * @see http://www.w3.org/TR/file-system-api/#the-entry-interface
 * @typedef {!FileSystemEntry}
 */
var Entry;

/**
 * @see http://www.w3.org/TR/file-system-api/#the-directoryentry-interface
 * @typedef {!FileSystemDirectoryEntry}
 */
var DirectoryEntry;

/**
 * @see http://www.w3.org/TR/file-system-api/#widl-DirectoryEntry-removeRecursively
 * @param {function()} successCallback
 * @param {function(!DOMException)=} errorCallback
 * @return {undefined}
 */
FileSystemDirectoryEntry.prototype.removeRecursively = function(
    successCallback, errorCallback) {};

/**
 * @see http://www.w3.org/TR/file-system-api/#the-directoryreader-interface
 * @typedef {!FileSystemDirectoryReader}
 */
var DirectoryReader;

/**
 * @see http://www.w3.org/TR/file-system-api/#widl-Entry-moveTo
 * @param {!DirectoryEntry} parent
 * @param {string=} newName
 * @param {function(!Entry)=} successCallback
 * @param {function(!DOMException)=} errorCallback
 * @return {undefined}
 */
FileSystemEntry.prototype.moveTo = function(
    parent, newName, successCallback, errorCallback) {};

/**
 * @see http://www.w3.org/TR/file-system-api/#widl-Entry-copyTo
 * @param {!DirectoryEntry} parent
 * @param {string=} newName
 * @param {function(!Entry)=} successCallback
 * @param {function(!DOMException)=} errorCallback
 * @return {undefined}
 */
FileSystemEntry.prototype.copyTo = function(
    parent, newName, successCallback, errorCallback) {};

/**
 * @see http://www.w3.org/TR/file-system-api/#widl-Entry-toURL
 * @param {string=} mimeType
 * @return {string}
 */
FileSystemEntry.prototype.toURL = function(mimeType) {};

/**
 * @see http://www.w3.org/TR/file-system-api/#widl-Entry-remove
 * @param {function()} successCallback
 * @param {function(!DOMException)=} errorCallback
 * @return {undefined}
 */
FileSystemEntry.prototype.remove = function(successCallback, errorCallback) {};

/**
 * @see http://www.w3.org/TR/file-system-api/#widl-Entry-getMetadata
 * @param {function(!Metadata)} successCallback
 * @param {function(!DOMException)=} errorCallback
 * @return {undefined}
 */
FileSystemEntry.prototype.getMetadata = function(successCallback, errorCallback) {};

/**
 * @return {?Entry} The Entry corresponding to this item, or null. Note that
 * despite its name,this method only works in Chrome, and will eventually
 * be renamed to {@code getAsEntry}.
 * @nosideeffects
 */
DataTransferItem.prototype.webkitGetAsEntry = function() {};

/**
 * @see https://wicg.github.io/entries-api/#dom-file-webkitrelativepath
 * @type {string}
 */
File.prototype.webkitRelativePath;

/**
 * @see http://www.w3.org/TR/file-system-api/#the-fileentry-interface
 * @typedef {!FileSystemFileEntry}
 */
var FileEntry;

/**
 * @see http://www.w3.org/TR/file-system-api/#widl-FileEntry-createWriter
 * @param {function(!FileWriter)} successCallback
 * @param {function(!FileError)=} errorCallback
 * @return {undefined}
 */
FileSystemFileEntry.prototype.createWriter = function(successCallback, errorCallback) {};

/**
 * @see http://www.w3.org/TR/FileAPI/#FileErrorInterface
 * @constructor
 * @extends {DOMError}
 */
function FileError() {}

/**
 * @see http://www.w3.org/TR/FileAPI/#dfn-NOT_FOUND_ERR
 * @const {number}
 */
FileError.prototype.NOT_FOUND_ERR;

/** @const {number} */
FileError.NOT_FOUND_ERR;

/**
 * @see http://www.w3.org/TR/FileAPI/#dfn-SECURITY_ERR
 * @const {number}
 */
FileError.prototype.SECURITY_ERR;

/** @const {number} */
FileError.SECURITY_ERR;

/**
 * @see http://www.w3.org/TR/FileAPI/#dfn-ABORT_ERR
 * @const {number}
 */
FileError.prototype.ABORT_ERR;

/** @const {number} */
FileError.ABORT_ERR;

/**
 * @see http://www.w3.org/TR/FileAPI/#dfn-NOT_READABLE_ERR
 * @const {number}
 */
FileError.prototype.NOT_READABLE_ERR;

/** @const {number} */
FileError.NOT_READABLE_ERR;

/**
 * @see http://www.w3.org/TR/FileAPI/#dfn-ENCODING_ERR
 * @const {number}
 */
FileError.prototype.ENCODING_ERR;

/** @const {number} */
FileError.ENCODING_ERR;

/**
 * @see http://www.w3.org/TR/file-writer-api/#widl-FileError-NO_MODIFICATION_ALLOWED_ERR
 * @const {number}
 */
FileError.prototype.NO_MODIFICATION_ALLOWED_ERR;

/** @const {number} */
FileError.NO_MODIFICATION_ALLOWED_ERR;

/**
 * @see http://www.w3.org/TR/file-writer-api/#widl-FileException-INVALID_STATE_ERR
 * @const {number}
 */
FileError.prototype.INVALID_STATE_ERR;

/** @const {number} */
FileError.INVALID_STATE_ERR;

/**
 * @see http://www.w3.org/TR/file-writer-api/#widl-FileException-SYNTAX_ERR
 * @const {number}
 */
FileError.prototype.SYNTAX_ERR;

/** @const {number} */
FileError.SYNTAX_ERR;

/**
 * @see http://www.w3.org/TR/file-system-api/#widl-FileError-INVALID_MODIFICATION_ERR
 * @const {number}
 */
FileError.prototype.INVALID_MODIFICATION_ERR;

/** @const {number} */
FileError.INVALID_MODIFICATION_ERR;

/**
 * @see http://www.w3.org/TR/file-system-api/#widl-FileError-QUOTA_EXCEEDED_ERR
 * @const {number}
 */
FileError.prototype.QUOTA_EXCEEDED_ERR;

/** @const {number} */
FileError.QUOTA_EXCEEDED_ERR;

/**
 * @see http://www.w3.org/TR/file-system-api/#widl-FileException-TYPE_MISMATCH_ERR
 * @const {number}
 */
FileError.prototype.TYPE_MISMATCH_ERR;

/** @const {number} */
FileError.TYPE_MISMATCH_ERR;

/**
 * @see http://www.w3.org/TR/file-system-api/#widl-FileException-PATH_EXISTS_ERR
 * @const {number}
 */
FileError.prototype.PATH_EXISTS_ERR;

/** @const {number} */
FileError.PATH_EXISTS_ERR;

/**
 * @see http://www.w3.org/TR/FileAPI/#dfn-code-exception
 * @type {number}
 * @deprecated Use the 'name' or 'message' attributes of DOMError rather than
 * 'code'
 */
FileError.prototype.code;

/**
 * @see http://www.w3.org/TR/file-writer-api/#idl-def-FileSaver
 * @constructor
 */
function FileSaver() {};

/**
 * @see http://www.w3.org/TR/file-writer-api/#widl-FileSaver-abort
 * @return {undefined}
 */
FileSaver.prototype.abort = function() {};

/**
 * @see http://www.w3.org/TR/file-writer-api/#widl-FileSaver-INIT
 * @const {number}
 */
FileSaver.prototype.INIT;

/**
 * @see http://www.w3.org/TR/file-writer-api/#widl-FileSaver-WRITING
 * @const {number}
 */
FileSaver.prototype.WRITING;

/**
 * @see http://www.w3.org/TR/file-writer-api/#widl-FileSaver-DONE
 * @const {number}
 */
FileSaver.prototype.DONE;

/**
 * @see http://www.w3.org/TR/file-writer-api/#widl-FileSaver-readyState
 * @type {number}
 */
FileSaver.prototype.readyState;

/**
 * @see http://www.w3.org/TR/file-writer-api/#widl-FileSaver-error
 * @type {FileError}
 */
FileSaver.prototype.error;

/**
 * @see http://www.w3.org/TR/file-writer-api/#widl-FileSaver-onwritestart
 * @type {?function(!ProgressEvent<!FileSaver>)}
 */
FileSaver.prototype.onwritestart;

/**
 * @see http://www.w3.org/TR/file-writer-api/#widl-FileSaver-onprogress
 * @type {?function(!ProgressEvent<!FileSaver>)}
 */
FileSaver.prototype.onprogress;

/**
 * @see http://www.w3.org/TR/file-writer-api/#widl-FileSaver-onwrite
 * @type {?function(!ProgressEvent<!FileSaver>)}
 */
FileSaver.prototype.onwrite;

/**
 * @see http://www.w3.org/TR/file-writer-api/#widl-FileSaver-onabort
 * @type {?function(!ProgressEvent<!FileSaver>)}
 */
FileSaver.prototype.onabort;

/**
 * @see http://www.w3.org/TR/file-writer-api/#widl-FileSaver-onerror
 * @type {?function(!ProgressEvent<!FileSaver>)}
 */
FileSaver.prototype.onerror;

/**
 * @see http://www.w3.org/TR/file-writer-api/#widl-FileSaver-onwriteend
 * @type {?function(!ProgressEvent<!FileSaver>)}
 */
FileSaver.prototype.onwriteend;

/**
 * @see http://www.w3.org/TR/file-writer-api/#idl-def-FileWriter
 * @constructor
 * @extends {FileSaver}
 */
function FileWriter() {}

/**
 * @see http://www.w3.org/TR/file-writer-api/#widl-FileWriter-position
 * @type {number}
 */
FileWriter.prototype.position;

/**
 * @see http://www.w3.org/TR/file-writer-api/#widl-FileWriter-length
 * @type {number}
 */
FileWriter.prototype.length;

/**
 * @see http://www.w3.org/TR/file-writer-api/#widl-FileWriter-write
 * @param {!Blob} blob
 * @return {undefined}
 */
FileWriter.prototype.write = function(blob) {};

/**
 * @see http://www.w3.org/TR/file-writer-api/#widl-FileWriter-seek
 * @param {number} offset
 * @return {undefined}
 */
FileWriter.prototype.seek = function(offset) {};

/**
 * @see http://www.w3.org/TR/file-writer-api/#widl-FileWriter-truncate
 * @param {number} size
 * @return {undefined}
 */
FileWriter.prototype.truncate = function(size) {};

/**
 * LocalFileSystem interface, implemented by Window and WorkerGlobalScope.
 * @see http://www.w3.org/TR/file-system-api/#idl-def-LocalFileSystem
 * @constructor
 */
function LocalFileSystem() {}

/**
 * Metadata interface.
 * @see http://www.w3.org/TR/file-system-api/#idl-def-Metadata
 * @constructor
 */
function Metadata() {}

/**
 * @see http://www.w3.org/TR/file-system-api/#widl-Metadata-modificationTime
 * @type {!Date}
 */
Metadata.prototype.modificationTime;

/**
 * @see http://www.w3.org/TR/file-system-api/#widl-Metadata-size
 * @type {number}
 */
Metadata.prototype.size;

/**
 * @see http://www.w3.org/TR/file-system-api/#widl-LocalFileSystem-TEMPORARY
 * @const {number}
 */
Window.prototype.TEMPORARY;

/**
 * @see http://www.w3.org/TR/file-system-api/#widl-LocalFileSystem-PERSISTENT
 * @const {number}
 */
Window.prototype.PERSISTENT;

/**
 * @see http://www.w3.org/TR/file-system-api/#widl-LocalFileSystem-requestFileSystem
 * @param {number} type
 * @param {number} size
 * @param {function(!FileSystem)} successCallback
 * @param {function(!FileError)=} errorCallback
 * @return {undefined}
 */
function requestFileSystem(type, size, successCallback, errorCallback) {}

/**
 * @see http://www.w3.org/TR/file-system-api/#widl-LocalFileSystem-requestFileSystem
 * @param {number} type
 * @param {number} size
 * @param {function(!FileSystem)} successCallback
 * @param {function(!FileError)=} errorCallback
 * @return {undefined}
 */
Window.prototype.requestFileSystem = function(
    type, size, successCallback, errorCallback) {};

/**
 * @see http://www.w3.org/TR/file-system-api/#widl-LocalFileSystem-resolveLocalFileSystemURI
 * @param {string} uri
 * @param {function(!Entry)} successCallback
 * @param {function(!FileError)=} errorCallback
 * @return {undefined}
 */
function resolveLocalFileSystemURI(uri, successCallback, errorCallback) {}

/**
 * @see http://www.w3.org/TR/file-system-api/#widl-LocalFileSystem-resolveLocalFileSystemURI
 * @param {string} uri
 * @param {function(!Entry)} successCallback
 * @param {function(!FileError)=} errorCallback
 * @return {undefined}
 */
Window.prototype.resolveLocalFileSystemURI =
    function(uri, successCallback, errorCallback) {}

/**
 * This has replaced requestFileSystem in Chrome since WebKit revision 84224.
 * @see http://www.w3.org/TR/file-system-api/#widl-LocalFileSystem-requestFileSystem
 * @param {number} type
 * @param {number} size
 * @param {function(!FileSystem)} successCallback
 * @param {function(!FileError)=} errorCallback
 * @return {undefined}
 */
function webkitRequestFileSystem(type, size, successCallback, errorCallback) {}

/**
 * This has replaced requestFileSystem in Chrome since WebKit revision 84224.
 * @see http://www.w3.org/TR/file-system-api/#widl-LocalFileSystem-requestFileSystem
 * @param {number} type
 * @param {number} size
 * @param {function(!FileSystem)} successCallback
 * @param {function(!FileError)=} errorCallback
 * @return {undefined}
 */
Window.prototype.webkitRequestFileSystem = function(type, size, successCallback,
    errorCallback) {};

/**
 * This has replaced resolveLocalFileSystemURI in Chrome since WebKit revision
 * 84224.
 * @see http://www.w3.org/TR/file-system-api/#widl-LocalFileSystem-resolveLocalFileSystemURI
 * @param {string} uri
 * @param {function(!Entry)} successCallback
 * @param {function(!FileError)=} errorCallback
 * @return {undefined}
 */
function webkitResolveLocalFileSystemURI(uri, successCallback, errorCallback) {}

/**
 * This has replaced resolveLocalFileSystemURI in Chrome since WebKit revision
 * 84224.
 * @see http://www.w3.org/TR/file-system-api/#widl-LocalFileSystem-resolveLocalFileSystemURI
 * @param {string} uri
 * @param {function(!Entry)} successCallback
 * @param {function(!FileError)=} errorCallback
 * @return {undefined}
 */
Window.prototype.webkitResolveLocalFileSystemURI = function(
    uri, successCallback, errorCallback) {}

// WindowBlobURIMethods interface, implemented by Window and WorkerGlobalScope.
// There are three APIs for this: the old specced API, the new specced API, and
// the webkit-prefixed API.
// @see http://www.w3.org/TR/FileAPI/#creating-revoking

/**
 * @see http://www.w3.org/TR/FileAPI/#dfn-createObjectURL
 * @param {!Object} obj
 * @return {string}
 */
function createObjectURL(obj) {};

/**
 * @see http://www.w3.org/TR/FileAPI/#dfn-createObjectURL
 * @param {!Object} obj
 * @return {string}
 */
Window.prototype.createObjectURL = function(obj) {};

/**
 * @see http://www.w3.org/TR/FileAPI/#dfn-revokeObjectURL
 * @param {string} url
 * @return {undefined}
 */
function revokeObjectURL(url) {};

/**
 * @see http://www.w3.org/TR/FileAPI/#dfn-revokeObjectURL
 * @param {string} url
 * @return {undefined}
 */
Window.prototype.revokeObjectURL = function(url) {};

/**
 * This has been replaced by URL in Chrome since WebKit revision 75739.
 * @constructor
 * @param {string} urlString
 * @param {string=} base
 */
function webkitURL(urlString, base) {}

/**
 * @see http://www.w3.org/TR/FileAPI/#dfn-createObjectURL
 * @param {!Object} obj
 * @return {string}
 */
webkitURL.createObjectURL = function(obj) {};

/**
 * @see http://www.w3.org/TR/FileAPI/#dfn-revokeObjectURL
 * @param {string} url
 * @return {undefined}
 */
webkitURL.revokeObjectURL = function(url) {};

/**
 * @see https://developers.google.com/chrome/whitepapers/storage
 * @constructor
 */
function StorageInfo() {}

/**
 * @see https://developers.google.com/chrome/whitepapers/storage
 * @const {number}
 * */
StorageInfo.prototype.TEMPORARY;

/**
 * @see https://developers.google.com/chrome/whitepapers/storage
 * @const {number}
 */
StorageInfo.prototype.PERSISTENT;

/**
 * @see https://developers.google.com/chrome/whitepapers/storage#requestQuota
 * @param {number} type
 * @param {number} size
 * @param {function(number)} successCallback
 * @param {function(!DOMException)=} errorCallback
 * @return {undefined}
 */
StorageInfo.prototype.requestQuota = function(
    type, size, successCallback, errorCallback) {};

/**
 * @see https://developers.google.com/chrome/whitepapers/storage#queryUsageAndQuota
 * @param {number} type
 * @param {function(number, number)} successCallback
 * @param {function(!DOMException)=} errorCallback
 * @return {undefined}
 */
StorageInfo.prototype.queryUsageAndQuota = function(
    type, successCallback, errorCallback) {};

/**
 * @see https://developers.google.com/chrome/whitepapers/storage
 * @type {!StorageInfo}
 */
Window.prototype.webkitStorageInfo;

/**
 * @see https://dvcs.w3.org/hg/quota/raw-file/tip/Overview.html#storagequota-interface.
 * @constructor
 */
function StorageQuota() {}

/**
 * @param {number} size
 * @param {function(number)=} successCallback
 * @param {function(!DOMException)=} errorCallback
 * @return {undefined}
 */
StorageQuota.prototype.requestQuota = function(
    size, successCallback, errorCallback) {};

/**
 * @param {function(number, number)} successCallback
 * @param {function(!DOMException)=} errorCallback
 * @return {undefined}
 */
StorageQuota.prototype.queryUsageAndQuota = function(
    successCallback, errorCallback) {};

/**
 * @type {!StorageQuota}
 * @see https://developer.chrome.com/apps/offline_storage
 */
Navigator.prototype.webkitPersistentStorage;

/**
 * @type {!StorageQuota}
 * @see https://developer.chrome.com/apps/offline_storage
 */
Navigator.prototype.webkitTemporaryStorage;


/**
 * @see http://www.w3.org/TR/file-writer-api/#idl-def-FileWriterSync
 * @constructor
 */
function FileWriterSync() {}

/**
 * @see http://www.w3.org/TR/file-writer-api/#widl-FileWriterSync-position
 * @type {number}
 * @const
 */
FileWriterSync.prototype.position;

/**
 * @see http://www.w3.org/TR/file-writer-api/#widl-FileWriterSync-length
 * @type {number}
 * @const
 */
FileWriterSync.prototype.length;

/**
 * @see http://www.w3.org/TR/file-writer-api/#widl-FileWriter-write
 * @param {!Blob} blob
 * @return {undefined}
 */
FileWriterSync.prototype.write = function(blob) {};

/**
 * @see http://www.w3.org/TR/file-writer-api/#widl-FileWriterSync-seek
 * @param {number} offset
 * @return {undefined}
 */
FileWriterSync.prototype.seek = function(offset) {};

/**
 * @see http://www.w3.org/TR/file-writer-api/#widl-FileWriterSync-truncate
 * @param {number} size
 * @return {undefined}
 */
FileWriterSync.prototype.truncate = function(size) {};

/**
 * LocalFileSystemSync interface, implemented by WorkerGlobalScope.
 * @see http://www.w3.org/TR/file-system-api/#idl-def-LocalFileSystemSync
 * @constructor
 */
function LocalFileSystemSync() {}

/**
 * @see http://www.w3.org/TR/file-system-api/
 *     #the-synchronous-filesystem-interface
 * @constructor
 */
function FileSystemSync() {}

/**
 * @see http://www.w3.org/TR/file-system-api/#widl-FileSystemSync-name
 * @type {string}
 * @const
 */
FileSystemSync.prototype.name;

/**
 * @see http://www.w3.org/TR/file-system-api/#widl-FileSystemSync-root
 * @type {!DirectoryEntrySync}
 * @const
 */
FileSystemSync.prototype.root;

/**
 * @see http://www.w3.org/TR/file-system-api/#widl-LocalFileSystemSync-requestFileSystemSync-FileSystemSync-unsigned-short-type-unsigned-long-long-size
 * @param {number} type
 * @param {number} size
 * @return {!FileSystemSync}
 */
function requestFileSystemSync(type, size) {}

/**
 * @see http://www.w3.org/TR/file-system-api/#widl-LocalFileSystemSync-requestFileSystemSync-FileSystemSync-unsigned-short-type-unsigned-long-long-size
 * @param {number} type
 * @param {number} size
 * @return {!FileSystemSync}
 */
function webkitRequestFileSystemSync(type, size) {}

/**
 * @see http://www.w3.org/TR/file-system-api/#the-entrysync-interface
 * @constructor
 */
function EntrySync() {};

/**
 * @see http://www.w3.org/TR/file-system-api/#widl-EntrySync-isFile
 * @type {boolean}
 * @const
 */
EntrySync.prototype.isFile;

/**
 * @see http://www.w3.org/TR/file-system-api/#widl-EntrySync-isDirectory
 * @type {boolean}
 * @const
 */
EntrySync.prototype.isDirectory;

/**
 * @see http://www.w3.org/TR/file-system-api/#widl-EntrySync-name
 * @type {string}
 * @const
 */
EntrySync.prototype.name;

/**
 * @see http://www.w3.org/TR/file-system-api/#widl-EntrySync-fullPath
 * @type {string}
 * @const
 */
EntrySync.prototype.fullPath;

/**
 * @see http://www.w3.org/TR/file-system-api/#widl-EntrySync-filesystem
 * @type {!FileSystemSync}
 * @const
 */
EntrySync.prototype.filesystem;

/**
 * @see http://www.w3.org/TR/file-system-api/#widl-EntrySync-moveTo
 * @param {!DirectoryEntrySync} parent
 * @param {string=} newName
 * @return {!EntrySync}
 */
EntrySync.prototype.moveTo = function(parent, newName) {};

/**
 * @see http://www.w3.org/TR/file-system-api/#widl-EntrySync-copyTo
 * @param {!DirectoryEntrySync} parent
 * @param {string=} newName
 * @return {!EntrySync}
 */
EntrySync.prototype.copyTo = function(parent, newName) {};

/**
 * @see http://www.w3.org/TR/file-system-api/#widl-EntrySync-toURL
 * @param {string=} mimeType
 * @return {string}
 */
EntrySync.prototype.toURL = function(mimeType) {};

/**
 * @see http://www.w3.org/TR/file-system-api/#widl-EntrySync-remove
 * @return {undefined}
 */
EntrySync.prototype.remove = function() {};

/**
 * @see http://www.w3.org/TR/file-system-api/#widl-EntrySync-getMetadata
 * @return {!Metadata}
 */
EntrySync.prototype.getMetadata = function() {};

/**
 * @see http://www.w3.org/TR/file-system-api/#widl-EntrySync-getParent
 * @return {!DirectoryEntrySync}
 */
EntrySync.prototype.getParent = function() {};

/**
 * @see http://www.w3.org/TR/file-system-api/#the-directoryentrysync-interface
 * @constructor
 * @extends {EntrySync}
 */
function DirectoryEntrySync() {};

/**
 * @see http://www.w3.org/TR/file-system-api/#widl-DirectoryEntrySync-createReader
 * @return {!DirectoryReaderSync}
 */
DirectoryEntrySync.prototype.createReader = function() {};

/**
 * @see http://www.w3.org/TR/file-system-api/#widl-DirectoryEntrySync-getFile
 * @param {string} path
 * @param {Object=} options
 * @return {!FileEntrySync}
 */
DirectoryEntrySync.prototype.getFile = function(path, options) {};

/**
 * @see http://www.w3.org/TR/file-system-api/#widl-DirectoryEntrySync-getDirectory
 * @param {string} path
 * @param {Object=} options
 * @return {!DirectoryEntrySync}
 */
DirectoryEntrySync.prototype.getDirectory = function(path, options) {};

/**
 * @see http://www.w3.org/TR/file-system-api/#widl-DirectoryEntrySync-removeRecursively
 * @return {undefined}
 */
DirectoryEntrySync.prototype.removeRecursively = function() {};

/**
 * @see http://www.w3.org/TR/file-system-api/#the-directoryreadersync-interface
 * @constructor
 */
function DirectoryReaderSync() {};

/**
 * @see http://www.w3.org/TR/file-system-api/#widl-DirectoryReaderSync-readEntries
 * @return {!Array<!EntrySync>}
 */
DirectoryReaderSync.prototype.readEntries = function() {};

/**
 * @see http://www.w3.org/TR/file-system-api/#the-fileentrysync-interface
 * @constructor
 * @extends {EntrySync}
 */
function FileEntrySync() {};

/**
 * @see http://www.w3.org/TR/file-system-api/#widl-FileEntrySync-createWriter
 * @return {!FileWriterSync}
 */
FileEntrySync.prototype.createWriter = function() {};

/**
 * @see http://www.w3.org/TR/file-system-api/#widl-FileEntrySync-file
 * @return {!File}
 */
FileEntrySync.prototype.file = function() {};

/**
 * @see http://www.w3.org/TR/file-system-api/#the-fileexception-exception
 * @constructor
 */
function FileException() {}

/**
 * @see http://www.w3.org/TR/FileAPI/#dfn-NOT_FOUND_ERR
 * @type {number}
 */
FileException.prototype.NOT_FOUND_ERR;

/** @type {number} */
FileException.NOT_FOUND_ERR;

/**
 * @see http://www.w3.org/TR/FileAPI/#dfn-SECURITY_ERR
 * @type {number}
 */
FileException.prototype.SECURITY_ERR;

/** @type {number} */
FileException.SECURITY_ERR;

/**
 * @see http://www.w3.org/TR/FileAPI/#widl-FileException-ABORT_ERR
 * @type {number}
 */
FileException.prototype.ABORT_ERR;

/** @type {number} */
FileException.ABORT_ERR;

/**
 * @see http://www.w3.org/TR/FileAPI/#widl-FileException-NOT_READABLE_ERR
 * @type {number}
 */
FileException.prototype.NOT_READABLE_ERR;

/** @type {number} */
FileException.NOT_READABLE_ERR;

/**
 * @see http://www.w3.org/TR/FileAPI/#widl-FileException-ENCODING_ERR
 * @type {number}
 */
FileException.prototype.ENCODING_ERR;

/** @type {number} */
FileException.ENCODING_ERR;

/**
 * @see http://www.w3.org/TR/file-writer-api/#widl-FileException-NO_MODIFICATION_ALLOWED_ERR
 * @type {number}
 */
FileException.prototype.NO_MODIFICATION_ALLOWED_ERR;

/** @type {number} */
FileException.NO_MODIFICATION_ALLOWED_ERR;

/**
 * @see http://www.w3.org/TR/file-writer-api/#widl-FileException-INVALID_STATE_ERR
 * @type {number}
 */
FileException.prototype.INVALID_STATE_ERR;

/** @type {number} */
FileException.INVALID_STATE_ERR;

/**
 * @see http://www.w3.org/TR/file-writer-api/#widl-FileException-SYNTAX_ERR
 * @type {number}
 */
FileException.prototype.SYNTAX_ERR;

/** @type {number} */
FileException.SYNTAX_ERR;

/**
 * @see http://www.w3.org/TR/file-system-api/#widl-FileException-INVALID_MODIFICATION_ERR
 * @type {number}
 */
FileException.prototype.INVALID_MODIFICATION_ERR;

/** @type {number} */
FileException.INVALID_MODIFICATION_ERR;

/**
 * @see http://www.w3.org/TR/file-system-api/#widl-FileException-QUOTA_EXCEEDED_ERR
 * @type {number}
 */
FileException.prototype.QUOTA_EXCEEDED_ERR;

/** @type {number} */
FileException.QUOTA_EXCEEDED_ERR;

/**
 * @see http://www.w3.org/TR/file-system-api/#widl-FileException-TYPE_MISMATCH_ERR
 * @type {number}
 */
FileException.prototype.TYPE_MISMATCH_ERR;

/** @type {number} */
FileException.TYPE_MISMATCH_ERR;

/**
 * @see http://www.w3.org/TR/file-system-api/#widl-FileException-PATH_EXISTS_ERR
 * @type {number}
 */
FileException.prototype.PATH_EXISTS_ERR;

/** @type {number} */
FileException.PATH_EXISTS_ERR;

/**
 * @see http://www.w3.org/TR/FileAPI/#dfn-code-exception
 * @type {number}
 */
FileException.prototype.code;

// The externs generated from typings/filesystem have incorrect callback types,
// which clash with the callback param definitions here. We can fix them by
// overriding them:
/** @typedef {function(!FileSystem)} */
var FileSystemCallback;
/** @typedef {function(!Entry)} */
var EntryCallback;
/** @typedef {function(!FileEntry)} */
var FileEntryCallback;
/** @typedef {function(!DirectoryEntry)} */
var DirectoryEntryCallback;
/** @typedef {function(!Array<!Entry>)} */
var EntriesCallback;
/** @typedef {function(!Metadata)} */
var MetadataCallback;
/** @typedef {function(!FileWriter)} */
var FileWriterCallback;
/** @typedef {function()} */
var VoidCallback;
/** @typedef {function(!DOMException)} */
var ErrorCallback;
/*
 * Copyright 2011 The Closure Compiler Authors.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/**
 * @fileoverview Browser specific definitions for W3C's IndexedDB API
 * @externs
 */

/** @type {!IDBFactory|undefined} */
Window.prototype.moz_indexedDB;

/** @type {!IDBFactory|undefined} */
Window.prototype.mozIndexedDB;

/** @type {!IDBFactory|undefined} */
Window.prototype.webkitIndexedDB;

/** @type {!IDBFactory|undefined} */
Window.prototype.msIndexedDB;

/**
 * @constructor
 * @extends {IDBRequest}
 * @see http://www.w3.org/TR/IndexedDB/#idl-def-IDBRequest
 * @see https://www.w3.org/TR/IndexedDB-2/#request-api
 */
function webkitIDBRequest() {}

/**
 * @constructor
 * @extends {IDBCursor}
 * @see http://www.w3.org/TR/IndexedDB/#idl-def-IDBCursor
 * @see https://www.w3.org/TR/IndexedDB-2/#cursor-interface
 */
function webkitIDBCursor() {}

/**
 * @constructor
 * @extends {IDBTransaction}
 * @see http://www.w3.org/TR/IndexedDB/#idl-def-IDBTransaction
 * @see https://www.w3.org/TR/IndexedDB-2/#transaction
 */
function webkitIDBTransaction() {}

/**
 * @constructor
 * @extends {IDBKeyRange}
 * @see http://www.w3.org/TR/IndexedDB/#idl-def-IDBKeyRange
 * @see https://www.w3.org/TR/IndexedDB-2/#keyrange
 */
function webkitIDBKeyRange() {}

/**
 * @param {string} type
 * @param {!IDBVersionChangeEventInit=} eventInit
 * @constructor
 * @extends {IDBVersionChangeEvent}
 * @see http://www.w3.org/TR/IndexedDB/#idl-def-IDBVersionChangeEvent
 */
function webkitIDBVersionChangeEvent(type, eventInit) {}

/**
 * @const {string}
 */
webkitIDBVersionChangeEvent.prototype.version;
/*
 * Copyright 2011 The Closure Compiler Authors
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/**
 * @fileoverview Nonstandard Definitions for W3C's Navigation Timing
 * specification.
 *
 * @externs
 */

// Nonstandard. Only available in Blink.
// Returns more granular results with the --enable-memory-info flag.
/** @type {MemoryInfo} */ Performance.prototype.memory;

/**
 * Clear out the buffer of performance timing events for webkit browsers.
 * @return {undefined}
 */
Performance.prototype.webkitClearResourceTimings = function() {};

/**
 * @return {number}
 * @nosideeffects
 */
Performance.prototype.webkitNow = function() {};
/*
 * Copyright 2019 The Closure Compiler Authors
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/**
 * @fileoverview Nonstandard definitions for components of the WebRTC browser
 * API.
 *
 * @externs
 */

/**
 * @type {function(new: MediaStream,
 *                 (!MediaStream|!Array<!MediaStreamTrack>)=)}
 */
var webkitMediaStream;

/**
 * @param {MediaStreamConstraints} constraints A MediaStreamConstraints object.
 * @param {function(!MediaStream)} successCallback
 *     A NavigatorUserMediaSuccessCallback function.
 * @param {function(!NavigatorUserMediaError)=} errorCallback A
 *     NavigatorUserMediaErrorCallback function.
 * @see http://dev.w3.org/2011/webrtc/editor/getusermedia.html
 * @see https://www.w3.org/TR/mediacapture-streams/
 * @return {undefined}
 */
Navigator.prototype.webkitGetUserMedia = function(
    constraints, successCallback, errorCallback) {};

/** @const */
var webkitRTCPeerConnection = RTCPeerConnection;

/**
 * This is a stats object which was present in a previous iteration of the
 * standard, before some refactoring removed it and moved all fields to the
 * appropriate objects. It is still implemented by Chrome, and needed by
 * applications as some fields were only moved to their correct locations
 * relatively recently (M86).
 * TODO(b/154215269): And b/187442090; remove once users have switched to
 * reading stats only from the new standardized locations.
 * @see https://w3c.github.io/webrtc-stats/archives/20170614/webrtc-stats.html#idl-def-rtcmediastreamtrackstats
 * @interface
 * @extends {RTCStats}
 */
function RTCMediaStreamTrackStats() {}

/** @const {string} */
RTCMediaStreamTrackStats.prototype.trackIdentifier;

/** @const {string} */
RTCMediaStreamTrackStats.prototype.mediaSourceId;

/** @const {boolean} */
RTCMediaStreamTrackStats.prototype.remoteSource;

/** @const {boolean} */
RTCMediaStreamTrackStats.prototype.ended;

/** @const {boolean} */
RTCMediaStreamTrackStats.prototype.detached;

/** @const {string} */
RTCMediaStreamTrackStats.prototype.kind;

/** @const {?Date|number|undefined} */
RTCMediaStreamTrackStats.prototype.estimatedPlayoutTimestamp;

/** @const {number|undefined} */
RTCMediaStreamTrackStats.prototype.frameWidth;

/** @const {number|undefined} */
RTCMediaStreamTrackStats.prototype.frameHeight;

/** @const {number|undefined} */
RTCMediaStreamTrackStats.prototype.framesPerSecond;

/** @const {number|undefined} */
RTCMediaStreamTrackStats.prototype.framesCaptured;

/** @const {number|undefined} */
RTCMediaStreamTrackStats.prototype.framesSent;

/** @const {number|undefined} */
RTCMediaStreamTrackStats.prototype.framesReceived;

/** @const {number|undefined} */
RTCMediaStreamTrackStats.prototype.framesDecoded;

/** @const {number|undefined} */
RTCMediaStreamTrackStats.prototype.framesDropped;

/** @const {number|undefined} */
RTCMediaStreamTrackStats.prototype.framesCorrupted;

/** @const {number|undefined} */
RTCMediaStreamTrackStats.prototype.partialFramesLost;

/** @const {number|undefined} */
RTCMediaStreamTrackStats.prototype.fullFramesLost;

/** @const {number|undefined} */
RTCMediaStreamTrackStats.prototype.audioLevel;

/** @const {number|undefined} */
RTCMediaStreamTrackStats.prototype.totalAudioEnergy;

/** @const {boolean|undefined} */
RTCMediaStreamTrackStats.prototype.voiceActivityFlag;

/** @const {number|undefined} */
RTCMediaStreamTrackStats.prototype.echoReturnLoss;

/** @const {number|undefined} */
RTCMediaStreamTrackStats.prototype.echoReturnLossEnhancement;

/** @const {number|undefined} */
RTCMediaStreamTrackStats.prototype.totalSamplesSent;

/** @const {number|undefined} */
RTCMediaStreamTrackStats.prototype.totalSamplesReceived;

/** @const {number|undefined} */
RTCMediaStreamTrackStats.prototype.totalSamplesDuration;

/** @const {number|undefined} */
RTCMediaStreamTrackStats.prototype.concealedSamples;

/** @const {number|undefined} */
RTCMediaStreamTrackStats.prototype.silentConcealedSamples;

/** @const {number|undefined} */
RTCMediaStreamTrackStats.prototype.concealmentEvents;

/** @const {number|undefined} */
RTCMediaStreamTrackStats.prototype.insertedSamplesForDeceleration;

/** @const {number|undefined} */
RTCMediaStreamTrackStats.prototype.removedSamplesForAcceleration;

/** @const {number|undefined} */
RTCMediaStreamTrackStats.prototype.delayedPacketOutageSamples;

/** @const {number|undefined} */
RTCMediaStreamTrackStats.prototype.jitterBufferDelay;

/** @const {number|undefined} */
RTCMediaStreamTrackStats.prototype.jitterBufferEmittedCount;

/** @const {number|undefined} */
RTCMediaStreamTrackStats.prototype.jitterBufferFlushes;

/**
 * @type {string}
 * Set of possible string values: 'very-low', 'low', 'medium', 'high'.
 */
RTCMediaStreamTrackStats.prototype.priority;
/*
 * Copyright 2011 The Closure Compiler Authors
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/**
 * @fileoverview Nonstandard enhancements to W3C's Selection API.
 *
 * @externs
 */

// The following were sources from the webkit externs.

/** @type {?Node} */
Selection.prototype.baseNode;

/** @type {number} */
Selection.prototype.baseOffset;

/** @type {?Node} */
Selection.prototype.extentNode;

/** @type {number} */
Selection.prototype.extentOffset;

/**
 * @param {string} alter
 * @param {string} direction
 * @param {string} granularity
 * @return {undefined}
 */
Selection.prototype.modify = function(alter, direction, granularity) {};


// The following were sources from the gecko externs.


/**
 * @see https://developer.mozilla.org/en/DOM/Selection/selectionLanguageChange
 */
Selection.prototype.selectionLanguageChange;


// The following were sources from the ie externs.


/**
 * @type {?Selection}
 * @see http://msdn.microsoft.com/en-us/library/ms535869(VS.85).aspx
 */
Document.prototype.selection;

/**
 * @return {undefined}
 * @see http://msdn.microsoft.com/en-us/library/ms536418(VS.85).aspx
 */
Selection.prototype.clear = function() {};

/**
 * @return {?TextRange|?ControlRange}
 * @see http://msdn.microsoft.com/en-us/library/ms536394(VS.85).aspx
 */
Selection.prototype.createRange = function() {};

/**
 * @return {?Array<?TextRange>}
 * @see http://msdn.microsoft.com/en-us/library/ms536396(VS.85).aspx
 */
Selection.prototype.createRangeCollection = function() {};
/*
 * Copyright 2015 The Closure Compiler Authors
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/**
 * @fileoverview Externs for Page Visibility.
 *
 * @see http://www.w3.org/TR/page-visibility
 * @externs
 */

/**
 * Set of possible values: 'hidden', 'visible', 'prerender', 'unloaded'.
 * @typedef {string}
 * @see http://www.w3.org/TR/page-visibility/#VisibilityState
 */
var VisibilityState;
/*
 * Copyright 2015 The Closure Compiler Authors
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/**
 * @fileoverview Streams API definitions
 *
 * Based on Living Standard â€” Last Updated 5 August 2016
 * https://streams.spec.whatwg.org/commit-snapshots/34ecaadbcce8df9943d7a2cdb7fca4dc25914df4/
 *
 * @see https://streams.spec.whatwg.org/
 * @externs
 */


/**
 * @typedef {!CountQueuingStrategy|!ByteLengthQueuingStrategy|{
 *     size: (undefined|function(*): number),
 *     highWaterMark: (number|undefined),
 * }}
 */
var QueuingStrategy;

/**
 * The TransformStreamDefaultController class has methods that allow
 * manipulation of the associated ReadableStream and WritableStream.
 *
 * This class cannot be directly constructed and is instead passed by the
 * TransformStream to the methods of its transformer.
 *
 * @interface
 * @template OUT_VALUE
 * @see https://streams.spec.whatwg.org/#ts-default-controller-class
 */
function TransformStreamDefaultController() {};

/**
 * @type {number}
 * @see https://streams.spec.whatwg.org/#ts-default-controller-desired-size
 */
TransformStreamDefaultController.prototype.desiredSize;

/**
 * @param {OUT_VALUE} chunk
 * @return {undefined}
 * @see https://streams.spec.whatwg.org/#ts-default-controller-enqueue
 */
TransformStreamDefaultController.prototype.enqueue = function(chunk) {};

/**
 * @param {*} reason
 * @return {undefined}
 * @see https://streams.spec.whatwg.org/#ts-default-controller-error
 */
TransformStreamDefaultController.prototype.error = function(reason) {};

/**
 * @return {undefined}
 * @see https://streams.spec.whatwg.org/#ts-default-controller-terminate
 */
TransformStreamDefaultController.prototype.terminate = function() {};


/**
 * @record
 * @template IN_VALUE, OUT_VALUE
 * @see https://streams.spec.whatwg.org/#transformer-api
 */
function TransformStreamTransformer() {};

/**
 * @type {(undefined|function(
 *     !TransformStreamDefaultController<OUT_VALUE>
 *   ):(!IThenable<*>|undefined)
 * )}
 */
TransformStreamTransformer.prototype.start;

/**
 * @type {(undefined|function(
 *     IN_VALUE, !TransformStreamDefaultController<OUT_VALUE>
 *   ):(!IThenable<*>|undefined)
 * )}
 */
TransformStreamTransformer.prototype.transform;

/**
 * @type {(undefined|function(
 *     !TransformStreamDefaultController<OUT_VALUE>
 *   ):(!IThenable<*>|undefined)
 * )}
 */
TransformStreamTransformer.prototype.flush;


/**
 * A transform stream (https://streams.spec.whatwg.org/#transform-stream).
 * @record
 * @template IN_VALUE, OUT_VALUE
 */
function ITransformStream() {}

/** @type {!WritableStream<IN_VALUE>} */
ITransformStream.prototype.writable;

/** @type {!ReadableStream<OUT_VALUE>} */
ITransformStream.prototype.readable;


/**
 * @constructor
 * @implements {ITransformStream<IN_VALUE, OUT_VALUE>}
 * @template IN_VALUE, OUT_VALUE
 * @param {!TransformStreamTransformer<IN_VALUE, OUT_VALUE>=} transformer
 * @param {!QueuingStrategy=} writableStrategy
 * @param {!QueuingStrategy=} readableStrategy
 * @see https://streams.spec.whatwg.org/#ts-class
 */
function TransformStream(transformer, writableStrategy, readableStrategy) {};

/** @type {!WritableStream<IN_VALUE>} */
TransformStream.prototype.writable;

/** @type {!ReadableStream<OUT_VALUE>} */
TransformStream.prototype.readable;

/**
 * @record
 */
function PipeOptions() {};

/** @type {undefined|boolean} */
PipeOptions.prototype.preventClose;

/** @type {undefined|boolean} */
PipeOptions.prototype.preventAbort;

/** @type {undefined|boolean} */
PipeOptions.prototype.preventCancel;


/**
 * @record
 * @template VALUE
 */
function ReadableStreamSource() {};

/**
 * @type {(undefined|function(
 *     (!ReadableByteStreamController|!ReadableStreamDefaultController<VALUE>)
 *   ):(!IThenable<*>|undefined)
 * )}
 */
ReadableStreamSource.prototype.start;

/**
 * @type {(undefined|function(
 *     (!ReadableByteStreamController|!ReadableStreamDefaultController<VALUE>)
 *   ):(!IThenable<*>|undefined)
 * )}
 */
ReadableStreamSource.prototype.pull;

/** @type {(undefined|function(*):(!Promise<*>|undefined))} */
ReadableStreamSource.prototype.cancel;

/** @type {(undefined|string)} */
ReadableStreamSource.prototype.type;

/** @type {(undefined|number)} */
ReadableStreamSource.prototype.autoAllocateChunkSize;

/**
 * @record
 */
function ReadableStreamIteratorOptions() {};

/** @type {undefined|boolean} */
ReadableStreamIteratorOptions.prototype.preventCancel;

/**
 * @constructor
 * @template VALUE
 * @param {!ReadableStreamSource<VALUE>=} opt_underlyingSource
 * @param {!QueuingStrategy<VALUE>=} opt_queuingStrategy
 * @see https://streams.spec.whatwg.org/#rs-class
 */
function ReadableStream(opt_underlyingSource, opt_queuingStrategy) {};

/**
 * @type {boolean}
 * @see https://streams.spec.whatwg.org/#rs-locked
 */
ReadableStream.prototype.locked;

/**
 * @param {*} reason
 * @return {!Promise<void>}
 * @see https://streams.spec.whatwg.org/#rs-cancel
 */
ReadableStream.prototype.cancel = function(reason) {};

/**
 * @param {!ReadableStreamIteratorOptions=} options
 * @return {!AsyncIterator<VALUE>}
 * @see https://streams.spec.whatwg.org/#rs-get-iterator
 */
ReadableStream.prototype.getIterator = function(options) {};

/**
 * @param {{ mode:(undefined|string) }=} opt_options
 * @return {(!ReadableStreamDefaultReader<VALUE>|!ReadableStreamBYOBReader)}
 * @see https://streams.spec.whatwg.org/#rs-get-reader
 */
ReadableStream.prototype.getReader = function(opt_options) {};

/**
 * @template PIPE_VALUE
 * @param {!ITransformStream<PIPE_VALUE, VALUE>} transform
 * @param {!PipeOptions=} opt_options
 * @return {!ReadableStream<PIPE_VALUE>}
 * @see https://streams.spec.whatwg.org/#rs-pipe-through
 */
ReadableStream.prototype.pipeThrough = function(transform, opt_options) {};

/**
 * @param {!WritableStream<VALUE>} dest
 * @param {!PipeOptions=} opt_options
 * @return {!Promise<void>}
 * @see https://streams.spec.whatwg.org/#rs-pipe-to
 */
ReadableStream.prototype.pipeTo = function(dest, opt_options) {};

/**
 * @return {!Array<!ReadableStream<VALUE>>}
 * @see https://streams.spec.whatwg.org/#rs-tee
 */
ReadableStream.prototype.tee = function() {};

/**
 * @param {!ReadableStreamIteratorOptions=} options
 * @return {!AsyncIterator}
 * @see https://streams.spec.whatwg.org/#rs-asynciterator
 */
ReadableStream.prototype[Symbol.asyncIterator] = function(options) {};

/**
 * The ReadableStreamDefaultReader constructor is generally not meant to be used
 * directly; instead, a streamâ€™s getReader() method should be used.
 *
 * @interface
 * @template VALUE
 * @see https://streams.spec.whatwg.org/#default-reader-class
 */
function ReadableStreamDefaultReader() {};

/**
 * @type {!Promise<void>}
 * @see https://streams.spec.whatwg.org/#default-reader-closed
 */
ReadableStreamDefaultReader.prototype.closed;

/**
 * @param {*} reason
 * @return {!Promise<*>}
 * @see https://streams.spec.whatwg.org/#default-reader-cancel
 */
ReadableStreamDefaultReader.prototype.cancel = function(reason) {};

/**
 * @return {!Promise<!IIterableResult<VALUE>>}
 * @see https://streams.spec.whatwg.org/#default-reader-read
 */
ReadableStreamDefaultReader.prototype.read = function() {};

/**
 * @return {undefined}
 * @see https://streams.spec.whatwg.org/#default-reader-release-lock
 */
ReadableStreamDefaultReader.prototype.releaseLock = function() {};


/**
 * The ReadableStreamBYOBReader constructor is generally not meant to be used
 * directly; instead, a streamâ€™s getReader() method should be used.
 *
 * @interface
 * @see https://streams.spec.whatwg.org/#byob-reader-class
 */
function ReadableStreamBYOBReader() {};

/**
 * @type {!Promise<void>}
 * @see https://streams.spec.whatwg.org/#byob-reader-closed
 */
ReadableStreamBYOBReader.prototype.closed;

/**
 * @param {*} reason
 * @return {!Promise<*>}
 * @see https://streams.spec.whatwg.org/#byob-reader-cancel
 */
ReadableStreamBYOBReader.prototype.cancel = function(reason) {};

/**
 * @template BUFFER
 * @param {BUFFER} view
 * @return {!Promise<!IIterableResult<BUFFER>>}
 * @see https://streams.spec.whatwg.org/#byob-reader-read
 */
ReadableStreamBYOBReader.prototype.read = function(view) {};

/**
 * @return {undefined}
 * @see https://streams.spec.whatwg.org/#byob-reader-release-lock
 */
ReadableStreamBYOBReader.prototype.releaseLock = function() {};


/**
 * The ReadableStreamDefaultController constructor cannot be used directly;
 * it only works on a ReadableStream that is in the middle of being constructed.
 *
 * @interface
 * @template VALUE
 * @see https://streams.spec.whatwg.org/#rs-default-controller-class
 */
function ReadableStreamDefaultController() {};

/**
 * @type {number}
 * @see https://streams.spec.whatwg.org/#rs-default-controller-desired-size
 */
ReadableStreamDefaultController.prototype.desiredSize;

/**
 * @return {undefined}
 * @see https://streams.spec.whatwg.org/#rs-default-controller-close
 */
ReadableStreamDefaultController.prototype.close = function() {};

/**
 * @param {VALUE} chunk
 * @return {undefined}
 * @see https://streams.spec.whatwg.org/#rs-default-controller-enqueue
 */
ReadableStreamDefaultController.prototype.enqueue = function(chunk) {};

/**
 * @param {*} err
 * @return {undefined}
 * @see https://streams.spec.whatwg.org/#rs-default-controller-error
 */
ReadableStreamDefaultController.prototype.error = function(err) {};


/**
 * The ReadableByteStreamController constructor cannot be used directly;
 * it only works on a ReadableStream that is in the middle of being constructed.
 *
 * @interface
 * @see https://streams.spec.whatwg.org/#rbs-controller-class
 */
function ReadableByteStreamController() {};

/**
 * @type {!ReadableStreamBYOBRequest}
 * @see https://streams.spec.whatwg.org/#rbs-controller-byob-request
 */
ReadableByteStreamController.prototype.byobRequest;

/**
 * @type {number}
 * @see https://streams.spec.whatwg.org/#rbs-controller-desired-size
 */
ReadableByteStreamController.prototype.desiredSize;

/**
 * @return {undefined}
 * @see https://streams.spec.whatwg.org/#rbs-controller-close
 */
ReadableByteStreamController.prototype.close = function() {};

/**
 * @param {!ArrayBufferView} chunk
 * @return {undefined}
 * @see https://streams.spec.whatwg.org/#rbs-controller-enqueue
 */
ReadableByteStreamController.prototype.enqueue = function(chunk) {};

/**
 * @param {*} err
 * @return {undefined}
 * @see https://streams.spec.whatwg.org/#rbs-controller-error
 */
ReadableByteStreamController.prototype.error = function(err) {};


/**
 * @interface
 * @see https://streams.spec.whatwg.org/#rs-byob-request-class
 */
function ReadableStreamBYOBRequest() {};

/**
 * @type {!ArrayBufferView}
 * @see https://streams.spec.whatwg.org/#rs-byob-request-view
 */
ReadableStreamBYOBRequest.prototype.view;

/**
 * @param {number} bytesWritten
 * @return {undefined}
 * @see https://streams.spec.whatwg.org/#rs-byob-request-respond
 */
ReadableStreamBYOBRequest.prototype.respond = function(bytesWritten) {};

/**
 * @param {!ArrayBufferView} view
 * @return {undefined}
 * @see https://streams.spec.whatwg.org/#rs-byob-request-respond-with-new-view
 */
ReadableStreamBYOBRequest.prototype.respondWithNewView = function(view) {};


/**
 * @record
 * @template VALUE
 */
function WritableStreamSink() {};

/** @type {(undefined|function(!WritableStreamDefaultController):(!IThenable<*>|undefined))}*/
WritableStreamSink.prototype.start;

/**
 * @type {(undefined|function(VALUE,
 *     !WritableStreamDefaultController):(!IThenable<*>|undefined))}
 */
WritableStreamSink.prototype.write;

/** @type {(undefined|function():(!IThenable<*>|undefined))} */
WritableStreamSink.prototype.close;

/** @type {(undefined|function(*):(!IThenable<*>|undefined))} */
WritableStreamSink.prototype.abort;


/**
 * @constructor
 * @template VALUE
 * @param {!WritableStreamSink<VALUE>=} opt_underlyingSink
 * @param {!QueuingStrategy<VALUE>=} opt_queuingStrategy
 * @see https://streams.spec.whatwg.org/#ws-class
 */
function WritableStream(opt_underlyingSink, opt_queuingStrategy) {};

/**
 * @type {boolean}
 * @see https://streams.spec.whatwg.org/#ws-locked
 */
WritableStream.prototype.locked;

/**
 * @param {*} reason
 * @return {!Promise<undefined>}
 * @see https://streams.spec.whatwg.org/#ws-abort
 */
WritableStream.prototype.abort = function(reason) {};

/**
 * @return {!Promise<undefined>}
 * @see https://streams.spec.whatwg.org/#ws-close
 */
WritableStream.prototype.close = function() {};

/**
 * @return {!WritableStreamDefaultWriter<VALUE>}
 * @see https://streams.spec.whatwg.org/#ws-get-writer
 */
WritableStream.prototype.getWriter = function() {};


/**
 * @interface
 * @template VALUE
 * @see https://streams.spec.whatwg.org/#default-writer-class
 */
function WritableStreamDefaultWriter() {};

/**
 * @type {!Promise<undefined>}
 * @see https://streams.spec.whatwg.org/#default-writer-closed
 */
WritableStreamDefaultWriter.prototype.closed;

/**
 * @type {number}
 * @see https://streams.spec.whatwg.org/#default-writer-desiredSize
 */
WritableStreamDefaultWriter.prototype.desiredSize;

/**
 * @type {!Promise<number>}
 * @see https://streams.spec.whatwg.org/#default-writer-ready
 */
WritableStreamDefaultWriter.prototype.ready;

/**
 * @param {*} reason
 * @return {!Promise<undefined>}
 * @see https://streams.spec.whatwg.org/#default-writer-abort
 */
WritableStreamDefaultWriter.prototype.abort = function(reason) {};

/**
 * @return {!Promise<undefined>}
 * @see https://streams.spec.whatwg.org/#default-writer-close
 */
WritableStreamDefaultWriter.prototype.close = function() {};

/**
 * @return {undefined}
 * @see https://streams.spec.whatwg.org/#default-writer-release-lock
 */
WritableStreamDefaultWriter.prototype.releaseLock = function() {};

/**
 * @param {VALUE} chunk
 * @return {!Promise<undefined>}
 * @see https://streams.spec.whatwg.org/#default-writer-write
 */
WritableStreamDefaultWriter.prototype.write = function(chunk) {};


/**
 * The WritableStreamDefaultController constructor cannot be used directly;
 * it only works on a WritableStream that is in the middle of being constructed.
 *
 * @interface
 * @see https://streams.spec.whatwg.org/#ws-default-controller-class
 */
function WritableStreamDefaultController() {};

/**
 * @param {*} err
 * @return {!Promise<undefined>}
 * @see https://streams.spec.whatwg.org/#ws-default-controller-error
 */
WritableStreamDefaultController.prototype.error = function(err) {};


/**
 * @param {{ highWaterMark:number }} config
 * @constructor
 * @see https://streams.spec.whatwg.org/#blqs-class
 */
function ByteLengthQueuingStrategy(config) {}

/**
 * If we don't want to be strict we can define chunk as {*}
 * and return as {number|undefined}
 *
 * @param {{ byteLength:number }} chunk
 * @return {number}
 * @see https://streams.spec.whatwg.org/#blqs-size
 */
ByteLengthQueuingStrategy.prototype.size = function(chunk) {};


/**
 * @param {{ highWaterMark:number }} config
 * @constructor
 * @see https://streams.spec.whatwg.org/#cqs-class
 */
function CountQueuingStrategy(config) {}

/**
 * @param {*} chunk
 * @return {number}
 * @see https://streams.spec.whatwg.org/#cqs-size
 */
CountQueuingStrategy.prototype.size = function(chunk) {};
/*
 * Copyright 2017 The Closure Compiler Authors
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/**
 * @fileoverview Generated by closureidl 0.2dev closureidl-parser-webkit 0.2dev dart-idl 7592.
 * Parser: type=webkit dir=${WEBKIT}/Source/WebCore/_/_.idl dir=${WEBKIT}/Source/WebCore/_/_/_.idl dir=${WEBKIT}/Source/WebCore/Modules/_/_.idl
 * Context0: id=webkit
 * Filter0: annotate-platform platform=webkit
 * Filter1: merge-supplemental
 * Filter2: fix-nulls
 * Filter3: fix-constructors
 * Filter4: rename-interfaces
 * Filter5: check-consistency
 * Context1: id=closure
 * Filter0: import context=webkit
 * Filter1: closure:merge-overloaded-methods
 * Filter2: closure:fix-callbacks remove=false
 * Filter3: closure:fix-arrays remove=simple
 * Filter4: closure:fix-optionals
 * Filter5: closure:rename-reserved-params
 * Filter6: closure:guess-interfaces
 * Filter7: closure:expand-interfaces
 * Output: format=js
 *
 * @externs
 */



/**
 * @constructor
 */
function SVGAnimatedNumberList(){}


/**
 * @type {!SVGNumberList}
 */
SVGAnimatedNumberList.prototype.baseVal;


/**
 * @type {!SVGNumberList}
 */
SVGAnimatedNumberList.prototype.animVal;



/**
 * @constructor
 */
function SVGLengthList(){}


/**
 * @type {number}
 */
SVGLengthList.prototype.numberOfItems;


/** */
SVGLengthList.prototype.clear = function(){};


/**
 * @param {!SVGLength} item
 * @return {!SVGLength}
 */
SVGLengthList.prototype.initialize = function(item){};


/**
 * @param {number} index
 * @return {!SVGLength}
 */
SVGLengthList.prototype.getItem = function(index){};


/**
 * @param {!SVGLength} item
 * @param {number} index
 * @return {!SVGLength}
 */
SVGLengthList.prototype.insertItemBefore = function(item, index){};


/**
 * @param {!SVGLength} item
 * @param {number} index
 * @return {!SVGLength}
 */
SVGLengthList.prototype.replaceItem = function(item, index){};


/**
 * @param {number} index
 * @return {!SVGLength}
 */
SVGLengthList.prototype.removeItem = function(index){};


/**
 * @param {!SVGLength} item
 * @return {!SVGLength}
 */
SVGLengthList.prototype.appendItem = function(item){};



/**
 * @constructor
 * @implements {EventTarget}
 */
function SVGElementInstance(){}


/**
 * @type {!SVGElement}
 */
SVGElementInstance.prototype.correspondingElement;


/**
 * @type {!SVGUseElement}
 */
SVGElementInstance.prototype.correspondingUseElement;


/**
 * @type {!SVGElementInstance}
 */
SVGElementInstance.prototype.parentNode;


/**
 * @type {!Array<!SVGElementInstance>|!SVGElementInstanceList}
 */
SVGElementInstance.prototype.childNodes;


/**
 * @type {!SVGElementInstance}
 */
SVGElementInstance.prototype.firstChild;


/**
 * @type {!SVGElementInstance}
 */
SVGElementInstance.prototype.lastChild;


/**
 * @type {!SVGElementInstance}
 */
SVGElementInstance.prototype.previousSibling;


/**
 * @type {!SVGElementInstance}
 */
SVGElementInstance.prototype.nextSibling;


/**
 * @type {!EventListener|function(!Event)}
 */
SVGElementInstance.prototype.onabort;


/**
 * @type {!EventListener|function(!Event)}
 */
SVGElementInstance.prototype.onblur;


/**
 * @type {!EventListener|function(!Event)}
 */
SVGElementInstance.prototype.onchange;


/**
 * @type {!EventListener|function(!Event)}
 */
SVGElementInstance.prototype.onclick;


/**
 * @type {!EventListener|function(!Event)}
 */
SVGElementInstance.prototype.oncontextmenu;


/**
 * @type {!EventListener|function(!Event)}
 */
SVGElementInstance.prototype.ondblclick;


/**
 * @type {!EventListener|function(!Event)}
 */
SVGElementInstance.prototype.onerror;


/**
 * @type {!EventListener|function(!Event)}
 */
SVGElementInstance.prototype.onfocus;


/**
 * @type {!EventListener|function(!Event)}
 */
SVGElementInstance.prototype.oninput;


/**
 * @type {!EventListener|function(!Event)}
 */
SVGElementInstance.prototype.onkeydown;


/**
 * @type {!EventListener|function(!Event)}
 */
SVGElementInstance.prototype.onkeypress;


/**
 * @type {!EventListener|function(!Event)}
 */
SVGElementInstance.prototype.onkeyup;


/**
 * @type {!EventListener|function(!Event)}
 */
SVGElementInstance.prototype.onload;


/**
 * @type {!EventListener|function(!Event)}
 */
SVGElementInstance.prototype.onmousedown;


/**
 * @type {!EventListener|function(!Event)}
 */
SVGElementInstance.prototype.onmousemove;


/**
 * @type {!EventListener|function(!Event)}
 */
SVGElementInstance.prototype.onmouseout;


/**
 * @type {!EventListener|function(!Event)}
 */
SVGElementInstance.prototype.onmouseover;


/**
 * @type {!EventListener|function(!Event)}
 */
SVGElementInstance.prototype.onmouseup;


/**
 * @type {!EventListener|function(!Event)}
 */
SVGElementInstance.prototype.onmousewheel;


/**
 * @type {!EventListener|function(!Event)}
 */
SVGElementInstance.prototype.onbeforecut;


/**
 * @type {!EventListener|function(!Event)}
 */
SVGElementInstance.prototype.oncut;


/**
 * @type {!EventListener|function(!Event)}
 */
SVGElementInstance.prototype.onbeforecopy;


/**
 * @type {!EventListener|function(!Event)}
 */
SVGElementInstance.prototype.oncopy;


/**
 * @type {!EventListener|function(!Event)}
 */
SVGElementInstance.prototype.onbeforepaste;


/**
 * @type {!EventListener|function(!Event)}
 */
SVGElementInstance.prototype.onpaste;


/**
 * @type {!EventListener|function(!Event)}
 */
SVGElementInstance.prototype.ondragenter;


/**
 * @type {!EventListener|function(!Event)}
 */
SVGElementInstance.prototype.ondragover;


/**
 * @type {!EventListener|function(!Event)}
 */
SVGElementInstance.prototype.ondragleave;


/**
 * @type {!EventListener|function(!Event)}
 */
SVGElementInstance.prototype.ondrop;


/**
 * @type {!EventListener|function(!Event)}
 */
SVGElementInstance.prototype.ondragstart;


/**
 * @type {!EventListener|function(!Event)}
 */
SVGElementInstance.prototype.ondrag;


/**
 * @type {!EventListener|function(!Event)}
 */
SVGElementInstance.prototype.ondragend;


/**
 * @type {!EventListener|function(!Event)}
 */
SVGElementInstance.prototype.onreset;


/**
 * @type {!EventListener|function(!Event)}
 */
SVGElementInstance.prototype.onresize;


/**
 * @type {!EventListener|function(!Event)}
 */
SVGElementInstance.prototype.onscroll;


/**
 * @type {!EventListener|function(!Event)}
 */
SVGElementInstance.prototype.onsearch;


/**
 * @type {!EventListener|function(!Event)}
 */
SVGElementInstance.prototype.onselect;


/**
 * @type {!EventListener|function(!Event)}
 */
SVGElementInstance.prototype.onselectstart;


/**
 * @type {!EventListener|function(!Event)}
 */
SVGElementInstance.prototype.onsubmit;


/**
 * @type {!EventListener|function(!Event)}
 */
SVGElementInstance.prototype.onunload;


/**
 * @override
 */
SVGElementInstance.prototype.addEventListener = function(type, listener, opt_useCapture){};


/**
 * @override
 */
SVGElementInstance.prototype.removeEventListener = function(type, listener, opt_useCapture){};


/**
 * @param {!Event} event
 * @return {boolean}
 * @override
 */
SVGElementInstance.prototype.dispatchEvent = function(event){};



/**
 * @constructor
 */
function SVGAnimatedRect(){}


/**
 * @type {!SVGRect}
 */
SVGAnimatedRect.prototype.baseVal;


/**
 * @type {!SVGRect}
 */
SVGAnimatedRect.prototype.animVal;



/**
 * @constructor
 */
function SVGAnimatedString(){}


/**
 * @type {string}
 */
SVGAnimatedString.prototype.baseVal;


/**
 * @type {string}
 */
SVGAnimatedString.prototype.animVal;



/**
 * @interface
 */
function SVGStylable(){}


/**
 * @type {!SVGAnimatedString}
 */
SVGStylable.prototype.className;


/**
 * @param {string=} opt_name
 * @return {!CSSValue}
 */
SVGStylable.prototype.getPresentationAttribute = function(opt_name){};



/**
 * @interface
 */
function SVGExternalResourcesRequired(){}


/**
 * @type {!SVGAnimatedBoolean}
 */
SVGExternalResourcesRequired.prototype.externalResourcesRequired;



/**
 * @constructor
 */
function SVGPoint(){}


/**
 * @type {number}
 */
SVGPoint.prototype.x;


/**
 * @type {number}
 */
SVGPoint.prototype.y;


/**
 * @param {!SVGMatrix} matrix
 * @return {!SVGPoint}
 */
SVGPoint.prototype.matrixTransform = function(matrix){};



/**
 * @constructor
 */
function SVGMatrix(){}


/**
 * @type {number}
 */
SVGMatrix.prototype.a;


/**
 * @type {number}
 */
SVGMatrix.prototype.b;


/**
 * @type {number}
 */
SVGMatrix.prototype.c;


/**
 * @type {number}
 */
SVGMatrix.prototype.d;


/**
 * @type {number}
 */
SVGMatrix.prototype.e;


/**
 * @type {number}
 */
SVGMatrix.prototype.f;


/**
 * @param {!SVGMatrix} secondMatrix
 * @return {!SVGMatrix}
 */
SVGMatrix.prototype.multiply = function(secondMatrix){};


/**
 * @return {!SVGMatrix}
 */
SVGMatrix.prototype.inverse = function(){};


/**
 * @param {number} x
 * @param {number} y
 * @return {!SVGMatrix}
 */
SVGMatrix.prototype.translate = function(x, y){};


/**
 * @param {number} scaleFactor
 * @return {!SVGMatrix}
 */
SVGMatrix.prototype.scale = function(scaleFactor){};


/**
 * @param {number} scaleFactorX
 * @param {number} scaleFactorY
 * @return {!SVGMatrix}
 */
SVGMatrix.prototype.scaleNonUniform = function(scaleFactorX, scaleFactorY){};


/**
 * @param {number} angle
 * @return {!SVGMatrix}
 */
SVGMatrix.prototype.rotate = function(angle){};


/**
 * @param {number} x
 * @param {number} y
 * @return {!SVGMatrix}
 */
SVGMatrix.prototype.rotateFromVector = function(x, y){};


/**
 * @return {!SVGMatrix}
 */
SVGMatrix.prototype.flipX = function(){};


/**
 * @return {!SVGMatrix}
 */
SVGMatrix.prototype.flipY = function(){};


/**
 * @param {number} angle
 * @return {!SVGMatrix}
 */
SVGMatrix.prototype.skewX = function(angle){};


/**
 * @param {number} angle
 * @return {!SVGMatrix}
 */
SVGMatrix.prototype.skewY = function(angle){};



/**
 * @constructor
 */
function SVGNumberList(){}


/**
 * @type {number}
 */
SVGNumberList.prototype.numberOfItems;


/** */
SVGNumberList.prototype.clear = function(){};


/**
 * @param {!SVGNumber} item
 * @return {!SVGNumber}
 */
SVGNumberList.prototype.initialize = function(item){};


/**
 * @param {number} index
 * @return {!SVGNumber}
 */
SVGNumberList.prototype.getItem = function(index){};


/**
 * @param {!SVGNumber} item
 * @param {number} index
 * @return {!SVGNumber}
 */
SVGNumberList.prototype.insertItemBefore = function(item, index){};


/**
 * @param {!SVGNumber} item
 * @param {number} index
 * @return {!SVGNumber}
 */
SVGNumberList.prototype.replaceItem = function(item, index){};


/**
 * @param {number} index
 * @return {!SVGNumber}
 */
SVGNumberList.prototype.removeItem = function(index){};


/**
 * @param {!SVGNumber} item
 * @return {!SVGNumber}
 */
SVGNumberList.prototype.appendItem = function(item){};



/**
 * @interface
 */
function SVGLangSpace(){}


/**
 * @type {string}
 */
SVGLangSpace.prototype.xmllang;


/**
 * @type {string}
 */
SVGLangSpace.prototype.xmlspace;



/**
 * @constructor
 */
function SVGAnimatedLengthList(){}


/**
 * @type {!SVGLengthList}
 */
SVGAnimatedLengthList.prototype.baseVal;


/**
 * @type {!SVGLengthList}
 */
SVGAnimatedLengthList.prototype.animVal;



/**
 * @constructor
 */
function SVGAnimatedTransformList(){}


/**
 * @type {!SVGTransformList}
 */
SVGAnimatedTransformList.prototype.baseVal;


/**
 * @type {!SVGTransformList}
 */
SVGAnimatedTransformList.prototype.animVal;



/**
 * @constructor
 */
function SVGUnitTypes(){}


/**
 * @const
 * @type {number}
 */
SVGUnitTypes.SVG_UNIT_TYPE_UNKNOWN;


/**
 * @const
 * @type {number}
 */
SVGUnitTypes.prototype.SVG_UNIT_TYPE_UNKNOWN;


/**
 * @const
 * @type {number}
 */
SVGUnitTypes.SVG_UNIT_TYPE_USERSPACEONUSE;


/**
 * @const
 * @type {number}
 */
SVGUnitTypes.prototype.SVG_UNIT_TYPE_USERSPACEONUSE;


/**
 * @const
 * @type {number}
 */
SVGUnitTypes.SVG_UNIT_TYPE_OBJECTBOUNDINGBOX;


/**
 * @const
 * @type {number}
 */
SVGUnitTypes.prototype.SVG_UNIT_TYPE_OBJECTBOUNDINGBOX;



/**
 * @constructor
 */
function SVGLength(){}


/**
 * @const
 * @type {number}
 */
SVGLength.SVG_LENGTHTYPE_UNKNOWN;


/**
 * @const
 * @type {number}
 */
SVGLength.prototype.SVG_LENGTHTYPE_UNKNOWN;


/**
 * @const
 * @type {number}
 */
SVGLength.SVG_LENGTHTYPE_NUMBER;


/**
 * @const
 * @type {number}
 */
SVGLength.prototype.SVG_LENGTHTYPE_NUMBER;


/**
 * @const
 * @type {number}
 */
SVGLength.SVG_LENGTHTYPE_PERCENTAGE;


/**
 * @const
 * @type {number}
 */
SVGLength.prototype.SVG_LENGTHTYPE_PERCENTAGE;


/**
 * @const
 * @type {number}
 */
SVGLength.SVG_LENGTHTYPE_EMS;


/**
 * @const
 * @type {number}
 */
SVGLength.prototype.SVG_LENGTHTYPE_EMS;


/**
 * @const
 * @type {number}
 */
SVGLength.SVG_LENGTHTYPE_EXS;


/**
 * @const
 * @type {number}
 */
SVGLength.prototype.SVG_LENGTHTYPE_EXS;


/**
 * @const
 * @type {number}
 */
SVGLength.SVG_LENGTHTYPE_PX;


/**
 * @const
 * @type {number}
 */
SVGLength.prototype.SVG_LENGTHTYPE_PX;


/**
 * @const
 * @type {number}
 */
SVGLength.SVG_LENGTHTYPE_CM;


/**
 * @const
 * @type {number}
 */
SVGLength.prototype.SVG_LENGTHTYPE_CM;


/**
 * @const
 * @type {number}
 */
SVGLength.SVG_LENGTHTYPE_MM;


/**
 * @const
 * @type {number}
 */
SVGLength.prototype.SVG_LENGTHTYPE_MM;


/**
 * @const
 * @type {number}
 */
SVGLength.SVG_LENGTHTYPE_IN;


/**
 * @const
 * @type {number}
 */
SVGLength.prototype.SVG_LENGTHTYPE_IN;


/**
 * @const
 * @type {number}
 */
SVGLength.SVG_LENGTHTYPE_PT;


/**
 * @const
 * @type {number}
 */
SVGLength.prototype.SVG_LENGTHTYPE_PT;


/**
 * @const
 * @type {number}
 */
SVGLength.SVG_LENGTHTYPE_PC;


/**
 * @const
 * @type {number}
 */
SVGLength.prototype.SVG_LENGTHTYPE_PC;


/**
 * @type {number}
 */
SVGLength.prototype.unitType;


/**
 * @type {number}
 */
SVGLength.prototype.value;


/**
 * @type {number}
 */
SVGLength.prototype.valueInSpecifiedUnits;


/**
 * @type {string}
 */
SVGLength.prototype.valueAsString;


/**
 * @param {number} unitType
 * @param {number} valueInSpecifiedUnits
 * @return {undefined}
 */
SVGLength.prototype.newValueSpecifiedUnits = function(unitType, valueInSpecifiedUnits){};


/**
 * @param {number} unitType
 * @return {undefined}
 */
SVGLength.prototype.convertToSpecifiedUnits = function(unitType){};



/**
 * @constructor
 */
function SVGAnimatedNumber(){}


/**
 * @type {number}
 */
SVGAnimatedNumber.prototype.baseVal;


/**
 * @type {number}
 */
SVGAnimatedNumber.prototype.animVal;



/**
 * @constructor
 */
function SVGAnimatedAngle(){}


/**
 * @type {!SVGAngle}
 */
SVGAnimatedAngle.prototype.baseVal;


/**
 * @type {!SVGAngle}
 */
SVGAnimatedAngle.prototype.animVal;



/**
 * @interface
 * @extends {SVGStylable}
 */
function SVGFilterPrimitiveStandardAttributes(){}


/**
 * @type {!SVGAnimatedLength}
 */
SVGFilterPrimitiveStandardAttributes.prototype.x;


/**
 * @type {!SVGAnimatedLength}
 */
SVGFilterPrimitiveStandardAttributes.prototype.y;


/**
 * @type {!SVGAnimatedLength}
 */
SVGFilterPrimitiveStandardAttributes.prototype.width;


/**
 * @type {!SVGAnimatedLength}
 */
SVGFilterPrimitiveStandardAttributes.prototype.height;


/**
 * @type {!SVGAnimatedString}
 */
SVGFilterPrimitiveStandardAttributes.prototype.result;



/**
 * @constructor
 * @extends {SVGGradientElement}
 */
function SVGLinearGradientElement(){}


/**
 * @type {!SVGAnimatedLength}
 */
SVGLinearGradientElement.prototype.x1;


/**
 * @type {!SVGAnimatedLength}
 */
SVGLinearGradientElement.prototype.y1;


/**
 * @type {!SVGAnimatedLength}
 */
SVGLinearGradientElement.prototype.x2;


/**
 * @type {!SVGAnimatedLength}
 */
SVGLinearGradientElement.prototype.y2;



/**
 * @constructor
 * @extends {SVGGradientElement}
 */
function SVGRadialGradientElement(){}


/**
 * @type {!SVGAnimatedLength}
 */
SVGRadialGradientElement.prototype.cx;


/**
 * @type {!SVGAnimatedLength}
 */
SVGRadialGradientElement.prototype.cy;


/**
 * @type {!SVGAnimatedLength}
 */
SVGRadialGradientElement.prototype.r;


/**
 * @type {!SVGAnimatedLength}
 */
SVGRadialGradientElement.prototype.fx;


/**
 * @type {!SVGAnimatedLength}
 */
SVGRadialGradientElement.prototype.fy;



/**
 * @constructor
 */
function SVGTransform(){}


/**
 * @const
 * @type {number}
 */
SVGTransform.SVG_TRANSFORM_UNKNOWN;


/**
 * @const
 * @type {number}
 */
SVGTransform.prototype.SVG_TRANSFORM_UNKNOWN;


/**
 * @const
 * @type {number}
 */
SVGTransform.SVG_TRANSFORM_MATRIX;


/**
 * @const
 * @type {number}
 */
SVGTransform.prototype.SVG_TRANSFORM_MATRIX;


/**
 * @const
 * @type {number}
 */
SVGTransform.SVG_TRANSFORM_TRANSLATE;


/**
 * @const
 * @type {number}
 */
SVGTransform.prototype.SVG_TRANSFORM_TRANSLATE;


/**
 * @const
 * @type {number}
 */
SVGTransform.SVG_TRANSFORM_SCALE;


/**
 * @const
 * @type {number}
 */
SVGTransform.prototype.SVG_TRANSFORM_SCALE;


/**
 * @const
 * @type {number}
 */
SVGTransform.SVG_TRANSFORM_ROTATE;


/**
 * @const
 * @type {number}
 */
SVGTransform.prototype.SVG_TRANSFORM_ROTATE;


/**
 * @const
 * @type {number}
 */
SVGTransform.SVG_TRANSFORM_SKEWX;


/**
 * @const
 * @type {number}
 */
SVGTransform.prototype.SVG_TRANSFORM_SKEWX;


/**
 * @const
 * @type {number}
 */
SVGTransform.SVG_TRANSFORM_SKEWY;


/**
 * @const
 * @type {number}
 */
SVGTransform.prototype.SVG_TRANSFORM_SKEWY;


/**
 * @type {number}
 */
SVGTransform.prototype.type;


/**
 * @type {!SVGMatrix}
 */
SVGTransform.prototype.matrix;


/**
 * @type {number}
 */
SVGTransform.prototype.angle;


/**
 * @param {!SVGMatrix} matrix
 * @return {undefined}
 */
SVGTransform.prototype.setMatrix = function(matrix){};


/**
 * @param {number} tx
 * @param {number} ty
 * @return {undefined}
 */
SVGTransform.prototype.setTranslate = function(tx, ty){};


/**
 * @param {number} sx
 * @param {number} sy
 * @return {undefined}
 */
SVGTransform.prototype.setScale = function(sx, sy){};


/**
 * @param {number} angle
 * @param {number} cx
 * @param {number} cy
 * @return {undefined}
 */
SVGTransform.prototype.setRotate = function(angle, cx, cy){};


/**
 * @param {number} angle
 * @return {undefined}
 */
SVGTransform.prototype.setSkewX = function(angle){};


/**
 * @param {number} angle
 * @return {undefined}
 */
SVGTransform.prototype.setSkewY = function(angle){};



/**
 * @interface
 */
function SVGZoomAndPan(){}

/**
 * @type {number}
 */
SVGZoomAndPan.prototype.zoomAndPan;



/**
 * @constructor
 */
function SVGPreserveAspectRatio(){}


/**
 * @const
 * @type {number}
 */
SVGPreserveAspectRatio.SVG_PRESERVEASPECTRATIO_UNKNOWN;


/**
 * @const
 * @type {number}
 */
SVGPreserveAspectRatio.prototype.SVG_PRESERVEASPECTRATIO_UNKNOWN;


/**
 * @const
 * @type {number}
 */
SVGPreserveAspectRatio.SVG_PRESERVEASPECTRATIO_NONE;


/**
 * @const
 * @type {number}
 */
SVGPreserveAspectRatio.prototype.SVG_PRESERVEASPECTRATIO_NONE;


/**
 * @const
 * @type {number}
 */
SVGPreserveAspectRatio.SVG_PRESERVEASPECTRATIO_XMINYMIN;


/**
 * @const
 * @type {number}
 */
SVGPreserveAspectRatio.prototype.SVG_PRESERVEASPECTRATIO_XMINYMIN;


/**
 * @const
 * @type {number}
 */
SVGPreserveAspectRatio.SVG_PRESERVEASPECTRATIO_XMIDYMIN;


/**
 * @const
 * @type {number}
 */
SVGPreserveAspectRatio.prototype.SVG_PRESERVEASPECTRATIO_XMIDYMIN;


/**
 * @const
 * @type {number}
 */
SVGPreserveAspectRatio.SVG_PRESERVEASPECTRATIO_XMAXYMIN;


/**
 * @const
 * @type {number}
 */
SVGPreserveAspectRatio.prototype.SVG_PRESERVEASPECTRATIO_XMAXYMIN;


/**
 * @const
 * @type {number}
 */
SVGPreserveAspectRatio.SVG_PRESERVEASPECTRATIO_XMINYMID;


/**
 * @const
 * @type {number}
 */
SVGPreserveAspectRatio.prototype.SVG_PRESERVEASPECTRATIO_XMINYMID;


/**
 * @const
 * @type {number}
 */
SVGPreserveAspectRatio.SVG_PRESERVEASPECTRATIO_XMIDYMID;


/**
 * @const
 * @type {number}
 */
SVGPreserveAspectRatio.prototype.SVG_PRESERVEASPECTRATIO_XMIDYMID;


/**
 * @const
 * @type {number}
 */
SVGPreserveAspectRatio.SVG_PRESERVEASPECTRATIO_XMAXYMID;


/**
 * @const
 * @type {number}
 */
SVGPreserveAspectRatio.prototype.SVG_PRESERVEASPECTRATIO_XMAXYMID;


/**
 * @const
 * @type {number}
 */
SVGPreserveAspectRatio.SVG_PRESERVEASPECTRATIO_XMINYMAX;


/**
 * @const
 * @type {number}
 */
SVGPreserveAspectRatio.prototype.SVG_PRESERVEASPECTRATIO_XMINYMAX;


/**
 * @const
 * @type {number}
 */
SVGPreserveAspectRatio.SVG_PRESERVEASPECTRATIO_XMIDYMAX;


/**
 * @const
 * @type {number}
 */
SVGPreserveAspectRatio.prototype.SVG_PRESERVEASPECTRATIO_XMIDYMAX;


/**
 * @const
 * @type {number}
 */
SVGPreserveAspectRatio.SVG_PRESERVEASPECTRATIO_XMAXYMAX;


/**
 * @const
 * @type {number}
 */
SVGPreserveAspectRatio.prototype.SVG_PRESERVEASPECTRATIO_XMAXYMAX;


/**
 * @const
 * @type {number}
 */
SVGPreserveAspectRatio.SVG_MEETORSLICE_UNKNOWN;


/**
 * @const
 * @type {number}
 */
SVGPreserveAspectRatio.prototype.SVG_MEETORSLICE_UNKNOWN;


/**
 * @const
 * @type {number}
 */
SVGPreserveAspectRatio.SVG_MEETORSLICE_MEET;


/**
 * @const
 * @type {number}
 */
SVGPreserveAspectRatio.prototype.SVG_MEETORSLICE_MEET;


/**
 * @const
 * @type {number}
 */
SVGPreserveAspectRatio.SVG_MEETORSLICE_SLICE;


/**
 * @const
 * @type {number}
 */
SVGPreserveAspectRatio.prototype.SVG_MEETORSLICE_SLICE;


/**
 * @type {number}
 */
SVGPreserveAspectRatio.prototype.align;


/**
 * @type {number}
 */
SVGPreserveAspectRatio.prototype.meetOrSlice;



/**
 * @constructor
 */
function SVGRect(){}


/**
 * @type {number}
 */
SVGRect.prototype.x;


/**
 * @type {number}
 */
SVGRect.prototype.y;


/**
 * @type {number}
 */
SVGRect.prototype.width;


/**
 * @type {number}
 */
SVGRect.prototype.height;



/**
 * @constructor
 */
function SVGException(){}


/**
 * @const
 * @type {number}
 */
SVGException.SVG_WRONG_TYPE_ERR;


/**
 * @const
 * @type {number}
 */
SVGException.prototype.SVG_WRONG_TYPE_ERR;


/**
 * @const
 * @type {number}
 */
SVGException.SVG_INVALID_VALUE_ERR;


/**
 * @const
 * @type {number}
 */
SVGException.prototype.SVG_INVALID_VALUE_ERR;


/**
 * @const
 * @type {number}
 */
SVGException.SVG_MATRIX_NOT_INVERTABLE;


/**
 * @const
 * @type {number}
 */
SVGException.prototype.SVG_MATRIX_NOT_INVERTABLE;


/**
 * @type {number}
 */
SVGException.prototype.code;


/**
 * @type {string}
 */
SVGException.prototype.name;


/**
 * @type {string}
 */
SVGException.prototype.message;


/**
 * @return {string}
 * @override
 */
SVGException.prototype.toString = function(){};



/**
 * @constructor
 * @extends {CSSValue}
 */
function SVGColor(){}


/**
 * @const
 * @type {number}
 */
SVGColor.SVG_COLORTYPE_UNKNOWN;


/**
 * @const
 * @type {number}
 */
SVGColor.prototype.SVG_COLORTYPE_UNKNOWN;


/**
 * @const
 * @type {number}
 */
SVGColor.SVG_COLORTYPE_RGBCOLOR;


/**
 * @const
 * @type {number}
 */
SVGColor.prototype.SVG_COLORTYPE_RGBCOLOR;


/**
 * @const
 * @type {number}
 */
SVGColor.SVG_COLORTYPE_RGBCOLOR_ICCCOLOR;


/**
 * @const
 * @type {number}
 */
SVGColor.prototype.SVG_COLORTYPE_RGBCOLOR_ICCCOLOR;


/**
 * @const
 * @type {number}
 */
SVGColor.SVG_COLORTYPE_CURRENTCOLOR;


/**
 * @const
 * @type {number}
 */
SVGColor.prototype.SVG_COLORTYPE_CURRENTCOLOR;


/**
 * @type {number}
 */
SVGColor.prototype.colorType;


/**
 * @type {!RGBColor}
 */
SVGColor.prototype.rgbColor;


/**
 * @param {string} rgbColor
 * @return {undefined}
 */
SVGColor.prototype.setRGBColor = function(rgbColor){};


/**
 * @param {string} rgbColor
 * @param {string} iccColor
 * @return {undefined}
 */
SVGColor.prototype.setRGBColorICCColor = function(rgbColor, iccColor){};


/**
 * @param {number} colorType
 * @param {string} rgbColor
 * @param {string} iccColor
 * @return {undefined}
 */
SVGColor.prototype.setColor = function(colorType, rgbColor, iccColor){};



/**
 * @constructor
 * @extends {SVGColor}
 */
function SVGPaint(){}


/**
 * @const
 * @type {number}
 */
SVGPaint.SVG_PAINTTYPE_UNKNOWN;


/**
 * @const
 * @type {number}
 */
SVGPaint.prototype.SVG_PAINTTYPE_UNKNOWN;


/**
 * @const
 * @type {number}
 */
SVGPaint.SVG_PAINTTYPE_RGBCOLOR;


/**
 * @const
 * @type {number}
 */
SVGPaint.prototype.SVG_PAINTTYPE_RGBCOLOR;


/**
 * @const
 * @type {number}
 */
SVGPaint.SVG_PAINTTYPE_RGBCOLOR_ICCCOLOR;


/**
 * @const
 * @type {number}
 */
SVGPaint.prototype.SVG_PAINTTYPE_RGBCOLOR_ICCCOLOR;


/**
 * @const
 * @type {number}
 */
SVGPaint.SVG_PAINTTYPE_NONE;


/**
 * @const
 * @type {number}
 */
SVGPaint.prototype.SVG_PAINTTYPE_NONE;


/**
 * @const
 * @type {number}
 */
SVGPaint.SVG_PAINTTYPE_CURRENTCOLOR;


/**
 * @const
 * @type {number}
 */
SVGPaint.prototype.SVG_PAINTTYPE_CURRENTCOLOR;


/**
 * @const
 * @type {number}
 */
SVGPaint.SVG_PAINTTYPE_URI_NONE;


/**
 * @const
 * @type {number}
 */
SVGPaint.prototype.SVG_PAINTTYPE_URI_NONE;


/**
 * @const
 * @type {number}
 */
SVGPaint.SVG_PAINTTYPE_URI_CURRENTCOLOR;


/**
 * @const
 * @type {number}
 */
SVGPaint.prototype.SVG_PAINTTYPE_URI_CURRENTCOLOR;


/**
 * @const
 * @type {number}
 */
SVGPaint.SVG_PAINTTYPE_URI_RGBCOLOR;


/**
 * @const
 * @type {number}
 */
SVGPaint.prototype.SVG_PAINTTYPE_URI_RGBCOLOR;


/**
 * @const
 * @type {number}
 */
SVGPaint.SVG_PAINTTYPE_URI_RGBCOLOR_ICCCOLOR;


/**
 * @const
 * @type {number}
 */
SVGPaint.prototype.SVG_PAINTTYPE_URI_RGBCOLOR_ICCCOLOR;


/**
 * @const
 * @type {number}
 */
SVGPaint.SVG_PAINTTYPE_URI;


/**
 * @const
 * @type {number}
 */
SVGPaint.prototype.SVG_PAINTTYPE_URI;


/**
 * @type {number}
 */
SVGPaint.prototype.paintType;


/**
 * @type {string}
 */
SVGPaint.prototype.uri;


/**
 * @param {string} uri
 * @return {undefined}
 */
SVGPaint.prototype.setUri = function(uri){};


/**
 * @param {number} paintType
 * @param {string} uri
 * @param {string} rgbColor
 * @param {string} iccColor
 * @return {undefined}
 */
SVGPaint.prototype.setPaint = function(paintType, uri, rgbColor, iccColor){};



/**
 * @constructor
 */
function SVGPointList(){}


/**
 * @type {number}
 */
SVGPointList.prototype.numberOfItems;


/** */
SVGPointList.prototype.clear = function(){};


/**
 * @param {!SVGPoint} item
 * @return {!SVGPoint}
 */
SVGPointList.prototype.initialize = function(item){};


/**
 * @param {number} index
 * @return {!SVGPoint}
 */
SVGPointList.prototype.getItem = function(index){};


/**
 * @param {!SVGPoint} item
 * @param {number} index
 * @return {!SVGPoint}
 */
SVGPointList.prototype.insertItemBefore = function(item, index){};


/**
 * @param {!SVGPoint} item
 * @param {number} index
 * @return {!SVGPoint}
 */
SVGPointList.prototype.replaceItem = function(item, index){};


/**
 * @param {number} index
 * @return {!SVGPoint}
 */
SVGPointList.prototype.removeItem = function(index){};


/**
 * @param {!SVGPoint} item
 * @return {!SVGPoint}
 */
SVGPointList.prototype.appendItem = function(item){};



/**
 * @constructor
 */
function SVGTransformList(){}


/**
 * @type {number}
 */
SVGTransformList.prototype.numberOfItems;


/** */
SVGTransformList.prototype.clear = function(){};


/**
 * @param {!SVGTransform} item
 * @return {!SVGTransform}
 */
SVGTransformList.prototype.initialize = function(item){};


/**
 * @param {number} index
 * @return {!SVGTransform}
 */
SVGTransformList.prototype.getItem = function(index){};


/**
 * @param {!SVGTransform} item
 * @param {number} index
 * @return {!SVGTransform}
 */
SVGTransformList.prototype.insertItemBefore = function(item, index){};


/**
 * @param {!SVGTransform} item
 * @param {number} index
 * @return {!SVGTransform}
 */
SVGTransformList.prototype.replaceItem = function(item, index){};


/**
 * @param {number} index
 * @return {!SVGTransform}
 */
SVGTransformList.prototype.removeItem = function(index){};


/**
 * @param {!SVGTransform} item
 * @return {!SVGTransform}
 */
SVGTransformList.prototype.appendItem = function(item){};


/**
 * @param {!SVGMatrix} matrix
 * @return {!SVGTransform}
 */
SVGTransformList.prototype.createSVGTransformFromMatrix = function(matrix){};


/**
 * @return {!SVGTransform}
 */
SVGTransformList.prototype.consolidate = function(){};



/**
 * @constructor
 * @extends {UIEvent}
 */
function SVGZoomEvent(){}


/**
 * @type {!SVGRect}
 */
SVGZoomEvent.prototype.zoomRectScreen;


/**
 * @type {number}
 */
SVGZoomEvent.prototype.previousScale;


/**
 * @type {!SVGPoint}
 */
SVGZoomEvent.prototype.previousTranslate;


/**
 * @type {number}
 */
SVGZoomEvent.prototype.newScale;


/**
 * @type {!SVGPoint}
 */
SVGZoomEvent.prototype.newTranslate;



/**
 * @constructor
 * @extends {SVGTextContentElement}
 */
function SVGTextPositioningElement(){}


/**
 * @type {!SVGAnimatedLengthList}
 */
SVGTextPositioningElement.prototype.x;


/**
 * @type {!SVGAnimatedLengthList}
 */
SVGTextPositioningElement.prototype.y;


/**
 * @type {!SVGAnimatedLengthList}
 */
SVGTextPositioningElement.prototype.dx;


/**
 * @type {!SVGAnimatedLengthList}
 */
SVGTextPositioningElement.prototype.dy;


/**
 * @type {!SVGAnimatedNumberList}
 */
SVGTextPositioningElement.prototype.rotate;



/**
 * @constructor
 * @extends {SVGTextPositioningElement}
 */
function SVGTSpanElement(){}



/**
 * @constructor
 */
function SVGStringList(){}


/**
 * @type {number}
 */
SVGStringList.prototype.numberOfItems;


/** */
SVGStringList.prototype.clear = function(){};


/**
 * @param {string} item
 * @return {string}
 */
SVGStringList.prototype.initialize = function(item){};


/**
 * @param {number} index
 * @return {string}
 */
SVGStringList.prototype.getItem = function(index){};


/**
 * @param {string} item
 * @param {number} index
 * @return {string}
 */
SVGStringList.prototype.insertItemBefore = function(item, index){};


/**
 * @param {string} item
 * @param {number} index
 * @return {string}
 */
SVGStringList.prototype.replaceItem = function(item, index){};


/**
 * @param {number} index
 * @return {string}
 */
SVGStringList.prototype.removeItem = function(index){};


/**
 * @param {string} item
 * @return {string}
 */
SVGStringList.prototype.appendItem = function(item){};



/**
 * @interface
 */
function SVGURIReference(){}


/**
 * @type {!SVGAnimatedString}
 */
SVGURIReference.prototype.href;



/**
 * @constructor
 * @extends {SVGTextPositioningElement}
 * @implements {SVGURIReference}
 */
function SVGTRefElement(){}


/**
 * @type {!SVGAnimatedString}
 */
SVGTRefElement.prototype.href;



/**
 * @constructor
 * @extends {SVGTextContentElement}
 * @implements {SVGURIReference}
 */
function SVGTextPathElement(){}


/**
 * @const
 * @type {number}
 */
SVGTextPathElement.TEXTPATH_METHODTYPE_UNKNOWN;


/**
 * @const
 * @type {number}
 */
SVGTextPathElement.prototype.TEXTPATH_METHODTYPE_UNKNOWN;


/**
 * @const
 * @type {number}
 */
SVGTextPathElement.TEXTPATH_METHODTYPE_ALIGN;


/**
 * @const
 * @type {number}
 */
SVGTextPathElement.prototype.TEXTPATH_METHODTYPE_ALIGN;


/**
 * @const
 * @type {number}
 */
SVGTextPathElement.TEXTPATH_METHODTYPE_STRETCH;


/**
 * @const
 * @type {number}
 */
SVGTextPathElement.prototype.TEXTPATH_METHODTYPE_STRETCH;


/**
 * @const
 * @type {number}
 */
SVGTextPathElement.TEXTPATH_SPACINGTYPE_UNKNOWN;


/**
 * @const
 * @type {number}
 */
SVGTextPathElement.prototype.TEXTPATH_SPACINGTYPE_UNKNOWN;


/**
 * @const
 * @type {number}
 */
SVGTextPathElement.TEXTPATH_SPACINGTYPE_AUTO;


/**
 * @const
 * @type {number}
 */
SVGTextPathElement.prototype.TEXTPATH_SPACINGTYPE_AUTO;


/**
 * @const
 * @type {number}
 */
SVGTextPathElement.TEXTPATH_SPACINGTYPE_EXACT;


/**
 * @const
 * @type {number}
 */
SVGTextPathElement.prototype.TEXTPATH_SPACINGTYPE_EXACT;


/**
 * @type {!SVGAnimatedLength}
 */
SVGTextPathElement.prototype.startOffset;


/**
 * @type {!SVGAnimatedEnumeration}
 */
SVGTextPathElement.prototype.method;


/**
 * @type {!SVGAnimatedEnumeration}
 */
SVGTextPathElement.prototype.spacing;


/**
 * @type {!SVGAnimatedString}
 */
SVGTextPathElement.prototype.href;



/**
 * @constructor
 * @extends {SVGTextPositioningElement}
 * @implements {SVGURIReference}
 */
function SVGAltGlyphElement(){}


/**
 * @type {string}
 */
SVGAltGlyphElement.prototype.glyphRef;


/**
 * @type {string}
 */
SVGAltGlyphElement.prototype.format;


/**
 * @type {!SVGAnimatedString}
 */
SVGAltGlyphElement.prototype.href;



/**
 * @constructor
 * @extends {SVGComponentTransferFunctionElement}
 */
function SVGFEFuncGElement(){}



/**
 * @constructor
 * @extends {SVGComponentTransferFunctionElement}
 */
function SVGFEFuncAElement(){}



/**
 * @constructor
 * @extends {SVGComponentTransferFunctionElement}
 */
function SVGFEFuncRElement(){}



/**
 * @constructor
 */
function SVGNumber(){}


/**
 * @type {number}
 */
SVGNumber.prototype.value;



/**
 * @interface
 */
function SVGTests(){}


/**
 * @type {!SVGStringList}
 */
SVGTests.prototype.requiredFeatures;


/**
 * @type {!SVGStringList}
 */
SVGTests.prototype.requiredExtensions;


/**
 * @type {!SVGStringList}
 */
SVGTests.prototype.systemLanguage;


/**
 * @param {string=} opt_extension
 * @return {boolean}
 */
SVGTests.prototype.hasExtension = function(opt_extension){};



/**
 * @constructor
 */
function SVGPathSeg(){}


/**
 * @const
 * @type {number}
 */
SVGPathSeg.PATHSEG_UNKNOWN;


/**
 * @const
 * @type {number}
 */
SVGPathSeg.prototype.PATHSEG_UNKNOWN;


/**
 * @const
 * @type {number}
 */
SVGPathSeg.PATHSEG_CLOSEPATH;


/**
 * @const
 * @type {number}
 */
SVGPathSeg.prototype.PATHSEG_CLOSEPATH;


/**
 * @const
 * @type {number}
 */
SVGPathSeg.PATHSEG_MOVETO_ABS;


/**
 * @const
 * @type {number}
 */
SVGPathSeg.prototype.PATHSEG_MOVETO_ABS;


/**
 * @const
 * @type {number}
 */
SVGPathSeg.PATHSEG_MOVETO_REL;


/**
 * @const
 * @type {number}
 */
SVGPathSeg.prototype.PATHSEG_MOVETO_REL;


/**
 * @const
 * @type {number}
 */
SVGPathSeg.PATHSEG_LINETO_ABS;


/**
 * @const
 * @type {number}
 */
SVGPathSeg.prototype.PATHSEG_LINETO_ABS;


/**
 * @const
 * @type {number}
 */
SVGPathSeg.PATHSEG_LINETO_REL;


/**
 * @const
 * @type {number}
 */
SVGPathSeg.prototype.PATHSEG_LINETO_REL;


/**
 * @const
 * @type {number}
 */
SVGPathSeg.PATHSEG_CURVETO_CUBIC_ABS;


/**
 * @const
 * @type {number}
 */
SVGPathSeg.prototype.PATHSEG_CURVETO_CUBIC_ABS;


/**
 * @const
 * @type {number}
 */
SVGPathSeg.PATHSEG_CURVETO_CUBIC_REL;


/**
 * @const
 * @type {number}
 */
SVGPathSeg.prototype.PATHSEG_CURVETO_CUBIC_REL;


/**
 * @const
 * @type {number}
 */
SVGPathSeg.PATHSEG_CURVETO_QUADRATIC_ABS;


/**
 * @const
 * @type {number}
 */
SVGPathSeg.prototype.PATHSEG_CURVETO_QUADRATIC_ABS;


/**
 * @const
 * @type {number}
 */
SVGPathSeg.PATHSEG_CURVETO_QUADRATIC_REL;


/**
 * @const
 * @type {number}
 */
SVGPathSeg.prototype.PATHSEG_CURVETO_QUADRATIC_REL;


/**
 * @const
 * @type {number}
 */
SVGPathSeg.PATHSEG_ARC_ABS;


/**
 * @const
 * @type {number}
 */
SVGPathSeg.prototype.PATHSEG_ARC_ABS;


/**
 * @const
 * @type {number}
 */
SVGPathSeg.PATHSEG_ARC_REL;


/**
 * @const
 * @type {number}
 */
SVGPathSeg.prototype.PATHSEG_ARC_REL;


/**
 * @const
 * @type {number}
 */
SVGPathSeg.PATHSEG_LINETO_HORIZONTAL_ABS;


/**
 * @const
 * @type {number}
 */
SVGPathSeg.prototype.PATHSEG_LINETO_HORIZONTAL_ABS;


/**
 * @const
 * @type {number}
 */
SVGPathSeg.PATHSEG_LINETO_HORIZONTAL_REL;


/**
 * @const
 * @type {number}
 */
SVGPathSeg.prototype.PATHSEG_LINETO_HORIZONTAL_REL;


/**
 * @const
 * @type {number}
 */
SVGPathSeg.PATHSEG_LINETO_VERTICAL_ABS;


/**
 * @const
 * @type {number}
 */
SVGPathSeg.prototype.PATHSEG_LINETO_VERTICAL_ABS;


/**
 * @const
 * @type {number}
 */
SVGPathSeg.PATHSEG_LINETO_VERTICAL_REL;


/**
 * @const
 * @type {number}
 */
SVGPathSeg.prototype.PATHSEG_LINETO_VERTICAL_REL;


/**
 * @const
 * @type {number}
 */
SVGPathSeg.PATHSEG_CURVETO_CUBIC_SMOOTH_ABS;


/**
 * @const
 * @type {number}
 */
SVGPathSeg.prototype.PATHSEG_CURVETO_CUBIC_SMOOTH_ABS;


/**
 * @const
 * @type {number}
 */
SVGPathSeg.PATHSEG_CURVETO_CUBIC_SMOOTH_REL;


/**
 * @const
 * @type {number}
 */
SVGPathSeg.prototype.PATHSEG_CURVETO_CUBIC_SMOOTH_REL;


/**
 * @const
 * @type {number}
 */
SVGPathSeg.PATHSEG_CURVETO_QUADRATIC_SMOOTH_ABS;


/**
 * @const
 * @type {number}
 */
SVGPathSeg.prototype.PATHSEG_CURVETO_QUADRATIC_SMOOTH_ABS;


/**
 * @const
 * @type {number}
 */
SVGPathSeg.PATHSEG_CURVETO_QUADRATIC_SMOOTH_REL;


/**
 * @const
 * @type {number}
 */
SVGPathSeg.prototype.PATHSEG_CURVETO_QUADRATIC_SMOOTH_REL;


/**
 * @type {number}
 */
SVGPathSeg.prototype.pathSegType;


/**
 * @type {string}
 */
SVGPathSeg.prototype.pathSegTypeAsLetter;



/**
 * @constructor
 * @extends {SVGPathSeg}
 */
function SVGPathSegCurvetoQuadraticSmoothAbs(){}


/**
 * @type {number}
 */
SVGPathSegCurvetoQuadraticSmoothAbs.prototype.x;


/**
 * @type {number}
 */
SVGPathSegCurvetoQuadraticSmoothAbs.prototype.y;



/**
 * @constructor
 * @extends {SVGPathSeg}
 */
function SVGPathSegArcRel(){}


/**
 * @type {number}
 */
SVGPathSegArcRel.prototype.x;


/**
 * @type {number}
 */
SVGPathSegArcRel.prototype.y;


/**
 * @type {number}
 */
SVGPathSegArcRel.prototype.r1;


/**
 * @type {number}
 */
SVGPathSegArcRel.prototype.r2;


/**
 * @type {number}
 */
SVGPathSegArcRel.prototype.angle;


/**
 * @type {boolean}
 */
SVGPathSegArcRel.prototype.largeArcFlag;


/**
 * @type {boolean}
 */
SVGPathSegArcRel.prototype.sweepFlag;



/**
 * @constructor
 * @extends {SVGPathSeg}
 */
function SVGPathSegCurvetoQuadraticAbs(){}


/**
 * @type {number}
 */
SVGPathSegCurvetoQuadraticAbs.prototype.x;


/**
 * @type {number}
 */
SVGPathSegCurvetoQuadraticAbs.prototype.y;


/**
 * @type {number}
 */
SVGPathSegCurvetoQuadraticAbs.prototype.x1;


/**
 * @type {number}
 */
SVGPathSegCurvetoQuadraticAbs.prototype.y1;



/**
 * @constructor
 * @extends {SVGPathSeg}
 */
function SVGPathSegLinetoHorizontalRel(){}


/**
 * @type {number}
 */
SVGPathSegLinetoHorizontalRel.prototype.x;



/**
 * @constructor
 * @extends {SVGPathSeg}
 */
function SVGPathSegLinetoRel(){}


/**
 * @type {number}
 */
SVGPathSegLinetoRel.prototype.x;


/**
 * @type {number}
 */
SVGPathSegLinetoRel.prototype.y;



/**
 * @constructor
 * @extends {SVGPathSeg}
 */
function SVGPathSegCurvetoCubicRel(){}


/**
 * @type {number}
 */
SVGPathSegCurvetoCubicRel.prototype.x;


/**
 * @type {number}
 */
SVGPathSegCurvetoCubicRel.prototype.y;


/**
 * @type {number}
 */
SVGPathSegCurvetoCubicRel.prototype.x1;


/**
 * @type {number}
 */
SVGPathSegCurvetoCubicRel.prototype.y1;


/**
 * @type {number}
 */
SVGPathSegCurvetoCubicRel.prototype.x2;


/**
 * @type {number}
 */
SVGPathSegCurvetoCubicRel.prototype.y2;



/**
 * @constructor
 * @extends {SVGPathSeg}
 */
function SVGPathSegMovetoAbs(){}


/**
 * @type {number}
 */
SVGPathSegMovetoAbs.prototype.x;


/**
 * @type {number}
 */
SVGPathSegMovetoAbs.prototype.y;



/**
 * @constructor
 * @extends {SVGPathSeg}
 */
function SVGPathSegCurvetoQuadraticSmoothRel(){}


/**
 * @type {number}
 */
SVGPathSegCurvetoQuadraticSmoothRel.prototype.x;


/**
 * @type {number}
 */
SVGPathSegCurvetoQuadraticSmoothRel.prototype.y;



/**
 * @constructor
 * @extends {SVGPathSeg}
 */
function SVGPathSegLinetoVerticalRel(){}


/**
 * @type {number}
 */
SVGPathSegLinetoVerticalRel.prototype.y;



/**
 * @constructor
 * @extends {SVGPathSeg}
 */
function SVGPathSegLinetoAbs(){}


/**
 * @type {number}
 */
SVGPathSegLinetoAbs.prototype.x;


/**
 * @type {number}
 */
SVGPathSegLinetoAbs.prototype.y;



/**
 * @constructor
 * @extends {SVGPathSeg}
 */
function SVGPathSegCurvetoCubicSmoothRel(){}


/**
 * @type {number}
 */
SVGPathSegCurvetoCubicSmoothRel.prototype.x;


/**
 * @type {number}
 */
SVGPathSegCurvetoCubicSmoothRel.prototype.y;


/**
 * @type {number}
 */
SVGPathSegCurvetoCubicSmoothRel.prototype.x2;


/**
 * @type {number}
 */
SVGPathSegCurvetoCubicSmoothRel.prototype.y2;



/**
 * @constructor
 * @extends {SVGPathSeg}
 */
function SVGPathSegLinetoHorizontalAbs(){}


/**
 * @type {number}
 */
SVGPathSegLinetoHorizontalAbs.prototype.x;



/**
 * @constructor
 * @extends {SVGPathSeg}
 */
function SVGPathSegCurvetoQuadraticRel(){}


/**
 * @type {number}
 */
SVGPathSegCurvetoQuadraticRel.prototype.x;


/**
 * @type {number}
 */
SVGPathSegCurvetoQuadraticRel.prototype.y;


/**
 * @type {number}
 */
SVGPathSegCurvetoQuadraticRel.prototype.x1;


/**
 * @type {number}
 */
SVGPathSegCurvetoQuadraticRel.prototype.y1;



/**
 * @constructor
 * @extends {SVGPathSeg}
 */
function SVGPathSegCurvetoCubicSmoothAbs(){}


/**
 * @type {number}
 */
SVGPathSegCurvetoCubicSmoothAbs.prototype.x;


/**
 * @type {number}
 */
SVGPathSegCurvetoCubicSmoothAbs.prototype.y;


/**
 * @type {number}
 */
SVGPathSegCurvetoCubicSmoothAbs.prototype.x2;


/**
 * @type {number}
 */
SVGPathSegCurvetoCubicSmoothAbs.prototype.y2;



/**
 * @constructor
 * @extends {SVGPathSeg}
 */
function SVGPathSegCurvetoCubicAbs(){}


/**
 * @type {number}
 */
SVGPathSegCurvetoCubicAbs.prototype.x;


/**
 * @type {number}
 */
SVGPathSegCurvetoCubicAbs.prototype.y;


/**
 * @type {number}
 */
SVGPathSegCurvetoCubicAbs.prototype.x1;


/**
 * @type {number}
 */
SVGPathSegCurvetoCubicAbs.prototype.y1;


/**
 * @type {number}
 */
SVGPathSegCurvetoCubicAbs.prototype.x2;


/**
 * @type {number}
 */
SVGPathSegCurvetoCubicAbs.prototype.y2;



/**
 * @constructor
 * @extends {SVGPathSeg}
 */
function SVGPathSegClosePath(){}



/**
 * @interface
 */
function SVGFitToViewBox(){}


/**
 * @type {!SVGAnimatedRect}
 */
SVGFitToViewBox.prototype.viewBox;


/**
 * @type {!SVGAnimatedPreserveAspectRatio}
 */
SVGFitToViewBox.prototype.preserveAspectRatio;



/**
 * @constructor
 * @implements {SVGZoomAndPan}
 * @implements {SVGFitToViewBox}
 */
function SVGViewSpec(){}


/**
 * @type {!SVGTransformList}
 */
SVGViewSpec.prototype.transform;


/**
 * @type {!SVGElement}
 */
SVGViewSpec.prototype.viewTarget;


/**
 * @type {string}
 */
SVGViewSpec.prototype.viewBoxString;


/**
 * @type {string}
 */
SVGViewSpec.prototype.preserveAspectRatioString;


/**
 * @type {string}
 */
SVGViewSpec.prototype.transformString;


/**
 * @type {string}
 */
SVGViewSpec.prototype.viewTargetString;


/**
 * @const
 * @type {number}
 */
SVGViewSpec.SVG_ZOOMANDPAN_UNKNOWN;


/**
 * @const
 * @type {number}
 */
SVGViewSpec.prototype.SVG_ZOOMANDPAN_UNKNOWN;


/**
 * @const
 * @type {number}
 */
SVGViewSpec.SVG_ZOOMANDPAN_DISABLE;


/**
 * @const
 * @type {number}
 */
SVGViewSpec.prototype.SVG_ZOOMANDPAN_DISABLE;


/**
 * @const
 * @type {number}
 */
SVGViewSpec.SVG_ZOOMANDPAN_MAGNIFY;


/**
 * @const
 * @type {number}
 */
SVGViewSpec.prototype.SVG_ZOOMANDPAN_MAGNIFY;


/**
 * @type {number}
 */
SVGViewSpec.prototype.zoomAndPan;


/**
 * @type {!SVGAnimatedRect}
 */
SVGViewSpec.prototype.viewBox;


/**
 * @type {!SVGAnimatedPreserveAspectRatio}
 */
SVGViewSpec.prototype.preserveAspectRatio;



/**
 * @constructor
 */
function SVGRenderingIntent(){}


/**
 * @const
 * @type {number}
 */
SVGRenderingIntent.RENDERING_INTENT_UNKNOWN;


/**
 * @const
 * @type {number}
 */
SVGRenderingIntent.prototype.RENDERING_INTENT_UNKNOWN;


/**
 * @const
 * @type {number}
 */
SVGRenderingIntent.RENDERING_INTENT_AUTO;


/**
 * @const
 * @type {number}
 */
SVGRenderingIntent.prototype.RENDERING_INTENT_AUTO;


/**
 * @const
 * @type {number}
 */
SVGRenderingIntent.RENDERING_INTENT_PERCEPTUAL;


/**
 * @const
 * @type {number}
 */
SVGRenderingIntent.prototype.RENDERING_INTENT_PERCEPTUAL;


/**
 * @const
 * @type {number}
 */
SVGRenderingIntent.RENDERING_INTENT_RELATIVE_COLORIMETRIC;


/**
 * @const
 * @type {number}
 */
SVGRenderingIntent.prototype.RENDERING_INTENT_RELATIVE_COLORIMETRIC;


/**
 * @const
 * @type {number}
 */
SVGRenderingIntent.RENDERING_INTENT_SATURATION;


/**
 * @const
 * @type {number}
 */
SVGRenderingIntent.prototype.RENDERING_INTENT_SATURATION;


/**
 * @const
 * @type {number}
 */
SVGRenderingIntent.RENDERING_INTENT_ABSOLUTE_COLORIMETRIC;


/**
 * @const
 * @type {number}
 */
SVGRenderingIntent.prototype.RENDERING_INTENT_ABSOLUTE_COLORIMETRIC;



/**
 * @constructor
 * @extends {SVGPathSeg}
 */
function SVGPathSegLinetoVerticalAbs(){}


/**
 * @type {number}
 */
SVGPathSegLinetoVerticalAbs.prototype.y;



/**
 * @constructor
 */
function SVGPathSegList(){}


/**
 * @type {number}
 */
SVGPathSegList.prototype.numberOfItems;


/** */
SVGPathSegList.prototype.clear = function(){};


/**
 * @param {!SVGPathSeg} newItem
 * @return {!SVGPathSeg}
 */
SVGPathSegList.prototype.initialize = function(newItem){};


/**
 * @param {number} index
 * @return {!SVGPathSeg}
 */
SVGPathSegList.prototype.getItem = function(index){};


/**
 * @param {!SVGPathSeg} newItem
 * @param {number} index
 * @return {!SVGPathSeg}
 */
SVGPathSegList.prototype.insertItemBefore = function(newItem, index){};


/**
 * @param {!SVGPathSeg} newItem
 * @param {number} index
 * @return {!SVGPathSeg}
 */
SVGPathSegList.prototype.replaceItem = function(newItem, index){};


/**
 * @param {number} index
 * @return {!SVGPathSeg}
 */
SVGPathSegList.prototype.removeItem = function(index){};


/**
 * @param {!SVGPathSeg} newItem
 * @return {!SVGPathSeg}
 */
SVGPathSegList.prototype.appendItem = function(newItem){};



/**
 * @constructor
 * @extends {Document}
 */
function SVGDocument(){}


/**
 * @type {!SVGSVGElement}
 */
SVGDocument.prototype.rootElement;


/**
 * @param {string=} opt_eventType
 * @return {!Event}
 * @override
 */
SVGDocument.prototype.createEvent = function(opt_eventType){};



/**
 * @constructor
 * @extends {SVGElement}
 */
function SVGAltGlyphItemElement(){}



/**
 * @constructor
 * @extends {SVGElement}
 */
function SVGFontFaceFormatElement(){}



/**
 * @constructor
 * @extends {SVGElement}
 * @implements {SVGFilterPrimitiveStandardAttributes}
 */
function SVGFECompositeElement(){}


/**
 * @const
 * @type {number}
 */
SVGFECompositeElement.SVG_FECOMPOSITE_OPERATOR_UNKNOWN;


/**
 * @const
 * @type {number}
 */
SVGFECompositeElement.prototype.SVG_FECOMPOSITE_OPERATOR_UNKNOWN;


/**
 * @const
 * @type {number}
 */
SVGFECompositeElement.SVG_FECOMPOSITE_OPERATOR_OVER;


/**
 * @const
 * @type {number}
 */
SVGFECompositeElement.prototype.SVG_FECOMPOSITE_OPERATOR_OVER;


/**
 * @const
 * @type {number}
 */
SVGFECompositeElement.SVG_FECOMPOSITE_OPERATOR_IN;


/**
 * @const
 * @type {number}
 */
SVGFECompositeElement.prototype.SVG_FECOMPOSITE_OPERATOR_IN;


/**
 * @const
 * @type {number}
 */
SVGFECompositeElement.SVG_FECOMPOSITE_OPERATOR_OUT;


/**
 * @const
 * @type {number}
 */
SVGFECompositeElement.prototype.SVG_FECOMPOSITE_OPERATOR_OUT;


/**
 * @const
 * @type {number}
 */
SVGFECompositeElement.SVG_FECOMPOSITE_OPERATOR_ATOP;


/**
 * @const
 * @type {number}
 */
SVGFECompositeElement.prototype.SVG_FECOMPOSITE_OPERATOR_ATOP;


/**
 * @const
 * @type {number}
 */
SVGFECompositeElement.SVG_FECOMPOSITE_OPERATOR_XOR;


/**
 * @const
 * @type {number}
 */
SVGFECompositeElement.prototype.SVG_FECOMPOSITE_OPERATOR_XOR;


/**
 * @const
 * @type {number}
 */
SVGFECompositeElement.SVG_FECOMPOSITE_OPERATOR_ARITHMETIC;


/**
 * @const
 * @type {number}
 */
SVGFECompositeElement.prototype.SVG_FECOMPOSITE_OPERATOR_ARITHMETIC;


/**
 * @type {!SVGAnimatedString}
 */
SVGFECompositeElement.prototype.in1;


/**
 * @type {!SVGAnimatedString}
 */
SVGFECompositeElement.prototype.in2;


/**
 * @type {!SVGAnimatedEnumeration}
 */
SVGFECompositeElement.prototype.operator;


/**
 * @type {!SVGAnimatedNumber}
 */
SVGFECompositeElement.prototype.k1;


/**
 * @type {!SVGAnimatedNumber}
 */
SVGFECompositeElement.prototype.k2;


/**
 * @type {!SVGAnimatedNumber}
 */
SVGFECompositeElement.prototype.k3;


/**
 * @type {!SVGAnimatedNumber}
 */
SVGFECompositeElement.prototype.k4;


/**
 * @type {!SVGAnimatedLength}
 */
SVGFECompositeElement.prototype.x;


/**
 * @type {!SVGAnimatedLength}
 */
SVGFECompositeElement.prototype.y;


/**
 * @type {!SVGAnimatedLength}
 */
SVGFECompositeElement.prototype.width;


/**
 * @type {!SVGAnimatedLength}
 */
SVGFECompositeElement.prototype.height;


/**
 * @type {!SVGAnimatedString}
 */
SVGFECompositeElement.prototype.result;


/**
 * @param {string=} opt_name
 * @return {!CSSValue}
 * @override
 */
SVGFECompositeElement.prototype.getPresentationAttribute = function(opt_name){};



/**
 * @constructor
 * @extends {SVGElement}
 * @implements {SVGLangSpace}
 * @implements {SVGStylable}
 */
function SVGDescElement(){}


/**
 * @type {string}
 */
SVGDescElement.prototype.xmllang;


/**
 * @type {string}
 */
SVGDescElement.prototype.xmlspace;


/**
 * @param {string=} opt_name
 * @return {!CSSValue}
 * @override
 */
SVGDescElement.prototype.getPresentationAttribute = function(opt_name){};



/**
 * @constructor
 * @extends {SVGElement}
 * @implements {SVGTests}
 * @implements {SVGLangSpace}
 * @implements {SVGExternalResourcesRequired}
 * @implements {SVGStylable}
 * @implements {SVGTransformable}
 */
function SVGEllipseElement(){}


/**
 * @type {!SVGAnimatedLength}
 */
SVGEllipseElement.prototype.cx;


/**
 * @type {!SVGAnimatedLength}
 */
SVGEllipseElement.prototype.cy;


/**
 * @type {!SVGAnimatedLength}
 */
SVGEllipseElement.prototype.rx;


/**
 * @type {!SVGAnimatedLength}
 */
SVGEllipseElement.prototype.ry;


/**
 * @type {!SVGAnimatedBoolean}
 */
SVGEllipseElement.prototype.externalResourcesRequired;


/**
 * @type {!SVGAnimatedTransformList}
 */
SVGEllipseElement.prototype.transform;


/**
 * @type {string}
 */
SVGEllipseElement.prototype.xmllang;


/**
 * @type {string}
 */
SVGEllipseElement.prototype.xmlspace;


/**
 * @type {!SVGElement}
 */
SVGEllipseElement.prototype.nearestViewportElement;


/**
 * @type {!SVGElement}
 * @override
 */
SVGEllipseElement.prototype.farthestViewportElement;


/**
 * @return {!SVGRect}
 * @override
 */
SVGEllipseElement.prototype.getBBox = function(){};


/**
 * @return {!SVGMatrix}
 * @override
 */
SVGEllipseElement.prototype.getCTM = function(){};


/**
 * @return {!SVGMatrix}
 * @override
 */
SVGEllipseElement.prototype.getScreenCTM = function(){};


/**
 * @param {!SVGElement=} opt_element
 * @return {!SVGMatrix}
 * @override
 */
SVGEllipseElement.prototype.getTransformToElement = function(opt_element){};


/**
 * @type {!SVGStringList}
 */
SVGEllipseElement.prototype.requiredFeatures;


/**
 * @type {!SVGStringList}
 */
SVGEllipseElement.prototype.requiredExtensions;


/**
 * @type {!SVGStringList}
 */
SVGEllipseElement.prototype.systemLanguage;


/**
 * @param {string=} opt_extension
 * @return {boolean}
 * @override
 */
SVGEllipseElement.prototype.hasExtension = function(opt_extension){};


/**
 * @param {string=} opt_name
 * @return {!CSSValue}
 * @override
 */
SVGEllipseElement.prototype.getPresentationAttribute = function(opt_name){};



/**
 * @constructor
 * @extends {SVGElement}
 * @implements {SVGFilterPrimitiveStandardAttributes}
 */
function SVGFESpecularLightingElement(){}


/**
 * @type {!SVGAnimatedString}
 */
SVGFESpecularLightingElement.prototype.in1;


/**
 * @type {!SVGAnimatedNumber}
 */
SVGFESpecularLightingElement.prototype.surfaceScale;


/**
 * @type {!SVGAnimatedNumber}
 */
SVGFESpecularLightingElement.prototype.specularConstant;


/**
 * @type {!SVGAnimatedNumber}
 */
SVGFESpecularLightingElement.prototype.specularExponent;


/**
 * @type {!SVGAnimatedLength}
 */
SVGFESpecularLightingElement.prototype.x;


/**
 * @type {!SVGAnimatedLength}
 */
SVGFESpecularLightingElement.prototype.y;


/**
 * @type {!SVGAnimatedLength}
 */
SVGFESpecularLightingElement.prototype.width;


/**
 * @type {!SVGAnimatedLength}
 */
SVGFESpecularLightingElement.prototype.height;


/**
 * @type {!SVGAnimatedString}
 */
SVGFESpecularLightingElement.prototype.result;


/**
 * @param {string=} opt_name
 * @return {!CSSValue}
 * @override
 */
SVGFESpecularLightingElement.prototype.getPresentationAttribute = function(opt_name){};



/**
 * @constructor
 * @extends {SVGElement}
 * @implements {SVGFilterPrimitiveStandardAttributes}
 */
function SVGFEColorMatrixElement(){}


/**
 * @const
 * @type {number}
 */
SVGFEColorMatrixElement.SVG_FECOLORMATRIX_TYPE_UNKNOWN;


/**
 * @const
 * @type {number}
 */
SVGFEColorMatrixElement.prototype.SVG_FECOLORMATRIX_TYPE_UNKNOWN;


/**
 * @const
 * @type {number}
 */
SVGFEColorMatrixElement.SVG_FECOLORMATRIX_TYPE_MATRIX;


/**
 * @const
 * @type {number}
 */
SVGFEColorMatrixElement.prototype.SVG_FECOLORMATRIX_TYPE_MATRIX;


/**
 * @const
 * @type {number}
 */
SVGFEColorMatrixElement.SVG_FECOLORMATRIX_TYPE_SATURATE;


/**
 * @const
 * @type {number}
 */
SVGFEColorMatrixElement.prototype.SVG_FECOLORMATRIX_TYPE_SATURATE;


/**
 * @const
 * @type {number}
 */
SVGFEColorMatrixElement.SVG_FECOLORMATRIX_TYPE_HUEROTATE;


/**
 * @const
 * @type {number}
 */
SVGFEColorMatrixElement.prototype.SVG_FECOLORMATRIX_TYPE_HUEROTATE;


/**
 * @const
 * @type {number}
 */
SVGFEColorMatrixElement.SVG_FECOLORMATRIX_TYPE_LUMINANCETOALPHA;


/**
 * @const
 * @type {number}
 */
SVGFEColorMatrixElement.prototype.SVG_FECOLORMATRIX_TYPE_LUMINANCETOALPHA;


/**
 * @type {!SVGAnimatedString}
 */
SVGFEColorMatrixElement.prototype.in1;


/**
 * @type {!SVGAnimatedEnumeration}
 */
SVGFEColorMatrixElement.prototype.type;


/**
 * @type {!SVGAnimatedNumberList}
 */
SVGFEColorMatrixElement.prototype.values;


/**
 * @type {!SVGAnimatedLength}
 */
SVGFEColorMatrixElement.prototype.x;


/**
 * @type {!SVGAnimatedLength}
 */
SVGFEColorMatrixElement.prototype.y;


/**
 * @type {!SVGAnimatedLength}
 */
SVGFEColorMatrixElement.prototype.width;


/**
 * @type {!SVGAnimatedLength}
 */
SVGFEColorMatrixElement.prototype.height;


/**
 * @type {!SVGAnimatedString}
 */
SVGFEColorMatrixElement.prototype.result;


/**
 * @param {string=} opt_name
 * @return {!CSSValue}
 * @override
 */
SVGFEColorMatrixElement.prototype.getPresentationAttribute = function(opt_name){};



/**
 * @constructor
 * @extends {SVGElement}
 * @implements {SVGLangSpace}
 * @implements {SVGExternalResourcesRequired}
 * @implements {SVGStylable}
 * @implements {SVGFitToViewBox}
 */
function SVGSymbolElement(){}


/**
 * @type {!SVGAnimatedBoolean}
 */
SVGSymbolElement.prototype.externalResourcesRequired;


/**
 * @type {!SVGAnimatedRect}
 */
SVGSymbolElement.prototype.viewBox;


/**
 * @type {!SVGAnimatedPreserveAspectRatio}
 */
SVGSymbolElement.prototype.preserveAspectRatio;


/**
 * @type {string}
 */
SVGSymbolElement.prototype.xmllang;


/**
 * @type {string}
 */
SVGSymbolElement.prototype.xmlspace;


/**
 * @param {string=} opt_name
 * @return {!CSSValue}
 * @override
 */
SVGSymbolElement.prototype.getPresentationAttribute = function(opt_name){};



/**
 * @constructor
 * @extends {SVGElement}
 * @implements {SVGFilterPrimitiveStandardAttributes}
 */
function SVGFEConvolveMatrixElement(){}


/**
 * @const
 * @type {number}
 */
SVGFEConvolveMatrixElement.SVG_EDGEMODE_UNKNOWN;


/**
 * @const
 * @type {number}
 */
SVGFEConvolveMatrixElement.prototype.SVG_EDGEMODE_UNKNOWN;


/**
 * @const
 * @type {number}
 */
SVGFEConvolveMatrixElement.SVG_EDGEMODE_DUPLICATE;


/**
 * @const
 * @type {number}
 */
SVGFEConvolveMatrixElement.prototype.SVG_EDGEMODE_DUPLICATE;


/**
 * @const
 * @type {number}
 */
SVGFEConvolveMatrixElement.SVG_EDGEMODE_WRAP;


/**
 * @const
 * @type {number}
 */
SVGFEConvolveMatrixElement.prototype.SVG_EDGEMODE_WRAP;


/**
 * @const
 * @type {number}
 */
SVGFEConvolveMatrixElement.SVG_EDGEMODE_NONE;


/**
 * @const
 * @type {number}
 */
SVGFEConvolveMatrixElement.prototype.SVG_EDGEMODE_NONE;


/**
 * @type {!SVGAnimatedString}
 */
SVGFEConvolveMatrixElement.prototype.in1;


/**
 * @type {!SVGAnimatedInteger}
 */
SVGFEConvolveMatrixElement.prototype.orderX;


/**
 * @type {!SVGAnimatedInteger}
 */
SVGFEConvolveMatrixElement.prototype.orderY;


/**
 * @type {!SVGAnimatedNumberList}
 */
SVGFEConvolveMatrixElement.prototype.kernelMatrix;


/**
 * @type {!SVGAnimatedNumber}
 */
SVGFEConvolveMatrixElement.prototype.divisor;


/**
 * @type {!SVGAnimatedNumber}
 */
SVGFEConvolveMatrixElement.prototype.bias;


/**
 * @type {!SVGAnimatedInteger}
 */
SVGFEConvolveMatrixElement.prototype.targetX;


/**
 * @type {!SVGAnimatedInteger}
 */
SVGFEConvolveMatrixElement.prototype.targetY;


/**
 * @type {!SVGAnimatedEnumeration}
 */
SVGFEConvolveMatrixElement.prototype.edgeMode;


/**
 * @type {!SVGAnimatedNumber}
 */
SVGFEConvolveMatrixElement.prototype.kernelUnitLengthX;


/**
 * @type {!SVGAnimatedNumber}
 */
SVGFEConvolveMatrixElement.prototype.kernelUnitLengthY;


/**
 * @type {!SVGAnimatedBoolean}
 */
SVGFEConvolveMatrixElement.prototype.preserveAlpha;


/**
 * @type {!SVGAnimatedLength}
 */
SVGFEConvolveMatrixElement.prototype.x;


/**
 * @type {!SVGAnimatedLength}
 */
SVGFEConvolveMatrixElement.prototype.y;


/**
 * @type {!SVGAnimatedLength}
 */
SVGFEConvolveMatrixElement.prototype.width;


/**
 * @type {!SVGAnimatedLength}
 */
SVGFEConvolveMatrixElement.prototype.height;


/**
 * @type {!SVGAnimatedString}
 */
SVGFEConvolveMatrixElement.prototype.result;


/**
 * @param {string=} opt_name
 * @return {!CSSValue}
 * @override
 */
SVGFEConvolveMatrixElement.prototype.getPresentationAttribute = function(opt_name){};



/**
 * @constructor
 * @extends {SVGElement}
 * @implements {SVGFilterPrimitiveStandardAttributes}
 */
function SVGFEFloodElement(){}


/**
 * @type {!SVGAnimatedLength}
 */
SVGFEFloodElement.prototype.x;


/**
 * @type {!SVGAnimatedLength}
 */
SVGFEFloodElement.prototype.y;


/**
 * @type {!SVGAnimatedLength}
 */
SVGFEFloodElement.prototype.width;


/**
 * @type {!SVGAnimatedLength}
 */
SVGFEFloodElement.prototype.height;


/**
 * @type {!SVGAnimatedString}
 */
SVGFEFloodElement.prototype.result;


/**
 * @param {string=} opt_name
 * @return {!CSSValue}
 * @override
 */
SVGFEFloodElement.prototype.getPresentationAttribute = function(opt_name){};



/**
 * @constructor
 * @extends {SVGElement}
 * @implements {SVGStylable}
 */
function SVGStopElement(){}


/**
 * @type {!SVGAnimatedNumber}
 */
SVGStopElement.prototype.offset;


/**
 * @param {string=} opt_name
 * @return {!CSSValue}
 * @override
 */
SVGStopElement.prototype.getPresentationAttribute = function(opt_name){};



/**
 * @constructor
 * @extends {SVGElement}
 */
function SVGGlyphElement(){}



/**
 * @constructor
 * @extends {SVGElement}
 */
function SVGHKernElement(){}



/**
 * @constructor
 * @extends {SVGElement}
 */
function SVGVKernElement(){}



/**
 * @constructor
 * @extends {SVGElement}
 */
function SVGFontElement(){}



/**
 * @constructor
 * @extends {SVGElement}
 * @implements {SVGFilterPrimitiveStandardAttributes}
 */
function SVGFEOffsetElement(){}


/**
 * @type {!SVGAnimatedString}
 */
SVGFEOffsetElement.prototype.in1;


/**
 * @type {!SVGAnimatedNumber}
 */
SVGFEOffsetElement.prototype.dx;


/**
 * @type {!SVGAnimatedNumber}
 */
SVGFEOffsetElement.prototype.dy;


/**
 * @type {!SVGAnimatedLength}
 */
SVGFEOffsetElement.prototype.x;


/**
 * @type {!SVGAnimatedLength}
 */
SVGFEOffsetElement.prototype.y;


/**
 * @type {!SVGAnimatedLength}
 */
SVGFEOffsetElement.prototype.width;


/**
 * @type {!SVGAnimatedLength}
 */
SVGFEOffsetElement.prototype.height;


/**
 * @type {!SVGAnimatedString}
 */
SVGFEOffsetElement.prototype.result;


/**
 * @param {string=} opt_name
 * @return {!CSSValue}
 * @override
 */
SVGFEOffsetElement.prototype.getPresentationAttribute = function(opt_name){};



/**
 * @constructor
 * @extends {SVGElement}
 * @implements {SVGURIReference}
 * @implements {SVGLangSpace}
 * @implements {SVGExternalResourcesRequired}
 * @implements {SVGStylable}
 */
function SVGFilterElement(){}


/**
 * @type {!SVGAnimatedEnumeration}
 */
SVGFilterElement.prototype.filterUnits;


/**
 * @type {!SVGAnimatedEnumeration}
 */
SVGFilterElement.prototype.primitiveUnits;


/**
 * @type {!SVGAnimatedLength}
 */
SVGFilterElement.prototype.x;


/**
 * @type {!SVGAnimatedLength}
 */
SVGFilterElement.prototype.y;


/**
 * @type {!SVGAnimatedLength}
 */
SVGFilterElement.prototype.width;


/**
 * @type {!SVGAnimatedLength}
 */
SVGFilterElement.prototype.height;


/**
 * @type {!SVGAnimatedInteger}
 */
SVGFilterElement.prototype.filterResX;


/**
 * @type {!SVGAnimatedInteger}
 */
SVGFilterElement.prototype.filterResY;


/**
 * @param {number=} opt_filterResX
 * @param {number=} opt_filterResY
 * @return {undefined}
 */
SVGFilterElement.prototype.setFilterRes = function(opt_filterResX, opt_filterResY){};


/**
 * @type {!SVGAnimatedBoolean}
 */
SVGFilterElement.prototype.externalResourcesRequired;


/**
 * @type {!SVGAnimatedString}
 */
SVGFilterElement.prototype.href;


/**
 * @param {string=} opt_name
 * @return {!CSSValue}
 * @override
 */
SVGFilterElement.prototype.getPresentationAttribute = function(opt_name){};


/**
 * @type {string}
 */
SVGFilterElement.prototype.xmllang;


/**
 * @type {string}
 */
SVGFilterElement.prototype.xmlspace;



/**
 * @constructor
 * @extends {SVGElement}
 * @implements {SVGFilterPrimitiveStandardAttributes}
 */
function SVGFEGaussianBlurElement(){}


/**
 * @type {!SVGAnimatedString}
 */
SVGFEGaussianBlurElement.prototype.in1;


/**
 * @type {!SVGAnimatedNumber}
 */
SVGFEGaussianBlurElement.prototype.stdDeviationX;


/**
 * @type {!SVGAnimatedNumber}
 */
SVGFEGaussianBlurElement.prototype.stdDeviationY;


/**
 * @param {number=} opt_stdDeviationX
 * @param {number=} opt_stdDeviationY
 * @return {undefined}
 */
SVGFEGaussianBlurElement.prototype.setStdDeviation = function(opt_stdDeviationX, opt_stdDeviationY){};


/**
 * @type {!SVGAnimatedLength}
 */
SVGFEGaussianBlurElement.prototype.x;


/**
 * @type {!SVGAnimatedLength}
 */
SVGFEGaussianBlurElement.prototype.y;


/**
 * @type {!SVGAnimatedLength}
 */
SVGFEGaussianBlurElement.prototype.width;


/**
 * @type {!SVGAnimatedLength}
 */
SVGFEGaussianBlurElement.prototype.height;


/**
 * @type {!SVGAnimatedString}
 */
SVGFEGaussianBlurElement.prototype.result;


/**
 * @param {string=} opt_name
 * @return {!CSSValue}
 * @override
 */
SVGFEGaussianBlurElement.prototype.getPresentationAttribute = function(opt_name){};



/**
 * @constructor
 * @extends {SVGElement}
 */
function SVGAltGlyphDefElement(){}



/**
 * @constructor
 * @extends {SVGElement}
 */
function SVGComponentTransferFunctionElement(){}


/**
 * @const
 * @type {number}
 */
SVGComponentTransferFunctionElement.SVG_FECOMPONENTTRANSFER_TYPE_UNKNOWN;


/**
 * @const
 * @type {number}
 */
SVGComponentTransferFunctionElement.prototype.SVG_FECOMPONENTTRANSFER_TYPE_UNKNOWN;


/**
 * @const
 * @type {number}
 */
SVGComponentTransferFunctionElement.SVG_FECOMPONENTTRANSFER_TYPE_IDENTITY;


/**
 * @const
 * @type {number}
 */
SVGComponentTransferFunctionElement.prototype.SVG_FECOMPONENTTRANSFER_TYPE_IDENTITY;


/**
 * @const
 * @type {number}
 */
SVGComponentTransferFunctionElement.SVG_FECOMPONENTTRANSFER_TYPE_TABLE;


/**
 * @const
 * @type {number}
 */
SVGComponentTransferFunctionElement.prototype.SVG_FECOMPONENTTRANSFER_TYPE_TABLE;


/**
 * @const
 * @type {number}
 */
SVGComponentTransferFunctionElement.SVG_FECOMPONENTTRANSFER_TYPE_DISCRETE;


/**
 * @const
 * @type {number}
 */
SVGComponentTransferFunctionElement.prototype.SVG_FECOMPONENTTRANSFER_TYPE_DISCRETE;


/**
 * @const
 * @type {number}
 */
SVGComponentTransferFunctionElement.SVG_FECOMPONENTTRANSFER_TYPE_LINEAR;


/**
 * @const
 * @type {number}
 */
SVGComponentTransferFunctionElement.prototype.SVG_FECOMPONENTTRANSFER_TYPE_LINEAR;


/**
 * @const
 * @type {number}
 */
SVGComponentTransferFunctionElement.SVG_FECOMPONENTTRANSFER_TYPE_GAMMA;


/**
 * @const
 * @type {number}
 */
SVGComponentTransferFunctionElement.prototype.SVG_FECOMPONENTTRANSFER_TYPE_GAMMA;


/**
 * @type {!SVGAnimatedEnumeration}
 */
SVGComponentTransferFunctionElement.prototype.type;


/**
 * @type {!SVGAnimatedNumberList}
 */
SVGComponentTransferFunctionElement.prototype.tableValues;


/**
 * @type {!SVGAnimatedNumber}
 */
SVGComponentTransferFunctionElement.prototype.slope;


/**
 * @type {!SVGAnimatedNumber}
 */
SVGComponentTransferFunctionElement.prototype.intercept;


/**
 * @type {!SVGAnimatedNumber}
 */
SVGComponentTransferFunctionElement.prototype.amplitude;


/**
 * @type {!SVGAnimatedNumber}
 */
SVGComponentTransferFunctionElement.prototype.exponent;


/**
 * @type {!SVGAnimatedNumber}
 */
SVGComponentTransferFunctionElement.prototype.offset;



/**
 * @constructor
 * @extends {SVGElement}
 */
function SVGMetadataElement(){}



/**
 * @constructor
 * @extends {SVGElement}
 * @implements {SVGLangSpace}
 * @implements {SVGStylable}
 */
function SVGTitleElement(){}


/**
 * @type {string}
 */
SVGTitleElement.prototype.xmllang;


/**
 * @type {string}
 */
SVGTitleElement.prototype.xmlspace;


/**
 * @param {string=} opt_name
 * @return {!CSSValue}
 * @override
 */
SVGTitleElement.prototype.getPresentationAttribute = function(opt_name){};



/**
 * @constructor
 * @extends {SVGElement}
 * @implements {SVGURIReference}
 * @implements {SVGTests}
 * @implements {SVGExternalResourcesRequired}
 */
function SVGCursorElement(){}


/**
 * @type {!SVGAnimatedLength}
 */
SVGCursorElement.prototype.x;


/**
 * @type {!SVGAnimatedLength}
 */
SVGCursorElement.prototype.y;


/**
 * @type {!SVGAnimatedBoolean}
 */
SVGCursorElement.prototype.externalResourcesRequired;


/**
 * @type {!SVGAnimatedString}
 */
SVGCursorElement.prototype.href;


/**
 * @type {!SVGStringList}
 */
SVGCursorElement.prototype.requiredFeatures;


/**
 * @type {!SVGStringList}
 */
SVGCursorElement.prototype.requiredExtensions;


/**
 * @type {!SVGStringList}
 */
SVGCursorElement.prototype.systemLanguage;


/**
 * @param {string=} opt_extension
 * @return {boolean}
 * @override
 */
SVGCursorElement.prototype.hasExtension = function(opt_extension){};



/**
 * @constructor
 * @extends {SVGElement}
 * @implements {SVGURIReference}
 * @implements {SVGExternalResourcesRequired}
 * @implements {SVGStylable}
 */
function SVGGradientElement(){}


/**
 * @const
 * @type {number}
 */
SVGGradientElement.SVG_SPREADMETHOD_UNKNOWN;


/**
 * @const
 * @type {number}
 */
SVGGradientElement.prototype.SVG_SPREADMETHOD_UNKNOWN;


/**
 * @const
 * @type {number}
 */
SVGGradientElement.SVG_SPREADMETHOD_PAD;


/**
 * @const
 * @type {number}
 */
SVGGradientElement.prototype.SVG_SPREADMETHOD_PAD;


/**
 * @const
 * @type {number}
 */
SVGGradientElement.SVG_SPREADMETHOD_REFLECT;


/**
 * @const
 * @type {number}
 */
SVGGradientElement.prototype.SVG_SPREADMETHOD_REFLECT;


/**
 * @const
 * @type {number}
 */
SVGGradientElement.SVG_SPREADMETHOD_REPEAT;


/**
 * @const
 * @type {number}
 */
SVGGradientElement.prototype.SVG_SPREADMETHOD_REPEAT;


/**
 * @type {!SVGAnimatedEnumeration}
 */
SVGGradientElement.prototype.gradientUnits;


/**
 * @type {!SVGAnimatedTransformList}
 */
SVGGradientElement.prototype.gradientTransform;


/**
 * @type {!SVGAnimatedEnumeration}
 */
SVGGradientElement.prototype.spreadMethod;


/**
 * @type {!SVGAnimatedBoolean}
 */
SVGGradientElement.prototype.externalResourcesRequired;


/**
 * @type {!SVGAnimatedString}
 */
SVGGradientElement.prototype.href;


/**
 * @param {string=} opt_name
 * @return {!CSSValue}
 * @override
 */
SVGGradientElement.prototype.getPresentationAttribute = function(opt_name){};



/**
 * @constructor
 * @extends {SVGElement}
 * @implements {SVGLangSpace}
 * @implements {SVGExternalResourcesRequired}
 * @implements {SVGStylable}
 * @implements {SVGFitToViewBox}
 */
function SVGMarkerElement(){}


/**
 * @const
 * @type {number}
 */
SVGMarkerElement.SVG_MARKERUNITS_UNKNOWN;


/**
 * @const
 * @type {number}
 */
SVGMarkerElement.prototype.SVG_MARKERUNITS_UNKNOWN;


/**
 * @const
 * @type {number}
 */
SVGMarkerElement.SVG_MARKERUNITS_USERSPACEONUSE;


/**
 * @const
 * @type {number}
 */
SVGMarkerElement.prototype.SVG_MARKERUNITS_USERSPACEONUSE;


/**
 * @const
 * @type {number}
 */
SVGMarkerElement.SVG_MARKERUNITS_STROKEWIDTH;


/**
 * @const
 * @type {number}
 */
SVGMarkerElement.prototype.SVG_MARKERUNITS_STROKEWIDTH;


/**
 * @const
 * @type {number}
 */
SVGMarkerElement.SVG_MARKER_ORIENT_UNKNOWN;


/**
 * @const
 * @type {number}
 */
SVGMarkerElement.prototype.SVG_MARKER_ORIENT_UNKNOWN;


/**
 * @const
 * @type {number}
 */
SVGMarkerElement.SVG_MARKER_ORIENT_AUTO;


/**
 * @const
 * @type {number}
 */
SVGMarkerElement.prototype.SVG_MARKER_ORIENT_AUTO;


/**
 * @const
 * @type {number}
 */
SVGMarkerElement.SVG_MARKER_ORIENT_ANGLE;


/**
 * @const
 * @type {number}
 */
SVGMarkerElement.prototype.SVG_MARKER_ORIENT_ANGLE;


/**
 * @type {!SVGAnimatedLength}
 */
SVGMarkerElement.prototype.refX;


/**
 * @type {!SVGAnimatedLength}
 */
SVGMarkerElement.prototype.refY;


/**
 * @type {!SVGAnimatedEnumeration}
 */
SVGMarkerElement.prototype.markerUnits;


/**
 * @type {!SVGAnimatedLength}
 */
SVGMarkerElement.prototype.markerWidth;


/**
 * @type {!SVGAnimatedLength}
 */
SVGMarkerElement.prototype.markerHeight;


/**
 * @type {!SVGAnimatedEnumeration}
 */
SVGMarkerElement.prototype.orientType;


/**
 * @type {!SVGAnimatedAngle}
 */
SVGMarkerElement.prototype.orientAngle;


/** */
SVGMarkerElement.prototype.setOrientToAuto = function(){};


/**
 * @param {!SVGAngle=} opt_angle
 * @return {undefined}
 */
SVGMarkerElement.prototype.setOrientToAngle = function(opt_angle){};


/**
 * @type {!SVGAnimatedBoolean}
 */
SVGMarkerElement.prototype.externalResourcesRequired;


/**
 * @type {!SVGAnimatedRect}
 */
SVGMarkerElement.prototype.viewBox;


/**
 * @type {!SVGAnimatedPreserveAspectRatio}
 */
SVGMarkerElement.prototype.preserveAspectRatio;


/**
 * @type {string}
 */
SVGMarkerElement.prototype.xmllang;


/**
 * @type {string}
 */
SVGMarkerElement.prototype.xmlspace;


/**
 * @param {string=} opt_name
 * @return {!CSSValue}
 * @override
 */
SVGMarkerElement.prototype.getPresentationAttribute = function(opt_name){};



/**
 * @constructor
 * @extends {SVGElement}
 * @implements {SVGTests}
 * @implements {SVGLangSpace}
 * @implements {SVGExternalResourcesRequired}
 * @implements {SVGStylable}
 */
function SVGMaskElement(){}


/**
 * @type {!SVGAnimatedEnumeration}
 */
SVGMaskElement.prototype.maskUnits;


/**
 * @type {!SVGAnimatedEnumeration}
 */
SVGMaskElement.prototype.maskContentUnits;


/**
 * @type {!SVGAnimatedLength}
 */
SVGMaskElement.prototype.x;


/**
 * @type {!SVGAnimatedLength}
 */
SVGMaskElement.prototype.y;


/**
 * @type {!SVGAnimatedLength}
 */
SVGMaskElement.prototype.width;


/**
 * @type {!SVGAnimatedLength}
 */
SVGMaskElement.prototype.height;


/**
 * @type {!SVGAnimatedBoolean}
 */
SVGMaskElement.prototype.externalResourcesRequired;


/**
 * @type {!SVGStringList}
 */
SVGMaskElement.prototype.requiredFeatures;


/**
 * @type {!SVGStringList}
 */
SVGMaskElement.prototype.requiredExtensions;


/**
 * @type {!SVGStringList}
 */
SVGMaskElement.prototype.systemLanguage;


/**
 * @param {string=} opt_extension
 * @return {boolean}
 * @override
 */
SVGMaskElement.prototype.hasExtension = function(opt_extension){};


/**
 * @param {string=} opt_name
 * @return {!CSSValue}
 * @override
 */
SVGMaskElement.prototype.getPresentationAttribute = function(opt_name){};


/**
 * @type {string}
 */
SVGMaskElement.prototype.xmllang;


/**
 * @type {string}
 */
SVGMaskElement.prototype.xmlspace;



/**
 * @constructor
 * @extends {SVGElement}
 * @implements {SVGExternalResourcesRequired}
 * @implements {SVGFitToViewBox}
 * @implements {SVGZoomAndPan}
 */
function SVGViewElement(){}


/**
 * @type {!SVGStringList}
 */
SVGViewElement.prototype.viewTarget;


/**
 * @type {!SVGAnimatedBoolean}
 */
SVGViewElement.prototype.externalResourcesRequired;


/**
 * @const
 * @type {number}
 */
SVGViewElement.SVG_ZOOMANDPAN_UNKNOWN;


/**
 * @const
 * @type {number}
 */
SVGViewElement.prototype.SVG_ZOOMANDPAN_UNKNOWN;


/**
 * @const
 * @type {number}
 */
SVGViewElement.SVG_ZOOMANDPAN_DISABLE;


/**
 * @const
 * @type {number}
 */
SVGViewElement.prototype.SVG_ZOOMANDPAN_DISABLE;


/**
 * @const
 * @type {number}
 */
SVGViewElement.SVG_ZOOMANDPAN_MAGNIFY;


/**
 * @const
 * @type {number}
 */
SVGViewElement.prototype.SVG_ZOOMANDPAN_MAGNIFY;


/**
 * @type {number}
 */
SVGViewElement.prototype.zoomAndPan;


/**
 * @type {!SVGAnimatedRect}
 */
SVGViewElement.prototype.viewBox;


/**
 * @type {!SVGAnimatedPreserveAspectRatio}
 */
SVGViewElement.prototype.preserveAspectRatio;



/**
 * @constructor
 * @extends {SVGElement}
 * @implements {SVGURIReference}
 * @implements {SVGExternalResourcesRequired}
 */
function SVGMPathElement(){}


/**
 * @type {!SVGAnimatedBoolean}
 */
SVGMPathElement.prototype.externalResourcesRequired;


/**
 * @type {!SVGAnimatedString}
 */
SVGMPathElement.prototype.href;



/**
 * @constructor
 * @extends {SVGElement}
 */
function SVGFontFaceSrcElement(){}



/**
 * @constructor
 * @extends {SVGElement}
 * @implements {SVGURIReference}
 * @implements {SVGLangSpace}
 * @implements {SVGExternalResourcesRequired}
 * @implements {SVGFilterPrimitiveStandardAttributes}
 */
function SVGFEImageElement(){}


/**
 * @type {!SVGAnimatedPreserveAspectRatio}
 */
SVGFEImageElement.prototype.preserveAspectRatio;


/**
 * @type {!SVGAnimatedLength}
 */
SVGFEImageElement.prototype.x;


/**
 * @type {!SVGAnimatedLength}
 */
SVGFEImageElement.prototype.y;


/**
 * @type {!SVGAnimatedLength}
 */
SVGFEImageElement.prototype.width;


/**
 * @type {!SVGAnimatedLength}
 */
SVGFEImageElement.prototype.height;


/**
 * @type {!SVGAnimatedString}
 */
SVGFEImageElement.prototype.result;


/**
 * @type {!SVGAnimatedBoolean}
 */
SVGFEImageElement.prototype.externalResourcesRequired;


/**
 * @type {!SVGAnimatedString}
 */
SVGFEImageElement.prototype.href;


/**
 * @param {string=} opt_name
 * @return {!CSSValue}
 * @override
 */
SVGFEImageElement.prototype.getPresentationAttribute = function(opt_name){};


/**
 * @type {string}
 */
SVGFEImageElement.prototype.xmllang;


/**
 * @type {string}
 */
SVGFEImageElement.prototype.xmlspace;



/**
 * @constructor
 * @extends {SVGElement}
 */
function SVGFEDistantLightElement(){}


/**
 * @type {!SVGAnimatedNumber}
 */
SVGFEDistantLightElement.prototype.azimuth;


/**
 * @type {!SVGAnimatedNumber}
 */
SVGFEDistantLightElement.prototype.elevation;



/**
 * @constructor
 * @extends {SVGElement}
 */
function SVGFontFaceUriElement(){}



/**
 * @constructor
 * @extends {SVGElement}
 * @implements {SVGFilterPrimitiveStandardAttributes}
 */
function SVGFEDiffuseLightingElement(){}


/**
 * @type {!SVGAnimatedString}
 */
SVGFEDiffuseLightingElement.prototype.in1;


/**
 * @type {!SVGAnimatedNumber}
 */
SVGFEDiffuseLightingElement.prototype.surfaceScale;


/**
 * @type {!SVGAnimatedNumber}
 */
SVGFEDiffuseLightingElement.prototype.diffuseConstant;


/**
 * @type {!SVGAnimatedNumber}
 */
SVGFEDiffuseLightingElement.prototype.kernelUnitLengthX;


/**
 * @type {!SVGAnimatedNumber}
 */
SVGFEDiffuseLightingElement.prototype.kernelUnitLengthY;


/**
 * @type {!SVGAnimatedLength}
 */
SVGFEDiffuseLightingElement.prototype.x;


/**
 * @type {!SVGAnimatedLength}
 */
SVGFEDiffuseLightingElement.prototype.y;


/**
 * @type {!SVGAnimatedLength}
 */
SVGFEDiffuseLightingElement.prototype.width;


/**
 * @type {!SVGAnimatedLength}
 */
SVGFEDiffuseLightingElement.prototype.height;


/**
 * @type {!SVGAnimatedString}
 */
SVGFEDiffuseLightingElement.prototype.result;


/**
 * @param {string=} opt_name
 * @return {!CSSValue}
 * @override
 */
SVGFEDiffuseLightingElement.prototype.getPresentationAttribute = function(opt_name){};



/**
 * @constructor
 * @extends {SVGElement}
 * @implements {SVGFilterPrimitiveStandardAttributes}
 */
function SVGFEMorphologyElement(){}


/**
 * @const
 * @type {number}
 */
SVGFEMorphologyElement.SVG_MORPHOLOGY_OPERATOR_UNKNOWN;


/**
 * @const
 * @type {number}
 */
SVGFEMorphologyElement.prototype.SVG_MORPHOLOGY_OPERATOR_UNKNOWN;


/**
 * @const
 * @type {number}
 */
SVGFEMorphologyElement.SVG_MORPHOLOGY_OPERATOR_ERODE;


/**
 * @const
 * @type {number}
 */
SVGFEMorphologyElement.prototype.SVG_MORPHOLOGY_OPERATOR_ERODE;


/**
 * @const
 * @type {number}
 */
SVGFEMorphologyElement.SVG_MORPHOLOGY_OPERATOR_DILATE;


/**
 * @const
 * @type {number}
 */
SVGFEMorphologyElement.prototype.SVG_MORPHOLOGY_OPERATOR_DILATE;


/**
 * @type {!SVGAnimatedString}
 */
SVGFEMorphologyElement.prototype.in1;


/**
 * @type {!SVGAnimatedEnumeration}
 */
SVGFEMorphologyElement.prototype.operator;


/**
 * @type {!SVGAnimatedNumber}
 */
SVGFEMorphologyElement.prototype.radiusX;


/**
 * @type {!SVGAnimatedNumber}
 */
SVGFEMorphologyElement.prototype.radiusY;


/**
 * @param {number=} opt_radiusX
 * @param {number=} opt_radiusY
 * @return {undefined}
 */
SVGFEMorphologyElement.prototype.setRadius = function(opt_radiusX, opt_radiusY){};


/**
 * @type {!SVGAnimatedLength}
 */
SVGFEMorphologyElement.prototype.x;


/**
 * @type {!SVGAnimatedLength}
 */
SVGFEMorphologyElement.prototype.y;


/**
 * @type {!SVGAnimatedLength}
 */
SVGFEMorphologyElement.prototype.width;


/**
 * @type {!SVGAnimatedLength}
 */
SVGFEMorphologyElement.prototype.height;


/**
 * @type {!SVGAnimatedString}
 */
SVGFEMorphologyElement.prototype.result;


/**
 * @param {string=} opt_name
 * @return {!CSSValue}
 * @override
 */
SVGFEMorphologyElement.prototype.getPresentationAttribute = function(opt_name){};



/**
 * @constructor
 * @extends {SVGElement}
 * @implements {SVGURIReference}
 * @implements {SVGStylable}
 */
function SVGGlyphRefElement(){}


/**
 * @type {string}
 */
SVGGlyphRefElement.prototype.glyphRef;


/**
 * @type {string}
 */
SVGGlyphRefElement.prototype.format;


/**
 * @type {number}
 */
SVGGlyphRefElement.prototype.x;


/**
 * @type {number}
 */
SVGGlyphRefElement.prototype.y;


/**
 * @type {number}
 */
SVGGlyphRefElement.prototype.dx;


/**
 * @type {number}
 */
SVGGlyphRefElement.prototype.dy;


/**
 * @type {!SVGAnimatedString}
 */
SVGGlyphRefElement.prototype.href;


/**
 * @param {string=} opt_name
 * @return {!CSSValue}
 * @override
 */
SVGGlyphRefElement.prototype.getPresentationAttribute = function(opt_name){};



/**
 * @constructor
 * @extends {SVGElement}
 * @implements {SVGTests}
 * @implements {SVGLangSpace}
 * @implements {SVGExternalResourcesRequired}
 * @implements {SVGStylable}
 */
function SVGTextContentElement(){}


/**
 * @const
 * @type {number}
 */
SVGTextContentElement.LENGTHADJUST_UNKNOWN;


/**
 * @const
 * @type {number}
 */
SVGTextContentElement.prototype.LENGTHADJUST_UNKNOWN;


/**
 * @const
 * @type {number}
 */
SVGTextContentElement.LENGTHADJUST_SPACING;


/**
 * @const
 * @type {number}
 */
SVGTextContentElement.prototype.LENGTHADJUST_SPACING;


/**
 * @const
 * @type {number}
 */
SVGTextContentElement.LENGTHADJUST_SPACINGANDGLYPHS;


/**
 * @const
 * @type {number}
 */
SVGTextContentElement.prototype.LENGTHADJUST_SPACINGANDGLYPHS;


/**
 * @type {!SVGAnimatedLength}
 */
SVGTextContentElement.prototype.textLength;


/**
 * @type {!SVGAnimatedEnumeration}
 */
SVGTextContentElement.prototype.lengthAdjust;


/**
 * @return {number}
 */
SVGTextContentElement.prototype.getNumberOfChars = function(){};


/**
 * @return {number}
 */
SVGTextContentElement.prototype.getComputedTextLength = function(){};


/**
 * @param {number=} opt_offset
 * @param {number=} opt_length
 * @return {number}
 */
SVGTextContentElement.prototype.getSubStringLength = function(opt_offset, opt_length){};


/**
 * @param {number=} opt_offset
 * @return {!SVGPoint}
 */
SVGTextContentElement.prototype.getStartPositionOfChar = function(opt_offset){};


/**
 * @param {number=} opt_offset
 * @return {!SVGPoint}
 */
SVGTextContentElement.prototype.getEndPositionOfChar = function(opt_offset){};


/**
 * @param {number=} opt_offset
 * @return {!SVGRect}
 */
SVGTextContentElement.prototype.getExtentOfChar = function(opt_offset){};


/**
 * @param {number=} opt_offset
 * @return {number}
 */
SVGTextContentElement.prototype.getRotationOfChar = function(opt_offset){};


/**
 * @param {!SVGPoint=} opt_point
 * @return {number}
 */
SVGTextContentElement.prototype.getCharNumAtPosition = function(opt_point){};


/**
 * @param {number=} opt_offset
 * @param {number=} opt_length
 * @return {undefined}
 */
SVGTextContentElement.prototype.selectSubString = function(opt_offset, opt_length){};


/**
 * @type {!SVGAnimatedBoolean}
 */
SVGTextContentElement.prototype.externalResourcesRequired;


/**
 * @type {!SVGStringList}
 */
SVGTextContentElement.prototype.requiredFeatures;


/**
 * @type {!SVGStringList}
 */
SVGTextContentElement.prototype.requiredExtensions;


/**
 * @type {!SVGStringList}
 */
SVGTextContentElement.prototype.systemLanguage;


/**
 * @param {string=} opt_extension
 * @return {boolean}
 * @override
 */
SVGTextContentElement.prototype.hasExtension = function(opt_extension){};


/**
 * @param {string=} opt_name
 * @return {!CSSValue}
 * @override
 */
SVGTextContentElement.prototype.getPresentationAttribute = function(opt_name){};


/**
 * @type {string}
 */
SVGTextContentElement.prototype.xmllang;


/**
 * @type {string}
 */
SVGTextContentElement.prototype.xmlspace;



/**
 * @constructor
 * @extends {SVGElement}
 */
function SVGFESpotLightElement(){}


/**
 * @type {!SVGAnimatedNumber}
 */
SVGFESpotLightElement.prototype.x;


/**
 * @type {!SVGAnimatedNumber}
 */
SVGFESpotLightElement.prototype.y;


/**
 * @type {!SVGAnimatedNumber}
 */
SVGFESpotLightElement.prototype.z;


/**
 * @type {!SVGAnimatedNumber}
 */
SVGFESpotLightElement.prototype.pointsAtX;


/**
 * @type {!SVGAnimatedNumber}
 */
SVGFESpotLightElement.prototype.pointsAtY;


/**
 * @type {!SVGAnimatedNumber}
 */
SVGFESpotLightElement.prototype.pointsAtZ;


/**
 * @type {!SVGAnimatedNumber}
 */
SVGFESpotLightElement.prototype.specularExponent;


/**
 * @type {!SVGAnimatedNumber}
 */
SVGFESpotLightElement.prototype.limitingConeAngle;



/**
 * @constructor
 * @extends {SVGElement}
 */
function SVGFontFaceNameElement(){}



/**
 * @constructor
 * @extends {SVGElement}
 */
function SVGFEPointLightElement(){}


/**
 * @type {!SVGAnimatedNumber}
 */
SVGFEPointLightElement.prototype.x;


/**
 * @type {!SVGAnimatedNumber}
 */
SVGFEPointLightElement.prototype.y;


/**
 * @type {!SVGAnimatedNumber}
 */
SVGFEPointLightElement.prototype.z;



/**
 * @constructor
 * @extends {SVGElement}
 * @implements {SVGFilterPrimitiveStandardAttributes}
 */
function SVGFEDropShadowElement(){}


/**
 * @type {!SVGAnimatedString}
 */
SVGFEDropShadowElement.prototype.in1;


/**
 * @type {!SVGAnimatedNumber}
 */
SVGFEDropShadowElement.prototype.dx;


/**
 * @type {!SVGAnimatedNumber}
 */
SVGFEDropShadowElement.prototype.dy;


/**
 * @type {!SVGAnimatedNumber}
 */
SVGFEDropShadowElement.prototype.stdDeviationX;


/**
 * @type {!SVGAnimatedNumber}
 */
SVGFEDropShadowElement.prototype.stdDeviationY;


/**
 * @param {number=} opt_stdDeviationX
 * @param {number=} opt_stdDeviationY
 * @return {undefined}
 */
SVGFEDropShadowElement.prototype.setStdDeviation = function(opt_stdDeviationX, opt_stdDeviationY){};


/**
 * @type {!SVGAnimatedLength}
 */
SVGFEDropShadowElement.prototype.x;


/**
 * @type {!SVGAnimatedLength}
 */
SVGFEDropShadowElement.prototype.y;


/**
 * @type {!SVGAnimatedLength}
 */
SVGFEDropShadowElement.prototype.width;


/**
 * @type {!SVGAnimatedLength}
 */
SVGFEDropShadowElement.prototype.height;


/**
 * @type {!SVGAnimatedString}
 */
SVGFEDropShadowElement.prototype.result;


/**
 * @param {string=} opt_name
 * @return {!CSSValue}
 * @override
 */
SVGFEDropShadowElement.prototype.getPresentationAttribute = function(opt_name){};



/**
 * @constructor
 * @extends {SVGElement}
 * @implements {SVGFilterPrimitiveStandardAttributes}
 */
function SVGFETileElement(){}


/**
 * @type {!SVGAnimatedString}
 */
SVGFETileElement.prototype.in1;


/**
 * @type {!SVGAnimatedLength}
 */
SVGFETileElement.prototype.x;


/**
 * @type {!SVGAnimatedLength}
 */
SVGFETileElement.prototype.y;


/**
 * @type {!SVGAnimatedLength}
 */
SVGFETileElement.prototype.width;


/**
 * @type {!SVGAnimatedLength}
 */
SVGFETileElement.prototype.height;


/**
 * @type {!SVGAnimatedString}
 */
SVGFETileElement.prototype.result;


/**
 * @param {string=} opt_name
 * @return {!CSSValue}
 * @override
 */
SVGFETileElement.prototype.getPresentationAttribute = function(opt_name){};



/**
 * @constructor
 * @extends {SVGElement}
 */
function SVGMissingGlyphElement(){}



/**
 * @constructor
 * @extends {SVGElement}
 * @implements {SVGFilterPrimitiveStandardAttributes}
 */
function SVGFEBlendElement(){}


/**
 * @const
 * @type {number}
 */
SVGFEBlendElement.SVG_FEBLEND_MODE_UNKNOWN;


/**
 * @const
 * @type {number}
 */
SVGFEBlendElement.prototype.SVG_FEBLEND_MODE_UNKNOWN;


/**
 * @const
 * @type {number}
 */
SVGFEBlendElement.SVG_FEBLEND_MODE_NORMAL;


/**
 * @const
 * @type {number}
 */
SVGFEBlendElement.prototype.SVG_FEBLEND_MODE_NORMAL;


/**
 * @const
 * @type {number}
 */
SVGFEBlendElement.SVG_FEBLEND_MODE_MULTIPLY;


/**
 * @const
 * @type {number}
 */
SVGFEBlendElement.prototype.SVG_FEBLEND_MODE_MULTIPLY;


/**
 * @const
 * @type {number}
 */
SVGFEBlendElement.SVG_FEBLEND_MODE_SCREEN;


/**
 * @const
 * @type {number}
 */
SVGFEBlendElement.prototype.SVG_FEBLEND_MODE_SCREEN;


/**
 * @const
 * @type {number}
 */
SVGFEBlendElement.SVG_FEBLEND_MODE_DARKEN;


/**
 * @const
 * @type {number}
 */
SVGFEBlendElement.prototype.SVG_FEBLEND_MODE_DARKEN;


/**
 * @const
 * @type {number}
 */
SVGFEBlendElement.SVG_FEBLEND_MODE_LIGHTEN;


/**
 * @const
 * @type {number}
 */
SVGFEBlendElement.prototype.SVG_FEBLEND_MODE_LIGHTEN;


/**
 * @type {!SVGAnimatedString}
 */
SVGFEBlendElement.prototype.in1;


/**
 * @type {!SVGAnimatedString}
 */
SVGFEBlendElement.prototype.in2;


/**
 * @type {!SVGAnimatedEnumeration}
 */
SVGFEBlendElement.prototype.mode;


/**
 * @type {!SVGAnimatedLength}
 */
SVGFEBlendElement.prototype.x;


/**
 * @type {!SVGAnimatedLength}
 */
SVGFEBlendElement.prototype.y;


/**
 * @type {!SVGAnimatedLength}
 */
SVGFEBlendElement.prototype.width;


/**
 * @type {!SVGAnimatedLength}
 */
SVGFEBlendElement.prototype.height;


/**
 * @type {!SVGAnimatedString}
 */
SVGFEBlendElement.prototype.result;


/**
 * @param {string=} opt_name
 * @return {!CSSValue}
 * @override
 */
SVGFEBlendElement.prototype.getPresentationAttribute = function(opt_name){};



/**
 * @constructor
 * @extends {SVGElement}
 * @implements {SVGURIReference}
 * @implements {SVGTests}
 * @implements {SVGLangSpace}
 * @implements {SVGExternalResourcesRequired}
 * @implements {SVGStylable}
 * @implements {SVGFitToViewBox}
 */
function SVGPatternElement(){}


/**
 * @type {!SVGAnimatedEnumeration}
 */
SVGPatternElement.prototype.patternUnits;


/**
 * @type {!SVGAnimatedEnumeration}
 */
SVGPatternElement.prototype.patternContentUnits;


/**
 * @type {!SVGAnimatedTransformList}
 */
SVGPatternElement.prototype.patternTransform;


/**
 * @type {!SVGAnimatedLength}
 */
SVGPatternElement.prototype.x;


/**
 * @type {!SVGAnimatedLength}
 */
SVGPatternElement.prototype.y;


/**
 * @type {!SVGAnimatedLength}
 */
SVGPatternElement.prototype.width;


/**
 * @type {!SVGAnimatedLength}
 */
SVGPatternElement.prototype.height;


/**
 * @type {!SVGAnimatedBoolean}
 */
SVGPatternElement.prototype.externalResourcesRequired;


/**
 * @type {!SVGAnimatedRect}
 */
SVGPatternElement.prototype.viewBox;


/**
 * @type {!SVGAnimatedPreserveAspectRatio}
 */
SVGPatternElement.prototype.preserveAspectRatio;


/**
 * @type {!SVGAnimatedString}
 */
SVGPatternElement.prototype.href;


/**
 * @type {string}
 */
SVGPatternElement.prototype.xmllang;


/**
 * @type {string}
 */
SVGPatternElement.prototype.xmlspace;


/**
 * @type {!SVGStringList}
 */
SVGPatternElement.prototype.requiredFeatures;


/**
 * @type {!SVGStringList}
 */
SVGPatternElement.prototype.requiredExtensions;


/**
 * @type {!SVGStringList}
 */
SVGPatternElement.prototype.systemLanguage;


/**
 * @param {string=} opt_extension
 * @return {boolean}
 * @override
 */
SVGPatternElement.prototype.hasExtension = function(opt_extension){};


/**
 * @param {string=} opt_name
 * @return {!CSSValue}
 * @override
 */
SVGPatternElement.prototype.getPresentationAttribute = function(opt_name){};



/**
 * @constructor
 * @extends {SVGElement}
 */
function SVGFEMergeNodeElement(){}


/**
 * @type {!SVGAnimatedString}
 */
SVGFEMergeNodeElement.prototype.in1;



/**
 * @constructor
 * @extends {SVGComponentTransferFunctionElement}
 */
function SVGFEFuncBElement(){}



/**
 * @constructor
 * @extends {SVGPathSeg}
 */
function SVGPathSegMovetoRel(){}


/**
 * @type {number}
 */
SVGPathSegMovetoRel.prototype.x;


/**
 * @type {number}
 */
SVGPathSegMovetoRel.prototype.y;



/**
 * @interface
 */
function SVGLocatable(){}


/**
 * @type {!SVGElement}
 */
SVGLocatable.prototype.nearestViewportElement;


/**
 * @type {!SVGElement}
 */
SVGLocatable.prototype.farthestViewportElement;


/**
 * @return {!SVGRect}
 */
SVGLocatable.prototype.getBBox = function(){};


/**
 * @return {!SVGMatrix}
 */
SVGLocatable.prototype.getCTM = function(){};


/**
 * @return {!SVGMatrix}
 */
SVGLocatable.prototype.getScreenCTM = function(){};


/**
 * @param {!SVGElement=} opt_element
 * @return {!SVGMatrix}
 */
SVGLocatable.prototype.getTransformToElement = function(opt_element){};



/**
 * @constructor
 * @extends {SVGElement}
 * @implements {SVGTests}
 * @implements {SVGLangSpace}
 * @implements {SVGExternalResourcesRequired}
 * @implements {SVGStylable}
 * @implements {SVGLocatable}
 * @implements {SVGFitToViewBox}
 * @implements {SVGZoomAndPan}
 */
function SVGSVGElement(){}


/**
 * @type {!SVGAnimatedLength}
 */
SVGSVGElement.prototype.x;


/**
 * @type {!SVGAnimatedLength}
 */
SVGSVGElement.prototype.y;


/**
 * @type {!SVGAnimatedLength}
 */
SVGSVGElement.prototype.width;


/**
 * @type {!SVGAnimatedLength}
 */
SVGSVGElement.prototype.height;


/**
 * @type {string}
 */
SVGSVGElement.prototype.contentScriptType;


/**
 * @type {string}
 */
SVGSVGElement.prototype.contentStyleType;


/**
 * @type {!SVGRect}
 */
SVGSVGElement.prototype.viewport;


/**
 * @type {number}
 */
SVGSVGElement.prototype.pixelUnitToMillimeterX;


/**
 * @type {number}
 */
SVGSVGElement.prototype.pixelUnitToMillimeterY;


/**
 * @type {number}
 */
SVGSVGElement.prototype.screenPixelToMillimeterX;


/**
 * @type {number}
 */
SVGSVGElement.prototype.screenPixelToMillimeterY;


/**
 * @type {boolean}
 */
SVGSVGElement.prototype.useCurrentView;


/**
 * @type {number}
 */
SVGSVGElement.prototype.currentScale;


/**
 * @type {!SVGPoint}
 */
SVGSVGElement.prototype.currentTranslate;


/**
 * @param {number=} opt_maxWaitMilliseconds
 * @return {number}
 */
SVGSVGElement.prototype.suspendRedraw = function(opt_maxWaitMilliseconds){};


/**
 * @param {number=} opt_suspendHandleId
 * @return {undefined}
 */
SVGSVGElement.prototype.unsuspendRedraw = function(opt_suspendHandleId){};


/** */
SVGSVGElement.prototype.unsuspendRedrawAll = function(){};


/** */
SVGSVGElement.prototype.forceRedraw = function(){};


/** */
SVGSVGElement.prototype.pauseAnimations = function(){};


/** */
SVGSVGElement.prototype.unpauseAnimations = function(){};


/**
 * @return {boolean}
 */
SVGSVGElement.prototype.animationsPaused = function(){};


/**
 * @return {number}
 */
SVGSVGElement.prototype.getCurrentTime = function(){};


/**
 * @param {number=} opt_seconds
 * @return {undefined}
 */
SVGSVGElement.prototype.setCurrentTime = function(opt_seconds){};


/**
 * @param {!SVGRect=} opt_rect
 * @param {!SVGElement=} opt_referenceElement
 * @return {!NodeList<?>}
 */
SVGSVGElement.prototype.getIntersectionList = function(opt_rect, opt_referenceElement){};


/**
 * @param {!SVGRect=} opt_rect
 * @param {!SVGElement=} opt_referenceElement
 * @return {!NodeList<?>}
 */
SVGSVGElement.prototype.getEnclosureList = function(opt_rect, opt_referenceElement){};


/**
 * @param {!SVGElement=} opt_element
 * @param {!SVGRect=} opt_rect
 * @return {boolean}
 */
SVGSVGElement.prototype.checkIntersection = function(opt_element, opt_rect){};


/**
 * @param {!SVGElement=} opt_element
 * @param {!SVGRect=} opt_rect
 * @return {boolean}
 */
SVGSVGElement.prototype.checkEnclosure = function(opt_element, opt_rect){};


/** */
SVGSVGElement.prototype.deselectAll = function(){};


/**
 * @return {!SVGNumber}
 */
SVGSVGElement.prototype.createSVGNumber = function(){};


/**
 * @return {!SVGLength}
 */
SVGSVGElement.prototype.createSVGLength = function(){};


/**
 * @return {!SVGAngle}
 */
SVGSVGElement.prototype.createSVGAngle = function(){};


/**
 * @return {!SVGPoint}
 */
SVGSVGElement.prototype.createSVGPoint = function(){};


/**
 * @return {!SVGMatrix}
 */
SVGSVGElement.prototype.createSVGMatrix = function(){};


/**
 * @return {!SVGRect}
 */
SVGSVGElement.prototype.createSVGRect = function(){};


/**
 * @return {!SVGTransform}
 */
SVGSVGElement.prototype.createSVGTransform = function(){};


/**
 * @param {!SVGMatrix=} opt_matrix
 * @return {!SVGTransform}
 */
SVGSVGElement.prototype.createSVGTransformFromMatrix = function(opt_matrix){};


/**
 * @param {string=} opt_elementId
 * @return {Element}
 * @see https://developer.mozilla.org/en/docs/Web/API/SVGSVGElement
 */
SVGSVGElement.prototype.getElementById = function(opt_elementId){};


/**
 * @type {!SVGAnimatedBoolean}
 */
SVGSVGElement.prototype.externalResourcesRequired;


/**
 * @type {!SVGAnimatedRect}
 */
SVGSVGElement.prototype.viewBox;


/**
 * @type {!SVGAnimatedPreserveAspectRatio}
 */
SVGSVGElement.prototype.preserveAspectRatio;


/**
 * @type {string}
 */
SVGSVGElement.prototype.xmllang;


/**
 * @type {string}
 */
SVGSVGElement.prototype.xmlspace;


/**
 * @const
 * @type {number}
 */
SVGSVGElement.SVG_ZOOMANDPAN_UNKNOWN;


/**
 * @const
 * @type {number}
 */
SVGSVGElement.prototype.SVG_ZOOMANDPAN_UNKNOWN;


/**
 * @const
 * @type {number}
 */
SVGSVGElement.SVG_ZOOMANDPAN_DISABLE;


/**
 * @const
 * @type {number}
 */
SVGSVGElement.prototype.SVG_ZOOMANDPAN_DISABLE;


/**
 * @const
 * @type {number}
 */
SVGSVGElement.SVG_ZOOMANDPAN_MAGNIFY;


/**
 * @const
 * @type {number}
 */
SVGSVGElement.prototype.SVG_ZOOMANDPAN_MAGNIFY;


/**
 * @type {number}
 */
SVGSVGElement.prototype.zoomAndPan;


/**
 * @type {!SVGElement}
 */
SVGSVGElement.prototype.nearestViewportElement;


/**
 * @type {!SVGElement}
 */
SVGSVGElement.prototype.farthestViewportElement;


/**
 * @return {!SVGRect}
 * @override
 */
SVGSVGElement.prototype.getBBox = function(){};


/**
 * @return {!SVGMatrix}
 * @override
 */
SVGSVGElement.prototype.getCTM = function(){};


/**
 * @return {!SVGMatrix}
 * @override
 */
SVGSVGElement.prototype.getScreenCTM = function(){};


/**
 * @param {!SVGElement=} opt_element
 * @return {!SVGMatrix}
 * @override
 */
SVGSVGElement.prototype.getTransformToElement = function(opt_element){};


/**
 * @type {!SVGStringList}
 */
SVGSVGElement.prototype.requiredFeatures;


/**
 * @type {!SVGStringList}
 */
SVGSVGElement.prototype.requiredExtensions;


/**
 * @type {!SVGStringList}
 */
SVGSVGElement.prototype.systemLanguage;


/**
 * @param {string=} opt_extension
 * @return {boolean}
 * @override
 */
SVGSVGElement.prototype.hasExtension = function(opt_extension){};


/**
 * @param {string=} opt_name
 * @return {!CSSValue}
 * @override
 */
SVGSVGElement.prototype.getPresentationAttribute = function(opt_name){};



/**
 * @interface
 * @extends {SVGLocatable}
 */
function SVGTransformable(){}


/**
 * @type {!SVGAnimatedTransformList}
 */
SVGTransformable.prototype.transform;



/**
 * @constructor
 * @extends {SVGElement}
 * @implements {SVGTests}
 * @implements {SVGLangSpace}
 * @implements {SVGExternalResourcesRequired}
 * @implements {SVGStylable}
 * @implements {SVGTransformable}
 */
function SVGDefsElement(){}


/**
 * @type {!SVGAnimatedBoolean}
 */
SVGDefsElement.prototype.externalResourcesRequired;


/**
 * @type {!SVGAnimatedTransformList}
 */
SVGDefsElement.prototype.transform;


/**
 * @type {string}
 */
SVGDefsElement.prototype.xmllang;


/**
 * @type {string}
 */
SVGDefsElement.prototype.xmlspace;


/**
 * @type {!SVGElement}
 */
SVGDefsElement.prototype.nearestViewportElement;


/**
 * @type {!SVGElement}
 */
SVGDefsElement.prototype.farthestViewportElement;


/**
 * @return {!SVGRect}
 * @override
 */
SVGDefsElement.prototype.getBBox = function(){};


/**
 * @return {!SVGMatrix}
 * @override
 */
SVGDefsElement.prototype.getCTM = function(){};


/**
 * @return {!SVGMatrix}
 * @override
 */
SVGDefsElement.prototype.getScreenCTM = function(){};


/**
 * @param {!SVGElement=} opt_element
 * @return {!SVGMatrix}
 * @override
 */
SVGDefsElement.prototype.getTransformToElement = function(opt_element){};


/**
 * @type {!SVGStringList}
 */
SVGDefsElement.prototype.requiredFeatures;


/**
 * @type {!SVGStringList}
 */
SVGDefsElement.prototype.requiredExtensions;


/**
 * @type {!SVGStringList}
 */
SVGDefsElement.prototype.systemLanguage;


/**
 * @param {string=} opt_extension
 * @return {boolean}
 * @override
 */
SVGDefsElement.prototype.hasExtension = function(opt_extension){};


/**
 * @param {string=} opt_name
 * @return {!CSSValue}
 * @override
 */
SVGDefsElement.prototype.getPresentationAttribute = function(opt_name){};



/**
 * @constructor
 * @extends {SVGElement}
 * @implements {SVGTests}
 * @implements {SVGLangSpace}
 * @implements {SVGExternalResourcesRequired}
 * @implements {SVGStylable}
 * @implements {SVGTransformable}
 */
function SVGPolygonElement(){}


/**
 * @type {!SVGPointList}
 */
SVGPolygonElement.prototype.points;


/**
 * @type {!SVGPointList}
 */
SVGPolygonElement.prototype.animatedPoints;


/**
 * @type {!SVGAnimatedBoolean}
 */
SVGPolygonElement.prototype.externalResourcesRequired;


/**
 * @type {!SVGAnimatedTransformList}
 */
SVGPolygonElement.prototype.transform;


/**
 * @type {string}
 */
SVGPolygonElement.prototype.xmllang;


/**
 * @type {string}
 */
SVGPolygonElement.prototype.xmlspace;


/**
 * @type {!SVGElement}
 */
SVGPolygonElement.prototype.nearestViewportElement;


/**
 * @type {!SVGElement}
 */
SVGPolygonElement.prototype.farthestViewportElement;


/**
 * @return {!SVGRect}
 * @override
 */
SVGPolygonElement.prototype.getBBox = function(){};


/**
 * @return {!SVGMatrix}
 * @override
 */
SVGPolygonElement.prototype.getCTM = function(){};


/**
 * @return {!SVGMatrix}
 * @override
 */
SVGPolygonElement.prototype.getScreenCTM = function(){};


/**
 * @param {!SVGElement=} opt_element
 * @return {!SVGMatrix}
 * @override
 */
SVGPolygonElement.prototype.getTransformToElement = function(opt_element){};


/**
 * @type {!SVGStringList}
 */
SVGPolygonElement.prototype.requiredFeatures;


/**
 * @type {!SVGStringList}
 */
SVGPolygonElement.prototype.requiredExtensions;


/**
 * @type {!SVGStringList}
 */
SVGPolygonElement.prototype.systemLanguage;


/**
 * @param {string=} opt_extension
 * @return {boolean}
 * @override
 */
SVGPolygonElement.prototype.hasExtension = function(opt_extension){};


/**
 * @param {string=} opt_name
 * @return {!CSSValue}
 * @override
 */
SVGPolygonElement.prototype.getPresentationAttribute = function(opt_name){};



/**
 * @constructor
 * @extends {SVGElement}
 * @implements {SVGTests}
 * @implements {SVGLangSpace}
 * @implements {SVGExternalResourcesRequired}
 * @implements {SVGStylable}
 * @implements {SVGTransformable}
 */
function SVGPathElement(){}


/**
 * @type {!SVGAnimatedNumber}
 */
SVGPathElement.prototype.pathLength;


/**
 * @type {!SVGPathSegList}
 */
SVGPathElement.prototype.pathSegList;


/**
 * @type {!SVGPathSegList}
 */
SVGPathElement.prototype.normalizedPathSegList;


/**
 * @type {!SVGPathSegList}
 */
SVGPathElement.prototype.animatedPathSegList;


/**
 * @type {!SVGPathSegList}
 */
SVGPathElement.prototype.animatedNormalizedPathSegList;


/**
 * @return {number}
 */
SVGPathElement.prototype.getTotalLength = function(){};


/**
 * @param {number=} opt_distance
 * @return {!SVGPoint}
 */
SVGPathElement.prototype.getPointAtLength = function(opt_distance){};


/**
 * @param {number=} opt_distance
 * @return {number}
 */
SVGPathElement.prototype.getPathSegAtLength = function(opt_distance){};


/**
 * @return {!SVGPathSegClosePath}
 */
SVGPathElement.prototype.createSVGPathSegClosePath = function(){};


/**
 * @param {number=} opt_x
 * @param {number=} opt_y
 * @return {!SVGPathSegMovetoAbs}
 */
SVGPathElement.prototype.createSVGPathSegMovetoAbs = function(opt_x, opt_y){};


/**
 * @param {number=} opt_x
 * @param {number=} opt_y
 * @return {!SVGPathSegMovetoRel}
 */
SVGPathElement.prototype.createSVGPathSegMovetoRel = function(opt_x, opt_y){};


/**
 * @param {number=} opt_x
 * @param {number=} opt_y
 * @return {!SVGPathSegLinetoAbs}
 */
SVGPathElement.prototype.createSVGPathSegLinetoAbs = function(opt_x, opt_y){};


/**
 * @param {number=} opt_x
 * @param {number=} opt_y
 * @return {!SVGPathSegLinetoRel}
 */
SVGPathElement.prototype.createSVGPathSegLinetoRel = function(opt_x, opt_y){};


/**
 * @param {number=} opt_x
 * @param {number=} opt_y
 * @param {number=} opt_x1
 * @param {number=} opt_y1
 * @param {number=} opt_x2
 * @param {number=} opt_y2
 * @return {!SVGPathSegCurvetoCubicAbs}
 */
SVGPathElement.prototype.createSVGPathSegCurvetoCubicAbs = function(opt_x, opt_y, opt_x1, opt_y1, opt_x2, opt_y2){};


/**
 * @param {number=} opt_x
 * @param {number=} opt_y
 * @param {number=} opt_x1
 * @param {number=} opt_y1
 * @param {number=} opt_x2
 * @param {number=} opt_y2
 * @return {!SVGPathSegCurvetoCubicRel}
 */
SVGPathElement.prototype.createSVGPathSegCurvetoCubicRel = function(opt_x, opt_y, opt_x1, opt_y1, opt_x2, opt_y2){};


/**
 * @param {number=} opt_x
 * @param {number=} opt_y
 * @param {number=} opt_x1
 * @param {number=} opt_y1
 * @return {!SVGPathSegCurvetoQuadraticAbs}
 */
SVGPathElement.prototype.createSVGPathSegCurvetoQuadraticAbs = function(opt_x, opt_y, opt_x1, opt_y1){};


/**
 * @param {number=} opt_x
 * @param {number=} opt_y
 * @param {number=} opt_x1
 * @param {number=} opt_y1
 * @return {!SVGPathSegCurvetoQuadraticRel}
 */
SVGPathElement.prototype.createSVGPathSegCurvetoQuadraticRel = function(opt_x, opt_y, opt_x1, opt_y1){};


/**
 * @param {number=} opt_x
 * @param {number=} opt_y
 * @param {number=} opt_r1
 * @param {number=} opt_r2
 * @param {number=} opt_angle
 * @param {boolean=} opt_largeArcFlag
 * @param {boolean=} opt_sweepFlag
 * @return {!SVGPathSegArcAbs}
 */
SVGPathElement.prototype.createSVGPathSegArcAbs = function(opt_x, opt_y, opt_r1, opt_r2, opt_angle, opt_largeArcFlag, opt_sweepFlag){};


/**
 * @param {number=} opt_x
 * @param {number=} opt_y
 * @param {number=} opt_r1
 * @param {number=} opt_r2
 * @param {number=} opt_angle
 * @param {boolean=} opt_largeArcFlag
 * @param {boolean=} opt_sweepFlag
 * @return {!SVGPathSegArcRel}
 */
SVGPathElement.prototype.createSVGPathSegArcRel = function(opt_x, opt_y, opt_r1, opt_r2, opt_angle, opt_largeArcFlag, opt_sweepFlag){};


/**
 * @param {number=} opt_x
 * @return {!SVGPathSegLinetoHorizontalAbs}
 */
SVGPathElement.prototype.createSVGPathSegLinetoHorizontalAbs = function(opt_x){};


/**
 * @param {number=} opt_x
 * @return {!SVGPathSegLinetoHorizontalRel}
 */
SVGPathElement.prototype.createSVGPathSegLinetoHorizontalRel = function(opt_x){};


/**
 * @param {number=} opt_y
 * @return {!SVGPathSegLinetoVerticalAbs}
 */
SVGPathElement.prototype.createSVGPathSegLinetoVerticalAbs = function(opt_y){};


/**
 * @param {number=} opt_y
 * @return {!SVGPathSegLinetoVerticalRel}
 */
SVGPathElement.prototype.createSVGPathSegLinetoVerticalRel = function(opt_y){};


/**
 * @param {number=} opt_x
 * @param {number=} opt_y
 * @param {number=} opt_x2
 * @param {number=} opt_y2
 * @return {!SVGPathSegCurvetoCubicSmoothAbs}
 */
SVGPathElement.prototype.createSVGPathSegCurvetoCubicSmoothAbs = function(opt_x, opt_y, opt_x2, opt_y2){};


/**
 * @param {number=} opt_x
 * @param {number=} opt_y
 * @param {number=} opt_x2
 * @param {number=} opt_y2
 * @return {!SVGPathSegCurvetoCubicSmoothRel}
 */
SVGPathElement.prototype.createSVGPathSegCurvetoCubicSmoothRel = function(opt_x, opt_y, opt_x2, opt_y2){};


/**
 * @param {number=} opt_x
 * @param {number=} opt_y
 * @return {!SVGPathSegCurvetoQuadraticSmoothAbs}
 */
SVGPathElement.prototype.createSVGPathSegCurvetoQuadraticSmoothAbs = function(opt_x, opt_y){};


/**
 * @param {number=} opt_x
 * @param {number=} opt_y
 * @return {!SVGPathSegCurvetoQuadraticSmoothRel}
 */
SVGPathElement.prototype.createSVGPathSegCurvetoQuadraticSmoothRel = function(opt_x, opt_y){};


/**
 * @type {!SVGAnimatedBoolean}
 */
SVGPathElement.prototype.externalResourcesRequired;


/**
 * @type {!SVGAnimatedTransformList}
 */
SVGPathElement.prototype.transform;


/**
 * @type {string}
 */
SVGPathElement.prototype.xmllang;


/**
 * @type {string}
 */
SVGPathElement.prototype.xmlspace;


/**
 * @type {!SVGElement}
 */
SVGPathElement.prototype.nearestViewportElement;


/**
 * @type {!SVGElement}
 */
SVGPathElement.prototype.farthestViewportElement;


/**
 * @return {!SVGRect}
 * @override
 */
SVGPathElement.prototype.getBBox = function(){};


/**
 * @return {!SVGMatrix}
 * @override
 */
SVGPathElement.prototype.getCTM = function(){};


/**
 * @return {!SVGMatrix}
 * @override
 */
SVGPathElement.prototype.getScreenCTM = function(){};


/**
 * @param {!SVGElement=} opt_element
 * @return {!SVGMatrix}
 * @override
 */
SVGPathElement.prototype.getTransformToElement = function(opt_element){};


/**
 * @type {!SVGStringList}
 */
SVGPathElement.prototype.requiredFeatures;


/**
 * @type {!SVGStringList}
 */
SVGPathElement.prototype.requiredExtensions;


/**
 * @type {!SVGStringList}
 */
SVGPathElement.prototype.systemLanguage;


/**
 * @param {string=} opt_extension
 * @return {boolean}
 * @override
 */
SVGPathElement.prototype.hasExtension = function(opt_extension){};


/**
 * @param {string=} opt_name
 * @return {!CSSValue}
 * @override
 */
SVGPathElement.prototype.getPresentationAttribute = function(opt_name){};



/**
 * @constructor
 * @extends {SVGElement}
 * @implements {SVGTests}
 * @implements {SVGLangSpace}
 * @implements {SVGExternalResourcesRequired}
 * @implements {SVGStylable}
 * @implements {SVGTransformable}
 */
function SVGCircleElement(){}


/**
 * @type {!SVGAnimatedLength}
 */
SVGCircleElement.prototype.cx;


/**
 * @type {!SVGAnimatedLength}
 */
SVGCircleElement.prototype.cy;


/**
 * @type {!SVGAnimatedLength}
 */
SVGCircleElement.prototype.r;


/**
 * @type {!SVGAnimatedBoolean}
 */
SVGCircleElement.prototype.externalResourcesRequired;


/**
 * @type {!SVGAnimatedTransformList}
 */
SVGCircleElement.prototype.transform;


/**
 * @type {string}
 */
SVGCircleElement.prototype.xmllang;


/**
 * @type {string}
 */
SVGCircleElement.prototype.xmlspace;


/**
 * @type {!SVGElement}
 */
SVGCircleElement.prototype.nearestViewportElement;


/**
 * @type {!SVGElement}
 */
SVGCircleElement.prototype.farthestViewportElement;


/**
 * @return {!SVGRect}
 * @override
 */
SVGCircleElement.prototype.getBBox = function(){};


/**
 * @return {!SVGMatrix}
 * @override
 */
SVGCircleElement.prototype.getCTM = function(){};


/**
 * @return {!SVGMatrix}
 * @override
 */
SVGCircleElement.prototype.getScreenCTM = function(){};


/**
 * @param {!SVGElement=} opt_element
 * @return {!SVGMatrix}
 * @override
 */
SVGCircleElement.prototype.getTransformToElement = function(opt_element){};


/**
 * @type {!SVGStringList}
 */
SVGCircleElement.prototype.requiredFeatures;


/**
 * @type {!SVGStringList}
 */
SVGCircleElement.prototype.requiredExtensions;


/**
 * @type {!SVGStringList}
 */
SVGCircleElement.prototype.systemLanguage;


/**
 * @param {string=} opt_extension
 * @return {boolean}
 * @override
 */
SVGCircleElement.prototype.hasExtension = function(opt_extension){};


/**
 * @param {string=} opt_name
 * @return {!CSSValue}
 * @override
 */
SVGCircleElement.prototype.getPresentationAttribute = function(opt_name){};



/**
 * @constructor
 * @extends {SVGElement}
 * @implements {SVGURIReference}
 * @implements {SVGTests}
 * @implements {SVGLangSpace}
 * @implements {SVGExternalResourcesRequired}
 * @implements {SVGStylable}
 * @implements {SVGTransformable}
 */
function SVGUseElement(){}


/**
 * @type {!SVGAnimatedLength}
 */
SVGUseElement.prototype.x;


/**
 * @type {!SVGAnimatedLength}
 */
SVGUseElement.prototype.y;


/**
 * @type {!SVGAnimatedLength}
 */
SVGUseElement.prototype.width;


/**
 * @type {!SVGAnimatedLength}
 */
SVGUseElement.prototype.height;


/**
 * @type {!SVGElementInstance}
 */
SVGUseElement.prototype.instanceRoot;


/**
 * @type {!SVGElementInstance}
 */
SVGUseElement.prototype.animatedInstanceRoot;


/**
 * @type {!SVGAnimatedBoolean}
 */
SVGUseElement.prototype.externalResourcesRequired;


/**
 * @type {!SVGElement}
 */
SVGUseElement.prototype.nearestViewportElement;


/**
 * @type {!SVGElement}
 */
SVGUseElement.prototype.farthestViewportElement;


/**
 * @return {!SVGRect}
 * @override
 */
SVGUseElement.prototype.getBBox = function(){};


/**
 * @return {!SVGMatrix}
 * @override
 */
SVGUseElement.prototype.getCTM = function(){};


/**
 * @return {!SVGMatrix}
 * @override
 */
SVGUseElement.prototype.getScreenCTM = function(){};


/**
 * @param {!SVGElement=} opt_element
 * @return {!SVGMatrix}
 * @override
 */
SVGUseElement.prototype.getTransformToElement = function(opt_element){};


/**
 * @type {!SVGAnimatedTransformList}
 */
SVGUseElement.prototype.transform;


/**
 * @type {!SVGAnimatedString}
 */
SVGUseElement.prototype.href;


/**
 * @type {string}
 */
SVGUseElement.prototype.xmllang;


/**
 * @type {string}
 */
SVGUseElement.prototype.xmlspace;


/**
 * @type {!SVGStringList}
 */
SVGUseElement.prototype.requiredFeatures;


/**
 * @type {!SVGStringList}
 */
SVGUseElement.prototype.requiredExtensions;


/**
 * @type {!SVGStringList}
 */
SVGUseElement.prototype.systemLanguage;


/**
 * @param {string=} opt_extension
 * @return {boolean}
 * @override
 */
SVGUseElement.prototype.hasExtension = function(opt_extension){};


/**
 * @param {string=} opt_name
 * @return {!CSSValue}
 * @override
 */
SVGUseElement.prototype.getPresentationAttribute = function(opt_name){};



/**
 * @constructor
 * @extends {SVGElement}
 * @implements {SVGTests}
 * @implements {SVGLangSpace}
 * @implements {SVGExternalResourcesRequired}
 * @implements {SVGStylable}
 * @implements {SVGTransformable}
 */
function SVGPolylineElement(){}


/**
 * @type {!SVGPointList}
 */
SVGPolylineElement.prototype.points;


/**
 * @type {!SVGPointList}
 */
SVGPolylineElement.prototype.animatedPoints;


/**
 * @type {!SVGAnimatedBoolean}
 */
SVGPolylineElement.prototype.externalResourcesRequired;


/**
 * @type {!SVGAnimatedTransformList}
 */
SVGPolylineElement.prototype.transform;


/**
 * @type {string}
 */
SVGPolylineElement.prototype.xmllang;


/**
 * @type {string}
 */
SVGPolylineElement.prototype.xmlspace;


/**
 * @type {!SVGElement}
 */
SVGPolylineElement.prototype.nearestViewportElement;


/**
 * @type {!SVGElement}
 */
SVGPolylineElement.prototype.farthestViewportElement;


/**
 * @return {!SVGRect}
 * @override
 */
SVGPolylineElement.prototype.getBBox = function(){};


/**
 * @return {!SVGMatrix}
 * @override
 */
SVGPolylineElement.prototype.getCTM = function(){};


/**
 * @return {!SVGMatrix}
 * @override
 */
SVGPolylineElement.prototype.getScreenCTM = function(){};


/**
 * @param {!SVGElement=} opt_element
 * @return {!SVGMatrix}
 * @override
 */
SVGPolylineElement.prototype.getTransformToElement = function(opt_element){};


/**
 * @type {!SVGStringList}
 */
SVGPolylineElement.prototype.requiredFeatures;


/**
 * @type {!SVGStringList}
 */
SVGPolylineElement.prototype.requiredExtensions;


/**
 * @type {!SVGStringList}
 */
SVGPolylineElement.prototype.systemLanguage;


/**
 * @param {string=} opt_extension
 * @return {boolean}
 * @override
 */
SVGPolylineElement.prototype.hasExtension = function(opt_extension){};


/**
 * @param {string=} opt_name
 * @return {!CSSValue}
 * @override
 */
SVGPolylineElement.prototype.getPresentationAttribute = function(opt_name){};



/**
 * @constructor
 * @extends {SVGElement}
 * @implements {SVGTests}
 * @implements {SVGLangSpace}
 * @implements {SVGExternalResourcesRequired}
 * @implements {SVGStylable}
 * @implements {SVGTransformable}
 */
function SVGGElement(){}


/**
 * @type {!SVGAnimatedBoolean}
 */
SVGGElement.prototype.externalResourcesRequired;


/**
 * @type {!SVGAnimatedTransformList}
 */
SVGGElement.prototype.transform;


/**
 * @type {string}
 */
SVGGElement.prototype.xmllang;


/**
 * @type {string}
 */
SVGGElement.prototype.xmlspace;


/**
 * @type {!SVGElement}
 */
SVGGElement.prototype.nearestViewportElement;


/**
 * @type {!SVGElement}
 */
SVGGElement.prototype.farthestViewportElement;


/**
 * @return {!SVGRect}
 * @override
 */
SVGGElement.prototype.getBBox = function(){};


/**
 * @return {!SVGMatrix}
 * @override
 */
SVGGElement.prototype.getCTM = function(){};


/**
 * @return {!SVGMatrix}
 * @override
 */
SVGGElement.prototype.getScreenCTM = function(){};


/**
 * @param {!SVGElement=} opt_element
 * @return {!SVGMatrix}
 * @override
 */
SVGGElement.prototype.getTransformToElement = function(opt_element){};


/**
 * @type {!SVGStringList}
 */
SVGGElement.prototype.requiredFeatures;


/**
 * @type {!SVGStringList}
 */
SVGGElement.prototype.requiredExtensions;


/**
 * @type {!SVGStringList}
 */
SVGGElement.prototype.systemLanguage;


/**
 * @param {string=} opt_extension
 * @return {boolean}
 * @override
 */
SVGGElement.prototype.hasExtension = function(opt_extension){};


/**
 * @param {string=} opt_name
 * @return {!CSSValue}
 * @override
 */
SVGGElement.prototype.getPresentationAttribute = function(opt_name){};



/**
 * @constructor
 * @extends {SVGElement}
 * @implements {SVGTests}
 * @implements {SVGLangSpace}
 * @implements {SVGExternalResourcesRequired}
 * @implements {SVGStylable}
 * @implements {SVGTransformable}
 */
function SVGSwitchElement(){}


/**
 * @type {!SVGAnimatedBoolean}
 */
SVGSwitchElement.prototype.externalResourcesRequired;


/**
 * @type {!SVGAnimatedTransformList}
 */
SVGSwitchElement.prototype.transform;


/**
 * @type {string}
 */
SVGSwitchElement.prototype.xmllang;


/**
 * @type {string}
 */
SVGSwitchElement.prototype.xmlspace;


/**
 * @type {!SVGElement}
 */
SVGSwitchElement.prototype.nearestViewportElement;


/**
 * @type {!SVGElement}
 */
SVGSwitchElement.prototype.farthestViewportElement;


/**
 * @return {!SVGRect}
 * @override
 */
SVGSwitchElement.prototype.getBBox = function(){};


/**
 * @return {!SVGMatrix}
 * @override
 */
SVGSwitchElement.prototype.getCTM = function(){};


/**
 * @return {!SVGMatrix}
 * @override
 */
SVGSwitchElement.prototype.getScreenCTM = function(){};


/**
 * @param {!SVGElement=} opt_element
 * @return {!SVGMatrix}
 * @override
 */
SVGSwitchElement.prototype.getTransformToElement = function(opt_element){};


/**
 * @type {!SVGStringList}
 */
SVGSwitchElement.prototype.requiredFeatures;


/**
 * @type {!SVGStringList}
 */
SVGSwitchElement.prototype.requiredExtensions;


/**
 * @type {!SVGStringList}
 */
SVGSwitchElement.prototype.systemLanguage;


/**
 * @param {string=} opt_extension
 * @return {boolean}
 * @override
 */
SVGSwitchElement.prototype.hasExtension = function(opt_extension){};


/**
 * @param {string=} opt_name
 * @return {!CSSValue}
 * @override
 */
SVGSwitchElement.prototype.getPresentationAttribute = function(opt_name){};



/**
 * @constructor
 * @extends {SVGElement}
 * @implements {SVGURIReference}
 * @implements {SVGTests}
 * @implements {SVGLangSpace}
 * @implements {SVGExternalResourcesRequired}
 * @implements {SVGStylable}
 * @implements {SVGTransformable}
 */
function SVGImageElement(){}


/**
 * @type {!SVGAnimatedLength}
 */
SVGImageElement.prototype.x;


/**
 * @type {!SVGAnimatedLength}
 */
SVGImageElement.prototype.y;


/**
 * @type {!SVGAnimatedLength}
 */
SVGImageElement.prototype.width;


/**
 * @type {!SVGAnimatedLength}
 */
SVGImageElement.prototype.height;


/**
 * @type {!SVGAnimatedPreserveAspectRatio}
 */
SVGImageElement.prototype.preserveAspectRatio;


/**
 * @type {!SVGAnimatedBoolean}
 */
SVGImageElement.prototype.externalResourcesRequired;


/**
 * @type {!SVGElement}
 */
SVGImageElement.prototype.nearestViewportElement;


/**
 * @type {!SVGElement}
 */
SVGImageElement.prototype.farthestViewportElement;


/**
 * @return {!SVGRect}
 * @override
 */
SVGImageElement.prototype.getBBox = function(){};


/**
 * @return {!SVGMatrix}
 * @override
 */
SVGImageElement.prototype.getCTM = function(){};


/**
 * @return {!SVGMatrix}
 * @override
 */
SVGImageElement.prototype.getScreenCTM = function(){};


/**
 * @param {!SVGElement=} opt_element
 * @return {!SVGMatrix}
 * @override
 */
SVGImageElement.prototype.getTransformToElement = function(opt_element){};


/**
 * @type {!SVGAnimatedTransformList}
 */
SVGImageElement.prototype.transform;


/**
 * @type {!SVGAnimatedString}
 */
SVGImageElement.prototype.href;


/**
 * @type {string}
 */
SVGImageElement.prototype.xmllang;


/**
 * @type {string}
 */
SVGImageElement.prototype.xmlspace;


/**
 * @type {!SVGStringList}
 */
SVGImageElement.prototype.requiredFeatures;


/**
 * @type {!SVGStringList}
 */
SVGImageElement.prototype.requiredExtensions;


/**
 * @type {!SVGStringList}
 */
SVGImageElement.prototype.systemLanguage;


/**
 * @param {string=} opt_extension
 * @return {boolean}
 * @override
 */
SVGImageElement.prototype.hasExtension = function(opt_extension){};


/**
 * @param {string=} opt_name
 * @return {!CSSValue}
 * @override
 */
SVGImageElement.prototype.getPresentationAttribute = function(opt_name){};



/**
 * @constructor
 * @extends {SVGElement}
 * @implements {SVGTests}
 * @implements {SVGLangSpace}
 * @implements {SVGExternalResourcesRequired}
 * @implements {SVGStylable}
 * @implements {SVGTransformable}
 */
function SVGRectElement(){}


/**
 * @type {!SVGAnimatedLength}
 */
SVGRectElement.prototype.x;


/**
 * @type {!SVGAnimatedLength}
 */
SVGRectElement.prototype.y;


/**
 * @type {!SVGAnimatedLength}
 */
SVGRectElement.prototype.width;


/**
 * @type {!SVGAnimatedLength}
 */
SVGRectElement.prototype.height;


/**
 * @type {!SVGAnimatedLength}
 */
SVGRectElement.prototype.rx;


/**
 * @type {!SVGAnimatedLength}
 */
SVGRectElement.prototype.ry;


/**
 * @type {!SVGAnimatedBoolean}
 */
SVGRectElement.prototype.externalResourcesRequired;


/**
 * @type {!SVGAnimatedTransformList}
 */
SVGRectElement.prototype.transform;


/**
 * @type {string}
 */
SVGRectElement.prototype.xmllang;


/**
 * @type {string}
 */
SVGRectElement.prototype.xmlspace;


/**
 * @type {!SVGElement}
 */
SVGRectElement.prototype.nearestViewportElement;


/**
 * @type {!SVGElement}
 */
SVGRectElement.prototype.farthestViewportElement;


/**
 * @return {!SVGRect}
 * @override
 */
SVGRectElement.prototype.getBBox = function(){};


/**
 * @return {!SVGMatrix}
 * @override
 */
SVGRectElement.prototype.getCTM = function(){};


/**
 * @return {!SVGMatrix}
 * @override
 */
SVGRectElement.prototype.getScreenCTM = function(){};


/**
 * @param {!SVGElement=} opt_element
 * @return {!SVGMatrix}
 * @override
 */
SVGRectElement.prototype.getTransformToElement = function(opt_element){};


/**
 * @type {!SVGStringList}
 */
SVGRectElement.prototype.requiredFeatures;


/**
 * @type {!SVGStringList}
 */
SVGRectElement.prototype.requiredExtensions;


/**
 * @type {!SVGStringList}
 */
SVGRectElement.prototype.systemLanguage;


/**
 * @param {string=} opt_extension
 * @return {boolean}
 * @override
 */
SVGRectElement.prototype.hasExtension = function(opt_extension){};


/**
 * @param {string=} opt_name
 * @return {!CSSValue}
 * @override
 */
SVGRectElement.prototype.getPresentationAttribute = function(opt_name){};



/**
 * @constructor
 * @extends {SVGElement}
 * @implements {SVGURIReference}
 * @implements {SVGTests}
 * @implements {SVGLangSpace}
 * @implements {SVGExternalResourcesRequired}
 * @implements {SVGStylable}
 * @implements {SVGTransformable}
 */
function SVGAElement(){}


/**
 * @type {!SVGAnimatedString}
 */
SVGAElement.prototype.target;


/**
 * @type {!SVGAnimatedBoolean}
 */
SVGAElement.prototype.externalResourcesRequired;


/**
 * @type {!SVGElement}
 */
SVGAElement.prototype.nearestViewportElement;


/**
 * @type {!SVGElement}
 */
SVGAElement.prototype.farthestViewportElement;


/**
 * @return {!SVGRect}
 * @override
 */
SVGAElement.prototype.getBBox = function(){};


/**
 * @return {!SVGMatrix}
 * @override
 */
SVGAElement.prototype.getCTM = function(){};


/**
 * @return {!SVGMatrix}
 * @override
 */
SVGAElement.prototype.getScreenCTM = function(){};


/**
 * @param {!SVGElement=} opt_element
 * @return {!SVGMatrix}
 * @override
 */
SVGAElement.prototype.getTransformToElement = function(opt_element){};


/**
 * @type {!SVGAnimatedTransformList}
 */
SVGAElement.prototype.transform;


/**
 * @type {!SVGAnimatedString}
 */
SVGAElement.prototype.href;


/**
 * @type {string}
 */
SVGAElement.prototype.xmllang;


/**
 * @type {string}
 */
SVGAElement.prototype.xmlspace;


/**
 * @type {!SVGStringList}
 */
SVGAElement.prototype.requiredFeatures;


/**
 * @type {!SVGStringList}
 */
SVGAElement.prototype.requiredExtensions;


/**
 * @type {!SVGStringList}
 */
SVGAElement.prototype.systemLanguage;


/**
 * @param {string=} opt_extension
 * @return {boolean}
 * @override
 */
SVGAElement.prototype.hasExtension = function(opt_extension){};


/**
 * @param {string=} opt_name
 * @return {!CSSValue}
 * @override
 */
SVGAElement.prototype.getPresentationAttribute = function(opt_name){};



/**
 * @constructor
 */
function SVGAnimatedPreserveAspectRatio(){}


/**
 * @type {!SVGPreserveAspectRatio}
 */
SVGAnimatedPreserveAspectRatio.prototype.baseVal;


/**
 * @type {!SVGPreserveAspectRatio}
 */
SVGAnimatedPreserveAspectRatio.prototype.animVal;



/**
 * @constructor
 */
function SVGElementInstanceList(){}


/**
 * @type {number}
 */
SVGElementInstanceList.prototype.length;


/**
 * @param {number=} opt_index
 * @return {!SVGElementInstance}
 */
SVGElementInstanceList.prototype.item = function(opt_index){};



/**
 * @constructor
 * @extends {Element}
 */
function SVGElement(){}

/**
 * @type {string}
 */
SVGElement.prototype.xmlbase;


/**
 * @type {!SVGSVGElement}
 */
SVGElement.prototype.ownerSVGElement;


/**
 * @type {!SVGElement}
 */
SVGElement.prototype.viewportElement;


/**
 * @type {!SVGAnimatedString}
 */
SVGElement.prototype.className;


/**
 * @constructor
 * @extends {SVGElement}
 *
 * TODO(b/140287010): Update all typings to SVG 2 / Geometry Interfaces 1.
 */
function SVGGraphicsElement() {}


/**
 * @type {!SVGAnimatedTransformList}
 */
SVGGraphicsElement.prototype.transform;


/**
 * @return {!DOMRect}
 */
SVGGraphicsElement.prototype.getBBox = function() {};


/**
 * @return {!Object}
 */
SVGGraphicsElement.prototype.getCTM = function() {};


/**
 * @return {!Object}
 */
SVGGraphicsElement.prototype.getScreenCTM = function() {};


/**
 * @constructor
 * @extends {SVGElement}
 * @implements {SVGFilterPrimitiveStandardAttributes}
 */
function SVGFETurbulenceElement(){}


/**
 * @const
 * @type {number}
 */
SVGFETurbulenceElement.SVG_TURBULENCE_TYPE_UNKNOWN;


/**
 * @const
 * @type {number}
 */
SVGFETurbulenceElement.prototype.SVG_TURBULENCE_TYPE_UNKNOWN;


/**
 * @const
 * @type {number}
 */
SVGFETurbulenceElement.SVG_TURBULENCE_TYPE_FRACTALNOISE;


/**
 * @const
 * @type {number}
 */
SVGFETurbulenceElement.prototype.SVG_TURBULENCE_TYPE_FRACTALNOISE;


/**
 * @const
 * @type {number}
 */
SVGFETurbulenceElement.SVG_TURBULENCE_TYPE_TURBULENCE;


/**
 * @const
 * @type {number}
 */
SVGFETurbulenceElement.prototype.SVG_TURBULENCE_TYPE_TURBULENCE;


/**
 * @const
 * @type {number}
 */
SVGFETurbulenceElement.SVG_STITCHTYPE_UNKNOWN;


/**
 * @const
 * @type {number}
 */
SVGFETurbulenceElement.prototype.SVG_STITCHTYPE_UNKNOWN;


/**
 * @const
 * @type {number}
 */
SVGFETurbulenceElement.SVG_STITCHTYPE_STITCH;


/**
 * @const
 * @type {number}
 */
SVGFETurbulenceElement.prototype.SVG_STITCHTYPE_STITCH;


/**
 * @const
 * @type {number}
 */
SVGFETurbulenceElement.SVG_STITCHTYPE_NOSTITCH;


/**
 * @const
 * @type {number}
 */
SVGFETurbulenceElement.prototype.SVG_STITCHTYPE_NOSTITCH;


/**
 * @type {!SVGAnimatedNumber}
 */
SVGFETurbulenceElement.prototype.baseFrequencyX;


/**
 * @type {!SVGAnimatedNumber}
 */
SVGFETurbulenceElement.prototype.baseFrequencyY;


/**
 * @type {!SVGAnimatedInteger}
 */
SVGFETurbulenceElement.prototype.numOctaves;


/**
 * @type {!SVGAnimatedNumber}
 */
SVGFETurbulenceElement.prototype.seed;


/**
 * @type {!SVGAnimatedEnumeration}
 */
SVGFETurbulenceElement.prototype.stitchTiles;


/**
 * @type {!SVGAnimatedEnumeration}
 */
SVGFETurbulenceElement.prototype.type;


/**
 * @type {!SVGAnimatedLength}
 */
SVGFETurbulenceElement.prototype.x;


/**
 * @type {!SVGAnimatedLength}
 */
SVGFETurbulenceElement.prototype.y;


/**
 * @type {!SVGAnimatedLength}
 */
SVGFETurbulenceElement.prototype.width;


/**
 * @type {!SVGAnimatedLength}
 */
SVGFETurbulenceElement.prototype.height;


/**
 * @type {!SVGAnimatedString}
 */
SVGFETurbulenceElement.prototype.result;


/**
 * @param {string=} opt_name
 * @return {!CSSValue}
 * @override
 */
SVGFETurbulenceElement.prototype.getPresentationAttribute = function(opt_name){};



/**
 * @constructor
 * @extends {SVGPathSeg}
 */
function SVGPathSegArcAbs(){}


/**
 * @type {number}
 */
SVGPathSegArcAbs.prototype.x;


/**
 * @type {number}
 */
SVGPathSegArcAbs.prototype.y;


/**
 * @type {number}
 */
SVGPathSegArcAbs.prototype.r1;


/**
 * @type {number}
 */
SVGPathSegArcAbs.prototype.r2;


/**
 * @type {number}
 */
SVGPathSegArcAbs.prototype.angle;


/**
 * @type {boolean}
 */
SVGPathSegArcAbs.prototype.largeArcFlag;


/**
 * @type {boolean}
 */
SVGPathSegArcAbs.prototype.sweepFlag;



/**
 * @constructor
 */
function SVGAnimatedBoolean(){}


/**
 * @type {boolean}
 */
SVGAnimatedBoolean.prototype.baseVal;


/**
 * @type {boolean}
 */
SVGAnimatedBoolean.prototype.animVal;



/**
 * @constructor
 * @extends {SVGElement}
 * @implements {SVGLangSpace}
 */
function SVGStyleElement(){}


/**
 * @type {boolean}
 */
SVGStyleElement.prototype.disabled;


/**
 * @type {string}
 */
SVGStyleElement.prototype.type;


/**
 * @type {string}
 */
SVGStyleElement.prototype.media;


/**
 * @type {string}
 */
SVGStyleElement.prototype.title;


/**
 * @type {string}
 */
SVGStyleElement.prototype.xmllang;


/**
 * @type {string}
 */
SVGStyleElement.prototype.xmlspace;



/**
 * @constructor
 * @extends {SVGElement}
 * @implements {SVGTests}
 * @implements {SVGLangSpace}
 * @implements {SVGExternalResourcesRequired}
 * @implements {SVGStylable}
 * @implements {SVGTransformable}
 */
function SVGClipPathElement(){}


/**
 * @type {!SVGAnimatedEnumeration}
 */
SVGClipPathElement.prototype.clipPathUnits;


/**
 * @type {!SVGAnimatedBoolean}
 */
SVGClipPathElement.prototype.externalResourcesRequired;


/**
 * @type {!SVGAnimatedTransformList}
 */
SVGClipPathElement.prototype.transform;


/**
 * @type {string}
 */
SVGClipPathElement.prototype.xmllang;


/**
 * @type {string}
 */
SVGClipPathElement.prototype.xmlspace;


/**
 * @type {!SVGElement}
 */
SVGClipPathElement.prototype.nearestViewportElement;


/**
 * @type {!SVGElement}
 */
SVGClipPathElement.prototype.farthestViewportElement;


/**
 * @return {!SVGRect}
 * @override
 */
SVGClipPathElement.prototype.getBBox = function(){};


/**
 * @return {!SVGMatrix}
 * @override
 */
SVGClipPathElement.prototype.getCTM = function(){};


/**
 * @return {!SVGMatrix}
 * @override
 */
SVGClipPathElement.prototype.getScreenCTM = function(){};


/**
 * @param {!SVGElement=} opt_element
 * @return {!SVGMatrix}
 * @override
 */
SVGClipPathElement.prototype.getTransformToElement = function(opt_element){};


/**
 * @type {!SVGStringList}
 */
SVGClipPathElement.prototype.requiredFeatures;


/**
 * @type {!SVGStringList}
 */
SVGClipPathElement.prototype.requiredExtensions;


/**
 * @type {!SVGStringList}
 */
SVGClipPathElement.prototype.systemLanguage;


/**
 * @param {string=} opt_extension
 * @return {boolean}
 * @override
 */
SVGClipPathElement.prototype.hasExtension = function(opt_extension){};


/**
 * @param {string=} opt_name
 * @return {!CSSValue}
 * @override
 */
SVGClipPathElement.prototype.getPresentationAttribute = function(opt_name){};



/**
 * @interface
 */
function ElementTimeControl(){}


/**
 * @return {undefined}
 */
ElementTimeControl.prototype.beginElement = function(){};


/**
 * @param {number=} opt_offset
 * @return {undefined}
 */
ElementTimeControl.prototype.beginElementAt = function(opt_offset){};


/**
 * @return {undefined}
 */
ElementTimeControl.prototype.endElement = function(){};


/**
 * @param {number=} opt_offset
 * @return {undefined}
 */
ElementTimeControl.prototype.endElementAt = function(opt_offset){};



/**
 * @constructor
 * @extends {SVGElement}
 * @implements {SVGTests}
 * @implements {SVGExternalResourcesRequired}
 * @implements {ElementTimeControl}
 */
function SVGAnimationElement(){}


/**
 * @type {!SVGElement}
 */
SVGAnimationElement.prototype.targetElement;


/**
 * @return {number}
 */
SVGAnimationElement.prototype.getStartTime = function(){};


/**
 * @return {number}
 */
SVGAnimationElement.prototype.getCurrentTime = function(){};


/**
 * @return {number}
 */
SVGAnimationElement.prototype.getSimpleDuration = function(){};


/**
 * @type {!SVGAnimatedBoolean}
 */
SVGAnimationElement.prototype.externalResourcesRequired;


/**
 * @type {!SVGStringList}
 */
SVGAnimationElement.prototype.requiredFeatures;


/**
 * @type {!SVGStringList}
 */
SVGAnimationElement.prototype.requiredExtensions;


/**
 * @type {!SVGStringList}
 */
SVGAnimationElement.prototype.systemLanguage;


/**
 * @param {string=} opt_extension
 * @return {boolean}
 * @override
 */
SVGAnimationElement.prototype.hasExtension = function(opt_extension){};


/**
 * @override
 * @return {undefined}
 */
SVGAnimationElement.prototype.beginElement = function(){};


/**
 * @param {number=} opt_offset
 * @override
 * @return {undefined}
 */
SVGAnimationElement.prototype.beginElementAt = function(opt_offset){};


/**
 * @override
 * @return {undefined}
 */
SVGAnimationElement.prototype.endElement = function(){};


/**
 * @param {number=} opt_offset
 * @override
 * @return {undefined}
 */
SVGAnimationElement.prototype.endElementAt = function(opt_offset){};



/**
 * @constructor
 * @extends {SVGAnimationElement}
 */
function SVGAnimateMotionElement(){}



/**
 * @constructor
 * @extends {SVGAnimationElement}
 */
function SVGAnimateElement(){}



/**
 * @constructor
 * @extends {SVGAnimationElement}
 */
function SVGAnimateColorElement(){}



/**
 * @constructor
 * @extends {SVGAnimationElement}
 */
function SVGAnimateTransformElement(){}



/**
 * @constructor
 * @extends {SVGAnimationElement}
 */
function SVGSetElement(){}



/**
 * @constructor
 */
function SVGAngle(){}


/**
 * @const
 * @type {number}
 */
SVGAngle.SVG_ANGLETYPE_UNKNOWN;


/**
 * @const
 * @type {number}
 */
SVGAngle.prototype.SVG_ANGLETYPE_UNKNOWN;


/**
 * @const
 * @type {number}
 */
SVGAngle.SVG_ANGLETYPE_UNSPECIFIED;


/**
 * @const
 * @type {number}
 */
SVGAngle.prototype.SVG_ANGLETYPE_UNSPECIFIED;


/**
 * @const
 * @type {number}
 */
SVGAngle.SVG_ANGLETYPE_DEG;


/**
 * @const
 * @type {number}
 */
SVGAngle.prototype.SVG_ANGLETYPE_DEG;


/**
 * @const
 * @type {number}
 */
SVGAngle.SVG_ANGLETYPE_RAD;


/**
 * @const
 * @type {number}
 */
SVGAngle.prototype.SVG_ANGLETYPE_RAD;


/**
 * @const
 * @type {number}
 */
SVGAngle.SVG_ANGLETYPE_GRAD;


/**
 * @const
 * @type {number}
 */
SVGAngle.prototype.SVG_ANGLETYPE_GRAD;


/**
 * @type {number}
 */
SVGAngle.prototype.unitType;


/**
 * @type {number}
 */
SVGAngle.prototype.value;


/**
 * @type {number}
 */
SVGAngle.prototype.valueInSpecifiedUnits;


/**
 * @type {string}
 */
SVGAngle.prototype.valueAsString;


/**
 * @param {number} unitType
 * @param {number} valueInSpecifiedUnits
 * @return {undefined}
 */
SVGAngle.prototype.newValueSpecifiedUnits = function(unitType, valueInSpecifiedUnits){};


/**
 * @param {number} unitType
 * @return {undefined}
 */
SVGAngle.prototype.convertToSpecifiedUnits = function(unitType){};



/**
 * @constructor
 * @extends {SVGTextPositioningElement}
 * @implements {SVGTransformable}
 */
function SVGTextElement(){}


/**
 * @type {!SVGAnimatedTransformList}
 */
SVGTextElement.prototype.transform;


/**
 * @type {!SVGElement}
 */
SVGTextElement.prototype.nearestViewportElement;


/**
 * @type {!SVGElement}
 */
SVGTextElement.prototype.farthestViewportElement;


/**
 * @return {!SVGRect}
 * @override
 */
SVGTextElement.prototype.getBBox = function(){};


/**
 * @return {!SVGMatrix}
 * @override
 */
SVGTextElement.prototype.getCTM = function(){};


/**
 * @return {!SVGMatrix}
 * @override
 */
SVGTextElement.prototype.getScreenCTM = function(){};


/**
 * @param {!SVGElement=} opt_element
 * @return {!SVGMatrix}
 * @override
 */
SVGTextElement.prototype.getTransformToElement = function(opt_element){};



/**
 * @constructor
 * @extends {SVGElement}
 */
function SVGFontFaceElement(){}



/**
 * @constructor
 * @extends {SVGElement}
 * @implements {SVGTests}
 * @implements {SVGLangSpace}
 * @implements {SVGExternalResourcesRequired}
 * @implements {SVGStylable}
 * @implements {SVGTransformable}
 */
function SVGLineElement(){}


/**
 * @type {!SVGAnimatedLength}
 */
SVGLineElement.prototype.x1;


/**
 * @type {!SVGAnimatedLength}
 */
SVGLineElement.prototype.y1;


/**
 * @type {!SVGAnimatedLength}
 */
SVGLineElement.prototype.x2;


/**
 * @type {!SVGAnimatedLength}
 */
SVGLineElement.prototype.y2;


/**
 * @type {!SVGAnimatedBoolean}
 */
SVGLineElement.prototype.externalResourcesRequired;


/**
 * @type {!SVGAnimatedTransformList}
 */
SVGLineElement.prototype.transform;


/**
 * @type {string}
 */
SVGLineElement.prototype.xmllang;


/**
 * @type {string}
 */
SVGLineElement.prototype.xmlspace;


/**
 * @type {!SVGElement}
 */
SVGLineElement.prototype.nearestViewportElement;


/**
 * @type {!SVGElement}
 */
SVGLineElement.prototype.farthestViewportElement;


/**
 * @return {!SVGRect}
 * @override
 */
SVGLineElement.prototype.getBBox = function(){};


/**
 * @return {!SVGMatrix}
 * @override
 */
SVGLineElement.prototype.getCTM = function(){};


/**
 * @return {!SVGMatrix}
 * @override
 */
SVGLineElement.prototype.getScreenCTM = function(){};


/**
 * @param {!SVGElement=} opt_element
 * @return {!SVGMatrix}
 * @override
 */
SVGLineElement.prototype.getTransformToElement = function(opt_element){};


/**
 * @type {!SVGStringList}
 */
SVGLineElement.prototype.requiredFeatures;


/**
 * @type {!SVGStringList}
 */
SVGLineElement.prototype.requiredExtensions;


/**
 * @type {!SVGStringList}
 */
SVGLineElement.prototype.systemLanguage;


/**
 * @param {string=} opt_extension
 * @return {boolean}
 * @override
 */
SVGLineElement.prototype.hasExtension = function(opt_extension){};


/**
 * @param {string=} opt_name
 * @return {!CSSValue}
 * @override
 */
SVGLineElement.prototype.getPresentationAttribute = function(opt_name){};



/**
 * @constructor
 * @extends {SVGElement}
 * @implements {SVGFilterPrimitiveStandardAttributes}
 */
function SVGFEComponentTransferElement(){}


/**
 * @type {!SVGAnimatedString}
 */
SVGFEComponentTransferElement.prototype.in1;


/**
 * @type {!SVGAnimatedLength}
 */
SVGFEComponentTransferElement.prototype.x;


/**
 * @type {!SVGAnimatedLength}
 */
SVGFEComponentTransferElement.prototype.y;


/**
 * @type {!SVGAnimatedLength}
 */
SVGFEComponentTransferElement.prototype.width;


/**
 * @type {!SVGAnimatedLength}
 */
SVGFEComponentTransferElement.prototype.height;


/**
 * @type {!SVGAnimatedString}
 */
SVGFEComponentTransferElement.prototype.result;


/**
 * @param {string=} opt_name
 * @return {!CSSValue}
 * @override
 */
SVGFEComponentTransferElement.prototype.getPresentationAttribute = function(opt_name){};



/**
 * @constructor
 * @extends {SVGElement}
 * @implements {SVGFilterPrimitiveStandardAttributes}
 */
function SVGFEDisplacementMapElement(){}


/**
 * @const
 * @type {number}
 */
SVGFEDisplacementMapElement.SVG_CHANNEL_UNKNOWN;


/**
 * @const
 * @type {number}
 */
SVGFEDisplacementMapElement.prototype.SVG_CHANNEL_UNKNOWN;


/**
 * @const
 * @type {number}
 */
SVGFEDisplacementMapElement.SVG_CHANNEL_R;


/**
 * @const
 * @type {number}
 */
SVGFEDisplacementMapElement.prototype.SVG_CHANNEL_R;


/**
 * @const
 * @type {number}
 */
SVGFEDisplacementMapElement.SVG_CHANNEL_G;


/**
 * @const
 * @type {number}
 */
SVGFEDisplacementMapElement.prototype.SVG_CHANNEL_G;


/**
 * @const
 * @type {number}
 */
SVGFEDisplacementMapElement.SVG_CHANNEL_B;


/**
 * @const
 * @type {number}
 */
SVGFEDisplacementMapElement.prototype.SVG_CHANNEL_B;


/**
 * @const
 * @type {number}
 */
SVGFEDisplacementMapElement.SVG_CHANNEL_A;


/**
 * @const
 * @type {number}
 */
SVGFEDisplacementMapElement.prototype.SVG_CHANNEL_A;


/**
 * @type {!SVGAnimatedString}
 */
SVGFEDisplacementMapElement.prototype.in1;


/**
 * @type {!SVGAnimatedString}
 */
SVGFEDisplacementMapElement.prototype.in2;


/**
 * @type {!SVGAnimatedNumber}
 */
SVGFEDisplacementMapElement.prototype.scale;


/**
 * @type {!SVGAnimatedEnumeration}
 */
SVGFEDisplacementMapElement.prototype.xChannelSelector;


/**
 * @type {!SVGAnimatedEnumeration}
 */
SVGFEDisplacementMapElement.prototype.yChannelSelector;


/**
 * @type {!SVGAnimatedLength}
 */
SVGFEDisplacementMapElement.prototype.x;


/**
 * @type {!SVGAnimatedLength}
 */
SVGFEDisplacementMapElement.prototype.y;


/**
 * @type {!SVGAnimatedLength}
 */
SVGFEDisplacementMapElement.prototype.width;


/**
 * @type {!SVGAnimatedLength}
 */
SVGFEDisplacementMapElement.prototype.height;


/**
 * @type {!SVGAnimatedString}
 */
SVGFEDisplacementMapElement.prototype.result;


/**
 * @param {string=} opt_name
 * @return {!CSSValue}
 * @override
 */
SVGFEDisplacementMapElement.prototype.getPresentationAttribute = function(opt_name){};



/**
 * @constructor
 */
function SVGAnimatedEnumeration(){}


/**
 * @type {number}
 */
SVGAnimatedEnumeration.prototype.baseVal;


/**
 * @type {number}
 */
SVGAnimatedEnumeration.prototype.animVal;



/**
 * @constructor
 * @extends {SVGElement}
 * @implements {SVGFilterPrimitiveStandardAttributes}
 */
function SVGFEMergeElement(){}


/**
 * @type {!SVGAnimatedLength}
 */
SVGFEMergeElement.prototype.x;


/**
 * @type {!SVGAnimatedLength}
 */
SVGFEMergeElement.prototype.y;


/**
 * @type {!SVGAnimatedLength}
 */
SVGFEMergeElement.prototype.width;


/**
 * @type {!SVGAnimatedLength}
 */
SVGFEMergeElement.prototype.height;


/**
 * @type {!SVGAnimatedString}
 */
SVGFEMergeElement.prototype.result;


/**
 * @param {string=} opt_name
 * @return {!CSSValue}
 * @override
 */
SVGFEMergeElement.prototype.getPresentationAttribute = function(opt_name){};



/**
 * @constructor
 * @extends {SVGElement}
 * @implements {SVGTests}
 * @implements {SVGLangSpace}
 * @implements {SVGExternalResourcesRequired}
 * @implements {SVGStylable}
 * @implements {SVGTransformable}
 */
function SVGForeignObjectElement(){}


/**
 * @type {!SVGAnimatedLength}
 */
SVGForeignObjectElement.prototype.x;


/**
 * @type {!SVGAnimatedLength}
 */
SVGForeignObjectElement.prototype.y;


/**
 * @type {!SVGAnimatedLength}
 */
SVGForeignObjectElement.prototype.width;


/**
 * @type {!SVGAnimatedLength}
 */
SVGForeignObjectElement.prototype.height;


/**
 * @type {!SVGAnimatedBoolean}
 */
SVGForeignObjectElement.prototype.externalResourcesRequired;


/**
 * @type {!SVGAnimatedTransformList}
 */
SVGForeignObjectElement.prototype.transform;


/**
 * @type {string}
 */
SVGForeignObjectElement.prototype.xmllang;


/**
 * @type {string}
 */
SVGForeignObjectElement.prototype.xmlspace;


/**
 * @type {!SVGElement}
 */
SVGForeignObjectElement.prototype.nearestViewportElement;


/**
 * @type {!SVGElement}
 */
SVGForeignObjectElement.prototype.farthestViewportElement;


/**
 * @return {!SVGRect}
 * @override
 */
SVGForeignObjectElement.prototype.getBBox = function(){};


/**
 * @return {!SVGMatrix}
 * @override
 */
SVGForeignObjectElement.prototype.getCTM = function(){};


/**
 * @return {!SVGMatrix}
 * @override
 */
SVGForeignObjectElement.prototype.getScreenCTM = function(){};


/**
 * @param {!SVGElement=} opt_element
 * @return {!SVGMatrix}
 * @override
 */
SVGForeignObjectElement.prototype.getTransformToElement = function(opt_element){};


/**
 * @type {!SVGStringList}
 */
SVGForeignObjectElement.prototype.requiredFeatures;


/**
 * @type {!SVGStringList}
 */
SVGForeignObjectElement.prototype.requiredExtensions;


/**
 * @type {!SVGStringList}
 */
SVGForeignObjectElement.prototype.systemLanguage;


/**
 * @param {string=} opt_extension
 * @return {boolean}
 * @override
 */
SVGForeignObjectElement.prototype.hasExtension = function(opt_extension){};


/**
 * @param {string=} opt_name
 * @return {!CSSValue}
 * @override
 */
SVGForeignObjectElement.prototype.getPresentationAttribute = function(opt_name){};



/**
 * @constructor
 */
function SVGAnimatedLength(){}


/**
 * @type {!SVGLength}
 */
SVGAnimatedLength.prototype.baseVal;


/**
 * @type {!SVGLength}
 */
SVGAnimatedLength.prototype.animVal;



/**
 * @constructor
 * @extends {SVGElement}
 * @implements {SVGURIReference}
 * @implements {SVGExternalResourcesRequired}
 */
function SVGScriptElement(){}


/**
 * @type {string}
 */
SVGScriptElement.prototype.type;


/**
 * @type {!SVGAnimatedBoolean}
 */
SVGScriptElement.prototype.externalResourcesRequired;


/**
 * @type {!SVGAnimatedString}
 */
SVGScriptElement.prototype.href;



/**
 * @constructor
 */
function SVGAnimatedInteger(){}


/**
 * @type {number}
 */
SVGAnimatedInteger.prototype.baseVal;


/**
 * @type {number}
 */
SVGAnimatedInteger.prototype.animVal;
/*
 * Copyright 2015 The Closure Compiler Authors
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/**
 * @fileoverview Definitions for URL and URLSearchParams from the spec at
 * https://url.spec.whatwg.org.
 *
 * @externs
 * @author rdcronin@google.com (Devlin Cronin)
 */

/**
 * @typedef {Array<string>}
 */
var URLSearchParamsTupleType;

/**
 * Represents the query string of a URL.
 *
 * * When `init` is a string, it is basically parsed as a query string
 *   `'name1=value1&name2=value2'`.
 *
 * * When `init` is an array of arrays of string
 *   `([['name1', 'value1'], ['name2', 'value2']])`,
 *   it must contain pairs of strings, where the first item in the pair will be
 *   interpreted as a key and the second as a value.
 *
 *   NOTE: The specification uses Iterable rather than Array, but this is not
 *   supported in Edge 17 - 18.
 *
 * * When `init` is an object, keys and values will be interpreted as such
 *   `({name1: 'value1', name2: 'value2'}).
 *
 * @see https://url.spec.whatwg.org/#interface-urlsearchparams
 * @constructor
 * @implements {Iterable<!Array<string>>}
 * @param {(string|!Array<!URLSearchParamsTupleType>|!Object<string,string>)=}
 *     init
 */
function URLSearchParams(init) {}

/**
 * @param {string} name
 * @param {string} value
 * @return {undefined}
 */
URLSearchParams.prototype.append = function(name, value) {};

/**
 * @param {string} name
 * @return {undefined}
 */
URLSearchParams.prototype.delete = function(name) {};

/**
 * @return {!IteratorIterable<!Array<string>>}
 * @nosideeffects
 * @see https://developer.mozilla.org/en-US/docs/Web/API/URLSearchParams/entries
 */
URLSearchParams.prototype.entries = function() {};

/**
 * @param {function(string, string)} callback
 * @return {undefined}
 */
URLSearchParams.prototype.forEach = function(callback) {};

/**
 * @param {string} name
 * @return {?string}
 */
URLSearchParams.prototype.get = function(name) {};

/**
 * @param {string} name
 * @return {!Array<string>}
 */
URLSearchParams.prototype.getAll = function(name) {};

/**
 * @param {string} name
 * @return {boolean}
 */
URLSearchParams.prototype.has = function(name) {};

/**
 * @return {!IteratorIterable<string>}
 */
URLSearchParams.prototype.keys = function() {};


/**
 * @param {string} name
 * @param {string} value
 * @return {undefined}
 */
URLSearchParams.prototype.set = function(name, value) {};

/**
 * @return {undefined}
 */
URLSearchParams.prototype.sort = function() {};

/**
 * @return {!IteratorIterable<string>}
 */
URLSearchParams.prototype.values = function() {};

/**
 * @see https://url.spec.whatwg.org
 * @constructor
 * @param {string} url
 * @param {(string|!URL)=} base
 */
function URL(url, base) {}

/** @type {string} */
URL.prototype.href;

/**
 * @const {string}
 */
URL.prototype.origin;

/** @type {string} */
URL.prototype.protocol;

/** @type {string} */
URL.prototype.username;

/** @type {string} */
URL.prototype.password;

/** @type {string} */
URL.prototype.host;

/** @type {string} */
URL.prototype.hostname;

/** @type {string} */
URL.prototype.port;

/** @type {string} */
URL.prototype.pathname;

/** @type {string} */
URL.prototype.search;

/**
 * @const {!URLSearchParams}
 */
URL.prototype.searchParams;

/** @type {string} */
URL.prototype.hash;

/**
 * @param {string} domain
 * @return {string}
 */
URL.domainToASCII = function(domain) {};

/**
 * @param {string} domain
 * @return {string}
 */
URL.domainToUnicode = function(domain) {};

/**
 * @see http://www.w3.org/TR/FileAPI/#dfn-createObjectURL
 * @param {!File|!Blob|!MediaSource|!MediaStream} obj
 * @return {string}
 */
URL.createObjectURL = function(obj) {};

/**
 * @see http://www.w3.org/TR/FileAPI/#dfn-revokeObjectURL
 * @param {string} url
 * @return {undefined}
 */
URL.revokeObjectURL = function(url) {};
/*
 * Copyright 2013 The Closure Compiler Authors
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/**
 * @fileoverview This file describes the externs API for V8-specific objects.
 * @externs
 */



/**
 * Stack frame elements in V8.
 * @constructor
 */
function CallSite() {}


/**
 * Runs the garbage collector, provided that you start V8 with --expose-gc or
 * Chrome with --js-flags="--expose-gc".
 * See https://v8.dev/docs/memory-leaks
 * @type {undefined|function()}
 */
CallSite.prototype.gc;


/**
 * Returns the value of this.
 * @return {Object|undefined}
 */
CallSite.prototype.getThis = function() {};


/**
 * Returns the type of this as a string. This is the name of the function stored
 * in the constructor field of this, if available, otherwise the object's
 * [[Class]] internal property.
 * @return {string|undefined}
 */
CallSite.prototype.getTypeName = function() {};


/**
 * Returns the current function.
 * @return {!Function|undefined}
 */
CallSite.prototype.getFunction = function() {};


/**
 * Returns the name of the current function, typically its name property. If a
 * name property is not available an attempt will be made to try to infer a name
 * from the function's context.
 * @return {string|undefined}
 */
CallSite.prototype.getFunctionName = function() {};


/**
 * Returns the name of the property of this or one of its prototypes that holds
 * the current function.
 * @return {string|undefined}
 */
CallSite.prototype.getMethodName = function() {};


/**
 * If this function was defined in a script returns the name of the script
 * @return {string|undefined}
 */
CallSite.prototype.getFileName = function() {};


/**
 * If this function was defined in a script returns the current line number.
 * @return {number|undefined}
 */
CallSite.prototype.getLineNumber = function() {};


/**
 * If this function was defined in a script returns the current column number.
 * @return {number|undefined}
 */
CallSite.prototype.getColumnNumber = function() {};


/**
 * If this function was created using a call to eval, returns a CallSite object
 * representing the location where eval was called
 * @return {CallSite|undefined}
 */
CallSite.prototype.getEvalOrigin = function() {};


/**
 * Is this a toplevel invocation, that is, is this the global object?
 * @return {boolean}
 */
CallSite.prototype.isToplevel = function() {};


/**
 * Does this call take place in code defined by a call to eval?
 * @return {boolean}
 */
CallSite.prototype.isEval = function() {};


/**
 * Is this call in native V8 code?
 * @return {boolean}
 */
CallSite.prototype.isNative = function() {};


/**
 * Is this a constructor call?
 * @return {boolean}
 */
CallSite.prototype.isConstructor = function() {};
/*
 * Copyright 2018 The Closure Compiler Authors
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/**
 * @fileoverview Definitions for AbortController
 * @see https://dom.spec.whatwg.org/#aborting-ongoing-activities
 * @externs
 */



/**
 * @interface
 * @extends {EventTarget}
 * @see https://dom.spec.whatwg.org/#interface-AbortSignal
 */
function AbortSignal() {}

/** @type {boolean} */
AbortSignal.prototype.aborted;

/** @type {?function(!Event)} */
AbortSignal.prototype.onabort;



/**
 * @constructor
 * @see https://dom.spec.whatwg.org/#interface-abortcontroller
 */
function AbortController() {}

/** @const {!AbortSignal} */
AbortController.prototype.signal;

/** @return {void} */
AbortController.prototype.abort = function() {};
/*
 * Copyright 2011 The Closure Compiler Authors
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/**
 * @fileoverview Definitions for timing control for script base animations. The
 *  whole file has been fully type annotated.
 *
 * @see http://www.w3.org/TR/animation-timing/
 * @see http://webstuff.nfshost.com/anim-timing/Overview.html
 * @externs
 */

/**
 * @typedef {function(number): undefined}
 * @see https://html.spec.whatwg.org/multipage/imagebitmap-and-animations.html#framerequestcallback
 */
var FrameRequestCallback;

/**
 * @param {!FrameRequestCallback} callback
 * @param {Element=} opt_element In early versions of this API, the callback
 *     was invoked only if the element was visible.
 * @return {number}
 */
function requestAnimationFrame(callback, opt_element) {};

/**
 * @param {number} handle
 * @return {undefined}
 */
function cancelRequestAnimationFrame(handle) {};

/**
 * @param {number} handle
 * @return {undefined}
 */
function cancelAnimationFrame(handle) {};
/*
 * Copyright 2012 The Closure Compiler Authors.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/**
 * @fileoverview Definitions for the API related to audio.
 * Definitions for the Web Audio API.
 * This file is based on the W3C Working Draft 08 December 2015.
 * @see http://www.w3.org/TR/webaudio/
 *
 * @externs
 */

/**
 * @implements {EventTarget}
 * @constructor
 */
function BaseAudioContext() {}

/** @type {!AudioDestinationNode} */
BaseAudioContext.prototype.destination;

/** @type {number} */
BaseAudioContext.prototype.sampleRate;

/** @type {number} */
BaseAudioContext.prototype.currentTime;

/** @type {!AudioListener} */
BaseAudioContext.prototype.listener;

/** @type {!AudioWorklet} */
BaseAudioContext.prototype.audioWorklet;

/**
 * @type {string}
 * See https://www.w3.org/TR/webaudio/#BaseAudioContext for valid values
 */
BaseAudioContext.prototype.state;

/**
 * @param {number} numberOfChannels
 * @param {number} length
 * @param {number} sampleRate
 * @return {!AudioBuffer}
 */
BaseAudioContext.prototype.createBuffer =
    function(numberOfChannels, length, sampleRate) {};

/**
 * @param {!ArrayBuffer} audioData
 * @param {function(!AudioBuffer)=} successCallback
 * @param {function(?)=} errorCallback
 * @return {!Promise<!AudioBuffer>}
 */
BaseAudioContext.prototype.decodeAudioData =
    function(audioData, successCallback, errorCallback) {};

/**
 * @return {!AudioBufferSourceNode}
 */
BaseAudioContext.prototype.createBufferSource = function() {};

/**
 * @deprecated Use createAudioWorker instead
 * @param {number=} bufferSize
 * @param {number=} numberOfInputChannels_opt
 * @param {number=} numberOfOutputChannels_opt
 * @return {!ScriptProcessorNode}
 */
BaseAudioContext.prototype.createScriptProcessor = function(bufferSize,
    numberOfInputChannels_opt, numberOfOutputChannels_opt) {};

/**
 * @return {!AnalyserNode}
 */
BaseAudioContext.prototype.createAnalyser = function() {};

/**
 * @return {!GainNode}
 */
BaseAudioContext.prototype.createGain = function() {};

/**
 * @param {number=} maxDelayTime
 * @return {!DelayNode}
 */
BaseAudioContext.prototype.createDelay = function(maxDelayTime) {};

/**
 * @return {!BiquadFilterNode}
 */
BaseAudioContext.prototype.createBiquadFilter = function() {};

/**
 * @return {!WaveShaperNode}
 */
BaseAudioContext.prototype.createWaveShaper = function() {};

/**
 * @return {!PannerNode}
 */
BaseAudioContext.prototype.createPanner = function() {};

/**
 * @return {!StereoPannerNode}
 */
BaseAudioContext.prototype.createStereoPanner = function() {};

/**
 * @return {!ConvolverNode}
 */
BaseAudioContext.prototype.createConvolver = function() {};

/**
 * @param {number=} numberOfOutputs
 * @return {!ChannelSplitterNode}
 */
BaseAudioContext.prototype.createChannelSplitter = function(numberOfOutputs) {};

/**
 * @param {number=} numberOfInputs
 * @return {!ChannelMergerNode}
 */
BaseAudioContext.prototype.createChannelMerger = function(numberOfInputs) {};

/**
 * @return {!ConstantSourceNode}
 */
BaseAudioContext.prototype.createConstantSource = function() {};

/**
 * @return {!DynamicsCompressorNode}
 */
BaseAudioContext.prototype.createDynamicsCompressor = function() {};

/**
 * @return {!OscillatorNode}
 */
BaseAudioContext.prototype.createOscillator = function() {};

/**
 * @param {!Float32Array} real
 * @param {!Float32Array} imag
 * @return {!PeriodicWave}
 */
BaseAudioContext.prototype.createPeriodicWave = function(real, imag) {};

/**
 * @return {!Promise<void>}
 */
BaseAudioContext.prototype.resume = function() {};

/**
 * @return {!Promise<void>}
 */
BaseAudioContext.prototype.suspend = function() {};

/**
 * @return {!Promise<void>}
 */
BaseAudioContext.prototype.close = function() {};

/** @type {?function(!Event)} */
BaseAudioContext.prototype.onstatechange;

/**
 * @param  {string} scriptURL
 * @return {!Promise<!AudioWorker>}
 */
BaseAudioContext.prototype.createAudioWorker = function(scriptURL) {};

/**
 * @param  {!IArrayLike<number>} feedforward
 * @param  {!IArrayLike<number>} feedback
 * @return {!IIRFilterNode}
 */
BaseAudioContext.prototype.createIIRFilter = function(feedforward, feedback) {};

/**
 * @return {!SpatialPannerNode}
 */
BaseAudioContext.prototype.createSpatialPanner = function() {};

/**
 * @record
 * @see https://webaudio.github.io/web-audio-api/#idl-def-AudioContextOptions
 */
function AudioContextOptions() {};

/** @type {(undefined|string|number)} */
AudioContextOptions.prototype.latencyHint;

/** @type {(undefined|number)} */
AudioContextOptions.prototype.sampleRate;

/**
 * Includes the non-standard contextOptions optional options parameter
 * implemented by Chrome and Firefox.
 * @param {!AudioContextOptions=} contextOptions
 * @constructor
 * @extends {BaseAudioContext}
 */
function AudioContext(contextOptions) {}

/**
 * @param {!HTMLMediaElement} mediaElement
 * @return {!MediaElementAudioSourceNode}
 */
AudioContext.prototype.createMediaElementSource = function(mediaElement) {};

/**
 * @return {!MediaStreamAudioDestinationNode}
 */
AudioContext.prototype.createMediaStreamDestination = function() {};

/**
 * @param {!MediaStream} mediaStream
 * @return {!MediaStreamAudioSourceNode}
 */
AudioContext.prototype.createMediaStreamSource = function(mediaStream) {};

/**
 * @deprecated Use createScriptProcessor instead.
 * @param {number} bufferSize
 * @param {number} numberOfInputs
 * @param {number} numberOfOuputs
 * @return {!ScriptProcessorNode}
 */
AudioContext.prototype.createJavaScriptNode = function(bufferSize,
    numberOfInputs, numberOfOuputs) {};

/**
 * @deprecated Use createGain instead.
 * @return {!GainNode}
 */
AudioContext.prototype.createGainNode = function() {};

/**
 * @deprecated Use createDelay instead.
 * @param {number=} maxDelayTime
 * @return {!DelayNode}
 */
AudioContext.prototype.createDelayNode = function(maxDelayTime) {};

/**
 * @param {number} numberOfChannels
 * @param {number} length
 * @param {number} sampleRate
 * @constructor
 * @extends {BaseAudioContext}
 */
function OfflineAudioContext(numberOfChannels, length, sampleRate) {}

/**
 * @return {!Promise<!AudioBuffer>}
 */
OfflineAudioContext.prototype.startRendering = function() {};

/** @type {function(!OfflineAudioCompletionEvent)} */
OfflineAudioContext.prototype.oncomplete;

/**
 * @constructor
 * @extends {Event}
 */
function OfflineAudioCompletionEvent() {}

/** @type {AudioBuffer} */
OfflineAudioCompletionEvent.prototype.renderedBuffer;

/**
 * @constructor
 * @implements {EventTarget}
 * @see https://www.w3.org/TR/webaudio/#the-audionode-interface
 */
function AudioNode() {}

/**
 * @override
 */
AudioNode.prototype.addEventListener = function(type, listener,
    opt_useCapture) {};

/**
 * @override
 */
AudioNode.prototype.removeEventListener = function(type, listener,
    opt_useCapture) {};

/**
 * @override
 * @return {boolean}
 */
AudioNode.prototype.dispatchEvent = function(evt) {};

/**
 * @param {!AudioNode|!AudioParam} destination
 * @param {number=} output
 * @param {number=} input
 * @return {AudioNode|void}
 */
AudioNode.prototype.connect = function(destination, output, input) {};

/**
 * @param {!AudioNode|!AudioParam|number=} destination
 * @param {number=} output
 * @param {number=} input
 */
AudioNode.prototype.disconnect = function(destination, output, input) {};

/** @type {!AudioContext} */
AudioNode.prototype.context;

/** @type {number} */
AudioNode.prototype.numberOfInputs;

/** @type {number} */
AudioNode.prototype.numberOfOutputs;

/** @type {number} */
AudioNode.prototype.channelCount;

/**
 * @type {string}
 * See https://www.w3.org/TR/webaudio/#the-audionode-interface for valid values
 */
AudioNode.prototype.channelCountMode;

/**
 * @type {string}
 * See https://www.w3.org/TR/webaudio/#the-audionode-interface for valid values
 */
AudioNode.prototype.channelInterpretation;

/**
 * @constructor
 * @extends {AudioNode}
 */
function AudioSourceNode() {}

/**
 * @constructor
 * @extends {AudioNode}
 */
function AudioDestinationNode() {}

/**
 * @deprecated Use AudioDestinationNode#maxChannelCount
 * @type {number}
 */
AudioDestinationNode.prototype.numberOfChannels;

/** @type {number} */
AudioDestinationNode.prototype.maxChannelCount;

/**
 * @constructor
 */
function AudioParam() {}

/** @type {number} */
AudioParam.prototype.value;

/**
 * @type {string}
 * See https://www.w3.org/TR/webaudio/#dom-audioparam-automationrate for valid
 * values.
 */
AudioParam.prototype.automationRate;

/**
 * @deprecated
 * @type {number}
 */
AudioParam.prototype.maxValue;

/**
 * @deprecated
 * @type {number}
 */
AudioParam.prototype.minValue;

/** @type {number} */
AudioParam.prototype.defaultValue;

/**
 * @deprecated
 * @type {number}
 */
AudioParam.prototype.units;

/**
 * @param {number} value
 * @param {number} startTime
 * @return {!AudioParam}
 * @throws {!TypeError} if startTime is negative or not a finite number
 */
AudioParam.prototype.setValueAtTime = function(value, startTime) {};

/**
 * @param {number} value
 * @param {number} endTime
 * @return {!AudioParam}
 * @throws {!TypeError} if endTime is negative or not a finite number
 */
AudioParam.prototype.linearRampToValueAtTime = function(value, endTime) {};

/**
 * @param {number} value
 * @param {number} endTime
 * @return {!AudioParam}
 * @throws {!TypeError} if endTime is negative or not a finite number
 */
AudioParam.prototype.exponentialRampToValueAtTime = function(value, endTime) {};

/**
 * @param {number} target
 * @param {number} startTime
 * @param {number} timeConstant
 * @return {!AudioParam}
 * @throws {!TypeError} if startTime is negative or not a finite number, or
 * timeConstant is not strictly positive
 */
AudioParam.prototype.setTargetAtTime = function(target, startTime,
    timeConstant) {};

/**
 * @deprecated Use setTargetAtTime instead.
 * @param {number} target
 * @param {number} startTime
 * @param {number} timeConstant
 * @return {!AudioParam}
 */
AudioParam.prototype.setTargetValueAtTime = function(target, startTime,
    timeConstant) {};

/**
 * @param {!Float32Array} values
 * @param {number} startTime
 * @param {number} duration
 * @return {!AudioParam}
 * @throws {!TypeError} if startTime is negative or not a finite number
 */
AudioParam.prototype.setValueCurveAtTime = function(values, startTime,
    duration) {};

/**
 * @param {number} startTime
 * @return {!AudioParam}
 * @throws {!TypeError} if startTime is negative or not a finite number
 */
AudioParam.prototype.cancelScheduledValues = function(startTime) {};

/**
 * @constructor
 * @extends {AudioParam}
 */
function AudioGain() {}

/**
 * @constructor
 * @extends {AudioNode}
 */
function GainNode() {}

/** @type {!AudioParam} */
GainNode.prototype.gain;

/**
 * @constructor
 * @extends {AudioNode}
 */
function DelayNode() {}

/** @type {!AudioParam} */
DelayNode.prototype.delayTime;

/**
 * @constructor
 */
function AudioBuffer() {}

/**
 * @deprecated
 * @type {!AudioGain}
 */
AudioBuffer.prototype.gain;

/** @type {number} */
AudioBuffer.prototype.sampleRate;

/** @type {number} */
AudioBuffer.prototype.length;

/** @type {number} */
AudioBuffer.prototype.duration;

/** @type {number} */
AudioBuffer.prototype.numberOfChannels;

/**
 * @param {number} channel
 * @return {!Float32Array}
 */
AudioBuffer.prototype.getChannelData = function(channel) {};

/**
 * @param  {!Float32Array} destination
 * @param  {number} channelNumber
 * @param  {number=} startInChannel
 */
AudioBuffer.prototype.copyFromChannel = function(destination,
    channelNumber, startInChannel) {};

/**
 * @param  {!Float32Array} source
 * @param  {number} channelNumber
 * @param  {number=} startInChannel
 */
AudioBuffer.prototype.copyToChannel = function(source, channelNumber,
    startInChannel) {};

/**
 * @constructor
 * @extends {AudioNode}
 */
function AudioBufferSourceNode() {}

/**
 * @deprecated
 * @const {number}
 */
AudioBufferSourceNode.prototype.UNSCHEDULED_STATE;

/**
 * @deprecated
 * @const {number}
 */
AudioBufferSourceNode.prototype.SCHEDULED_STATE;

/**
 * @deprecated
 * @const {number}
 */
AudioBufferSourceNode.prototype.PLAYING_STATE;

/**
 * @deprecated
 * @const {number}
 */
AudioBufferSourceNode.prototype.FINISHED_STATE;

/**
 * @deprecated
 * @type {number}
 */
AudioBufferSourceNode.prototype.playbackState;

/** @type {AudioBuffer} */
AudioBufferSourceNode.prototype.buffer;

/**
 * @deprecated
 * @type {number}
 */
AudioBufferSourceNode.prototype.gain;

/** @type {!AudioParam} */
AudioBufferSourceNode.prototype.playbackRate;

/** @type {boolean} */
AudioBufferSourceNode.prototype.loop;

/** @type {number} */
AudioBufferSourceNode.prototype.loopStart;

/** @type {number} */
AudioBufferSourceNode.prototype.loopEnd;

/** @type {?function(!Event): void} */
AudioBufferSourceNode.prototype.onended;

/** @type {!AudioParam} */
AudioBufferSourceNode.prototype.detune;

/**
 * @param {number=} when
 * @param {number=} opt_offset
 * @param {number=} opt_duration
 * @throws {!TypeError} if any parameter is negative
 */
AudioBufferSourceNode.prototype.start = function(when, opt_offset,
    opt_duration) {};

/**
 * @param {number=} when
 * @throws {!TypeError} if when is negative
 */
AudioBufferSourceNode.prototype.stop = function(when) {};

/**
 * @deprecated Use AudioBufferSourceNode#start
 * @param {number} when
 * @return {undefined}
 */
AudioBufferSourceNode.prototype.noteOn = function(when) {};

/**
 * @param {number=} when
 * @param {number=} opt_offset
 * @param {number=} opt_duration
 * @deprecated Use AudioBufferSourceNode#start
 */
AudioBufferSourceNode.prototype.noteGrainOn = function(when, opt_offset,
    opt_duration) {};

/**
 * @param {number} when
 * @deprecated Use AudioBufferSourceNode#stop
 */
AudioBufferSourceNode.prototype.noteOff = function(when) {};

/**
 * @constructor
 * @extends {AudioNode}
 */
function MediaElementAudioSourceNode() {}

/**
 * @constructor
 */
function AudioWorker() {}

/** @type {?function(!Event)} */
AudioWorker.prototype.onloaded;

/** @type {?function(!Event)} */
AudioWorker.prototype.onmessage;

/** @type {!Array<!AudioWorkerParamDescriptor>} */
AudioWorker.prototype.parameters;

/**
 * @param  {string} name
 * @param  {number} defaultValue
 * @return {!AudioParam}
 */
AudioWorker.prototype.addParameter = function(name, defaultValue) {};

/**
 * @param  {number} numberOfInputs
 * @param  {number} numberOfOutputs
 * @return {!AudioWorkerNode}
 */
AudioWorker.prototype.createNode = function(numberOfInputs, numberOfOutputs) {};

/**
 * @param  {*} message
 * @param  {!Array<!Transferable>=} transfer
 */
AudioWorker.prototype.postMessage = function(message, transfer) {};

/**
 * @param  {string} name
 */
AudioWorker.prototype.removeParameter = function(name) {};

/**
 */
AudioWorker.prototype.terminate = function() {};

/**
 * @constructor
 * @extends {AudioNode}
 */
function AudioWorkerNode() {}

/** @type {?function(!Event)} */
AudioWorkerNode.prototype.onmessage;

/**
 * @param  {*} message
 * @param  {!Array<!Transferable>=} transfer
 */
AudioWorkerNode.prototype.postMessage = function(message, transfer) {};

/**
 * @constructor
 */
function AudioWorkerParamDescriptor() {}

/** @type {number} */
AudioWorkerParamDescriptor.prototype.defaultValue;

/** @type {string} */
AudioWorkerParamDescriptor.prototype.name;

/**
 * @constructor
 */
function AudioWorkerGlobalScope() {}

/** @type {?function(!Event)} */
AudioWorkerGlobalScope.prototype.onaudioprocess;

/** @type {?function(!Event)} */
AudioWorkerGlobalScope.prototype.onnodecreate;

/** @type {!Array<!AudioWorkerParamDescriptor>} */
AudioWorkerGlobalScope.prototype.parameters;

/** @type {number} */
AudioWorkerGlobalScope.prototype.sampleRate;

/**
 * @param  {string} name
 * @param  {number} defaultValue
 * @return {!AudioParam}
 */
AudioWorkerGlobalScope.prototype.addParameter = function(name, defaultValue) {};

/**
 * @param  {string} name
 */
AudioWorkerGlobalScope.prototype.removeParameter = function(name) {};

/**
 * @constructor
 */
function AudioWorkerNodeProcessor() {}

/** @type {?function(!Event)} */
AudioWorkerNodeProcessor.prototype.onmessage;

/**
 * @param  {*} message
 * @param  {!Array<!Transferable>=} transfer
 */
AudioWorkerNodeProcessor.prototype.postMessage = function(message, transfer) {};

/**
 * @constructor
 * @extends {AudioNode}
 * @deprecated Use AudioWorkerNode
 */
function JavaScriptAudioNode() {}

/**
 * @type {EventListener|(function(!AudioProcessingEvent):(boolean|undefined))}
 * @deprecated Use AudioWorkerNode
 */
JavaScriptAudioNode.prototype.onaudioprocess;

/**
 * @type {number}
 * @deprecated Use AudioWorkerNode
 */
JavaScriptAudioNode.prototype.bufferSize;

/**
 * @constructor
 * @extends {AudioNode}
 * @deprecated Use AudioWorkerNode
 */
function ScriptProcessorNode() {}

/**
 * @type {EventListener|(function(!AudioProcessingEvent):(boolean|undefined))}
 * @deprecated Use AudioWorkerNode
 */
ScriptProcessorNode.prototype.onaudioprocess;

/**
 * @type {number}
 * @deprecated Use AudioWorkerNode
 */
ScriptProcessorNode.prototype.bufferSize;

/**
 * @constructor
 * @extends {Event}
 */
function AudioWorkerNodeCreationEvent() {}

/** @type {!Array} */
AudioWorkerNodeCreationEvent.prototype.inputs;

/** @type {!AudioWorkerNodeProcessor} */
AudioWorkerNodeCreationEvent.prototype.node;

/** @type {!Array} */
AudioWorkerNodeCreationEvent.prototype.outputs;

/**
 * @constructor
 * @extends {Event}
 */
function AudioProcessEvent() {}

/** @type {!Float32Array} */
AudioProcessEvent.prototype.inputs;

/** @type {!AudioWorkerNodeProcessor} */
AudioProcessEvent.prototype.node;

/** @type {!Float32Array} */
AudioProcessEvent.prototype.outputs;

/** @type {!Object} */
AudioProcessEvent.prototype.parameters;

/** @type {number} */
AudioProcessEvent.prototype.playbackTime;

/**
 * @constructor
 * @extends {Event}
 * @deprecated Use AudioProcessEvent
 */
function AudioProcessingEvent() {}

/**
 * @type {!ScriptProcessorNode}
 * @deprecated Use AudioProcessEvent
 */
AudioProcessingEvent.prototype.node;

/**
 * @type {number}
 * @deprecated Use AudioProcessEvent
 */
AudioProcessingEvent.prototype.playbackTime;

/**
 * @type {!AudioBuffer}
 * @deprecated Use AudioProcessEvent
 */
AudioProcessingEvent.prototype.inputBuffer;

/**
 * @type {!AudioBuffer}
 * @deprecated Use AudioProcessEvent
 */
AudioProcessingEvent.prototype.outputBuffer;

/**
 * @deprecated
 * @constructor
 * @extends {AudioNode}
 */
function AudioPannerNode() {}

/**
 * @deprecated
 * @const {number}
 */
AudioPannerNode.prototype.EQUALPOWER;

/**
 * @deprecated
 * @const {number}
 */
AudioPannerNode.prototype.HRTF;

/**
 * @deprecated
 * @const {number}
 */
AudioPannerNode.prototype.SOUNDFIELD;

/**
 * @deprecated
 * @const {number}
 */
AudioPannerNode.prototype.LINEAR_DISTANCE;

/**
 * @deprecated
 * @const {number}
 */
AudioPannerNode.prototype.INVERSE_DISTANCE;

/**
 * @deprecated
 * @const {number}
 */
AudioPannerNode.prototype.EXPONENTIAL_DISTANCE;

/**
 * @deprecated
 * @type {number|string}
 */
AudioPannerNode.prototype.panningModel;

/**
 * @deprecated
 * @param {number} x
 * @param {number} y
 * @param {number} z
 * @return {undefined}
 */
AudioPannerNode.prototype.setPosition = function(x, y, z) {};

/**
 * @deprecated
 * @param {number} x
 * @param {number} y
 * @param {number} z
 * @return {undefined}
 */
AudioPannerNode.prototype.setOrientation = function(x, y, z) {};

/**
 * @deprecated
 * @param {number} x
 * @param {number} y
 * @param {number} z
 * @return {undefined}
 */
AudioPannerNode.prototype.setVelocity = function(x, y, z) {};

/**
 * @deprecated
 * @type {number|string}
 */
AudioPannerNode.prototype.distanceModel;

/**
 * @deprecated
 * @type {number}
 */
AudioPannerNode.prototype.refDistance;

/**
 * @deprecated
 * @type {number}
 */
AudioPannerNode.prototype.maxDistance;

/**
 * @deprecated
 * @type {number}
 */
AudioPannerNode.prototype.rolloffFactor;

/**
 * @deprecated
 * @type {number}
 */
AudioPannerNode.prototype.coneInnerAngle;

/**
 * @deprecated
 * @type {number}
 */
AudioPannerNode.prototype.coneOuterAngle;

/**
 * @deprecated
 * @type {number}
 */
AudioPannerNode.prototype.coneOuterGain;

/**
 * @deprecated
 * @type {!AudioGain}
 */
AudioPannerNode.prototype.coneGain;

/**
 * @deprecated
 * @type {!AudioGain}
 */
AudioPannerNode.prototype.distanceGain;

/**
 * @constructor
 * @extends {AudioNode}
 */
function PannerNode() {}

/** @type {number} */
PannerNode.prototype.coneInnerAngle;

/** @type {number} */
PannerNode.prototype.coneOuterAngle;

/** @type {number} */
PannerNode.prototype.coneOuterGain;

/**
 * @type {string}
 * See https://www.w3.org/TR/webaudio/#the-pannernode-interface for valid values
 */
PannerNode.prototype.distanceModel;

/** @type {number} */
PannerNode.prototype.maxDistance;

/**
 * @type {string}
 * See https://www.w3.org/TR/webaudio/#the-pannernode-interface for valid values
 */
PannerNode.prototype.panningModel;

/** @type {number} */
PannerNode.prototype.refDistance;

/** @type {number} */
PannerNode.prototype.rolloffFactor;

/**
 * @param {number} x
 * @param {number} y
 * @param {number} z
 */
PannerNode.prototype.setOrientation = function(x, y, z) {};

/**
 * @param {number} x
 * @param {number} y
 * @param {number} z
 */
PannerNode.prototype.setPosition = function(x, y, z) {};

/**
 * @param {number} x
 * @param {number} y
 * @param {number} z
 */
PannerNode.prototype.setVelocity = function(x, y, z) {};

/**
 * @constructor
 * @deprecated Use SpatialListener
 */
function AudioListener() {}

/**
 * @type {number}
 * @deprecated Use SpatialListener
 */
AudioListener.prototype.gain;

/**
 * @type {number}
 * @deprecated Use SpatialListener
 */
AudioListener.prototype.dopplerFactor;

/**
 * @type {number}
 * @deprecated Use SpatialListener
 */
AudioListener.prototype.speedOfSound;

/**
 * @param {number} x
 * @param {number} y
 * @param {number} z
 * @deprecated Use SpatialListener
 */
AudioListener.prototype.setPosition = function(x, y, z) {};

/**
 * @param {number} x
 * @param {number} y
 * @param {number} z
 * @param {number} xUp
 * @param {number} yUp
 * @param {number} zUp
 * @deprecated Use SpatialListener
 */
AudioListener.prototype.setOrientation = function(x, y, z, xUp, yUp, zUp) {};

/**
 * @param {number} x
 * @param {number} y
 * @param {number} z
 * @deprecated Use SpatialListener
 */
AudioListener.prototype.setVelocity = function(x, y, z) {};

/**
 * @constructor
 * @extends {AudioNode}
 */
function SpatialPannerNode() {}

/** @type {number} */
SpatialPannerNode.prototype.coneInnerAngle;

/** @type {number} */
SpatialPannerNode.prototype.coneOuterAngle;

/** @type {number} */
SpatialPannerNode.prototype.coneOuterGain;

/**
 * @type {string}
 * See https://www.w3.org/TR/webaudio/#the-pannernode-interface for valid values
 */
SpatialPannerNode.prototype.distanceModel;

/** @type {number} */
SpatialPannerNode.prototype.maxDistance;

/** @type {!AudioParam} */
SpatialPannerNode.prototype.orientationX;

/** @type {!AudioParam} */
SpatialPannerNode.prototype.orientationY;

/** @type {!AudioParam} */
SpatialPannerNode.prototype.orientationZ;

/**
 * @type {string}
 * See https://www.w3.org/TR/webaudio/#the-pannernode-interface for valid values
 */
SpatialPannerNode.prototype.panningModel;

/** @type {!AudioParam} */
SpatialPannerNode.prototype.positionX;

/** @type {!AudioParam} */
SpatialPannerNode.prototype.positionY;

/** @type {!AudioParam} */
SpatialPannerNode.prototype.positionZ;

/** @type {number} */
SpatialPannerNode.prototype.refDistance;

/** @type {number} */
SpatialPannerNode.prototype.rolloffFactor;

/**
 * @constructor
 */
function SpatialListener() {}

/** @type {!AudioParam} */
SpatialListener.prototype.forwardX;

/** @type {!AudioParam} */
SpatialListener.prototype.forwardY;

/** @type {!AudioParam} */
SpatialListener.prototype.forwardZ;

/** @type {!AudioParam} */
SpatialListener.prototype.positionX;

/** @type {!AudioParam} */
SpatialListener.prototype.positionY;

/** @type {!AudioParam} */
SpatialListener.prototype.positionZ;

/** @type {!AudioParam} */
SpatialListener.prototype.upX;

/** @type {!AudioParam} */
SpatialListener.prototype.upY;

/** @type {!AudioParam} */
SpatialListener.prototype.upZ;

/**
 * @constructor
 * @extends {AudioNode}
 * @see http://webaudio.github.io/web-audio-api/#the-stereopannernode-interface
 */
function StereoPannerNode() {}

/** @type {!AudioParam} */
StereoPannerNode.prototype.pan;

/**
 * @constructor
 * @extends {AudioNode}
 */
function ConvolverNode() {}

/** @type {?AudioBuffer} */
ConvolverNode.prototype.buffer;

/** @type {boolean} */
ConvolverNode.prototype.normalize;

/**
 * @constructor
 * @extends {AudioNode}
 */
var AnalyserNode = function() {};

/**
 * @param {!Float32Array} array
 */
AnalyserNode.prototype.getFloatFrequencyData = function(array) {};

/**
 * @param {!Uint8Array} array
 */
AnalyserNode.prototype.getByteFrequencyData = function(array) {};

/**
 * @param {!Uint8Array} array
 */
AnalyserNode.prototype.getByteTimeDomainData = function(array) {};

/**
 * @param {!Float32Array} array
 */
AnalyserNode.prototype.getFloatTimeDomainData = function(array) {};

/** @type {number} */
AnalyserNode.prototype.fftSize;

/** @type {number} */
AnalyserNode.prototype.frequencyBinCount;

/** @type {number} */
AnalyserNode.prototype.minDecibels;

/** @type {number} */
AnalyserNode.prototype.maxDecibels;

/** @type {number} */
AnalyserNode.prototype.smoothingTimeConstant;

/**
 * @constructor
 * @extends {AnalyserNode}
 * @deprecated Use AnalyserNode
 *
 * This constructor has been added for backwards compatibility.
 */
var RealtimeAnalyserNode = function() {};

/**
 * @constructor
 * @extends {AudioNode}
 */
function ChannelSplitterNode() {}

/**
 * @constructor
 * @extends {ChannelSplitterNode}
 * @deprecated Use ChannelSplitterNode
 *
 * This constructor has been added for backwards compatibility.
 */
function AudioChannelSplitter() {}

/**
 * @constructor
 * @extends {AudioNode}
 */
function ChannelMergerNode() {}

/**
 * @constructor
 * @extends {ChannelMergerNode}
 * @deprecated Use ChannelMergerNode
 *
 * This constructor has been added for backwards compatibility.
 */
function AudioChannelMerger() {}

/**
 * @constructor
 * @extends {AudioNode}
 */
function DynamicsCompressorNode() {}

/** @type {!AudioParam} */
DynamicsCompressorNode.prototype.threshold;

/** @type {!AudioParam} */
DynamicsCompressorNode.prototype.knee;

/** @type {!AudioParam} */
DynamicsCompressorNode.prototype.ratio;

/** @type {number} */
DynamicsCompressorNode.prototype.reduction;

/** @type {!AudioParam} */
DynamicsCompressorNode.prototype.attack;

/** @type {!AudioParam} */
DynamicsCompressorNode.prototype.release;

/**
 * @constructor
 * @extends {AudioNode}
 */
function BiquadFilterNode() {}

/**
 * A read-able and write-able string that specifies the type of the filter.
 * See http://webaudio.github.io/web-audio-api/#the-biquadfilternode-interface
 * for valid values.
 * @type {string}
 */
BiquadFilterNode.prototype.type;

/** @type {!AudioParam} */
BiquadFilterNode.prototype.frequency;

/** @type {!AudioParam} */
BiquadFilterNode.prototype.detune;

/** @type {!AudioParam} */
BiquadFilterNode.prototype.Q;

/** @type {!AudioParam} */
BiquadFilterNode.prototype.gain;
/**
 * @param {Float32Array} frequencyHz
 * @param {Float32Array} magResponse
 * @param {Float32Array} phaseResponse
 * @return {undefined}
 */
BiquadFilterNode.prototype.getFrequencyResponse = function(
    frequencyHz, magResponse, phaseResponse) {};

/**
 * @constructor
 * @extends {AudioNode}
 */
function IIRFilterNode() {}

/**
 * @param {!Float32Array} frequencyHz
 * @param {!Float32Array} magResponse
 * @param {!Float32Array} phaseResponse
 * @return {undefined}
 */
IIRFilterNode.prototype.getFrequencyResponse = function(
    frequencyHz, magResponse, phaseResponse) {};

/**
 * @constructor
 * @extends {AudioNode}
 */
function WaveShaperNode() {}

/** @type {Float32Array} */
WaveShaperNode.prototype.curve;

/** @type {string} */
WaveShaperNode.prototype.oversample;

/**
 * @deprecated
 * @constructor
 */
function WaveTable() {}

/**
 * @constructor
 * @extends {AudioNode}
 */
function OscillatorNode() {}

/**
 * @type {string}
 * See https://www.w3.org/TR/webaudio/#the-oscillatornode-interface for valid values
 */
OscillatorNode.prototype.type;

/**
 * @deprecated
 * @type {number}
 */
OscillatorNode.prototype.playbackState;

/** @type {!AudioParam} */
OscillatorNode.prototype.frequency;

/** @type {!AudioParam} */
OscillatorNode.prototype.detune;

/**
 * @param {number=} when
 */
OscillatorNode.prototype.start = function(when) {};

/**
 * @param {number=} when
 */
OscillatorNode.prototype.stop = function(when) {};

/**
 * @deprecated
 * @param {!WaveTable} waveTable
 */
OscillatorNode.prototype.setWaveTable = function(waveTable) {};

/**
 * @param {!PeriodicWave} periodicWave
 */
OscillatorNode.prototype.setPeriodicWave = function(periodicWave) {};

/** @type {?function(!Event)} */
OscillatorNode.prototype.onended;

/**
 * @constructor
 */
function PeriodicWave() {}

/**
 * @record
 * @see https://www.w3.org/TR/webaudio/#dictdef-constantsourceoptions
 */
function ConstantSourceOptions() {};

/** @const {(number|undefined)} */
ConstantSourceOptions.offset;

/**
 * @param {!BaseAudioContext} context
 * @param {!ConstantSourceOptions=} options
 * @constructor
 * @extends {AudioNode}
 * @see https://www.w3.org/TR/webaudio/#ConstantSourceNode
 */
function ConstantSourceNode(context, options) {}

/**
 * @param {number=} when
 */
ConstantSourceNode.prototype.start = function(when) {};

/**
 * @param {number=} when
 */
ConstantSourceNode.prototype.stop = function(when) {};

/** @type {!AudioParam} */
ConstantSourceNode.prototype.offset;

/**
 * @constructor
 * @extends {AudioNode}
 */
function MediaStreamAudioSourceNode() {}

/**
 * @constructor
 * @extends {AudioNode}
 */
function MediaStreamAudioDestinationNode() {}

/** @type {!MediaStream} */
MediaStreamAudioDestinationNode.prototype.stream;

/**
 * @constructor
 * @see https://www.w3.org/TR/webaudio/#audioworklet
 * @implements {Worklet}
 */
function AudioWorklet() {}

/**
 * @constructor
 * @see https://www.w3.org/TR/webaudio/#audioworkletglobalscope
 * @implements {WorkletGlobalScope}
 */
function AudioWorkletGlobalScope() {}

/** @type {number} */
AudioWorkletGlobalScope.prototype.currentFrame;

/** @type {number} */
AudioWorkletGlobalScope.prototype.currentTime;

/** @type {number} */
AudioWorkletGlobalScope.prototype.sampleRate;

/**
 * @param {!string} name
 * @param {!function()} processorCtor
 */
AudioWorkletGlobalScope.prototype.registerProcessor = function(
    name, processorCtor) {};

/**
 * @constructor
 * @extends {AudioNode}
 * @param {!BaseAudioContext} context
 * @param {string} name
 * @param {!AudioWorkletNodeOptions=} options
 * @see https://www.w3.org/TR/webaudio/#audioworkletnode
 */
function AudioWorkletNode(context, name, options) {}

/** @type {!EventListener|function()} */
AudioWorkletNode.prototype.onprocesserror;

/** @type {!Object<string, !AudioParam>} */
AudioWorkletNode.prototype.parameters;

/** @type {!MessagePort} */
AudioWorkletNode.prototype.port;

/**
 * @record
 * @see https://webaudio.github.io/web-audio-api/#dictdef-audioworkletnodeoptions
 */
function AudioWorkletNodeOptions() {};

/** @type {number|undefined} */
AudioWorkletNodeOptions.prototype.numberOfInputs;

/** @type {number|undefined} */
AudioWorkletNodeOptions.prototype.numberOfOutputs;

/** @type {!Array<number>|undefined} */
AudioWorkletNodeOptions.prototype.outputChannelCount;

/** @type {!Object<string, number>|undefined} */
AudioWorkletNodeOptions.prototype.parameterData;

/** @type {?|undefined} */
AudioWorkletNodeOptions.prototype.processorOptions;

/**
 * @constructor
 * @param {!AudioWorkletNodeOptions=} options
 * @see https://www.w3.org/TR/webaudio/#audioworkletprocessor
 */
function AudioWorkletProcessor(options) {}

/** @type {!MessagePort} */
AudioWorkletProcessor.prototype.port;

/**
 * @param {!Array<!Array<!Float32Array>>} inputs
 * @param {!Array<!Array<!Float32Array>>} outputs
 * @param {!Object<string, !Float32Array>} parameters
 * @return {boolean}
 */
AudioWorkletProcessor.prototype.process = function(
    inputs, outputs, parameters) {};

/**
 * @record
 * @see https://www.w3.org/TR/webaudio/#dictdef-audioparamdescriptor
 */
function AudioParamDescriptor() {};

/**
 * @type {string}
 * See https://www.w3.org/TR/webaudio/#dom-audioparam-automationrate for valid
 * values.
 */
AudioParamDescriptor.prototype.automationRate;

/** @type {number} */
AudioParamDescriptor.prototype.defaultValue;

/** @type {number} */
AudioParamDescriptor.prototype.maxValue;

/** @type {number} */
AudioParamDescriptor.prototype.minValue;

/** @type {string} */
AudioParamDescriptor.prototype.name;
/*
 * Copyright 2015 The Closure Compiler Authors
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/**
 * @fileoverview Definitions for W3C's Battery Status API.
 *  The whole file has been fully type annotated. Created from
 *  https://www.w3.org/TR/battery-status/
 *
 * @externs
 */



/**
 * @interface
 * @extends {EventTarget}
 */
function BatteryManager() {}


/**
 * @type {boolean}
 */
BatteryManager.prototype.charging;


/**
 * @type {number}
 */
BatteryManager.prototype.chargingTime;


/**
 * @type {number}
 */
BatteryManager.prototype.dischargingTime;


/**
 * @type {number}
 */
BatteryManager.prototype.level;


/**
 * @type {?function(!Event): void}
 */
BatteryManager.prototype.onchargingchange;


/**
 * @type {?function(!Event): void}
 */
BatteryManager.prototype.onchargingtimechange;


/**
 * @type {?function(!Event): void}
 */
BatteryManager.prototype.ondischargingtimechange;


/**
 * @type {?function(!Event): void}
 */
BatteryManager.prototype.onlevelchange;

/**
 * @return {!Promise<!BatteryManager>}
 * @see http://www.w3.org/TR/battery-status/
 */
Navigator.prototype.getBattery = function() {};
/*
 * Copyright 2015 The Closure Compiler Authors
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/**
 * @fileoverview Definitions for W3C's ClipboardEvent API.
 * @see http://www.w3.org/TR/clipboard-apis/
 *
 * @externs
 */



/**
 * @record
 * @extends {EventInit}
 * @see https://www.w3.org/TR/clipboard-apis/#dfn-eventinit
 */
function ClipboardEventInit() {}

/** @type {?DataTransfer|undefined} */
ClipboardEventInit.prototype.clipboardData;


/**
 * @constructor
 * @extends {Event}
 * @param {string} type
 * @param {ClipboardEventInit=} opt_eventInitDict
 */
function ClipboardEvent(type, opt_eventInitDict) {}


/** @const {?DataTransfer} */
ClipboardEvent.prototype.clipboardData;
/*
 * Copyright 2018 The Closure Compiler Authors.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/**
 * @fileoverview Declaration of the asynchronous clipboard Web API.
 * @externs
 */

/**
 * @constructor
 * @see https://w3c.github.io/clipboard-apis/#clipboard-interface
 */
function Clipboard() {}

/**
 * @return {!Promise<!Array<!ClipboardItem>>}
 */
Clipboard.prototype.read = function() {};

/**
 * @return {!Promise<string>}
 */
Clipboard.prototype.readText = function() {};

/**
 * @param {!Array<!ClipboardItem>} data
 * @return {!Promise<void>}
 */
Clipboard.prototype.write = function(data) {};

/**
 * @param {string} text
 * @return {!Promise<void>}
 */
Clipboard.prototype.writeText = function(text) {};

/** @const {!Clipboard} */
Navigator.prototype.clipboard;

/**
 * @constructor
 * @param {!Object<string, (!string|!Blob|!Promise<!string>|!Promise<!Blob>)>}
 *     items
 * @param {ClipboardItemOptions=} options
 */
function ClipboardItem(items, options) {}

/** @type {!Array<!string>} */
ClipboardItem.prototype.types;

/**
 * @param {string} type
 * @return {!Promise<!Blob>}
 */
ClipboardItem.prototype.getType = function(type) {};

/** @record */
function ClipboardItemOptions() {}

/** @type {string|undefined} */
ClipboardItemOptions.prototype.presentationStyle;
/*
 * Copyright 2018 The Closure Compiler Authors.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/**
 * @fileoverview Definitions for W3C's Composition Events specification.
 * @externs
 */

/**
 * The `CompositionEvent` interface provides specific contextual information
 * associated with Composition Events.
 * @see https://www.w3.org/TR/uievents/#interface-compositionevent
 * @record
 * @extends {UIEventInit}
 */
function CompositionEventInit() {}

/**
 * `data` holds the value of the characters generated by an input method. This
 * MAY be a single Unicode character or a non-empty sequence of Unicode
 * characters. This attribute MAY be the empty string. The un-initialized value
 * of this attribute MUST be "" (the empty string).
 * @type {string}
 */
CompositionEventInit.prototype.data;

/**
 * Composition Events provide a means for inputing text in a supplementary or
 * alternate manner than by Keyboard Events, in order to allow the use of
 * characters that might not be commonly available on keyboard. For example,
 * Composition Events might be used to add accents to characters despite their
 * absence from standard US keyboards, to build up logograms of many Asian
 * languages from their base components or categories, to select word choices
 * from a combination of key presses on a mobile device keyboard, or to convert
 * voice commands into text using a speech recognition processor.
 *
 * Conceptually, a composition session consists of one `compositionstart` event,
 * one or more `compositionupdate` events, and one `compositionend` event, with
 * the value of the data attribute persisting between each stage of this event
 * chain during each session.
 *
 * Not all IME systems or devices expose the necessary data to the DOM, so the
 * active composition string (the "Reading Window" or "candidate selection" menu
 * option) might not be available through this interface, in which case the
 * selection MAY be represented by the empty string.
 *
 * @see https://www.w3.org/TR/uievents/#events-compositionevents
 * @param {string} type
 * @param {!CompositionEventInit=} opt_eventInitDict
 * @extends {UIEvent}
 * @constructor
 */
function CompositionEvent(type, opt_eventInitDict) {}

/**
 * Initializes attributes of a `CompositionEvent` object. This method has the
 * same behavior as `UIEvent.initUIEvent()`. The value of `detail` remains
 * undefined.
 *
 * @see https://www.w3.org/TR/uievents/#idl-interface-CompositionEvent-initializers
 * @param {string} typeArg
 * @param {boolean} canBubbleArg
 * @param {boolean} cancelableArg
 * @param {?Window} viewArg
 * @param {string} dataArg
 * @param {string} localeArg
 * @return {undefined}
 */
CompositionEvent.prototype.initCompositionEvent = function(
    typeArg, canBubbleArg, cancelableArg, viewArg, dataArg, localeArg) {};

/**
 * @type {string}
 */
CompositionEvent.prototype.data;

/**
 * @type {string}
 */
CompositionEvent.prototype.locale;
/*
 * Copyright 2010 The Closure Compiler Authors
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/**
 * @fileoverview Definitions for W3C's CSS 3D Transforms specification.
 *  The whole file has been fully type annotated. Created from
 *  https://dvcs.w3.org/hg/FXTF/raw-file/tip/matrix/index.html
 *
 * @externs
 */

/**
 * @constructor
 * @param {string=} opt_matrix
 * @see https://dvcs.w3.org/hg/FXTF/raw-file/tip/matrix/index.html#the-cssmatrix-interface
 */
function CSSMatrix(opt_matrix) {}

/**
 * @type {number}
 * @see https://dvcs.w3.org/hg/FXTF/raw-file/tip/matrix/index.html#three-dimensional-attributes
 */
CSSMatrix.prototype.m11;

/**
 * @type {number}
 * @see https://dvcs.w3.org/hg/FXTF/raw-file/tip/matrix/index.html#three-dimensional-attributes
 */
CSSMatrix.prototype.m12;

/**
 * @type {number}
 * @see https://dvcs.w3.org/hg/FXTF/raw-file/tip/matrix/index.html#three-dimensional-attributes
 */
CSSMatrix.prototype.m13;

/**
 * @type {number}
 * @see https://dvcs.w3.org/hg/FXTF/raw-file/tip/matrix/index.html#three-dimensional-attributes
 */
CSSMatrix.prototype.m14;

/**
 * @type {number}
 * @see https://dvcs.w3.org/hg/FXTF/raw-file/tip/matrix/index.html#three-dimensional-attributes
 */
CSSMatrix.prototype.m21;

/**
 * @type {number}
 * @see https://dvcs.w3.org/hg/FXTF/raw-file/tip/matrix/index.html#three-dimensional-attributes
 */
CSSMatrix.prototype.m22;

/**
 * @type {number}
 * @see https://dvcs.w3.org/hg/FXTF/raw-file/tip/matrix/index.html#three-dimensional-attributes
 */
CSSMatrix.prototype.m23;

/**
 * @type {number}
 * @see https://dvcs.w3.org/hg/FXTF/raw-file/tip/matrix/index.html#three-dimensional-attributes
 */
CSSMatrix.prototype.m24;

/**
 * @type {number}
 * @see https://dvcs.w3.org/hg/FXTF/raw-file/tip/matrix/index.html#three-dimensional-attributes
 */
CSSMatrix.prototype.m31;

/**
 * @type {number}
 * @see https://dvcs.w3.org/hg/FXTF/raw-file/tip/matrix/index.html#three-dimensional-attributes
 */
CSSMatrix.prototype.m32;

/**
 * @type {number}
 * @see https://dvcs.w3.org/hg/FXTF/raw-file/tip/matrix/index.html#three-dimensional-attributes
 */
CSSMatrix.prototype.m33;

/**
 * @type {number}
 * @see https://dvcs.w3.org/hg/FXTF/raw-file/tip/matrix/index.html#three-dimensional-attributes
 */
CSSMatrix.prototype.m34;

/**
 * @type {number}
 * @see https://dvcs.w3.org/hg/FXTF/raw-file/tip/matrix/index.html#three-dimensional-attributes
 */
CSSMatrix.prototype.m41;

/**
 * @type {number}
 * @see https://dvcs.w3.org/hg/FXTF/raw-file/tip/matrix/index.html#three-dimensional-attributes
 */
CSSMatrix.prototype.m42;

/**
 * @type {number}
 * @see https://dvcs.w3.org/hg/FXTF/raw-file/tip/matrix/index.html#three-dimensional-attributes
 */
CSSMatrix.prototype.m43;

/**
 * @type {number}
 * @see https://dvcs.w3.org/hg/FXTF/raw-file/tip/matrix/index.html#three-dimensional-attributes
 */
CSSMatrix.prototype.m44;

/**
 * @param {string} string
 * @return {void}
 */
CSSMatrix.prototype.setMatrixValue = function(string) {};

/**
 * @param {!CSSMatrix} secondMatrix
 * @return {!CSSMatrix}
 * @see https://dvcs.w3.org/hg/FXTF/raw-file/tip/matrix/index.html#widl-CSSMatrix-multiply-CSSMatrix-CSSMatrix-other
 */
CSSMatrix.prototype.multiply = function(secondMatrix) {};

/**
 * @return {CSSMatrix} Returns void if the matrix is non-invertable.
 * @see https://dvcs.w3.org/hg/FXTF/raw-file/tip/matrix/index.html#widl-CSSMatrix-inverse-CSSMatrix
 */
CSSMatrix.prototype.inverse = function() {};

/**
 * @param {number=} opt_x Defaults to 0.
 * @param {number=} opt_y Defaults to 0.
 * @param {number=} opt_z Defaults to 0.
 * @return {!CSSMatrix}
 * @see https://dvcs.w3.org/hg/FXTF/raw-file/tip/matrix/index.html#widl-CSSMatrix-translate-CSSMatrix-unrestricted-double-tx-unrestricted-double-ty-unrestricted-double-tz
 */
CSSMatrix.prototype.translate = function(opt_x, opt_y, opt_z) {};

/**
 * @param {number=} opt_scaleX Defaults to 1.
 * @param {number=} opt_scaleY Defaults to scaleX.
 * @param {number=} opt_scaleZ Defaults to 1.
 * @return {!CSSMatrix}
 * @see https://dvcs.w3.org/hg/FXTF/raw-file/tip/matrix/index.html#widl-CSSMatrix-scale-CSSMatrix-unrestricted-double-scale-unrestricted-double-originX-unrestricted-double-originY
 */
CSSMatrix.prototype.scale = function(opt_scaleX, opt_scaleY, opt_scaleZ) {};

/**
 * @param {number=} opt_rotX Defaults to 0.
 * @param {number=} opt_rotY Defaults to 0.
 * @param {number=} opt_rotZ Defaults to rotX if rotY is not defined, else 0.
 * @return {!CSSMatrix}
 * @see https://dvcs.w3.org/hg/FXTF/raw-file/tip/matrix/index.html#widl-CSSMatrix-rotate-CSSMatrix-unrestricted-double-angle-unrestricted-double-originX-unrestricted-double-originY
 */
CSSMatrix.prototype.rotate = function(opt_rotX, opt_rotY, opt_rotZ) {};

/**
 * @param {number=} opt_x Defaults to 0.
 * @param {number=} opt_y Defaults to 0.
 * @param {number=} opt_z Defaults to 0.
 * @param {number=} opt_angle Defaults to 0.
 * @return {!CSSMatrix}
 * @see https://dvcs.w3.org/hg/FXTF/raw-file/tip/matrix/index.html#widl-CSSMatrix-rotateAxisAngle-CSSMatrix-unrestricted-double-x-unrestricted-double-y-unrestricted-double-z-unrestricted-double-angle
 */
CSSMatrix.prototype.rotateAxisAngle =
    function(opt_x, opt_y, opt_z, opt_angle) {};

/**
 * @constructor
 * @param {string=} opt_matrix
 * @extends {CSSMatrix}
 * @see http://developer.apple.com/safari/library/documentation/AudioVideo/Reference/WebKitCSSMatrixClassReference/WebKitCSSMatrix/WebKitCSSMatrix.html#//apple_ref/javascript/instm/WebKitCSSMatrix/setMatrixValue
 */
function WebKitCSSMatrix(opt_matrix) {}

/**
 * @constructor
 * @param {string=} opt_matrix
 * @extends {CSSMatrix}
 * @see http://msdn.microsoft.com/en-us/library/windows/apps/hh453593.aspx
 */
function MSCSSMatrix(opt_matrix) {}
/*
 * Copyright 2008 The Closure Compiler Authors
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/**
 * @fileoverview Definitions for W3C's CSS specification
 *  The whole file has been fully type annotated.
 *  http://www.w3.org/TR/DOM-Level-2-Style/css.html
 * @externs
 * @author stevey@google.com (Steve Yegge)
 *
 * TODO(nicksantos): When there are no more occurrences of w3c_range.js and
 * gecko_dom.js being included directly in BUILD files, bug dbeam to split the
 * bottom part of this file into a separate externs.
 */

/**
 * @constructor
 * @see http://www.w3.org/TR/DOM-Level-2-Style/stylesheets.html#StyleSheets-StyleSheet
 */
function StyleSheet() {}

/**
 * @type {string}
 * @see http://www.w3.org/TR/DOM-Level-2-Style/stylesheets.html#StyleSheets-StyleSheet-type
 */
StyleSheet.prototype.type;

/**
 * @type {boolean}
 * @see http://www.w3.org/TR/DOM-Level-2-Style/stylesheets.html#StyleSheets-StyleSheet-disabled
 */
StyleSheet.prototype.disabled;

/**
 * @type {Node}
 * @see http://www.w3.org/TR/DOM-Level-2-Style/stylesheets.html#StyleSheets-StyleSheet-owner
 */
StyleSheet.prototype.ownerNode;

/**
 * @type {StyleSheet}
 * @see http://www.w3.org/TR/DOM-Level-2-Style/stylesheets.html#StyleSheets-StyleSheet-parentStyleSheet
 */
StyleSheet.prototype.parentStyleSheet;

/**
 * @type {string}
 * @see http://www.w3.org/TR/DOM-Level-2-Style/stylesheets.html#StyleSheets-StyleSheet-href
 */
StyleSheet.prototype.href;

/**
 * @type {string}
 * @see http://www.w3.org/TR/DOM-Level-2-Style/stylesheets.html#StyleSheets-StyleSheet-title
 */
StyleSheet.prototype.title;

/**
 * @type {MediaList}
 * @see http://www.w3.org/TR/DOM-Level-2-Style/stylesheets.html#StyleSheets-StyleSheet-media
 */
StyleSheet.prototype.media;

/**
 * @constructor
 * @implements {IArrayLike<!StyleSheet>}
 * @see http://www.w3.org/TR/DOM-Level-2-Style/stylesheets.html#StyleSheets-StyleSheetList
 */
function StyleSheetList() {}

/**
 * @type {number}
 * @see http://www.w3.org/TR/DOM-Level-2-Style/stylesheets.html#StyleSheets-StyleSheetList-length
 */
StyleSheetList.prototype.length;

/**
 * @param {number} index
 * @return {StyleSheet}
 * @see http://www.w3.org/TR/DOM-Level-2-Style/stylesheets.html#StyleSheets-StyleSheetList-item
 */
StyleSheetList.prototype.item = function(index) {};

/**
 * @constructor
 * @implements {IArrayLike<!MediaList>}
 * @see http://www.w3.org/TR/DOM-Level-2-Style/stylesheets.html#StyleSheets-MediaList
 */
function MediaList() {}

/**
 * @type {string}
 * @see http://www.w3.org/TR/DOM-Level-2-Style/stylesheets.html#StyleSheets-MediaList-mediaText
 */
MediaList.prototype.mediaText;

/**
 * @type {number}
 * @see http://www.w3.org/TR/DOM-Level-2-Style/stylesheets.html#StyleSheets-MediaList-length
 */
MediaList.prototype.length;

/**
 * @param {number} index
 * @return {string}
 * @see http://www.w3.org/TR/DOM-Level-2-Style/stylesheets.html#StyleSheets-MediaList-item
 */
MediaList.prototype.item = function(index) {};

/**
 * @interface
 * @see http://www.w3.org/TR/DOM-Level-2-Style/stylesheets.html#StyleSheets-LinkStyle
 */
function LinkStyle() {}

/**
 * @type {StyleSheet}
 * @see http://www.w3.org/TR/DOM-Level-2-Style/stylesheets.html#StyleSheets-LinkStyle-sheet
 */
LinkStyle.prototype.sheet;

/**
 * @constructor
 * @see http://www.w3.org/TR/DOM-Level-2-Style/stylesheets.html#StyleSheets-StyleSheet-DocumentStyle
 */
function DocumentStyle() {}

/**
 * @type {StyleSheetList}
 * @see http://www.w3.org/TR/DOM-Level-2-Style/stylesheets.html#StyleSheets-StyleSheet-DocumentStyle-styleSheets
 */
DocumentStyle.prototype.styleSheets;

/**
 * Type of the `options` parameter for the `CSSStyleSheet` constructor.
 *
 * The actual property definitions are in wicg_constructable_stylesheets.js,
 * which must be explicitly passed to the compiler in order to use them. This
 * record is defined here since CSSStyleSheet cannot be redefined with its optional
 * init parameter.
 * @record
 * @see https://wicg.github.io/construct-stylesheets/#dictdef-cssstylesheetinit
 */
function CSSStyleSheetInit() {}

/**
 * @constructor
 * @extends {StyleSheet}
 * @param {CSSStyleSheetInit=} options
 * @see http://www.w3.org/TR/DOM-Level-2-Style/css.html#CSS-CSSStyleSheet
 * @see https://wicg.github.io/construct-stylesheets/#dom-cssstylesheet-cssstylesheet
 */
function CSSStyleSheet(options) {}

/**
 * @type {CSSRule}
 * @see http://www.w3.org/TR/DOM-Level-2-Style/css.html#CSS-CSSStyleSheet-ownerRule
 */
CSSStyleSheet.prototype.ownerRule;

/**
 * @type {CSSRuleList}
 * @see http://www.w3.org/TR/DOM-Level-2-Style/css.html#CSS-CSSStyleSheet-cssRules
 */
CSSStyleSheet.prototype.cssRules;

/**
 * @param {string} rule
 * @param {number} index
 * @return {number}
 * @see http://www.w3.org/TR/DOM-Level-2-Style/css.html#CSS-CSSStyleSheet-insertRule
 */
CSSStyleSheet.prototype.insertRule = function(rule, index) {};

/**
 * @param {number} index
 * @see http://www.w3.org/TR/DOM-Level-2-Style/css.html#CSS-CSSStyleSheet-deleteRule
 * @return {undefined}
 */
CSSStyleSheet.prototype.deleteRule = function(index) {};

/**
 * @constructor
 * @implements {IArrayLike<!CSSRule>}
 * @see http://www.w3.org/TR/DOM-Level-2-Style/css.html#CSS-CSSRuleList
 */
function CSSRuleList() {}

/**
 * @type {number}
 * @see http://www.w3.org/TR/DOM-Level-2-Style/css.html#CSS-CSSRuleList-length
 */
CSSRuleList.prototype.length;

/**
 * @param {number} index
 * @return {CSSRule}
 * @see http://www.w3.org/TR/DOM-Level-2-Style/css.html#CSS-CSSRuleList-item
 */
CSSRuleList.prototype.item = function(index) {};

/**
 * @constructor
 * @see http://www.w3.org/TR/DOM-Level-2-Style/css.html#CSS-CSSRule
 */
function CSSRule() {}

/**
 * @type {number}
 * @see http://www.w3.org/TR/DOM-Level-2-Style/css.html#CSS-CSSRule-ruleType
 */
CSSRule.prototype.type;

/**
 * @type {string}
 * @see http://www.w3.org/TR/DOM-Level-2-Style/css.html#CSS-CSSRule-cssText
 */
CSSRule.prototype.cssText;

/**
 * @type {CSSStyleSheet}
 * @see http://www.w3.org/TR/DOM-Level-2-Style/css.html#CSS-CSSRule-sheet
 */
CSSRule.prototype.parentStyleSheet;

/**
 * @type {CSSRule}
 * @see http://www.w3.org/TR/DOM-Level-2-Style/css.html#CSS-CSSRule-parentRule
 */
CSSRule.prototype.parentRule;

/**
 * @type {CSSStyleDeclaration}
 * @see http://www.w3.org/TR/DOM-Level-2-Style/css.html#CSS-CSSStyleRule
 */
CSSRule.prototype.style;

/**
 * Indicates that the rule is a {@see CSSUnknownRule}.
 * @const {number}
 * @see http://www.w3.org/TR/DOM-Level-2-Style/css.html#CSS-CSSRule-ruleType
 */
CSSRule.UNKNOWN_RULE;

/**
 * Indicates that the rule is a {@see CSSStyleRule}.
 * @const {number}
 * @see http://www.w3.org/TR/DOM-Level-2-Style/css.html#CSS-CSSRule-ruleType
 */
CSSRule.STYLE_RULE;

/**
 * Indicates that the rule is a {@see CSSCharsetRule}.
 * @const {number}
 * @see http://www.w3.org/TR/DOM-Level-2-Style/css.html#CSS-CSSRule-ruleType
 */
CSSRule.CHARSET_RULE;

/**
 * Indicates that the rule is a {@see CSSImportRule}.
 * @const {number}
 * @see http://www.w3.org/TR/DOM-Level-2-Style/css.html#CSS-CSSRule-ruleType
 */
CSSRule.IMPORT_RULE;

/**
 * Indicates that the rule is a {@see CSSMediaRule}.
 * @const {number}
 * @see http://www.w3.org/TR/DOM-Level-2-Style/css.html#CSS-CSSRule-ruleType
 */
CSSRule.MEDIA_RULE;

/**
 * Indicates that the rule is a {@see CSSFontFaceRule}.
 * @const {number}
 * @see http://www.w3.org/TR/DOM-Level-2-Style/css.html#CSS-CSSRule-ruleType
 */
CSSRule.FONT_FACE_RULE;

/**
 * Indicates that the rule is a {@see CSSPageRule}.
 * @const {number}
 * @see http://www.w3.org/TR/DOM-Level-2-Style/css.html#CSS-CSSRule-ruleType
 */
CSSRule.PAGE_RULE;

/**
 * @constructor
 * @extends {CSSRule}
 * @see http://www.w3.org/TR/DOM-Level-2-Style/css.html#CSS-CSSStyleRule
 */
function CSSStyleRule() {}

/**
 * @type {string}
 * @see http://www.w3.org/TR/DOM-Level-2-Style/css.html#CSS-CSSStyleRule-selectorText
 */
CSSStyleRule.prototype.selectorText;

/**
 * @type {CSSStyleDeclaration}
 * @see http://www.w3.org/TR/DOM-Level-2-Style/css.html#CSS-CSSStyleRule-style
 */
CSSStyleRule.prototype.style;

/**
 * @constructor
 * @extends {CSSRule}
 * @see http://www.w3.org/TR/DOM-Level-2-Style/css.html#CSS-CSSMediaRule
 */
function CSSMediaRule() {}

/**
 * @type {MediaList}
 * @see http://www.w3.org/TR/DOM-Level-2-Style/css.html#CSS-CSSMediaRule-mediaTypes
 */
CSSMediaRule.prototype.media;

/**
 * @type {CSSRuleList}
 * @see http://www.w3.org/TR/DOM-Level-2-Style/css.html#CSS-CSSMediaRule-cssRules
 */
CSSMediaRule.prototype.cssRules;

/**
 * @param {string} rule
 * @param {number} index
 * @return {number}
 * @see http://www.w3.org/TR/DOM-Level-2-Style/css.html#CSS-CSSMediaRule-insertRule
 */
CSSMediaRule.prototype.insertRule = function(rule, index) {};

/**
 * @param {number} index
 * @see http://www.w3.org/TR/DOM-Level-2-Style/css.html#CSS-CSSMediaRule-deleteRule
 * @return {undefined}
 */
CSSMediaRule.prototype.deleteRule = function(index) {};

/**
 * @constructor
 * @extends {CSSRule}
 * @see http://www.w3.org/TR/DOM-Level-2-Style/css.html#CSS-CSSFontFaceRule
 */
function CSSFontFaceRule() {}

/**
 * @type {CSSStyleDeclaration}
 * @see http://www.w3.org/TR/DOM-Level-2-Style/css.html#CSS-CSSFontFaceRule-style
 */
CSSFontFaceRule.prototype.style;

/**
 * @constructor
 * @extends {CSSRule}
 * @see http://www.w3.org/TR/DOM-Level-2-Style/css.html#CSS-CSSPageRule
 */
function CSSPageRule() {}

/**
 * @type {string}
 * @see http://www.w3.org/TR/DOM-Level-2-Style/css.html#CSS-CSSPageRule-name
 */
CSSPageRule.prototype.selectorText;

/**
 * @type {CSSStyleDeclaration}
 * @see http://www.w3.org/TR/DOM-Level-2-Style/css.html#CSS-CSSPageRule-style
 */
CSSPageRule.prototype.style;

/**
 * @constructor
 * @extends {CSSRule}
 * @see http://www.w3.org/TR/DOM-Level-2-Style/css.html#CSS-CSSImportRule
 */
function CSSImportRule() {}

/**
 * @type {string}
 * @see http://www.w3.org/TR/DOM-Level-2-Style/css.html#CSS-CSSImportRule-href
 */
CSSImportRule.prototype.href;

/**
 * @type {MediaList}
 * @see http://www.w3.org/TR/DOM-Level-2-Style/css.html#CSS-CSSImportRule-media
 */
CSSImportRule.prototype.media;

/**
 * @type {CSSStyleSheet}
 * @see http://www.w3.org/TR/DOM-Level-2-Style/css.html#CSS-CSSImportRule-styleSheet
 */
CSSImportRule.prototype.styleSheet;

/**
 * @constructor
 * @extends {CSSRule}
 * @see http://www.w3.org/TR/DOM-Level-2-Style/css.html#CSS-CSSCharsetRule
 */
function CSSCharsetRule() {}

/**
 * @type {string}
 * @see http://www.w3.org/TR/DOM-Level-2-Style/css.html#CSS-CSSCharsetRule-encoding
 */
CSSCharsetRule.prototype.encoding;

/**
 * @constructor
 * @extends {CSSRule}
 * @see http://www.w3.org/TR/DOM-Level-2-Style/css.html#CSS-CSSUnknownRule
 */
function CSSUnknownRule() {}

/**
 * @constructor
 * @extends {CSSProperties}
 * @implements {IObject<(string|number), string>}
 * @implements {IArrayLike<string>}
 * @implements {Iterable<string>}
 * @see http://www.w3.org/TR/DOM-Level-2-Style/css.html#CSS-CSSStyleDeclaration
 */
function CSSStyleDeclaration() {}

/**
 * @type {string}
 * @see http://www.w3.org/TR/DOM-Level-2-Style/css.html#CSS-CSSStyleDeclaration-cssText
 */
CSSStyleDeclaration.prototype.cssText;

/**
 * @type {number}
 * @see http://www.w3.org/TR/DOM-Level-2-Style/css.html#CSS-CSSStyleDeclaration-length
 */
CSSStyleDeclaration.prototype.length;

/**
 * @type {CSSRule}
 * @see http://www.w3.org/TR/DOM-Level-2-Style/css.html#CSS-CSSStyleDeclaration-parentRule
 */
CSSStyleDeclaration.prototype.parentRule;

/**
 * @param {string} propertyName
 * @return {CSSValue}
 * @see http://www.w3.org/TR/DOM-Level-2-Style/css.html#CSS-CSSStyleDeclaration-getPropertyCSSValue
 */
CSSStyleDeclaration.prototype.getPropertyCSSValue = function(propertyName) {};

/**
 * @param {string} propertyName
 * @return {string}
 * @see http://www.w3.org/TR/DOM-Level-2-Style/css.html#CSS-CSSStyleDeclaration-getPropertyPriority
 */
CSSStyleDeclaration.prototype.getPropertyPriority = function(propertyName) {};

/**
 * @param {string} propertyName
 * @return {string}
 * @see http://www.w3.org/TR/DOM-Level-2-Style/css.html#CSS-CSSStyleDeclaration-getPropertyValue
 */
CSSStyleDeclaration.prototype.getPropertyValue = function(propertyName) {};

/**
 * @param {number} index
 * @return {string}
 * @see http://www.w3.org/TR/DOM-Level-2-Style/css.html#CSS-CSSStyleDeclaration-item
 */
CSSStyleDeclaration.prototype.item = function(index) {};

/**
 * @param {string} propertyName
 * @return {string}
 * @see http://www.w3.org/TR/DOM-Level-2-Style/css.html#CSS-CSSStyleDeclaration-removeProperty
 */
CSSStyleDeclaration.prototype.removeProperty = function(propertyName) {};

/**
 * @param {string} propertyName
 * @param {string} value
 * @param {string=} opt_priority
 * @return {undefined}
 * @see http://www.w3.org/TR/DOM-Level-2-Style/css.html#CSS-CSSStyleDeclaration-setProperty
 */
CSSStyleDeclaration.prototype.setProperty = function(propertyName, value, opt_priority) {};

// IE-specific

/**
 * @param {string} name
 * @param {number=} opt_flags
 * @return {string|number|boolean|null}
 * @see http://msdn.microsoft.com/en-us/library/ms536429(VS.85).aspx
 */
CSSStyleDeclaration.prototype.getAttribute = function(name, opt_flags) {};

/**
 * @param {string} name
 * @return {string|number|boolean|null}
 * @see http://msdn.microsoft.com/en-us/library/aa358797(VS.85).aspx
 */
CSSStyleDeclaration.prototype.getExpression = function(name) {};

/**
 * @param {string} name
 * @param {number=} opt_flags
 * @return {boolean}
 * @see http://msdn.microsoft.com/en-us/library/ms536696(VS.85).aspx
 */
CSSStyleDeclaration.prototype.removeAttribute =
    function(name, opt_flags) {};

/**
 * @param {string} name
 * @return {boolean}
 * @see http://msdn.microsoft.com/en-us/library/aa358798(VS.85).aspx
 */
CSSStyleDeclaration.prototype.removeExpression = function(name) {};

/**
 * @deprecated
 * @param {string} name
 * @param {*} value
 * @param {number=} opt_flags
 * @see http://msdn.microsoft.com/en-us/library/ms536739(VS.85).aspx
 * @return {undefined}
 */
CSSStyleDeclaration.prototype.setAttribute = function(name, value, opt_flags) {};

/**
 * @param {string} name
 * @param {string} expr
 * @param {string=} opt_language
 * @return {undefined}
 * @see http://msdn.microsoft.com/en-us/library/ms531196(VS.85).aspx
 */
CSSStyleDeclaration.prototype.setExpression =
    function(name, expr, opt_language) {};


/**
 * @constructor
 * @see http://www.w3.org/TR/DOM-Level-2-Style/css.html#CSS-CSSValue
 */
function CSSValue() {}

/**
 * @type {string}
 * @see http://www.w3.org/TR/DOM-Level-2-Style/css.html#CSS-CSSValue-cssText
 */
CSSValue.prototype.cssText;

/**
 * @type {number}
 * @see http://www.w3.org/TR/DOM-Level-2-Style/css.html#CSS-CSSValue-cssValueType
 */
CSSValue.prototype.cssValueType;

/**
 * @const {number}
 * @see http://www.w3.org/TR/DOM-Level-2-Style/css.html#CSS-CSSValue-types
 */
CSSValue.CSS_INHERIT;

/**
 * @const {number}
 * @see http://www.w3.org/TR/DOM-Level-2-Style/css.html#CSS-CSSValue-types
 */
CSSValue.CSS_PRIMITIVE_VALUE;

/**
 * @const {number}
 * @see http://www.w3.org/TR/DOM-Level-2-Style/css.html#CSS-CSSValue-types
 */
CSSValue.CSS_VALUE_LIST;

/**
 * @const {number}
 * @see http://www.w3.org/TR/DOM-Level-2-Style/css.html#CSS-CSSValue-types
 */
CSSValue.CSS_CUSTOM;

/**
 * @constructor
 * @extends {CSSValue}
 * @see http://www.w3.org/TR/DOM-Level-2-Style/css.html#CSS-CSSPrimitiveValue
 */
function CSSPrimitiveValue() {}

/**
 * @type {number}
 * @see http://www.w3.org/TR/DOM-Level-2-Style/css.html#CSS-CSSPrimitiveValue
 */
CSSPrimitiveValue.prototype.primitiveType;

/**
 * @const {number}
 * @see http://www.w3.org/TR/DOM-Level-2-Style/css.html#CSS-CSSPrimitiveValue
 */
CSSPrimitiveValue.CSS_UNKNOWN;

/**
 * @const {number}
 * @see http://www.w3.org/TR/DOM-Level-2-Style/css.html#CSS-CSSPrimitiveValue
 */
CSSPrimitiveValue.CSS_NUMBER;

/**
 * @const {number}
 * @see http://www.w3.org/TR/DOM-Level-2-Style/css.html#CSS-CSSPrimitiveValue
 */
CSSPrimitiveValue.CSS_PERCENTAGE;

/**
 * @const {number}
 * @see http://www.w3.org/TR/DOM-Level-2-Style/css.html#CSS-CSSPrimitiveValue
 */
CSSPrimitiveValue.CSS_EMS;

/**
 * @const {number}
 * @see http://www.w3.org/TR/DOM-Level-2-Style/css.html#CSS-CSSPrimitiveValue
 */
CSSPrimitiveValue.CSS_EXS;

/**
 * @const {number}
 * @see http://www.w3.org/TR/DOM-Level-2-Style/css.html#CSS-CSSPrimitiveValue
 */
CSSPrimitiveValue.CSS_PX;

/**
 * @const {number}
 * @see http://www.w3.org/TR/DOM-Level-2-Style/css.html#CSS-CSSPrimitiveValue
 */
CSSPrimitiveValue.CSS_CM;

/**
 * @const {number}
 * @see http://www.w3.org/TR/DOM-Level-2-Style/css.html#CSS-CSSPrimitiveValue
 */
CSSPrimitiveValue.CSS_MM;

/**
 * @const {number}
 * @see http://www.w3.org/TR/DOM-Level-2-Style/css.html#CSS-CSSPrimitiveValue
 */
CSSPrimitiveValue.CSS_IN;

/**
 * @const {number}
 * @see http://www.w3.org/TR/DOM-Level-2-Style/css.html#CSS-CSSPrimitiveValue
 */
CSSPrimitiveValue.CSS_PT;

/**
 * @const {number}
 * @see http://www.w3.org/TR/DOM-Level-2-Style/css.html#CSS-CSSPrimitiveValue
 */
CSSPrimitiveValue.CSS_PC;

/**
 * @const {number}
 * @see http://www.w3.org/TR/DOM-Level-2-Style/css.html#CSS-CSSPrimitiveValue
 */
CSSPrimitiveValue.CSS_DEG;

/**
 * @const {number}
 * @see http://www.w3.org/TR/DOM-Level-2-Style/css.html#CSS-CSSPrimitiveValue
 */
CSSPrimitiveValue.CSS_RAD;

/**
 * @const {number}
 * @see http://www.w3.org/TR/DOM-Level-2-Style/css.html#CSS-CSSPrimitiveValue
 */
CSSPrimitiveValue.CSS_GRAD;

/**
 * @const {number}
 * @see http://www.w3.org/TR/DOM-Level-2-Style/css.html#CSS-CSSPrimitiveValue
 */
CSSPrimitiveValue.CSS_MS;

/**
 * @const {number}
 * @see http://www.w3.org/TR/DOM-Level-2-Style/css.html#CSS-CSSPrimitiveValue
 */
CSSPrimitiveValue.CSS_S;

/**
 * @const {number}
 * @see http://www.w3.org/TR/DOM-Level-2-Style/css.html#CSS-CSSPrimitiveValue
 */
CSSPrimitiveValue.CSS_HZ;

/**
 * @const {number}
 * @see http://www.w3.org/TR/DOM-Level-2-Style/css.html#CSS-CSSPrimitiveValue
 */
CSSPrimitiveValue.CSS_KHZ;

/**
 * @const {number}
 * @see http://www.w3.org/TR/DOM-Level-2-Style/css.html#CSS-CSSPrimitiveValue
 */
CSSPrimitiveValue.CSS_DIMENSION;

/**
 * @const {number}
 * @see http://www.w3.org/TR/DOM-Level-2-Style/css.html#CSS-CSSPrimitiveValue
 */
CSSPrimitiveValue.CSS_STRING;

/**
 * @const {number}
 * @see http://www.w3.org/TR/DOM-Level-2-Style/css.html#CSS-CSSPrimitiveValue
 */
CSSPrimitiveValue.CSS_URI;

/**
 * @const {number}
 * @see http://www.w3.org/TR/DOM-Level-2-Style/css.html#CSS-CSSPrimitiveValue
 */
CSSPrimitiveValue.CSS_IDENT;

/**
 * @const {number}
 * @see http://www.w3.org/TR/DOM-Level-2-Style/css.html#CSS-CSSPrimitiveValue
 */
CSSPrimitiveValue.CSS_ATTR;

/**
 * @const {number}
 * @see http://www.w3.org/TR/DOM-Level-2-Style/css.html#CSS-CSSPrimitiveValue
 */
CSSPrimitiveValue.CSS_COUNTER;

/**
 * @const {number}
 * @see http://www.w3.org/TR/DOM-Level-2-Style/css.html#CSS-CSSPrimitiveValue
 */
CSSPrimitiveValue.CSS_RECT;

/**
 * @const {number}
 * @see http://www.w3.org/TR/DOM-Level-2-Style/css.html#CSS-CSSPrimitiveValue
 */
CSSPrimitiveValue.CSS_RGBCOLOR;

/**
 * @return {Counter}
 * @see http://www.w3.org/TR/DOM-Level-2-Style/css.html#CSS-CSSPrimitiveValue-getCounterValue
 * @throws DOMException {@see DomException.INVALID_ACCESS_ERR}
 */
CSSPrimitiveValue.prototype.getCounterValue = function() {};

/**
 * @param {number} unitType
 * @return {number}
 * @see http://www.w3.org/TR/DOM-Level-2-Style/css.html#CSS-CSSPrimitiveValue-getFloatValue
 * @throws DOMException {@see DomException.INVALID_ACCESS_ERR}
 */
CSSPrimitiveValue.prototype.getFloatValue = function(unitType) {};

/**
 * @return {RGBColor}
 * @see http://www.w3.org/TR/DOM-Level-2-Style/css.html#CSS-CSSPrimitiveValue-getRGBColorValue
 * @throws DOMException {@see DomException.INVALID_ACCESS_ERR}
 */
CSSPrimitiveValue.prototype.getRGBColorValue = function() {};

/**
 * @return {Rect}
 * @see http://www.w3.org/TR/DOM-Level-2-Style/css.html#CSS-CSSPrimitiveValue-getRectValue
 * @throws DOMException {@see DomException.INVALID_ACCESS_ERR}
 */
CSSPrimitiveValue.prototype.getRectValue = function() {};

/**
 * @return {string}
 * @see http://www.w3.org/TR/DOM-Level-2-Style/css.html#CSS-CSSPrimitiveValue-getStringValue
 * @throws DOMException {@see DomException.INVALID_ACCESS_ERR}
 */
CSSPrimitiveValue.prototype.getStringValue = function() {};

/**
 * @param {number} unitType
 * @param {number} floatValue
 * @return {undefined}
 * @see http://www.w3.org/TR/DOM-Level-2-Style/css.html#CSS-CSSPrimitiveValue-setFloatValue
 * @throws DOMException {@see DomException.INVALID_ACCESS_ERR},
 *                      {@see DomException.NO_MODIFICATION_ALLOWED_ERR}
 */
CSSPrimitiveValue.prototype.setFloatValue = function(unitType, floatValue) {};

/**
 * @param {number} stringType
 * @param {string} stringValue
 * @return {undefined}
 * @see http://www.w3.org/TR/DOM-Level-2-Style/css.html#CSS-CSSPrimitiveValue-setStringValue
 * @throws DOMException {@see DomException.INVALID_ACCESS_ERR},
 *                      {@see DomException.NO_MODIFICATION_ALLOWED_ERR}
 */
CSSPrimitiveValue.prototype.setStringValue = function(stringType, stringValue) {};

/**
 * @constructor
 * @extends {CSSValue}
 * @implements {IArrayLike<!CSSValue>}
 * @see http://www.w3.org/TR/DOM-Level-2-Style/css.html#CSS-CSSValueList
 */
function CSSValueList() {}

/**
 * @type {number}
 * @see http://www.w3.org/TR/DOM-Level-2-Style/css.html#CSS-CSSValueList-length
 */
CSSValueList.prototype.length;

/**
 * @param {number} index
 * @return {CSSValue}
 * @see http://www.w3.org/TR/DOM-Level-2-Style/css.html#CSS-CSSValueList-item
 */
CSSValueList.prototype.item = function(index) {};

/**
 * @constructor
 * @see http://www.w3.org/TR/DOM-Level-2-Style/css.html#CSS-RGBColor
 */
function RGBColor() {}

/**
 * @type {CSSPrimitiveValue}
 * @see http://www.w3.org/TR/DOM-Level-2-Style/css.html#CSS-RGBColor-red
 */
RGBColor.prototype.red;

/**
 * @type {CSSPrimitiveValue}
 * @see http://www.w3.org/TR/DOM-Level-2-Style/css.html#CSS-RGBColor-green
 */
RGBColor.prototype.green;

/**
 * @type {CSSPrimitiveValue}
 * @see http://www.w3.org/TR/DOM-Level-2-Style/css.html#CSS-RGBColor-blue
 */
RGBColor.prototype.blue;

/**
 * @constructor
 * @see http://www.w3.org/TR/DOM-Level-2-Style/css.html#CSS-Rect
 */
function Rect() {}

/**
 * @type {CSSPrimitiveValue}
 * @see http://www.w3.org/TR/DOM-Level-2-Style/css.html#CSS-Rect-top
 */
Rect.prototype.top;

/**
 * @type {CSSPrimitiveValue}
 * @see http://www.w3.org/TR/DOM-Level-2-Style/css.html#CSS-Rect-right
 */
Rect.prototype.right;

/**
 * @type {CSSPrimitiveValue}
 * @see http://www.w3.org/TR/DOM-Level-2-Style/css.html#CSS-Rect-bottom
 */
Rect.prototype.bottom;

/**
 * @type {CSSPrimitiveValue}
 * @see http://www.w3.org/TR/DOM-Level-2-Style/css.html#CSS-Rect-left
 */
Rect.prototype.left;

/**
 * @constructor
 * @see http://www.w3.org/TR/DOM-Level-2-Style/css.html#CSS-Counter
 */
function Counter() {}

/**
 * @type {string}
 * @see http://www.w3.org/TR/DOM-Level-2-Style/css.html#CSS-Counter-identifier
 */
Counter.prototype.identifier;

/**
 * @type {string}
 * @see http://www.w3.org/TR/DOM-Level-2-Style/css.html#CSS-Counter-listStyle
 */
Counter.prototype.listStyle;

/**
 * @type {string}
 * @see http://www.w3.org/TR/DOM-Level-2-Style/css.html#CSS-Counter-separator
 */
Counter.prototype.separator;

/**
 * @interface
 * @see http://www.w3.org/TR/DOM-Level-2-Style/css.html#CSS-ViewCSS
 */
function ViewCSS() {}

/**
 * @param {Element} elt
 * @param {?string=} opt_pseudoElt This argument is required according to the
 *     CSS2 specification, but optional in all major browsers. See the note at
 *     https://developer.mozilla.org/en-US/docs/Web/API/Window.getComputedStyle
 * @return {?CSSStyleDeclaration}
 * @see http://www.w3.org/TR/DOM-Level-2-Style/css.html#CSS-CSSview-getComputedStyle
 * @see https://bugzilla.mozilla.org/show_bug.cgi?id=548397
 */
ViewCSS.prototype.getComputedStyle = function(elt, opt_pseudoElt) {};

/**
 * @constructor
 * @see http://www.w3.org/TR/DOM-Level-2-Style/css.html#CSS-DocumentCSS
 */
function DocumentCSS() {}

/**
 * @param {Element} elt
 * @param {string} pseudoElt
 * @return {CSSStyleDeclaration}
 * @see http://www.w3.org/TR/DOM-Level-2-Style/css.html#CSS-DocumentCSS-getOverrideStyle
 */
DocumentCSS.prototype.getOverrideStyle = function(elt, pseudoElt) {};

/**
 * @constructor
 * @see http://www.w3.org/TR/DOM-Level-2-Style/css.html#CSS-DOMImplementationCSS
 */
function DOMImplementationCSS() {}

/**
 * @param {string} title
 * @param {string} media
 * @return {CSSStyleSheet}
 * @see http://www.w3.org/TR/DOM-Level-2-Style/css.html#CSS-DOMImplementationCSS-createCSSStyleSheet
 * @throws DOMException {@see DomException.SYNTAX_ERR}
 */
DOMImplementationCSS.prototype.createCSSStyleSheet = function(title, media) {};

/**
 * @record
 * @see http://www.w3.org/TR/DOM-Level-2-Style/css.html#CSS-ElementCSSInlineStyle
 */
function ElementCSSInlineStyle() {}

/**
 * @type {CSSStyleDeclaration}
 * @see http://www.w3.org/TR/DOM-Level-2-Style/css.html#CSS-ElementCSSInlineStyle-style
 */
ElementCSSInlineStyle.prototype.style;

/**
 * @constructor
 * @see http://www.w3.org/TR/DOM-Level-2-Style/css.html#CSS-CSSProperties
 */
function CSSProperties() {}

// CSS 2 properties

/**
 * @type {string}
 * @see http://www.w3.org/TR/DOM-Level-2-Style/css.html#CSS-CSSProperties-azimuth
 */
CSSProperties.prototype.azimuth;

/**
 * @type {string}
 * @see https://drafts.fxtf.org/filter-effects-2/#BackdropFilterProperty
 */
CSSProperties.prototype.backdropFilter;

/**
 * @type {string}
 * @see http://www.w3.org/TR/DOM-Level-2-Style/css.html#CSS-CSSProperties-background
 */
CSSProperties.prototype.background;

/**
 * @type {string}
 * @see http://www.w3.org/TR/DOM-Level-2-Style/css.html#CSS-CSSProperties-backgroundAttachment
 */
CSSProperties.prototype.backgroundAttachment;

/**
 * @type {string}
 * @see http://www.w3.org/TR/DOM-Level-2-Style/css.html#CSS-CSSProperties-backgroundColor
 */
CSSProperties.prototype.backgroundColor;

/**
 * @type {string}
 * @see http://www.w3.org/TR/DOM-Level-2-Style/css.html#CSS-CSSProperties-backgroundImage
 */
CSSProperties.prototype.backgroundImage;

/**
 * @type {string}
 * @see http://www.w3.org/TR/DOM-Level-2-Style/css.html#CSS-CSSProperties-backgroundPosition
 */
CSSProperties.prototype.backgroundPosition;

/**
 * @type {string}
 * @see http://www.w3.org/TR/DOM-Level-2-Style/css.html#CSS-CSSProperties-backgroundRepeat
 */
CSSProperties.prototype.backgroundRepeat;

/**
 * @type {string}
 * @see http://www.w3.org/TR/css3-background/#the-background-size
 */
CSSProperties.prototype.backgroundSize;

/**
 * @implicitCast
 * @type {string}
 * @see http://www.w3.org/TR/DOM-Level-2-Style/css.html#CSS-CSSProperties-border
 */
CSSProperties.prototype.border;

/**
 * @type {string}
 * @see http://www.w3.org/TR/DOM-Level-2-Style/css.html#CSS-CSSProperties-borderCollapse
 */
CSSProperties.prototype.borderCollapse;

/**
 * @type {string}
 * @see http://www.w3.org/TR/DOM-Level-2-Style/css.html#CSS-CSSProperties-borderColor
 */
CSSProperties.prototype.borderColor;

/**
 * @type {string}
 * @see http://www.w3.org/TR/DOM-Level-2-Style/css.html#CSS-CSSProperties-borderSpacing
 */
CSSProperties.prototype.borderSpacing;

/**
 * @type {string}
 * @see http://www.w3.org/TR/DOM-Level-2-Style/css.html#CSS-CSSPrimitiveValue-borderStyle
 */
CSSProperties.prototype.borderStyle;

/**
 * @type {string}
 * @see http://www.w3.org/TR/DOM-Level-2-Style/css.html#CSS-CSSProperties-borderTop
 */
CSSProperties.prototype.borderTop;

/**
 * @type {string}
 * @see http://www.w3.org/TR/DOM-Level-2-Style/css.html#CSS-CSSProperties-borderRight
 */
CSSProperties.prototype.borderRight;

/**
 * @type {string}
 * @see http://www.w3.org/TR/DOM-Level-2-Style/css.html#CSS-CSSProperties-borderBottom
 */
CSSProperties.prototype.borderBottom;

/**
 * @type {string}
 * @see http://www.w3.org/TR/DOM-Level-2-Style/css.html#CSS-CSSProperties-borderLeft
 */
CSSProperties.prototype.borderLeft;

/**
 * @type {string}
 * @see http://www.w3.org/TR/DOM-Level-2-Style/css.html#CSS-CSSProperties-borderTopColor
 */
CSSProperties.prototype.borderTopColor;

/**
 * @type {string}
 * @see http://www.w3.org/TR/DOM-Level-2-Style/css.html#CSS-CSSProperties-borderRightColor
 */
CSSProperties.prototype.borderRightColor;

/**
 * @type {string}
 * @see http://www.w3.org/TR/DOM-Level-2-Style/css.html#CSS-CSSProperties-borderBottomColor
 */
CSSProperties.prototype.borderBottomColor;

/**
 * @type {string}
 * @see http://www.w3.org/TR/DOM-Level-2-Style/css.html#CSS-CSSProperties-borderLeftColor
 */
CSSProperties.prototype.borderLeftColor;

/**
 * @type {string}
 * @see http://www.w3.org/TR/DOM-Level-2-Style/css.html#CSS-CSSProperties-borderTopStyle
 */
CSSProperties.prototype.borderTopStyle;

/**
 * @type {string}
 * @see http://www.w3.org/TR/DOM-Level-2-Style/css.html#CSS-CSSProperties-borderRightStyle
 */
CSSProperties.prototype.borderRightStyle;

/**
 * @type {string}
 * @see http://www.w3.org/TR/DOM-Level-2-Style/css.html#CSS-CSSProperties-borderBottomStyle
 */
CSSProperties.prototype.borderBottomStyle;

/**
 * @type {string}
 * @see http://www.w3.org/TR/DOM-Level-2-Style/css.html#CSS-CSSProperties-borderLeftStyle
 */
CSSProperties.prototype.borderLeftStyle;

/**
 * @type {string|number}
 * @see http://www.w3.org/TR/DOM-Level-2-Style/css.html#CSS-CSSProperties-borderTopWidth
 */
CSSProperties.prototype.borderTopWidth;

/**
 * @type {string|number}
 * @see http://www.w3.org/TR/DOM-Level-2-Style/css.html#CSS-CSSProperties-borderRightWidth
 */
CSSProperties.prototype.borderRightWidth;

/**
 * @type {string|number}
 * @see http://www.w3.org/TR/DOM-Level-2-Style/css.html#CSS-CSSProperties-borderBottomWidth
 */
CSSProperties.prototype.borderBottomWidth;

/**
 * @type {string|number}
 * @see http://www.w3.org/TR/DOM-Level-2-Style/css.html#CSS-CSSProperties-borderLeftWidth
 */
CSSProperties.prototype.borderLeftWidth;

/**
 * @type {string|number}
 * @see http://www.w3.org/TR/DOM-Level-2-Style/css.html#CSS-CSSProperties-borderWidth
 */
CSSProperties.prototype.borderWidth;

/**
 * @type {string|number}
 * @see http://www.w3.org/TR/css3-background/#the-border-radius
 */
CSSProperties.prototype.borderRadius;

/**
 * @type {string|number}
 * @see http://www.w3.org/TR/css3-background/#the-border-radius
 */
CSSProperties.prototype.borderBottomLeftRadius;

/**
 * @type {string|number}
 * @see http://www.w3.org/TR/css3-background/#the-border-radius
 */
CSSProperties.prototype.borderBottomRightRadius;

/**
 * @type {string|number}
 * @see http://www.w3.org/TR/css3-background/#the-border-radius
 */
CSSProperties.prototype.borderTopLeftRadius;

/**
 * @type {string|number}
 * @see http://www.w3.org/TR/css3-background/#the-border-radius
 */
CSSProperties.prototype.borderTopRightRadius;

/**
 * @type {string}
 * @see http://www.w3.org/TR/css3-background/#the-border-image-source
 */
CSSProperties.prototype.borderImageSource;

/**
 * @type {string|number}
 * @see http://www.w3.org/TR/css3-background/#the-border-image-slice
 */
CSSProperties.prototype.borderImageSlice;

/**
 * @type {string|number}
 * @see http://www.w3.org/TR/css3-background/#the-border-image-width
 */
CSSProperties.prototype.borderImageWidth;

/**
 * @type {string|number}
 * @see http://www.w3.org/TR/css3-background/#the-border-image-outset
 */
CSSProperties.prototype.borderImageOutset;

/**
 * @type {string}
 * @see http://www.w3.org/TR/css3-background/#the-border-image-repeat
 */
CSSProperties.prototype.borderImageRepeat;

/**
 * @type {string}
 * @see http://www.w3.org/TR/css3-background/#the-border-image
 */
CSSProperties.prototype.borderImage;

/**
 * @type {string}
 * @see https://www.w3.org/TR/1998/REC-CSS2-19980512/visuren.html#propdef-bottom
 */
CSSProperties.prototype.bottom;

/**
 * @type {string}
 * @see http://www.w3.org/TR/DOM-Level-2-Style/css.html#CSS-CSSProperties-captionSide
 */
CSSProperties.prototype.captionSide;

/**
 * @type {string}
 * @see http://www.w3.org/TR/DOM-Level-2-Style/css.html#CSS-CSSProperties-clear
 */
CSSProperties.prototype.clear;

/**
 * @type {string}
 * @see http://www.w3.org/TR/DOM-Level-2-Style/css.html#CSS-CSSProperties-clip
 */
CSSProperties.prototype.clip;

/**
 * @type {string}
 * @see http://www.w3.org/TR/DOM-Level-2-Style/css.html#CSS-CSSProperties-color
 */
CSSProperties.prototype.color;

/**
 * @type {string}
 * @see http://www.w3.org/TR/css-contain-2/#contain-property
 */
CSSProperties.prototype.contain;

/**
 * @type {string}
 * @see http://www.w3.org/TR/DOM-Level-2-Style/css.html#CSS-CSSProperties-content
 */
CSSProperties.prototype.content;

/**
 * @type {string}
 * @see http://www.w3.org/TR/css-contain-2/#content-visibility
 */
CSSProperties.prototype.contentVisibility;

/**
 * @type {string}
 * @see http://www.w3.org/TR/DOM-Level-2-Style/css.html#CSS-CSSProperties-counterIncrement
 */
CSSProperties.prototype.counterIncrement;

/**
 * @type {string}
 * @see http://www.w3.org/TR/DOM-Level-2-Style/css.html#CSS-CSSProperties-counterReset
 */
CSSProperties.prototype.counterReset;

/**
 * This is not an official part of the W3C spec. In practice, this is a settable
 * property that works cross-browser. It is used in goog.dom.setProperties() and
 * needs to be extern'd so the --disambiguate_properties JS compiler pass works.
 * @type {string}
 */
CSSProperties.prototype.cssText;

/**
 * @type {string}
 * @see http://www.w3.org/TR/DOM-Level-2-Style/css.html#CSS-CSSProperties-cue
 */
CSSProperties.prototype.cue;

/**
 * @type {string}
 * @see http://www.w3.org/TR/DOM-Level-2-Style/css.html#CSS-CSSProperties-cueAfter
 */
CSSProperties.prototype.cueAfter;

/**
 * @type {string}
 * @see http://www.w3.org/TR/DOM-Level-2-Style/css.html#CSS-CSSProperties-cueBefore
 */
CSSProperties.prototype.cueBefore;

/**
 * @type {string}
 * @see http://www.w3.org/TR/DOM-Level-2-Style/css.html#CSS-CSSProperties-cursor
 */
CSSProperties.prototype.cursor;

/**
 * @type {string}
 * @see http://www.w3.org/TR/DOM-Level-2-Style/css.html#CSS-CSSProperties-direction
 */
CSSProperties.prototype.direction;

/**
 * @type {string}
 * @see http://www.w3.org/TR/DOM-Level-2-Style/css.html#CSS-CSSProperties-display
 */
CSSProperties.prototype.display;

/**
 * @type {string}
 * @see http://www.w3.org/TR/DOM-Level-2-Style/css.html#CSS-CSSProperties-elevation
 */
CSSProperties.prototype.elevation;

/**
 * @type {string}
 * @see http://www.w3.org/TR/DOM-Level-2-Style/css.html#CSS-CSSProperties-emptyCells
 */
CSSProperties.prototype.emptyCells;

/**
 * @type {string}
 * @see http://www.w3.org/TR/DOM-Level-2-Style/css.html#CSS-CSSProperties-cssFloat
 */
CSSProperties.prototype.cssFloat;

/**
 * @type {string}
 * @see http://www.w3.org/TR/DOM-Level-2-Style/css.html#CSS-CSSProperties-font
 */
CSSProperties.prototype.font;

/**
 * @type {string}
 * @see http://www.w3.org/TR/DOM-Level-2-Style/css.html#CSS-CSSProperties-fontFamily
 */
CSSProperties.prototype.fontFamily;

/**
 * @type {string|number}
 * @see http://www.w3.org/TR/DOM-Level-2-Style/css.html#CSS-CSSProperties-fontSize
 */
CSSProperties.prototype.fontSize;

/**
 * @type {string}
 * @see http://www.w3.org/TR/DOM-Level-2-Style/css.html#CSS-CSSProperties-fontSizeAdjust
 */
CSSProperties.prototype.fontSizeAdjust;

/**
 * @type {string}
 * @see http://www.w3.org/TR/DOM-Level-2-Style/css.html#CSS-CSSProperties-fontStretch
 */
CSSProperties.prototype.fontStretch;

/**
 * @type {string}
 * @see http://www.w3.org/TR/DOM-Level-2-Style/css.html#CSS-CSSProperties-fontStyle
 */
CSSProperties.prototype.fontStyle;

/**
 * @type {string}
 * @see http://www.w3.org/TR/DOM-Level-2-Style/css.html#CSS-CSSProperties-fontVariant
 */
CSSProperties.prototype.fontVariant;

/**
 * @type {string}
 * @see http://www.w3.org/TR/DOM-Level-2-Style/css.html#CSS-CSSProperties-fontWeight
 */
CSSProperties.prototype.fontWeight;

/**
 * @type {string}
 * @see https://www.w3.org/TR/css-grid-1/#propdef-grid
 */
CSSProperties.prototype.grid;

/**
 * @type {string}
 * @see https://www.w3.org/TR/css-grid-1/#propdef-grid-area
 */
CSSProperties.prototype.gridArea;

/**
 * @type {string}
 * @see https://www.w3.org/TR/css-grid-1/#propdef-grid-auto-columns
 */
CSSProperties.prototype.gridAutoColumns;

/**
 * @type {string}
 * @see https://www.w3.org/TR/css-grid-1/#propdef-grid-auto-rows
 */
CSSProperties.prototype.gridAutoRows;

/**
 * @type {string}
 * @see https://www.w3.org/TR/css-grid-1/#propdef-grid-column
 */
CSSProperties.prototype.gridColumn;

/**
 * @type {string}
 * @see https://www.w3.org/TR/css-grid-1/#propdef-grid-column-end
 */
CSSProperties.prototype.gridColumnEnd;

/**
 * @type {string}
 * @see https://www.w3.org/TR/css-grid-1/#propdef-grid-column-start
 */
CSSProperties.prototype.gridColumnStart;

/**
 * @type {string}
 * @see https://www.w3.org/TR/css-grid-1/#propdef-grid-row
 */
CSSProperties.prototype.gridRow;

/**
 * @type {string}
 * @see https://www.w3.org/TR/css-grid-1/#propdef-grid-row-end
 */
CSSProperties.prototype.gridRowEnd;

/**
 * @type {string}
 * @see https://www.w3.org/TR/css-grid-1/#propdef-grid-row-start
 */
CSSProperties.prototype.gridRowStart;

/**
 * @type {string}
 * @see https://www.w3.org/TR/css-grid-1/#propdef-grid-template
 */
CSSProperties.prototype.gridTemplate;

/**
 * @type {string}
 * @see https://www.w3.org/TR/css-grid-1/#propdef-grid-template-areas
 */
CSSProperties.prototype.gridTemplateAreas;

/**
 * @type {string}
 * @see https://www.w3.org/TR/css-grid-1/#propdef-grid-template-columns
 */
CSSProperties.prototype.gridTemplateColumns;

/**
 * @type {string}
 * @see https://www.w3.org/TR/css-grid-1/#propdef-grid-template-rows
 */
CSSProperties.prototype.gridTemplateRows;

/**
 * @type {string|number}
 * @see http://www.w3.org/TR/DOM-Level-2-Style/css.html#CSS-CSSProperties-height
 */
CSSProperties.prototype.height;

/**
 * @type {string}
 * @see https://www.w3.org/TR/1998/REC-CSS2-19980512/visuren.html#propdef-left
 */
CSSProperties.prototype.left;

/**
 * @type {string}
 * @see http://www.w3.org/TR/DOM-Level-2-Style/css.html#CSS-CSSProperties-letterSpacing
 */
CSSProperties.prototype.letterSpacing;

/**
 * @type {string|number}
 * @see http://www.w3.org/TR/DOM-Level-2-Style/css.html#CSS-CSSProperties-lineHeight
 */
CSSProperties.prototype.lineHeight;

/**
 * @type {string}
 * @see http://www.w3.org/TR/DOM-Level-2-Style/css.html#CSS-CSSProperties-listStyle
 */
CSSProperties.prototype.listStyle;

/**
 * @type {string}
 * @see http://www.w3.org/TR/DOM-Level-2-Style/css.html#CSS-CSSProperties-listStyleImage
 */
CSSProperties.prototype.listStyleImage;

/**
 * @type {string}
 * @see http://www.w3.org/TR/DOM-Level-2-Style/css.html#CSS-CSSProperties-listStylePosition
 */
CSSProperties.prototype.listStylePosition;

/**
 * @type {string}
 * @see http://www.w3.org/TR/DOM-Level-2-Style/css.html#CSS-CSSProperties-listStyleType
 */
CSSProperties.prototype.listStyleType;

/**
 * @type {string|number}
 * @see http://www.w3.org/TR/DOM-Level-2-Style/css.html#CSS-CSSProperties-margin
 */
CSSProperties.prototype.margin;

/**
 * @type {string|number}
 * @see http://www.w3.org/TR/DOM-Level-2-Style/css.html#CSS-CSSProperties-marginTop
 */
CSSProperties.prototype.marginTop;

/**
 * @type {string|number}
 * @see http://www.w3.org/TR/DOM-Level-2-Style/css.html#CSS-CSSProperties-marginRight
 */
CSSProperties.prototype.marginRight;

/**
 * @type {string|number}
 * @see http://www.w3.org/TR/DOM-Level-2-Style/css.html#CSS-CSSProperties-marginBottom
 */
CSSProperties.prototype.marginBottom;

/**
 * @type {string|number}
 * @see http://www.w3.org/TR/DOM-Level-2-Style/css.html#CSS-CSSProperties-marginLeft
 */
CSSProperties.prototype.marginLeft;

/**
 * @type {string}
 * @see http://www.w3.org/TR/DOM-Level-2-Style/css.html#CSS-CSSProperties-markerOffset
 */
CSSProperties.prototype.markerOffset;

/**
 * @type {string}
 * @see http://www.w3.org/TR/DOM-Level-2-Style/css.html#CSS-CSSProperties-marks
 */
CSSProperties.prototype.marks;

/**
 * @type {string|number}
 * @see http://www.w3.org/TR/DOM-Level-2-Style/css.html#CSS-CSSProperties-maxHeight
 */
CSSProperties.prototype.maxHeight;

/**
 * @type {string|number}
 * @see http://www.w3.org/TR/DOM-Level-2-Style/css.html#CSS-CSSProperties-maxWidth
 */
CSSProperties.prototype.maxWidth;

/**
 * @type {string|number}
 * @see http://www.w3.org/TR/DOM-Level-2-Style/css.html#CSS-CSSProperties-minHeight
 */
CSSProperties.prototype.minHeight;

/**
 * @type {string|number}
 * @see http://www.w3.org/TR/DOM-Level-2-Style/css.html#CSS-CSSProperties-minWidth
 */
CSSProperties.prototype.minWidth;

/**
 * @type {string}
 * @see http://www.w3.org/TR/DOM-Level-2-Style/css.html#CSS-CSSProperties-orphans
 */
CSSProperties.prototype.orphans;

/**
 * @type {string}
 * @see http://www.w3.org/TR/DOM-Level-2-Style/css.html#CSS-CSSProperties-outline
 */
CSSProperties.prototype.outline;

/**
 * @type {string}
 * @see http://www.w3.org/TR/DOM-Level-2-Style/css.html#CSS-CSSProperties-outlineColor
 */
CSSProperties.prototype.outlineColor;

/**
 * @type {string}
 * @see http://www.w3.org/TR/DOM-Level-2-Style/css.html#CSS-CSSProperties-outlineStyle
 */
CSSProperties.prototype.outlineStyle;

/**
 * @type {string|number}
 * @see http://www.w3.org/TR/DOM-Level-2-Style/css.html#CSS-CSSProperties-outlineWidth
 */
CSSProperties.prototype.outlineWidth;

/**
 * @type {string}
 * @see http://www.w3.org/TR/DOM-Level-2-Style/css.html#CSS-CSSProperties-overflow
 */
CSSProperties.prototype.overflow;

/**
 * @type {string|number}
 * @see http://www.w3.org/TR/DOM-Level-2-Style/css.html#CSS-CSSProperties-padding
 */
CSSProperties.prototype.padding;

/**
 * @type {string|number}
 * @see http://www.w3.org/TR/DOM-Level-2-Style/css.html#CSS-CSSProperties-paddingTop
 */
CSSProperties.prototype.paddingTop;

/**
 * @type {string|number}
 * @see http://www.w3.org/TR/DOM-Level-2-Style/css.html#CSS-CSSProperties-paddingRight
 */
CSSProperties.prototype.paddingRight;

/**
 * @type {string|number}
 * @see http://www.w3.org/TR/DOM-Level-2-Style/css.html#CSS-CSSProperties-paddingBottom
 */
CSSProperties.prototype.paddingBottom;

/**
 * @type {string|number}
 * @see http://www.w3.org/TR/DOM-Level-2-Style/css.html#CSS-CSSProperties-paddingLeft
 */
CSSProperties.prototype.paddingLeft;

/**
 * @type {string}
 * @see http://www.w3.org/TR/DOM-Level-2-Style/css.html#CSS-CSSProperties-page
 */
CSSProperties.prototype.page;

/**
 * @type {string}
 * @see http://www.w3.org/TR/DOM-Level-2-Style/css.html#CSS-CSSProperties-pageBreakAfter
 */
CSSProperties.prototype.pageBreakAfter;

/**
 * @type {string}
 * @see http://www.w3.org/TR/DOM-Level-2-Style/css.html#CSS-CSSProperties-pageBreakBefore
 */
CSSProperties.prototype.pageBreakBefore;

/**
 * @type {string}
 * @see http://www.w3.org/TR/DOM-Level-2-Style/css.html#CSS-CSSProperties-pageBreakInside
 */
CSSProperties.prototype.pageBreakInside;

/**
 * @type {string}
 * @see http://www.w3.org/TR/DOM-Level-2-Style/css.html#CSS-CSSProperties-pause
 */
CSSProperties.prototype.pause;

/**
 * @type {string}
 * @see http://www.w3.org/TR/DOM-Level-2-Style/css.html#CSS-CSSProperties-pauseAfter
 */
CSSProperties.prototype.pauseAfter;

/**
 * @type {string}
 * @see http://www.w3.org/TR/DOM-Level-2-Style/css.html#CSS-CSSProperties-pauseBefore
 */
CSSProperties.prototype.pauseBefore;

/**
 * @type {string}
 * @see http://www.w3.org/TR/DOM-Level-2-Style/css.html#CSS-CSSProperties-pitch
 */
CSSProperties.prototype.pitch;

/**
 * @type {string}
 * @see http://www.w3.org/TR/DOM-Level-2-Style/css.html#CSS-CSSProperties-pitchRange
 */
CSSProperties.prototype.pitchRange;

/**
 * @type {string}
 * @see http://www.w3.org/TR/DOM-Level-2-Style/css.html#CSS-CSSProperties-playDuring
 */
CSSProperties.prototype.playDuring;

/**
 * @type {string}
 * @see http://www.w3.org/TR/DOM-Level-2-Style/css.html#CSS-CSSProperties-position
 */
CSSProperties.prototype.position;

/**
 * @type {string}
 * @see http://www.w3.org/TR/DOM-Level-2-Style/css.html#CSS-CSSProperties-quotes
 */
CSSProperties.prototype.quotes;

/**
 * @type {string}
 * @see http://www.w3.org/TR/css3-ui/#resize
 */
CSSProperties.prototype.resize;

/**
 * @type {string}
 * @see http://www.w3.org/TR/DOM-Level-2-Style/css.html#CSS-CSSProperties-richness
 */
CSSProperties.prototype.richness;

/**
 * @type {string}
 * @see https://www.w3.org/TR/1998/REC-CSS2-19980512/visuren.html#propdef-right
 */
CSSProperties.prototype.right;

/**
 * @type {string}
 * @see http://www.w3.org/TR/DOM-Level-2-Style/css.html#CSS-CSSProperties-size
 */
CSSProperties.prototype.size;

/**
 * @type {string}
 * @see http://www.w3.org/TR/DOM-Level-2-Style/css.html#CSS-CSSProperties-speak
 */
CSSProperties.prototype.speak;

/**
 * @type {string}
 * @see http://www.w3.org/TR/DOM-Level-2-Style/css.html#CSS-CSSProperties-speakHeader
 */
CSSProperties.prototype.speakHeader;

/**
 * @type {string}
 * @see http://www.w3.org/TR/DOM-Level-2-Style/css.html#CSS-CSSProperties-speakNumeral
 */
CSSProperties.prototype.speakNumeral;

/**
 * @type {string}
 * @see http://www.w3.org/TR/DOM-Level-2-Style/css.html#CSS-CSSProperties-speakPunctuation
 */
CSSProperties.prototype.speakPunctuation;

/**
 * @type {string}
 * @see http://www.w3.org/TR/DOM-Level-2-Style/css.html#CSS-CSSProperties-speechRate
 */
CSSProperties.prototype.speechRate;

/**
 * @type {string}
 * @see http://www.w3.org/TR/DOM-Level-2-Style/css.html#CSS-CSSProperties-stress
 */
CSSProperties.prototype.stress;

/**
 * @type {string}
 * @see http://www.w3.org/TR/DOM-Level-2-Style/css.html#CSS-CSSProperties-tableLayout
 */
CSSProperties.prototype.tableLayout;

/**
 * @type {string}
 * @see http://www.w3.org/TR/DOM-Level-2-Style/css.html#CSS-CSSProperties-textAlign
 */
CSSProperties.prototype.textAlign;

/**
 * @type {string}
 * @see http://www.w3.org/TR/DOM-Level-2-Style/css.html#CSS-CSSProperties-textDecoration
 */
CSSProperties.prototype.textDecoration;

/**
 * @type {string}
 * @see https://www.w3.org/TR/css-text-decor-3/#text-decoration-line-property
 */
CSSProperties.prototype.textDecorationLine;

/**
 * @type {string}
 * @see https://www.w3.org/TR/css-text-decor-3/#text-decoration-style-property
 */
CSSProperties.prototype.textDecorationStyle;

/**
 * @type {string}
 * @see https://www.w3.org/TR/css-text-decor-3/#text-decoration-color-property
 */
CSSProperties.prototype.textDecorationColor;

/**
 * @type {string}
 * @see https://www.w3.org/TR/css-text-decor-3/#text-underline-position-property
 */
CSSProperties.prototype.textDecorationPosition;

/**
 * @type {string}
 * @see http://www.w3.org/TR/DOM-Level-2-Style/css.html#CSS-CSSProperties-textIndent
 */
CSSProperties.prototype.textIndent;

/**
 * @type {string}
 * @see http://www.w3.org/TR/DOM-Level-2-Style/css.html#CSS-CSSProperties-textShadow
 */
CSSProperties.prototype.textShadow;

/**
 * @type {string}
 * @see http://www.w3.org/TR/DOM-Level-2-Style/css.html#CSS-CSSProperties-textTransform
 */
CSSProperties.prototype.textTransform;

/**
 * @type {string}
 * @see https://www.w3.org/TR/1998/REC-CSS2-19980512/visuren.html#propdef-top
 */
CSSProperties.prototype.top;

/**
 * @type {string}
 * @see http://www.w3.org/TR/DOM-Level-2-Style/css.html#CSS-CSSProperties-unicodeBidi
 */
CSSProperties.prototype.unicodeBidi;

/**
 * @type {string}
 * @see http://www.w3.org/TR/DOM-Level-2-Style/css.html#CSS-CSSProperties-verticalAlign
 */
CSSProperties.prototype.verticalAlign;

/**
 * @type {string}
 * @see http://www.w3.org/TR/DOM-Level-2-Style/css.html#CSS-CSSProperties-visibility
 */
CSSProperties.prototype.visibility;

/**
 * @type {string}
 * @see http://www.w3.org/TR/DOM-Level-2-Style/css.html#CSS-CSSProperties-voiceFamily
 */
CSSProperties.prototype.voiceFamily;

/**
 * @type {string}
 * @see http://www.w3.org/TR/DOM-Level-2-Style/css.html#CSS-CSSProperties-volume
 */
CSSProperties.prototype.volume;

/**
 * @type {string}
 * @see http://www.w3.org/TR/DOM-Level-2-Style/css.html#CSS-CSSProperties-whiteSpace
 */
CSSProperties.prototype.whiteSpace;

/**
 * @type {string}
 * @see http://www.w3.org/TR/DOM-Level-2-Style/css.html#CSS-CSSProperties-widows
 */
CSSProperties.prototype.widows;

/**
 * @type {string|number}
 * @see http://www.w3.org/TR/DOM-Level-2-Style/css.html#CSS-CSSProperties-width
 */
CSSProperties.prototype.width;

/**
 * @type {string}
 * @see http://www.w3.org/TR/DOM-Level-2-Style/css.html#CSS-CSSProperties-wordSpacing
 */
CSSProperties.prototype.wordSpacing;

/**
 * @type {string}
 * @see http://www.w3.org/TR/DOM-Level-2-Style/css.html#CSS-CSSProperties-wordWrap
 */
CSSProperties.prototype.wordWrap;

/**
 * @type {string|number}
 * @see http://www.w3.org/TR/DOM-Level-2-Style/css.html#CSS-CSSProperties-zIndex
 */
CSSProperties.prototype.zIndex;

// CSS 3 properties

/**
 * @type {string}
 * @see http://www.w3.org/TR/css3-background/#box-shadow
 */
CSSProperties.prototype.boxShadow;

/**
 * @type {string}
 * @see http://www.w3.org/TR/css3-ui/#box-sizing
 */
CSSProperties.prototype.boxSizing;

/**
 * @type {string|number}
 * @see http://www.w3.org/TR/css3-color/#transparency
 */
CSSProperties.prototype.opacity;

/**
 * @type {string}
 * @see https://www.w3.org/TR/css-ui-3/#outline-offset
 */
CSSProperties.prototype.outlineOffset;

/**
 * @type {string}
 * @see http://www.w3.org/TR/css3-ui/#text-overflow
 */
CSSProperties.prototype.textOverflow;

// CSS 3 animations

/**
 * @type {string|number}
 * @see https://www.w3.org/TR/css-animations-1/#animation
 */
CSSProperties.prototype.animation;

/**
 * @type {string}
 * @see https://www.w3.org/TR/css-animations-1/#animation-delay
 */
CSSProperties.prototype.animationDelay;

/**
 * @type {string}
 * @see https://www.w3.org/TR/css-animations-1/#animation-direction
 */
CSSProperties.prototype.animationDirection;

/**
 * @type {string}
 * @see https://www.w3.org/TR/css-animations-1/#animation-duration
 */
CSSProperties.prototype.animationDuration;

/**
 * @type {string}
 * @see https://www.w3.org/TR/css-animations-1/#animation-fill-mode
 */
CSSProperties.prototype.animationFillMode;

/**
 * @type {string|number}
 * @see https://www.w3.org/TR/css-animations-1/#animation-iteration-count
 */
CSSProperties.prototype.animationIterationCount;

/**
 * @type {string}
 * @see https://www.w3.org/TR/css-animations-1/#animation-name
 */
CSSProperties.prototype.animationName;

/**
 * @type {string}
 * @see https://www.w3.org/TR/css-animations-1/#animation-play-state
 */
CSSProperties.prototype.animationPlayState;

/**
 * @type {string}
 * @see https://www.w3.org/TR/css-animations-1/#animation-timing-function
 */
CSSProperties.prototype.animationTimingFunction;

// CSS 3 transforms

/**
 * @type {string}
 * @see http://www.w3.org/TR/css3-2d-transforms/#backface-visibility-property
 */
CSSProperties.prototype.backfaceVisibility;

/**
 * @type {string}
 * @see http://www.w3.org/TR/css3-2d-transforms/#perspective
 */
CSSProperties.prototype.perspective;

/**
 * @type {string|number}
 * @see http://www.w3.org/TR/css3-2d-transforms/#perspective-origin
 */
CSSProperties.prototype.perspectiveOrigin;

/**
 * @type {string}
 * @see http://www.w3.org/TR/css3-2d-transforms/#effects
 */
CSSProperties.prototype.transform;

/**
 * @type {string|number}
 * @see http://www.w3.org/TR/css3-2d-transforms/#transform-origin
 */
CSSProperties.prototype.transformOrigin;

/**
 * @type {string}
 * @see http://www.w3.org/TR/css3-2d-transforms/#transform-style
 */
CSSProperties.prototype.transformStyle;

// CSS 3 transitions

/**
 * @type {string}
 * @see http://www.w3.org/TR/css3-transitions/#transition
 */
CSSProperties.prototype.transition;

/**
 * @type {string}
 * @see http://www.w3.org/TR/css3-transitions/#transition-delay
 */
CSSProperties.prototype.transitionDelay;

/**
 * @type {string}
 * @see http://www.w3.org/TR/css3-transitions/#transition-duration
 */
CSSProperties.prototype.transitionDuration;

/**
 * @type {string}
 * @see http://www.w3.org/TR/css3-transitions/#transition-property-property
 */
CSSProperties.prototype.transitionProperty;

/**
 * @type {string}
 * @see http://www.w3.org/TR/css3-transitions/#transition-timing-function
 */
CSSProperties.prototype.transitionTimingFunction;

/**
 * @type {string}
 * @see http://www.w3.org/TR/SVG11/interact.html#PointerEventsProperty
 */
CSSProperties.prototype.pointerEvents;


// CSS Flexbox 1


/**
 * @type {string}
 * @see https://www.w3.org/TR/css-flexbox-1/#align-content-property
 */
CSSProperties.prototype.alignContent;

/**
 * @type {string}
 * @see https://www.w3.org/TR/css-flexbox-1/#align-items-property
 */
CSSProperties.prototype.alignItems;

/**
 * @type {string}
 * @see https://www.w3.org/TR/css-flexbox-1/#align-items-property
 */
CSSProperties.prototype.alignSelf;

/**
 * @type {string}
 * @see https://www.w3.org/TR/css-flexbox-1/#flex-property
 */
CSSProperties.prototype.flex;

/**
 * @type {string}
 * @see https://www.w3.org/TR/css-flexbox-1/#flex-basis-property
 */
CSSProperties.prototype.flexBasis;

/**
 * @type {string}
 * @see https://www.w3.org/TR/css-flexbox-1/#flex-direction-property
 */
CSSProperties.prototype.flexDirection;

/**
 * @type {string}
 * @see https://www.w3.org/TR/css-flexbox-1/#flex-flow-property
 */
CSSProperties.prototype.flexFlow;

/**
 * @type {number}
 * @see https://www.w3.org/TR/css-flexbox-1/#flex-grow-property
 */
CSSProperties.prototype.flexGrow;

/**
 * @type {number}
 * @see https://www.w3.org/TR/css-flexbox-1/#flex-shrink-property
 */
CSSProperties.prototype.flexShrink;

/**
 * @type {string}
 * @see https://www.w3.org/TR/css-flexbox-1/#flex-wrap-property
 */
CSSProperties.prototype.flexWrap;

/**
 * @type {string}
 * @see https://www.w3.org/TR/css-flexbox-1/#justify-content-property
 */
CSSProperties.prototype.justifyContent;

/**
 * @type {number}
 * @see https://www.w3.org/TR/css-flexbox-1/#order-property
 */
CSSProperties.prototype.order;

// Externs for CSS Will Change Module Level 1
// http://www.w3.org/TR/css-will-change/

/**
 * @type {string}
 * @see http://www.w3.org/TR/css-will-change-1/#will-change
 */
CSSProperties.prototype.willChange;

/**
 * @type {string}
 * @see https://www.w3.org/TR/css-ui-4/#propdef-user-select
 */
CSSProperties.prototype.userSelect;

// CSS 3 Images

/**
 * @type {string}
 * @see https://www.w3.org/TR/css3-images/#the-object-fit
 */
CSSProperties.prototype.objectFit;

/**
 * @type {string}
 * @see https://www.w3.org/TR/css3-images/#object-position
 */
CSSProperties.prototype.objectPosition;

// CSS Masking

/**
 * @type {string}
 * @see https://www.w3.org/TR/css-masking-1/
 */
CSSProperties.prototype.clipPath;

// CSS Containment

/**
 * @type {string}
 * @see https://www.w3.org/TR/css-contain-1/
 */
CSSProperties.prototype.contain;

// SVG Fill Properties

/**
 * @type {string}
 * @see https://www.w3.org/TR/fill-stroke-3/#fill-shorthand
 */
CSSProperties.prototype.fill;

/**
 * @type {string}
 * @see https://www.w3.org/TR/fill-stroke-3/#fill-opacity
 */
CSSProperties.prototype.fillOpacity;

/**
 * @type {string}
 * @see https://www.w3.org/TR/fill-stroke-3/#fill-rule
 */
CSSProperties.prototype.fillRule;

// SVG Stroke Properties

/**
 * @type {string}
 * @see https://www.w3.org/TR/svg-strokes/
 */
CSSProperties.prototype.stroke;

/**
 * @type {string}
 * @see https://www.w3.org/TR/svg-strokes/
 */
CSSProperties.prototype.strokeAlignment;

/**
 * @type {string}
 * @see https://www.w3.org/TR/svg-strokes/
 */
CSSProperties.prototype.strokeOpacity;

/**
 * @type {string}
 * @see https://www.w3.org/TR/svg-strokes/
 */
CSSProperties.prototype.strokeWidth;

/**
 * @type {string}
 * @see https://www.w3.org/TR/svg-strokes/
 */
CSSProperties.prototype.strokeLinecap;

/**
 * @type {string}
 * @see https://www.w3.org/TR/svg-strokes/
 */
CSSProperties.prototype.strokeLinejoin;

/**
 * @type {string}
 * @see https://www.w3.org/TR/svg-strokes/
 */
CSSProperties.prototype.strokeMiterlimit;

/**
 * @type {string}
 * @see https://www.w3.org/TR/svg-strokes/
 */
CSSProperties.prototype.strokeDasharray;

/**
 * @type {string}
 * @see https://www.w3.org/TR/svg-strokes/
 */
CSSProperties.prototype.strokeDashoffset;

/**
 * @type {string}
 * @see https://www.w3.org/TR/svg-strokes/
 */
CSSProperties.prototype.strokeDashcorner;

/**
 * @type {string}
 * @see https://www.w3.org/TR/svg-strokes/
 */
CSSProperties.prototype.strokeDashadjust;

/**
 * TODO(dbeam): Put this in separate file named w3c_cssom.js.
 * Externs for the CSSOM View Module.
 * @see http://www.w3.org/TR/cssom-view/
 */

// http://www.w3.org/TR/cssom-view/#extensions-to-the-window-interface

/**
 * @param {string} media_query_list
 * @return {!MediaQueryList}
 * @see http://www.w3.org/TR/cssom-view/#dom-window-matchmedia
 */
Window.prototype.matchMedia = function(media_query_list) {};

/**
 * @type {number}
 * @see http://www.w3.org/TR/cssom-view/#dom-window-innerwidth
 */
Window.prototype.innerWidth;

/**
 * @type {number}
 * @see http://www.w3.org/TR/cssom-view/#dom-window-innerheight
 */
Window.prototype.innerHeight;

/**
 * @type {number}
 * @see http://www.w3.org/TR/cssom-view/#dom-window-scrollx
 */
Window.prototype.scrollX;

/**
 * @type {number}
 * @see http://www.w3.org/TR/cssom-view/#dom-window-pagexoffset
 */
Window.prototype.pageXOffset;

/**
 * @type {number}
 * @see http://www.w3.org/TR/cssom-view/#dom-window-scrolly
 */
Window.prototype.scrollY;

/**
 * @type {number}
 * @see http://www.w3.org/TR/cssom-view/#dom-window-pageyoffset
 */
Window.prototype.pageYOffset;

/**
 * @typedef {{
 *   left: (number|undefined),
 *   top: (number|undefined),
 *   behavior: (string|undefined)
 * }}
 * @see https://www.w3.org/TR/cssom-view/#dictdef-scrolltooptions
 */
var ScrollToOptions;

/**
 * @record
 * @see https://www.w3.org/TR/cssom-view/#dictdef-scrollintoviewoptions
 */
function ScrollIntoViewOptions () {}

/** @type {string|undefined} */
ScrollIntoViewOptions.prototype.behavior;

/** @type {string|undefined} */
ScrollIntoViewOptions.prototype.block;

/** @type {string|undefined} */
ScrollIntoViewOptions.prototype.inline;

/**
 * @param {number|!ScrollToOptions} scrollToOptionsOrX
 * @param {number=} opt_y
 * @see http://www.w3.org/TR/cssom-view/#dom-window-scroll
 * @return {undefined}
 */
Window.prototype.scroll = function(scrollToOptionsOrX, opt_y) {};

/**
 * @param {number|!ScrollToOptions} scrollToOptionsOrX
 * @param {number=} opt_y
 * @see http://www.w3.org/TR/cssom-view/#dom-window-scrollto
 * @return {undefined}
 */
Window.prototype.scrollTo = function(scrollToOptionsOrX, opt_y) {};

/**
 * @param {number|!ScrollToOptions} scrollToOptionsOrX
 * @param {number=} opt_y
 * @see http://www.w3.org/TR/cssom-view/#dom-window-scrollby
 * @return {undefined}
 */
Window.prototype.scrollBy = function(scrollToOptionsOrX, opt_y) {};

/**
 * @type {number}
 * @see http://www.w3.org/TR/cssom-view/#dom-window-screenx
 */
Window.prototype.screenX;

/**
 * @type {number}
 * @see http://www.w3.org/TR/cssom-view/#dom-window-screeny
 */
Window.prototype.screenY;

/**
 * @type {number}
 * @see http://www.w3.org/TR/cssom-view/#dom-window-outerwidth
 */
Window.prototype.outerWidth;

/**
 * @type {number}
 * @see http://www.w3.org/TR/cssom-view/#dom-window-outerheight
 */
Window.prototype.outerHeight;

/**
 * @type {number}
 * @see https://www.w3.org/TR/cssom-view/#dom-window-devicepixelratio
 */
Window.prototype.devicePixelRatio;

/**
 * @param {number} x
 * @param {number} y
 * @return {undefined}
 * @see https://www.w3.org/TR/cssom-view/#dom-window-moveto
 */
Window.prototype.moveTo = function(x, y) {};

/**
 * @param {number} x
 * @param {number} y
 * @return {undefined}
 * @see https://www.w3.org/TR/cssom-view/#dom-window-moveby
 */
Window.prototype.moveBy = function(x, y) {};

/**
 * @param {number} x
 * @param {number} y
 * @return {undefined}
 * @see https://www.w3.org/TR/cssom-view/#dom-window-resizeto
 */
Window.prototype.resizeTo = function(x, y) {};

/**
 * @param {number} x
 * @param {number} y
 * @return {undefined}
 * @see https://www.w3.org/TR/cssom-view/#dom-window-resizeby
 */
Window.prototype.resizeBy = function(x, y) {};

/**
 * @constructor
 * @implements {EventTarget}
 * @see http://www.w3.org/TR/cssom-view/#mediaquerylist
 */
function MediaQueryList() {}

/**
 * @type {string}
 * @see http://www.w3.org/TR/cssom-view/#dom-mediaquerylist-media
 */
MediaQueryList.prototype.media;

/**
 * @type {boolean}
 * @see http://www.w3.org/TR/cssom-view/#dom-mediaquerylist-matches
 */
MediaQueryList.prototype.matches;

/**
 * @param {MediaQueryListListener} listener
 * @see http://www.w3.org/TR/cssom-view/#dom-mediaquerylist-addlistener
 * @return {undefined}
 */
MediaQueryList.prototype.addListener = function(listener) {};

/**
 * @param {MediaQueryListListener} listener
 * @see http://www.w3.org/TR/cssom-view/#dom-mediaquerylist-removelistener
 * @return {undefined}
 */
MediaQueryList.prototype.removeListener = function(listener) {};

/** @override Not available in some browsers; use addListener instead. */
MediaQueryList.prototype.addEventListener = function(
    type, listener, opt_options) {};

/** @override Not available in old browsers; use removeListener instead. */
MediaQueryList.prototype.removeEventListener = function(
    type, listener, opt_options) {};

/** @override */
MediaQueryList.prototype.dispatchEvent = function(evt) {};

/**
 * @typedef {(function(!MediaQueryList) : void)}
 * @see http://www.w3.org/TR/cssom-view/#mediaquerylistlistener
 */
var MediaQueryListListener;

/**
 * @constructor
 * @see http://www.w3.org/TR/cssom-view/#screen
 */
function Screen() {}

/**
 * @type {number}
 * @see http://www.w3.org/TR/cssom-view/#dom-screen-availwidth
 */
Screen.prototype.availWidth;

/**
 * @type {number}
 * @see http://www.w3.org/TR/cssom-view/#dom-screen-availheight
 */
Screen.prototype.availHeight;

/**
 * @type {number}
 * @see http://www.w3.org/TR/cssom-view/#dom-screen-width
 */
Screen.prototype.width;

/**
 * @type {number}
 * @see http://www.w3.org/TR/cssom-view/#dom-screen-height
 */
Screen.prototype.height;

/**
 * @type {number}
 * @see http://www.w3.org/TR/cssom-view/#dom-screen-colordepth
 */
Screen.prototype.colorDepth;

/**
 * @type {number}
 * @see http://www.w3.org/TR/cssom-view/#dom-screen-pixeldepth
 */
Screen.prototype.pixelDepth;


// http://www.w3.org/TR/cssom-view/#extensions-to-the-document-interface

/**
 * @param {number} x
 * @param {number} y
 * @return {?Element}
 * @see http://www.w3.org/TR/cssom-view/#dom-document-elementfrompoint
 */
Document.prototype.elementFromPoint = function(x, y) {};

/**
 * @param {number} x
 * @param {number} y
 * @return {!IArrayLike<!Element>}
 * @see http://www.w3.org/TR/cssom-view/#dom-document-elementsfrompoint
 */
Document.prototype.elementsFromPoint = function(x, y) {};

/**
 * @param {number} x
 * @param {number} y
 * @return {CaretPosition}
 * @see http://www.w3.org/TR/cssom-view/#dom-document-caretpositionfrompoint
 */
Document.prototype.caretPositionFromPoint = function(x, y) {};

/**
 * @type {Element}
 * @see http://dev.w3.org/csswg/cssom-view/#dom-document-scrollingelement
 */
Document.prototype.scrollingElement;

/**
 * @constructor
 * @see http://www.w3.org/TR/cssom-view/#caretposition
 */
function CaretPosition() {}

/**
 * @type {Node}
 * @see http://www.w3.org/TR/cssom-view/#dom-caretposition-offsetnode
 */
CaretPosition.prototype.offsetNode;

/**
 * @type {number}
 * @see http://www.w3.org/TR/cssom-view/#dom-caretposition-offset
 */
CaretPosition.prototype.offset;


// http://www.w3.org/TR/cssom-view/#extensions-to-the-element-interface

/**
 * @return {!ClientRectList}
 * @see http://www.w3.org/TR/cssom-view/#dom-element-getclientrects
 */
Element.prototype.getClientRects = function() {};

/**
 * @return {!DOMRect}
 * @see http://www.w3.org/TR/cssom-view/#dom-element-getboundingclientrect
 */
Element.prototype.getBoundingClientRect = function() {};

/**
 * @param {(boolean|ScrollIntoViewOptions)=} top
 * @see http://www.w3.org/TR/cssom-view/#dom-element-scrollintoview
 * @return {undefined}
 */
Element.prototype.scrollIntoView = function(top) {};

/**
 * @param {number|!ScrollToOptions} scrollToOptionsOrX
 * @param {number=} opt_y
 * @see https://www.w3.org/TR/cssom-view/#extension-to-the-element-interface
 * @return {undefined}
 */
Element.prototype.scrollTo = function(scrollToOptionsOrX, opt_y) {};

/**
 * @type {number}
 * @see http://www.w3.org/TR/cssom-view/#dom-element-scrolltop
 */
Element.prototype.scrollTop;

/**
 * @type {number}
 * @see http://www.w3.org/TR/cssom-view/#dom-element-scrollleft
 */
Element.prototype.scrollLeft;

/**
 * @type {number}
 * @see http://www.w3.org/TR/cssom-view/#dom-element-scrollwidth
 */
Element.prototype.scrollWidth;

/**
 * @type {number}
 * @see http://www.w3.org/TR/cssom-view/#dom-element-scrollheight
 */
Element.prototype.scrollHeight;

/**
 * @type {number}
 * @see http://www.w3.org/TR/cssom-view/#dom-element-clienttop
 */
Element.prototype.clientTop;

/**
 * @type {number}
 * @see http://www.w3.org/TR/cssom-view/#dom-element-clientleft
 */
Element.prototype.clientLeft;

/**
 * @type {number}
 * @see http://www.w3.org/TR/cssom-view/#dom-element-clientwidth
 */
Element.prototype.clientWidth;

/**
 * @type {number}
 * @see http://www.w3.org/TR/cssom-view/#dom-element-clientheight
 */
Element.prototype.clientHeight;

// http://www.w3.org/TR/cssom-view/#extensions-to-the-htmlelement-interface

/**
 * @type {Element}
 * @see http://www.w3.org/TR/cssom-view/#dom-htmlelement-offsetparent
 */
HTMLElement.prototype.offsetParent;

/**
 * @type {number}
 * @see http://www.w3.org/TR/cssom-view/#dom-htmlelement-offsettop
 */
HTMLElement.prototype.offsetTop;

/**
 * @type {number}
 * @see http://www.w3.org/TR/cssom-view/#dom-htmlelement-offsetleft
 */
HTMLElement.prototype.offsetLeft;

/**
 * @type {number}
 * @see http://www.w3.org/TR/cssom-view/#dom-htmlelement-offsetwidth
 */
HTMLElement.prototype.offsetWidth;

/**
 * @type {number}
 * @see http://www.w3.org/TR/cssom-view/#dom-htmlelement-offsetheight
 */
HTMLElement.prototype.offsetHeight;


// http://www.w3.org/TR/cssom-view/#extensions-to-the-range-interface

/**
 * @return {!ClientRectList}
 * @see http://www.w3.org/TR/cssom-view/#dom-range-getclientrects
 */
Range.prototype.getClientRects = function() {};

/**
 * @return {!DOMRect}
 * @see http://www.w3.org/TR/cssom-view/#dom-range-getboundingclientrect
 */
Range.prototype.getBoundingClientRect = function() {};


// http://www.w3.org/TR/cssom-view/#extensions-to-the-mouseevent-interface

// MouseEvent: screen{X,Y} and client{X,Y} are in DOM Level 2/3 Event as well,
// so it seems like a specification issue. I've emailed www-style@w3.org in
// hopes of resolving the conflict, but in the mean time they can live here
// (http://lists.w3.org/Archives/Public/www-style/2012May/0039.html).

/**
 * @type {number}
 * @see http://www.w3.org/TR/cssom-view/#dom-mouseevent-screenx
 */
//MouseEvent.prototype.screenX;

/**
 * @type {number}
 * @see http://www.w3.org/TR/cssom-view/#dom-mouseevent-screeny
 */
//MouseEvent.prototype.screenY;

/**
 * @type {number}
 * @see http://www.w3.org/TR/cssom-view/#dom-mouseevent-pagex
 */
MouseEvent.prototype.pageX;

/**
 * @type {number}
 * @see http://www.w3.org/TR/cssom-view/#dom-mouseevent-pagey
 */
MouseEvent.prototype.pageY;

/**
 * @type {number}
 * @see http://www.w3.org/TR/cssom-view/#dom-mouseevent-clientx
 */
//MouseEvent.prototype.clientX;

/**
 * @type {number}
 * @see http://www.w3.org/TR/cssom-view/#dom-mouseevent-clienty
 */
//MouseEvent.prototype.clientY;

/**
 * @type {number}
 * @see http://www.w3.org/TR/cssom-view/#dom-mouseevent-x
 */
MouseEvent.prototype.x;

/**
 * @type {number}
 * @see http://www.w3.org/TR/cssom-view/#dom-mouseevent-y
 */
MouseEvent.prototype.y;

/**
 * @type {number}
 * @see http://www.w3.org/TR/cssom-view/#dom-mouseevent-offsetx
 */
MouseEvent.prototype.offsetX;

/**
 * @type {number}
 * @see http://www.w3.org/TR/cssom-view/#dom-mouseevent-offsety
 */
MouseEvent.prototype.offsetY;


// http://www.w3.org/TR/cssom-view/#rectangles

/**
 * @constructor
 * @see http://www.w3.org/TR/cssom-view/#the-clientrectlist-interface
 * @implements {IArrayLike<!DOMRect>}
 */
function ClientRectList() {}

/**
 * @type {number}
 * @see http://www.w3.org/TR/cssom-view/#dom-clientrectlist-length
 */
ClientRectList.prototype.length;

/**
 * @param {number} index
 * @return {?DOMRect}
 * @see http://www.w3.org/TR/cssom-view/#dom-clientrectlist-item
 */
ClientRectList.prototype.item = function(index) {};

/**
 * @constructor
 * http://www.w3.org/TR/css3-conditional/#CSS-interface
 */
function CSSInterface() {}

/**
 * @param {string} ident
 * @return {string}
 * @see http://www.w3.org/TR/cssom/#the-css.escape()-method
 * @throws DOMException {@see DOMException.INVALID_CHARACTER_ERR}
 */
CSSInterface.prototype.escape = function(ident) {};

/**
 * @param {string} property
 * @param {string=} opt_value
 * @return {boolean}
 */
CSSInterface.prototype.supports = function(property, opt_value) {};

/**
 * TODO(nicksantos): This suppress tag probably isn't needed, and
 * should be removed.
 * @suppress {duplicate}
 * @type {CSSInterface}
 */
var CSS;

/** @type {CSSInterface} */
Window.prototype.CSS;

// http://dev.w3.org/csswg/css-font-loading/

/**
 * Set of possible string values: 'error', 'loaded', 'loading', 'unloaded'.
 * @typedef {string}
 * @see http://dev.w3.org/csswg/css-font-loading/#enumdef-fontfaceloadstatus
 */
var FontFaceLoadStatus;

/**
 * @typedef {{
 *   display: (string|undefined),
 *   style: (string|undefined),
 *   weight: (string|undefined),
 *   stretch: (string|undefined),
 *   unicodeRange: (string|undefined),
 *   variant: (string|undefined),
 *   featureSettings: (string|undefined)
 * }}
 * @see http://dev.w3.org/csswg/css-font-loading/#dictdef-fontfacedescriptors
 */
var FontFaceDescriptors;

/**
 * @constructor
 * @param {string} fontFamily
 * @param {(string|ArrayBuffer|ArrayBufferView)} source
 * @param {!FontFaceDescriptors=} opt_descriptors
 * @see http://dev.w3.org/csswg/css-font-loading/#font-face-constructor
 */
function FontFace(fontFamily, source, opt_descriptors) {}

/**
 * @type {string}
 * @see http://dev.w3.org/csswg/css-font-loading/#dom-fontface-family
 */
FontFace.prototype.family;

/**
 * @type {string}
 * @see http://dev.w3.org/csswg/css-font-loading/#dom-fontface-style
 */
FontFace.prototype.style;

/**
 * @type {string}
 * @see http://dev.w3.org/csswg/css-font-loading/#dom-fontface-weight
 */
FontFace.prototype.weight;

/**
 * @type {string}
 * @see http://dev.w3.org/csswg/css-font-loading/#dom-fontface-stretch
 */
FontFace.prototype.stretch;

/**
 * @type {string}
 * @see http://dev.w3.org/csswg/css-font-loading/#dom-fontface-unicoderange
 */
FontFace.prototype.unicodeRange;

/**
 * @type {string}
 * @see http://dev.w3.org/csswg/css-font-loading/#dom-fontface-variant
 */
FontFace.prototype.variant;

/**
 * @type {string}
 * @see http://dev.w3.org/csswg/css-font-loading/#dom-fontface-featuresettings
 */
FontFace.prototype.featureSettings;

/**
 * @type {string}
 * @see http://dev.w3.org/csswg/css-font-loading/#dom-fontface-variationsettings
 */
FontFace.prototype.variationSettings;

/**
 * @type {string}
 * @see http://dev.w3.org/csswg/css-font-loading/#dom-fontface-display
 */
FontFace.prototype.display;

/**
 * @type {string}
 * @see http://dev.w3.org/csswg/css-font-loading/#dom-fontface-ascentoverride
 */
FontFace.prototype.ascentOverride;

/**
 * @type {string}
 * @see http://dev.w3.org/csswg/css-font-loading/#dom-fontface-descentoverride
 */
FontFace.prototype.descentOverride;

/**
 * @type {string}
 * @see http://dev.w3.org/csswg/css-font-loading/#dom-fontface-linegapoverride
 */
FontFace.prototype.lineGapOverride;

/**
 * @type {!FontFaceLoadStatus}
 * @see http://dev.w3.org/csswg/css-font-loading/#dom-fontface-status
 */
FontFace.prototype.status;

/**
 * @return {!Promise<!FontFace>}
 * @see http://dev.w3.org/csswg/css-font-loading/#font-face-load
 */
FontFace.prototype.load = function() {};

/**
 * @type {!Promise<!FontFace>}
 * @see http://dev.w3.org/csswg/css-font-loading/#dom-fontface-loaded
 */
FontFace.prototype.loaded;

/**
 * @typedef {{
 *   fontfaces: (Array<!FontFace>|undefined)
 * }}
 * @see http://dev.w3.org/css-font-loading/#dictdef-fontfacesetloadeventinit
 */
var FontFaceSetLoadEventInit;

/**
 * @constructor
 * @param {string} type
 * @param {!FontFaceSetLoadEventInit=} eventInitDict
 * @extends {Event}
 * @see https://drafts.csswg.org/css-font-loading/#fontfacesetloadevent
 */
function FontFaceSetLoadEvent(type, eventInitDict) {}

/**
 * @type {!Array<!FontFace>}
 * @see http://dev.w3.org/css-font-loading/#dom-fontfacesetloadevent-fontfaces
 */
FontFaceSetLoadEvent.prototype.fontfaces;

/**
 * Set of possible string values: 'loaded', 'loading'.
 * @typedef {string}
 * @see http://dev.w3.org/csswg/css-font-loading/#enumdef-fontfacesetloadstatus
 */
var FontFaceSetLoadStatus;

/**
 * @interface
 * @extends {EventTarget}
 * @see http://dev.w3.org/csswg/css-font-loading/#FontFaceSet-interface
 */
function FontFaceSet() {}

// Event handlers
// http://dev.w3.org/csswg/css-font-loading/#FontFaceSet-events

/** @type {?function (Event)} */ FontFaceSet.prototype.onloading;
/** @type {?function (Event)} */ FontFaceSet.prototype.onloadingdone;
/** @type {?function (Event)} */ FontFaceSet.prototype.onloadingerror;

/**
 * @param {!FontFace} value
 * @see http://dev.w3.org/csswg/css-font-loading/#dom-fontfaceset-add
 * @return {undefined}
 */
FontFaceSet.prototype.add = function(value) {};

/**
 * @see http://dev.w3.org/csswg/css-font-loading/#dom-fontfaceset-clear
 * @return {undefined}
 */
FontFaceSet.prototype.clear = function() {};

/**
 * @param {!FontFace} value
 * @see http://dev.w3.org/csswg/css-font-loading/#dom-fontfaceset-delete
 * @return {undefined}
 */
FontFaceSet.prototype.delete = function(value) {};

/**
 * @param {!FontFace} font
 * @return {boolean}
 * @see http://dev.w3.org/csswg/css-font-loading/#dom-fontfaceset-has
 */
FontFaceSet.prototype.has = function(font) {};

/**
 * @param {function(!FontFace, number, !FontFaceSet)} callback
 * @param {?Object=} selfObj
 * see http://dev.w3.org/csswg/css-font-loading/#dom-fontfaceset-foreach
 * @return {undefined}
 */
FontFaceSet.prototype.forEach = function(callback, selfObj) {};

/**
 * @param {string} font
 * @param {string=} opt_text
 * @return {!Promise<!Array<!FontFace>>}
 * @see http://dev.w3.org/csswg/css-font-loading/#dom-fontfaceset-load
 */
FontFaceSet.prototype.load = function(font, opt_text) {};

/**
 * @param {string} font
 * @param {string=} opt_text
 * @return {boolean}
 * @see http://dev.w3.org/csswg/css-font-loading/#dom-fontfaceset-check
 */
FontFaceSet.prototype.check = function(font, opt_text) {};

/**
 * @type {!Promise<!FontFaceSet>}
 * @see http://dev.w3.org/csswg/css-font-loading/#dom-fontfaceset-ready
 */
FontFaceSet.prototype.ready;

/**
 * @type {FontFaceSetLoadStatus}
 * @see http://dev.w3.org/csswg/css-font-loading/#dom-fontfaceset-status
 */
FontFaceSet.prototype.status;

/**
 * @constructor
 * @param {string} type
 * @param {{
 *   animationName: (string|undefined),
 *   elapsedTime: (number|undefined),
 *   pseudoElement: (string|undefined)
 * }=} opt_animationEventInitDict
 * @extends {Event}
 * @see https://drafts.csswg.org/css-animations/#interface-animationevent
 */
function AnimationEvent(type, opt_animationEventInitDict) {};

/**
 * @type {string}
 * @see https://drafts.csswg.org/css-animations/#dom-animationevent-animationname
 */
AnimationEvent.prototype.animationName;

/**
 * @type {number}
 * @see https://drafts.csswg.org/css-animations/#dom-animationevent-elapsedtime
 */
AnimationEvent.prototype.elapsedTime;

/**
 * @type {string}
 * @see https://drafts.csswg.org/css-animations/#dom-animationevent-pseudoelement
 */
AnimationEvent.prototype.pseudoElement;

/**
 * @constructor
 * @extends {CSSRule}
 * @see http://dev.w3.org/csswg/css-animations/#csskeyframerule
 */
function CSSKeyframeRule() {}

/**
 * @type {string}
 * @see https://drafts.csswg.org/css-animations/#dom-csskeyframerule-keytext
 */
CSSKeyframeRule.prototype.keyText;

/**
 * @type {!CSSStyleDeclaration}
 * @see https://drafts.csswg.org/css-animations/#dom-csskeyframerule-style
 */
CSSKeyframeRule.prototype.style;


/**
 * @constructor
 * @extends {CSSRule}
 * @see http://dev.w3.org/csswg/css-animations/#csskeyframesrule
 */
function CSSKeyframesRule() {}

/**
 * @see https://drafts.csswg.org/css-animations/#dom-csskeyframesrule-name
 * @type {string}
 */
CSSKeyframesRule.prototype.name;

/**
 * @see https://drafts.csswg.org/css-animations/#dom-csskeyframesrule-cssrules
 * @type {!CSSRuleList}
 */
CSSKeyframesRule.prototype.cssRules;

/**
 * @see https://drafts.csswg.org/css-animations/#dom-csskeyframesrule-findrule
 * @param {string} key The key text for the rule to find.
 * @return {?CSSKeyframeRule}
 */
CSSKeyframesRule.prototype.findRule = function(key) {};

/**
 * @see https://drafts.csswg.org/css-animations/#dom-csskeyframesrule-appendrule
 * @param {string} rule The text for the rule to append.
 */
CSSKeyframesRule.prototype.appendRule = function(rule) {};

/**
 * @see https://drafts.csswg.org/css-animations/#dom-csskeyframesrule-deleterule
 * @param {string} key The key text for the rule to delete.
 */
CSSKeyframesRule.prototype.deleteRule = function(key) {};
/*
 * Copyright 2013 The Closure Compiler Authors
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/**
 * @fileoverview Definitions for W3C's device orientation and device motion
 *  events specification.
 *  This file depends on w3c_event.js.
 *  The whole file has been partially type annotated.
 *  Created from http://dev.w3.org/geo/api/spec-source-orientation.
 *
 * @externs
 */

/**
 * @record
 * @extends {EventInit}
 * @see https://w3c.github.io/deviceorientation/spec-source-orientation.html#deviceorientation
 */
function DeviceOrientationEventInit() {}

/** @type {number|undefined} */
DeviceOrientationEventInit.prototype.alpha;

/** @type {number|undefined} */
DeviceOrientationEventInit.prototype.beta;

/** @type {number|undefined} */
DeviceOrientationEventInit.prototype.gamma;

/** @type {boolean|undefined} */
DeviceOrientationEventInit.prototype.absolute;

/**
 * @constructor
 * @extends {Event}
 * @param {string} type
 * @param {!DeviceOrientationEventInit=} opt_eventInitDict
 */
function DeviceOrientationEvent(type, opt_eventInitDict) {}

/** @type {?number} */
DeviceOrientationEvent.prototype.alpha;

/** @type {?number} */
DeviceOrientationEvent.prototype.beta;

/** @type {?number} */
DeviceOrientationEvent.prototype.gamma;

/** @type {boolean} */
DeviceOrientationEvent.prototype.absolute;

/**
 * @type {?number}
 * @see https://developer.apple.com/library/safari/documentation/SafariDOMAdditions/Reference/DeviceOrientationEventClassRef/DeviceOrientationEvent/DeviceOrientationEvent.html#//apple_ref/javascript/instp/DeviceOrientationEvent/webkitCompassAccuracy
 */
DeviceOrientationEvent.prototype.webkitCompassAccuracy;

/**
 * @type {?number}
 * @see https://developer.apple.com/library/safari/documentation/SafariDOMAdditions/Reference/DeviceOrientationEventClassRef/DeviceOrientationEvent/DeviceOrientationEvent.html#//apple_ref/javascript/instp/DeviceOrientationEvent/webkitCompassHeading
 */
DeviceOrientationEvent.prototype.webkitCompassHeading;

/**
 * @constructor
 */
function DeviceAcceleration() {}

/** @type {?number} */
DeviceAcceleration.prototype.x;

/** @type {?number} */
DeviceAcceleration.prototype.y;

/** @type {?number} */
DeviceAcceleration.prototype.z;

/**
 * @constructor
 */
function DeviceRotationRate() {}

/** @type {?number} */
DeviceRotationRate.prototype.alpha;

/** @type {?number} */
DeviceRotationRate.prototype.beta;

/** @type {?number} */
DeviceRotationRate.prototype.gamma;

/**
 * @constructor
 * @extends {Event}
 */
function DeviceMotionEvent() {}

/** @type {?DeviceAcceleration} */
DeviceMotionEvent.prototype.acceleration;

/** @type {?DeviceAcceleration} */
DeviceMotionEvent.prototype.accelerationIncludingGravity;

/** @type {?DeviceRotationRate} */
DeviceMotionEvent.prototype.rotationRate;

/** @type {?number} */
DeviceMotionEvent.prototype.interval;
/*
 * Copyright 2008 The Closure Compiler Authors
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/**
 * @fileoverview Definitions for W3C's DOM Level 1 specification.
 *  The whole file has been fully type annotated. Created from
 *  http://www.w3.org/TR/REC-DOM-Level-1/ecma-script-language-binding.html
 *
 * @externs
 */

/**
 * @constructor
 * @param {string=} message
 * @param {string=} name
 * @see https://heycam.github.io/webidl/#idl-DOMException
 */
function DOMException(message, name) {}

/**
 * @const {number}
 * @see http://www.w3.org/TR/1998/REC-DOM-Level-1-19981001/level-one-core.html#ID-258A00AF
 */
DOMException.INDEX_SIZE_ERR;

/**
 * @const {number}
 * @see http://www.w3.org/TR/1998/REC-DOM-Level-1-19981001/level-one-core.html#ID-258A00AF
 */
DOMException.DOMSTRING_SIZE_ERR;

/**
 * @const {number}
 * @see http://www.w3.org/TR/1998/REC-DOM-Level-1-19981001/level-one-core.html#ID-258A00AF
 */
DOMException.HIERARCHY_REQUEST_ERR;

/**
 * @const {number}
 * @see http://www.w3.org/TR/1998/REC-DOM-Level-1-19981001/level-one-core.html#ID-258A00AF
 */
DOMException.WRONG_DOCUMENT_ERR;

/**
 * @const {number}
 * @see http://www.w3.org/TR/1998/REC-DOM-Level-1-19981001/level-one-core.html#ID-258A00AF
 */
DOMException.INVALID_CHARACTER_ERR;

/**
 * @const {number}
 * @see http://www.w3.org/TR/1998/REC-DOM-Level-1-19981001/level-one-core.html#ID-258A00AF
 */
DOMException.NO_DATA_ALLOWED_ERR;

/**
 * @const {number}
 * @see http://www.w3.org/TR/1998/REC-DOM-Level-1-19981001/level-one-core.html#ID-258A00AF
 */
DOMException.NO_MODIFICATION_ALLOWED_ERR;

/**
 * @const {number}
 * @see http://www.w3.org/TR/1998/REC-DOM-Level-1-19981001/level-one-core.html#ID-258A00AF
 */
DOMException.NOT_FOUND_ERR;

/**
 * @const {number}
 * @see http://www.w3.org/TR/1998/REC-DOM-Level-1-19981001/level-one-core.html#ID-258A00AF
 */
DOMException.NOT_SUPPORTED_ERR;

/**
 * @const {number}
 * @see http://www.w3.org/TR/1998/REC-DOM-Level-1-19981001/level-one-core.html#ID-258A00AF
 */
DOMException.INUSE_ATTRIBUTE_ERR;

/**
 * @constructor
 * @see http://www.w3.org/TR/1998/REC-DOM-Level-1-19981001/level-one-core.html#ID-258A00AF
 */
function ExceptionCode() {}

/**
 * @constructor
 * @see http://www.w3.org/TR/1998/REC-DOM-Level-1-19981001/level-one-core.html#ID-102161490
 */
function DOMImplementation() {}

/**
 * @param {string} feature
 * @param {string} version
 * @return {boolean}
 * @see http://www.w3.org/TR/1998/REC-DOM-Level-1-19981001/level-one-core.html#ID-5CED94D7
 * @nosideeffects
 */
DOMImplementation.prototype.hasFeature = function(feature, version) {};

/**
 * @constructor
 * @implements {EventTarget}
 * @see http://www.w3.org/TR/1998/REC-DOM-Level-1-19981001/level-one-core.html#ID-1950641247
 */
function Node() {}

/** @override */
Node.prototype.addEventListener = function(type, listener, opt_options) {};

/** @override */
Node.prototype.removeEventListener = function(type, listener, opt_options) {};

/** @override */
Node.prototype.dispatchEvent = function(evt) {};

/**
 * @type {NamedNodeMap<!Attr>}
 * @see http://www.w3.org/TR/1998/REC-DOM-Level-1-19981001/level-one-core.html#attribute-attributes
 */
Node.prototype.attributes;

/**
 * @type {!NodeList<!Node>}
 * @see http://www.w3.org/TR/1998/REC-DOM-Level-1-19981001/level-one-core.html#attribute-childNodes
 */
Node.prototype.childNodes;

/**
 * @type {Node}
 * @see http://www.w3.org/TR/1998/REC-DOM-Level-1-19981001/level-one-core.html#attribute-firstChild
 */
Node.prototype.firstChild;

/**
 * @type {Node}
 * @see http://www.w3.org/TR/1998/REC-DOM-Level-1-19981001/level-one-core.html#attribute-lastChild
 */
Node.prototype.lastChild;

/**
 * @type {Node}
 * @see http://www.w3.org/TR/1998/REC-DOM-Level-1-19981001/level-one-core.html#attribute-nextSibling
 */
Node.prototype.nextSibling;

/**
 * @type {string}
 * @see http://www.w3.org/TR/1998/REC-DOM-Level-1-19981001/level-one-core.html#attribute-nodeName
 */
Node.prototype.nodeName;

/**
 * @type {string}
 * @see http://www.w3.org/TR/1998/REC-DOM-Level-1-19981001/level-one-core.html#attribute-nodeValue
 */
Node.prototype.nodeValue;

/**
 * @type {number}
 * @see http://www.w3.org/TR/1998/REC-DOM-Level-1-19981001/level-one-core.html#attribute-nodeType
 */
Node.prototype.nodeType;

/**
 * @type {Document}
 * @see http://www.w3.org/TR/1998/REC-DOM-Level-1-19981001/level-one-core.html#attribute-ownerDocument
 */
Node.prototype.ownerDocument;

/**
 * @type {Node}
 * @see http://www.w3.org/TR/1998/REC-DOM-Level-1-19981001/level-one-core.html#attribute-parentNode
 */
Node.prototype.parentNode;

/**
 * @type {Node}
 * @see http://www.w3.org/TR/1998/REC-DOM-Level-1-19981001/level-one-core.html#attribute-previousSibling
 */
Node.prototype.previousSibling;

/**
 * @param {Node} newChild
 * @return {!Node}
 * @see http://www.w3.org/TR/1998/REC-DOM-Level-1-19981001/level-one-core.html#method-appendChild
 */
Node.prototype.appendChild = function(newChild) {};

/**
 * @param {boolean} deep
 * @return {THIS}
 * @this {THIS}
 * @template THIS
 * @see http://www.w3.org/TR/1998/REC-DOM-Level-1-19981001/level-one-core.html#method-cloneNode
 * @nosideeffects
 */
Node.prototype.cloneNode = function(deep) {};

/**
 * @return {boolean}
 * @see http://www.w3.org/TR/1998/REC-DOM-Level-1-19981001/level-one-core.html#method-hasChildNodes
 * @nosideeffects
 */
Node.prototype.hasChildNodes = function() {};

/**
 * @param {Node} newChild
 * @param {Node} refChild
 * @return {!Node}
 * @see http://www.w3.org/TR/1998/REC-DOM-Level-1-19981001/level-one-core.html#method-insertBefore
 */
Node.prototype.insertBefore = function(newChild, refChild) {};

/**
 * @param {Node} oldChild
 * @return {!Node}
 * @see http://www.w3.org/TR/1998/REC-DOM-Level-1-19981001/level-one-core.html#method-removeChild
 */
Node.prototype.removeChild = function(oldChild) {};

/**
 * @param {Node} newChild
 * @param {Node} oldChild
 * @return {!Node}
 * @see http://www.w3.org/TR/1998/REC-DOM-Level-1-19981001/level-one-core.html#method-replaceChild
 */
Node.prototype.replaceChild = function(newChild, oldChild) {};

/**
 * @const {number}
 * @see http://www.w3.org/TR/1998/REC-DOM-Level-1-19981001/level-one-core.html#ID-1950641247
 */
Node.ATTRIBUTE_NODE;

/**
 * @const {number}
 * @see http://www.w3.org/TR/1998/REC-DOM-Level-1-19981001/level-one-core.html#ID-1950641247
 */
Node.CDATA_SECTION_NODE;

/**
 * @const {number}
 * @see http://www.w3.org/TR/1998/REC-DOM-Level-1-19981001/level-one-core.html#ID-1950641247
 */
Node.COMMENT_NODE;

/**
 * @const {number}
 * @see http://www.w3.org/TR/1998/REC-DOM-Level-1-19981001/level-one-core.html#ID-1950641247
 */
Node.DOCUMENT_FRAGMENT_NODE;

/**
 * @const {number}
 * @see http://www.w3.org/TR/1998/REC-DOM-Level-1-19981001/level-one-core.html#ID-1950641247
 */
Node.DOCUMENT_NODE;

/**
 * @const {number}
 * @see http://www.w3.org/TR/1998/REC-DOM-Level-1-19981001/level-one-core.html#ID-1950641247
 */
Node.DOCUMENT_TYPE_NODE;

/**
 * @const {number}
 * @see http://www.w3.org/TR/1998/REC-DOM-Level-1-19981001/level-one-core.html#ID-1950641247
 */
Node.ELEMENT_NODE;

/**
 * @const {number}
 * @see http://www.w3.org/TR/1998/REC-DOM-Level-1-19981001/level-one-core.html#ID-1950641247
 */
Node.ENTITY_NODE;

/**
 * @const {number}
 * @see http://www.w3.org/TR/1998/REC-DOM-Level-1-19981001/level-one-core.html#ID-1950641247
 */
Node.ENTITY_REFERENCE_NODE;

/**
 * @const {number}
 * @see http://www.w3.org/TR/1998/REC-DOM-Level-1-19981001/level-one-core.html#ID-1950641247
 */
Node.PROCESSING_INSTRUCTION_NODE;

/**
 * @const {number}
 * @see http://www.w3.org/TR/1998/REC-DOM-Level-1-19981001/level-one-core.html#ID-1950641247
 */
Node.TEXT_NODE;

/**
 * @const {number}
 * @see http://www.w3.org/TR/1998/REC-DOM-Level-1-19981001/level-one-core.html#ID-1950641247
 */
Node.NOTATION_NODE;

/**
 * @constructor
 * @extends {Node}
 * @see http://www.w3.org/TR/1998/REC-DOM-Level-1-19981001/level-one-core.html#ID-B63ED1A3
 */
function DocumentFragment() {}

/**
 * @constructor
 * @extends {Node}
 * @see http://www.w3.org/TR/1998/REC-DOM-Level-1-19981001/level-one-core.html#i-Document
 */
function Document() {}

/**
 * @type {DocumentType}
 * @see http://www.w3.org/TR/1998/REC-DOM-Level-1-19981001/level-one-core.html#attribute-doctype
 */
Document.prototype.doctype;

/**
 * @type {!HTMLHtmlElement}
 * @see http://www.w3.org/TR/1998/REC-DOM-Level-1-19981001/level-one-core.html#attribute-documentElement
 */
Document.prototype.documentElement;

/**
 * @type {DOMImplementation}
 * @see http://www.w3.org/TR/1998/REC-DOM-Level-1-19981001/level-one-core.html#attribute-implementation
 */
Document.prototype.implementation;

/**
 * @param {string} name
 * @return {!Attr}
 * @see http://www.w3.org/TR/1998/REC-DOM-Level-1-19981001/level-one-core.html#method-createAttribute
 * @nosideeffects
 */
Document.prototype.createAttribute = function(name) {};

/**
 * @param {string} data
 * @return {!Comment}
 * @see http://www.w3.org/TR/1998/REC-DOM-Level-1-19981001/level-one-core.html#method-createComment
 * @nosideeffects
 */
Document.prototype.createComment = function(data) {};

/**
 * @param {string} data
 * @return {!CDATASection}
 * @see http://www.w3.org/TR/1998/REC-DOM-Level-1-19981001/level-one-core.html#method-createCDATASection
 * @nosideeffects
 */
Document.prototype.createCDATASection = function(data) {};

/**
 * @return {!DocumentFragment}
 * @see http://www.w3.org/TR/1998/REC-DOM-Level-1-19981001/level-one-core.html#method-createDocumentFragment
 * @nosideeffects
 */
Document.prototype.createDocumentFragment = function() {};

/**
 * Create a DOM element.
 *
 * Web components introduced the second parameter as a way of extending existing
 * tags (e.g. document.createElement('button', {is: 'fancy-button'})).
 *
 * @param {string} tagName
 * @param {({is: string}|string)=} opt_typeExtension
 * @return {!Element}
 * @nosideeffects
 * @see http://www.w3.org/TR/1998/REC-DOM-Level-1-19981001/level-one-core.html#method-createElement
 * @see https://dom.spec.whatwg.org/#dom-document-createelement
 */
Document.prototype.createElement = function(tagName, opt_typeExtension) {};

/**
 * @param {string} target
 * @param {string} data
 * @return {!ProcessingInstruction}
 * @see http://www.w3.org/TR/1998/REC-DOM-Level-1-19981001/level-one-core.html#method-createProcessingInstruction
 * @nosideeffects
 */
Document.prototype.createProcessingInstruction = function(target, data) {};

/**
 * @param {number|string} data
 * @return {!Text}
 * @see http://www.w3.org/TR/1998/REC-DOM-Level-1-19981001/level-one-core.html#method-createTextNode
 * @nosideeffects
 */
Document.prototype.createTextNode = function(data) {};

/**
 * @param {string} tagname
 * @return {!NodeList<!Element>}
 * @see http://www.w3.org/TR/1998/REC-DOM-Level-1-19981001/level-one-core.html#ID-A6C9094
 * @nosideeffects
 */
Document.prototype.getElementsByTagName = function(tagname) {};

/**
 * @see https://developer.mozilla.org/en-US/docs/Web/API/Document/open
 * @see https://html.spec.whatwg.org/multipage/dynamic-markup-insertion.html#dom-document-open
 */
Document.prototype.open;

/**
 * @return {undefined}
 * @see https://html.spec.whatwg.org/multipage/dynamic-markup-insertion.html#dom-document-close
 */
Document.prototype.close = function() {};

/**
 * @param {!TrustedHTML|string} text
 * @return {undefined}
 * @see https://html.spec.whatwg.org/multipage/dynamic-markup-insertion.html#dom-document-write
 */
Document.prototype.write = function(text) {};

/**
 * @param {!TrustedHTML|string} text
 * @return {undefined}
 * @see https://html.spec.whatwg.org/multipage/dynamic-markup-insertion.html#dom-document-writeln
 */
Document.prototype.writeln = function(text) {};

/**
 * @constructor
 * @implements {IArrayLike<T>}
 * @implements {Iterable<T>}
 * @template T
 * @see http://www.w3.org/TR/1998/REC-DOM-Level-1-19981001/level-one-core.html#ID-536297177
 */
function NodeList() {}

/**
 * @type {number}
 * @see http://www.w3.org/TR/1998/REC-DOM-Level-1-19981001/level-one-core.html#ID-203510337
 */
NodeList.prototype.length;

/**
 * @param {number} index
 * @return {T|null}
 * @see http://www.w3.org/TR/1998/REC-DOM-Level-1-19981001/level-one-core.html#ID-844377136
 */
NodeList.prototype.item = function(index) {};

/**
 * @param {?function(this:S, T, number, !NodeList<T>): ?} callback
 * @param {S=} opt_thisobj
 * @template S
 * @return {undefined}
 * @see https://developer.mozilla.org/en-US/docs/Web/API/NodeList/forEach
 */
NodeList.prototype.forEach = function(callback, opt_thisobj) {};

/**
 * @return {!IteratorIterable<!Array<number|T>>}
 * @see https://developer.mozilla.org/en-US/docs/Web/API/NodeList/entries
 */
NodeList.prototype.entries = function() {};

/**
 * @return {!IteratorIterable<number>}
 * @see https://developer.mozilla.org/en-US/docs/Web/API/NodeList/keys
 */
NodeList.prototype.keys = function() {};

/**
 * @return {!IteratorIterable<T>}
 * @see https://developer.mozilla.org/en-US/docs/Web/API/NodeList/values
 */
NodeList.prototype.values = function() {};

/**
 * @constructor
 * @implements {IObject<(string|number), T>}
 * @implements {IArrayLike<T>}
 * @implements {Iterable<T>}
 * @template T
 * @see http://www.w3.org/TR/1998/REC-DOM-Level-1-19981001/level-one-core.html#ID-1780488922
 */
function NamedNodeMap() {}

/**
 * @type {number}
 * @see http://www.w3.org/TR/1998/REC-DOM-Level-1-19981001/level-one-core.html#ID-6D0FB19E
 */
NamedNodeMap.prototype.length;

/**
 * @param {string} name
 * @return {Node}
 * @see http://www.w3.org/TR/1998/REC-DOM-Level-1-19981001/level-one-core.html#ID-1074577549
 * @nosideeffects
 */
NamedNodeMap.prototype.getNamedItem = function(name) {};

/**
 * @param {number} index
 * @return {Node}
 * @see http://www.w3.org/TR/1998/REC-DOM-Level-1-19981001/level-one-core.html#ID-349467F9
 * @nosideeffects
 */
NamedNodeMap.prototype.item = function(index) {};

/**
 * @param {string} name
 * @return {Node}
 * @see http://www.w3.org/TR/1998/REC-DOM-Level-1-19981001/level-one-core.html#ID-D58B193
 */
NamedNodeMap.prototype.removeNamedItem = function(name) {};

/**
 * @param {Node} arg
 * @return {Node}
 * @see http://www.w3.org/TR/1998/REC-DOM-Level-1-19981001/level-one-core.html#ID-1025163788
 */
NamedNodeMap.prototype.setNamedItem = function(arg) {};

/**
 * @constructor
 * @extends {Node}
 * @see http://www.w3.org/TR/1998/REC-DOM-Level-1-19981001/level-one-core.html#ID-FF21A306
 */
function CharacterData() {}

/**
 * @type {string}
 * @see http://www.w3.org/TR/1998/REC-DOM-Level-1-19981001/level-one-core.html#ID-72AB8359
 */
CharacterData.prototype.data;

/**
 * @type {number}
 * @see http://www.w3.org/TR/1998/REC-DOM-Level-1-19981001/level-one-core.html#ID-7D61178C
 */
CharacterData.prototype.length;

/**
 * @param {string} arg
 * @return {undefined}
 * @see http://www.w3.org/TR/1998/REC-DOM-Level-1-19981001/level-one-core.html#ID-32791A2F
 */
CharacterData.prototype.appendData = function(arg) {};

/**
 * @param {number} offset
 * @param {number} count
 * @return {undefined}
 * @see http://www.w3.org/TR/1998/REC-DOM-Level-1-19981001/level-one-core.html#ID-7C603781
 */
CharacterData.prototype.deleteData = function(offset, count) {};

/**
 * @param {number} offset
 * @param {string} arg
 * @return {undefined}
 * @see http://www.w3.org/TR/1998/REC-DOM-Level-1-19981001/level-one-core.html#ID-3EDB695F
 */
CharacterData.prototype.insertData = function(offset, arg) {};

/**
 * @param {number} offset
 * @param {number} count
 * @param {string} arg
 * @return {undefined}
 * @see http://www.w3.org/TR/1998/REC-DOM-Level-1-19981001/level-one-core.html#ID-E5CBA7FB
 */
CharacterData.prototype.replaceData = function(offset, count, arg) {};

/**
 * @param {number} offset
 * @param {number} count
 * @return {string}
 * @see http://www.w3.org/TR/1998/REC-DOM-Level-1-19981001/level-one-core.html#ID-6531BCCF
 * @nosideeffects
 */
CharacterData.prototype.substringData = function(offset, count) {};

/**
 * @constructor
 * @extends {Node}
 * @see http://www.w3.org/TR/1998/REC-DOM-Level-1-19981001/level-one-core.html#ID-637646024
 */
function Attr() {}

/**
 * @type {string}
 * @see http://www.w3.org/TR/1998/REC-DOM-Level-1-19981001/level-one-core.html#ID-1112119403
 */
Attr.prototype.name;

/**
 * @type {boolean}
 * @see http://www.w3.org/TR/1998/REC-DOM-Level-1-19981001/level-one-core.html#ID-862529273
 */
Attr.prototype.specified;

/**
 * @type {string}
 * @see http://www.w3.org/TR/1998/REC-DOM-Level-1-19981001/level-one-core.html#ID-221662474
 */
Attr.prototype.value;

/**
 * @constructor
 * @extends {Node}
 * @see http://www.w3.org/TR/1998/REC-DOM-Level-1-19981001/level-one-core.html#ID-745549614
 */
function Element() {}

/**
 * @type {string}
 * @implicitCast
 * @see https://dom.spec.whatwg.org/index.html#dom-element-id
 */
Element.prototype.id;

/**
 * An Element always contains a non-null NamedNodeMap containing the attributes
 * of this node.
 * @type {!NamedNodeMap<!Attr>}
 * @see http://www.w3.org/TR/1998/REC-DOM-Level-1-19981001/level-one-core.html#attribute-attributes
 */
Element.prototype.attributes;

/**
 * @type {string}
 * @see http://www.w3.org/TR/1998/REC-DOM-Level-1-19981001/level-one-core.html#attribute-tagName
 */
Element.prototype.tagName;

/**
 * @implicitCast
 * @type {?}
 * @see https://developer.mozilla.org/en-US/docs/Web/API/Element/className
 *    We type it as ? even though it is a string, because some SVG elements have
 *    className that is an object, which isn't a subtype of string.
 *    Alternative: TypeScript types this as string and types className on
 *    SVGElement as ?.
 */
Element.prototype.className;

/**
 * @param {string} name
 * @param {?number=} flags
 * @return {string}
 * @see http://www.w3.org/TR/1998/REC-DOM-Level-1-19981001/level-one-core.html#method-getAttribute
 * @see http://msdn.microsoft.com/en-us/library/ms536429(VS.85).aspx
 * @nosideeffects
 */
Element.prototype.getAttribute = function(name, flags) {};

/**
 * @param {string} name
 * @return {Attr}
 * @see http://www.w3.org/TR/1998/REC-DOM-Level-1-19981001/level-one-core.html#method-getAttributeNode
 * @nosideeffects
 */
Element.prototype.getAttributeNode = function(name) {};

/**
 * @param {string} tagname
 * @return {!NodeList<!Element>}
 * @see http://www.w3.org/TR/1998/REC-DOM-Level-1-19981001/level-one-core.html#ID-1938918D
 * @nosideeffects
 */
Element.prototype.getElementsByTagName = function(tagname) {};

/**
 * @param {string} name
 * @return {undefined}
 * @see http://www.w3.org/TR/1998/REC-DOM-Level-1-19981001/level-one-core.html#method-removeAttribute
 */
Element.prototype.removeAttribute = function(name) {};

/**
 * @param {Attr} oldAttr
 * @return {?Attr}
 * @see http://www.w3.org/TR/1998/REC-DOM-Level-1-19981001/level-one-core.html#method-removeAttributeNode
 */
Element.prototype.removeAttributeNode = function(oldAttr) {};

/**
 * @param {string} name
 * @param {string|number|boolean|!TrustedHTML|!TrustedScriptURL}
 *     value Values are converted to strings with ToString, so we accept number
 *     and boolean since both convert easily to strings.
 * @return {undefined}
 * @see http://www.w3.org/TR/1998/REC-DOM-Level-1-19981001/level-one-core.html#method-setAttribute
 */
Element.prototype.setAttribute = function(name, value) {};

/**
 * @param {Attr} newAttr
 * @return {?Attr}
 * @see http://www.w3.org/TR/1998/REC-DOM-Level-1-19981001/level-one-core.html#method-setAttributeNode
 */
Element.prototype.setAttributeNode = function(newAttr) {};

// Event handlers
// The DOM level 3 spec has a good index of these
// http://www.w3.org/TR/DOM-Level-3-Events/#event-types

/** @type {?function (Event)} */ Element.prototype.onabort;
/** @type {?function (Event)} */ Element.prototype.onbeforeinput;
/** @type {?function (Event)} */ Element.prototype.onbeforeunload;
/** @type {?function (Event)} */ Element.prototype.onblur;
/** @type {?function (Event)} */ Element.prototype.onchange;
/** @type {?function (Event)} */ Element.prototype.onclick;
/** @type {?function (Event)} */ Element.prototype.oncompositionstart;
/** @type {?function (Event)} */ Element.prototype.oncompositionupdate;
/** @type {?function (Event)} */ Element.prototype.oncompositionend;
/** @type {?function (Event)} */ Element.prototype.oncontextmenu;
/** @type {?function (Event)} */ Element.prototype.oncopy;
/** @type {?function (Event)} */ Element.prototype.oncut;
/** @type {?function (Event)} */ Element.prototype.ondblclick;
/** @type {?function (Event)} */ Element.prototype.onerror;
/** @type {?function (Event)} */ Element.prototype.onfocus;
/** @type {?function (Event)} */ Element.prototype.onfocusin;
/** @type {?function (Event)} */ Element.prototype.onfocusout;
/** @type {?function (Event)} */ Element.prototype.oninput;
/** @type {?function (Event)} */ Element.prototype.onkeydown;
/** @type {?function (Event)} */ Element.prototype.onkeypress;
/** @type {?function (Event)} */ Element.prototype.onkeyup;
/** @type {?function (Event): void} */ Element.prototype.onload;
/** @type {?function (Event): void} */ Element.prototype.onunload;
/** @type {?function (Event)} */ Element.prototype.onmousedown;
/** @type {?function (Event)} */ Element.prototype.onmousemove;
/** @type {?function (Event)} */ Element.prototype.onmouseout;
/** @type {?function (Event)} */ Element.prototype.onmouseover;
/** @type {?function (Event)} */ Element.prototype.onmouseup;
/** @type {?function (Event)} */ Element.prototype.onmousewheel;
/** @type {?function (Event)} */ Element.prototype.onpaste;
/** @type {?function (Event)} */ Element.prototype.onreset;
/** @type {?function (Event)} */ Element.prototype.onresize;
/** @type {?function (Event)} */ Element.prototype.onscroll;
/** @type {?function (Event)} */ Element.prototype.onselect;
/** @type {?function (Event=)} */ Element.prototype.onsubmit;
/** @type {?function (Event)} */ Element.prototype.ontextinput;
/** @type {?function (Event)} */ Element.prototype.onwheel;

/**
 * @constructor
 * @extends {CharacterData}
 * @param {string=} contents Optional textual content.
 * @see http://www.w3.org/TR/1998/REC-DOM-Level-1-19981001/level-one-core.html#ID-1312295772
 */
function Text(contents) {}

/**
 * @param {number} offset
 * @return {Text}
 * @see http://www.w3.org/TR/1998/REC-DOM-Level-1-19981001/level-one-core.html#ID-38853C1D
 */
Text.prototype.splitText = function(offset) {};

/**
 * @constructor
 * @extends {CharacterData}
 * @see http://www.w3.org/TR/1998/REC-DOM-Level-1-19981001/level-one-core.html#ID-1728279322
 */
function Comment() {}

/**
 * @constructor
 * @extends {Text}
 * @see http://www.w3.org/TR/1998/REC-DOM-Level-1-19981001/level-one-core.html#ID-667469212
 */
function CDATASection() {}

/**
 * @constructor
 * @extends {Node}
 * @see http://www.w3.org/TR/1998/REC-DOM-Level-1-19981001/level-one-core.html#ID-412266927
 */
function DocumentType() {}

/**
 * @type {string}
 * @see http://www.w3.org/TR/1998/REC-DOM-Level-1-19981001/level-one-core.html#ID-1844763134
 */
DocumentType.prototype.name;

/**
 * @constructor
 * @extends {Node}
 * @see http://www.w3.org/TR/1998/REC-DOM-Level-1-19981001/level-one-core.html#ID-1004215813
 */
function ProcessingInstruction() {}

/**
 * @type {string}
 * @see http://www.w3.org/TR/1998/REC-DOM-Level-1-19981001/level-one-core.html#ID-837822393
 */
ProcessingInstruction.prototype.data;

/**
 * @type {string}
 * @see http://www.w3.org/TR/1998/REC-DOM-Level-1-19981001/level-one-core.html#ID-1478689192
 */
ProcessingInstruction.prototype.target;


/**
 * @constructor
 * @implements {EventTarget}
 */
function Window() {}
Window.prototype.Window;

/** @override */
Window.prototype.addEventListener = function(type, listener, opt_options) {};

/** @override */
Window.prototype.removeEventListener = function(type, listener, opt_options) {};

/** @override */
Window.prototype.dispatchEvent = function(evt) {};

/** @type {?function (Event)} */ Window.prototype.onabort;
/** @type {?function (Event)} */ Window.prototype.onbeforeunload;
/** @type {?function (Event)} */ Window.prototype.onblur;
/** @type {?function (Event)} */ Window.prototype.onchange;
/** @type {?function (Event)} */ Window.prototype.onclick;
/** @type {?function (Event)} */ Window.prototype.onclose;
/** @type {?function (Event)} */ Window.prototype.oncontextmenu;
/** @type {?function (Event)} */ Window.prototype.ondblclick;
/** @type {?function (Event)} */ Window.prototype.ondragdrop;
// onerror has a special signature.
// See
//  https://developer.mozilla.org/en-US/docs/Web/API/GlobalEventHandlers/onerror
/**
 * @type {?function (string, string, number, number, !Error):?}
 */
Window.prototype.onerror;
/** @type {?function (Event)} */ Window.prototype.onfocus;
/** @type {?function (Event)} */ Window.prototype.onhashchange;
/** @type {?function (Event)} */ Window.prototype.onkeydown;
/** @type {?function (Event)} */ Window.prototype.onkeypress;
/** @type {?function (Event)} */ Window.prototype.onkeyup;
/** @type {?function (Event)} */ Window.prototype.onload;
/** @type {?function (Event)} */ Window.prototype.onmousedown;
/** @type {?function (Event)} */ Window.prototype.onmousemove;
/** @type {?function (Event)} */ Window.prototype.onmouseout;
/** @type {?function (Event)} */ Window.prototype.onmouseover;
/** @type {?function (Event)} */ Window.prototype.onmouseup;
/** @type {?function (Event)} */ Window.prototype.onmousewheel;
/** @type {?function (Event)} */ Window.prototype.onpaint;
/** @type {?function (Event)} */ Window.prototype.onpopstate;
/** @type {?function (Event)} */ Window.prototype.onreset;
/** @type {?function (Event)} */ Window.prototype.onresize;
/** @type {?function (Event)} */ Window.prototype.onscroll;
/** @type {?function (Event)} */ Window.prototype.onselect;
/** @type {?function (Event=)} */ Window.prototype.onsubmit;
/** @type {?function (Event)} */ Window.prototype.onunhandledrejection;
/** @type {?function (Event)} */ Window.prototype.onunload;
/** @type {?function (Event)} */ Window.prototype.onwheel;
/** @type {?function (Event)} */ Window.prototype.onstorage;
/*
 * Copyright 2008 The Closure Compiler Authors
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/**
 * @fileoverview Definitions for W3C's DOM Level 2 specification.
 *  This file depends on w3c_dom1.js.
 *  The whole file has been fully type annotated.
 *  Created from
 *  http://www.w3.org/TR/REC-DOM-Level-1/ecma-script-language-binding.html
 *
 * @externs
 */

/**
 * @param {string} s id.
 * @return {Element}
 * @nosideeffects
 * @see https://www.w3.org/TR/2000/CR-DOM-Level-2-20000510/core.html#ID-getElBId
 */
Document.prototype.getElementById = function(s) {};

/**
 * @param {?string} namespaceURI
 * @param {string} qualifiedName
 * @param {string=} opt_typeExtension
 * @return {!Element}
 * @see https://www.w3.org/TR/2000/CR-DOM-Level-2-20000510/core.html#ID-DocCrElNS
 */
Document.prototype.createElementNS = function(
    namespaceURI, qualifiedName, opt_typeExtension) {};

/**
 * @param {?string} namespaceURI
 * @param {string} qualifiedName
 * @return {!Attr}
 * @see https://www.w3.org/TR/2000/CR-DOM-Level-2-20000510/core.html#ID-DocCrElNS
 */
Document.prototype.createAttributeNS = function(namespaceURI, qualifiedName) {};

/**
 * @param {Node} root
 * @param {number=} whatToShow
 * @param {NodeFilter=} filter
 * @param {boolean=} entityReferenceExpansion
 * @return {!NodeIterator}
 * @see https://www.w3.org/TR/2000/REC-DOM-Level-2-Traversal-Range-20001113/traversal.html#Traversal-Document
 * @see https://dom.spec.whatwg.org/#interface-document
 * @nosideeffects
 */
Document.prototype.createNodeIterator = function(
    root, whatToShow, filter, entityReferenceExpansion) {};

/**
 * @param {Node} root
 * @param {number=} whatToShow
 * @param {NodeFilter=} filter
 * @param {boolean=} entityReferenceExpansion
 * @return {!TreeWalker}
 * @see https://www.w3.org/TR/2000/REC-DOM-Level-2-Traversal-Range-20001113/traversal.html#Traversal-Document
 * @see https://dom.spec.whatwg.org/#interface-document
 * @nosideeffects
 */
Document.prototype.createTreeWalker = function(
    root, whatToShow, filter, entityReferenceExpansion) {};

/**
 * @param {string} namespace
 * @param {string} name
 * @return {!NodeList<!Element>}
 * @nosideeffects
 * @see https://www.w3.org/TR/2000/CR-DOM-Level-2-20000510/core.html#ID-getElBTNNS
 */
Document.prototype.getElementsByTagNameNS = function(namespace, name) {};

/**
 * @param {!Node} externalNode
 * @param {boolean=} deep
 * @return {!Node}
 * @see https://www.w3.org/TR/2000/CR-DOM-Level-2-20000510/core.html#Core-Document-importNode
 */
Document.prototype.importNode = function(externalNode, deep) {};

/**
 * @constructor
 * @implements {IObject<(string|number),T>}
 * @implements {IArrayLike<T>}
 * @implements {Iterable<T>}
 * @template T
 * @see http://www.w3.org/TR/2000/CR-DOM-Level-2-20000510/html.html#ID-75708506
 */
function HTMLCollection() {}

/**
 * @type {number}
 * @see http://www.w3.org/TR/2000/CR-DOM-Level-2-20000510/html.html#ID-40057551
 */
HTMLCollection.prototype.length;

/**
 * @param {number} index
 * @return {T|null}
 * @see http://www.w3.org/TR/2000/CR-DOM-Level-2-20000510/html.html#ID-33262535
 * @nosideeffects
 */
HTMLCollection.prototype.item = function(index) {};

/**
 * @param {string} name
 * @return {T|null}
 * @see http://www.w3.org/TR/2000/CR-DOM-Level-2-20000510/html.html#ID-21069976
 * @nosideeffects
 */
HTMLCollection.prototype.namedItem = function(name) {};

/**
 * @constructor
 * @extends {HTMLCollection<HTMLOptionElement>}
 * @see https://html.spec.whatwg.org/multipage/common-dom-interfaces.html#htmloptionscollection
 */
function HTMLOptionsCollection() {}

/**
 * @type {number}
 * @see https://html.spec.whatwg.org/multipage/common-dom-interfaces.html#dom-htmloptionscollection-length
 * @nosideeffects
 */
HTMLOptionsCollection.prototype.length;

/**
 * @param {HTMLOptionElement|HTMLOptGroupElement} element
 * @param {HTMLElement|number=} before
 * @return {undefined}
 * @see https://html.spec.whatwg.org/multipage/common-dom-interfaces.html#dom-htmloptionscollection-add
 */
HTMLOptionsCollection.prototype.add = function(element, before) {};

/**
 * NOTE(tjgq): The HTMLOptionsCollection#item method is inherited from
 * HTMLCollection, but it must be declared explicitly to work around an error
 * when building a jsinterop library for GWT.
 * @param {number} index
 * @return {HTMLOptionElement}
 * @override
 * @nosideeffects
 */
HTMLOptionsCollection.prototype.item = function(index) {};

/**
 * @param {number} index
 * @return {undefined}
 * @see https://html.spec.whatwg.org/multipage/common-dom-interfaces.html#dom-htmloptionscollection-remove
 */
HTMLOptionsCollection.prototype.remove = function(index) {};

/**
 * @constructor
 * @extends {Document}
 * @see http://www.w3.org/TR/2000/CR-DOM-Level-2-20000510/html.html#ID-26809268
 */
function HTMLDocument() {}

/**
 * @type {string}
 * @see http://www.w3.org/TR/2000/CR-DOM-Level-2-20000510/html.html#ID-18446827
 */
HTMLDocument.prototype.title;

/**
 * @type {string}
 * @see http://www.w3.org/TR/2000/CR-DOM-Level-2-20000510/html.html#ID-95229140
 */
HTMLDocument.prototype.referrer;

/**
 * @type {string}
 * @see http://www.w3.org/TR/2000/CR-DOM-Level-2-20000510/html.html#ID-2250147
 */
HTMLDocument.prototype.domain;

/**
 * @type {string}
 * @see http://www.w3.org/TR/2000/CR-DOM-Level-2-20000510/html.html#ID-46183437
 */
HTMLDocument.prototype.URL;

/**
 * @type {!HTMLBodyElement}
 * @see http://www.w3.org/TR/2000/CR-DOM-Level-2-20000510/html.html#ID-56360201
 */
HTMLDocument.prototype.body;

/**
 * @type {!HTMLCollection<!HTMLImageElement>}
 * @see http://www.w3.org/TR/2000/CR-DOM-Level-2-20000510/html.html#ID-90379117
 */
HTMLDocument.prototype.images;

/**
 * @type {!HTMLCollection<!HTMLAppletElement>}
 * @see http://www.w3.org/TR/2000/CR-DOM-Level-2-20000510/html.html#ID-85113862
 */
HTMLDocument.prototype.applets;

/**
 * @type {!HTMLCollection<(!HTMLAnchorElement|!HTMLAreaElement)>}
 * @see http://www.w3.org/TR/2000/CR-DOM-Level-2-20000510/html.html#ID-7068919
 */
HTMLDocument.prototype.links;

/**
 * @type {!HTMLCollection<!HTMLFormElement>}
 * @see http://www.w3.org/TR/2000/CR-DOM-Level-2-20000510/html.html#ID-1689064
 */
HTMLDocument.prototype.forms;

/**
 * @type {!HTMLCollection<!HTMLAnchorElement>}
 * @see http://www.w3.org/TR/2000/CR-DOM-Level-2-20000510/html.html#ID-7577272
 */
HTMLDocument.prototype.anchors;

/**
 * @type {string}
 * @see http://www.w3.org/TR/2000/CR-DOM-Level-2-20000510/html.html#ID-8747038
 */
HTMLDocument.prototype.cookie;

/**
 * @param {string=} opt_mimeType
 * @param {string=} opt_replace
 * @return {undefined}
 * @see http://www.w3.org/TR/2000/CR-DOM-Level-2-20000510/html.html#ID-72161170
 * Even though official spec says "no parameters" some old browsers might take
 * optional parameters:
 * https://msdn.microsoft.com/en-us/library/ms536652(v=vs.85).aspx
 * @override
 */
HTMLDocument.prototype.open = function(opt_mimeType, opt_replace) {};

/**
 * @param {string} elementName
 * @return {!NodeList<!Element>}
 * @see http://www.w3.org/TR/2000/CR-DOM-Level-2-20000510/html.html#ID-71555259
 * @nosideeffects
 */
HTMLDocument.prototype.getElementsByName = function(elementName) {};


/**
@typedef {{
  createNodeIterator: function(Node, number=, NodeFilter=, boolean=) :
NodeIterator, createTreeWalker: function(Node, number=, NodeFilter=, boolean=) :
TreeWalker
}}
*/
var TraversalDocument;

/**
 * @record
 * @see http://www.w3.org/TR/DOM-Level-2-Traversal-Range/traversal.html#Traversal-NodeFilter
 */
function NodeFilter() {}

/* Constants for whatToShow */
/** @const {number} */ NodeFilter.SHOW_ALL;
/** @const {number} */ NodeFilter.SHOW_ATTRIBUTE;
/** @const {number} */ NodeFilter.SHOW_CDATA_SECTION;
/** @const {number} */ NodeFilter.SHOW_COMMENT;
/** @const {number} */ NodeFilter.SHOW_DOCUMENT;
/** @const {number} */ NodeFilter.SHOW_DOCUMENT_FRAGMENT;
/** @const {number} */ NodeFilter.SHOW_DOCUMENT_TYPE;
/** @const {number} */ NodeFilter.SHOW_ELEMENT;
/** @const {number} */ NodeFilter.SHOW_ENTITY;
/** @const {number} */ NodeFilter.SHOW_ENTITY_REFERENCE;
/** @const {number} */ NodeFilter.SHOW_NOTATION;
/** @const {number} */ NodeFilter.SHOW_PROCESSING_INSTRUCTION;
/** @const {number} */ NodeFilter.SHOW_TEXT;

/* Consants for acceptNode */
/** @const {number} */ NodeFilter.FILTER_ACCEPT;
/** @const {number} */ NodeFilter.FILTER_REJECT;
/** @const {number} */ NodeFilter.FILTER_SKIP;

/**
 * @param {Node} n
 * @return {number} Any of NodeFilter.FILTER_* constants.
 * @see http://www.w3.org/TR/DOM-Level-2-Traversal-Range/traversal.html#Traversal-NodeFilter-acceptNode
 */
NodeFilter.prototype.acceptNode = function(n) {};

/**
 * @interface
 * @see http://www.w3.org/TR/DOM-Level-2-Traversal-Range/traversal.html#Traversal-NodeIterator
 */
function NodeIterator() {}

/**
 * Detach and invalidate the NodeIterator.
 * @see http://www.w3.org/TR/DOM-Level-2-Traversal-Range/traversal.html#Traversal-NodeIterator-detach
 * @return {undefined}
 */
NodeIterator.prototype.detach = function() {};

/**
 * @return {Node} Next node in the set.
 * @see http://www.w3.org/TR/DOM-Level-2-Traversal-Range/traversal.html#Traversal-NodeIterator-nextNode
 */
NodeIterator.prototype.nextNode = function() {};

/**
 * @return {Node} Previous node in the set.
 * @see http://www.w3.org/TR/DOM-Level-2-Traversal-Range/traversal.html#Traversal-NodeIterator-previousNode
 */
NodeIterator.prototype.previousNode = function() {};

/**
 * @interface
 * @see http://www.w3.org/TR/DOM-Level-2-Traversal-Range/traversal.html#Traversal-TreeWalker
 */
function TreeWalker() {}

/**
 * @return {?Node} The new Node or null.
 * @see http://www.w3.org/TR/DOM-Level-2-Traversal-Range/traversal.html#Traversal-TreeWalker-firstChild
 */
TreeWalker.prototype.firstChild = function() {};

/**
 * @return {?Node} The new Node or null..
 * @see http://www.w3.org/TR/DOM-Level-2-Traversal-Range/traversal.html#Traversal-TreeWalker-lastChild
 */
TreeWalker.prototype.lastChild = function() {};

/**
 * @return {?Node} The new Node or null.
 * @see http://www.w3.org/TR/DOM-Level-2-Traversal-Range/traversal.html#Traversal-TreeWalker-nextNode
 */
TreeWalker.prototype.nextNode = function() {};

/**
 * @return {?Node} The new Node or null.
 * @see http://www.w3.org/TR/DOM-Level-2-Traversal-Range/traversal.html#Traversal-TreeWalker-nextSibling
 */
TreeWalker.prototype.nextSibling = function() {};

/**
 * @return {?Node} The new Node or null.
 * @see http://www.w3.org/TR/DOM-Level-2-Traversal-Range/traversal.html#Traversal-TreeWalker-parentNode
 */
TreeWalker.prototype.parentNode = function() {};

/**
 * @return {?Node} The new Node or null.
 * @see http://www.w3.org/TR/DOM-Level-2-Traversal-Range/traversal.html#Traversal-TreeWalker-previousNode
 */
TreeWalker.prototype.previousNode = function() {};

/**
 * @return {?Node} The new Node or null.
 * @see http://www.w3.org/TR/DOM-Level-2-Traversal-Range/traversal.html#Traversal-TreeWalker-previousSibling
 */
TreeWalker.prototype.previousSibling = function() {};

/**
 * @type {Node}
 */
TreeWalker.prototype.root;

/**
 * @type {number}
 */
TreeWalker.prototype.whatToShow;

/**
 * @type {NodeFilter}
 */
TreeWalker.prototype.filter;

/**
 * @type {boolean}
 */
TreeWalker.prototype.expandEntityReference;

/**
 * @type {Node}
 */
TreeWalker.prototype.currentNode;

/**
 * @constructor
 * @extends {Element}
 * @see http://www.w3.org/TR/2000/CR-DOM-Level-2-20000510/html.html#ID-58190037
 */
function HTMLElement() {}

/**
 * @type {string}
 * @see http://www.w3.org/TR/2000/CR-DOM-Level-2-20000510/html.html#ID-78276800
 */
HTMLElement.prototype.title;

/**
 * @type {!CSSStyleDeclaration}
 * @see http://www.w3.org/TR/DOM-Level-2-Style/css.html#CSS-ElementCSSInlineStyle
 */
HTMLElement.prototype.style;

/**
 * @type {string}
 * @see http://www.w3.org/TR/2000/CR-DOM-Level-2-20000510/html.html#ID-59132807
 */
HTMLElement.prototype.lang;

/**
 * @type {string}
 * @see http://www.w3.org/TR/2000/CR-DOM-Level-2-20000510/html.html#ID-52460740
 */
HTMLElement.prototype.dir;

/**
 * @implicitCast
 * @type {string}
 * @see http://www.w3.org/TR/2000/CR-DOM-Level-2-20000510/html.html#ID-95362176
 */
HTMLElement.prototype.className;

/**
 * @return {undefined}
 * @see https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement/click
 * @override
 */
HTMLElement.prototype.click = function() {};

/**
 * @type {number}
 * @see http://www.w3.org/TR/2000/CR-DOM-Level-2-20000510/html.html#ID-40676705
 */
HTMLElement.prototype.tabIndex;

/**
 * @constructor
 * @extends {HTMLElement}
 * @see http://www.w3.org/TR/2000/CR-DOM-Level-2-20000510/html.html#ID-33759296
 */
function HTMLHtmlElement() {}

/**
 * @type {string}
 * @see http://www.w3.org/TR/2000/CR-DOM-Level-2-20000510/html.html#ID-9383775
 */
HTMLHtmlElement.prototype.version;

/**
 * @constructor
 * @extends {HTMLElement}
 * @see http://www.w3.org/TR/2000/CR-DOM-Level-2-20000510/html.html#ID-77253168
 */
function HTMLHeadElement() {}

/**
 * @type {string}
 * @see http://www.w3.org/TR/2000/CR-DOM-Level-2-20000510/html.html#ID-96921909
 */
HTMLHeadElement.prototype.profile;

/**
 * @constructor
 * @extends {HTMLElement}
 * @implements {LinkStyle}
 * @see http://www.w3.org/TR/2000/CR-DOM-Level-2-20000510/html.html#ID-35143001
 */
function HTMLLinkElement() {}

/**
 * @type {boolean}
 * @see http://www.w3.org/TR/2000/CR-DOM-Level-2-20000510/html.html#ID-87355129
 */
HTMLLinkElement.prototype.disabled;

/**
 * @type {string}
 * @see http://www.w3.org/TR/2000/CR-DOM-Level-2-20000510/html.html#ID-63954491
 */
HTMLLinkElement.prototype.charset;

/**
 * @type {string}
 * @implicitCast
 * @see http://www.w3.org/TR/2000/CR-DOM-Level-2-20000510/html.html#ID-33532588
 */
HTMLLinkElement.prototype.href;

/**
 * @type {string}
 * @see http://www.w3.org/TR/2000/CR-DOM-Level-2-20000510/html.html#ID-85145682
 */
HTMLLinkElement.prototype.hreflang;

/**
 * @type {string}
 * @see http://www.w3.org/TR/2000/CR-DOM-Level-2-20000510/html.html#ID-75813125
 */
HTMLLinkElement.prototype.media;

/**
 * @type {string}
 * @see http://www.w3.org/TR/2000/CR-DOM-Level-2-20000510/html.html#ID-41369587
 */
HTMLLinkElement.prototype.rel;

/**
 * @type {string}
 * @see http://www.w3.org/TR/2000/CR-DOM-Level-2-20000510/html.html#ID-40715461
 */
HTMLLinkElement.prototype.rev;

/**
 * @type {string}
 * @see http://www.w3.org/TR/2000/CR-DOM-Level-2-20000510/html.html#ID-84183095
 */
HTMLLinkElement.prototype.target;

/**
 * @type {string}
 * @see http://www.w3.org/TR/2000/CR-DOM-Level-2-20000510/html.html#ID-32498296
 */
HTMLLinkElement.prototype.type;

/** @type {StyleSheet} */
HTMLLinkElement.prototype.sheet;

/**
 * @type {!DOMTokenList}
 * @see https://github.com/WICG/webpackage/blob/master/explainers/subresource-loading.md
 */
HTMLLinkElement.prototype.resources;

/**
 * @constructor
 * @extends {HTMLElement}
 * @see http://www.w3.org/TR/2000/CR-DOM-Level-2-20000510/html.html#ID-79243169
 */
function HTMLTitleElement() {}

/**
 * @type {string}
 * @see http://www.w3.org/TR/2000/CR-DOM-Level-2-20000510/html.html#ID-77500413
 */
HTMLTitleElement.prototype.text;

/**
 * @constructor
 * @extends {HTMLElement}
 * @see http://www.w3.org/TR/2000/CR-DOM-Level-2-20000510/html.html#ID-37041454
 */
function HTMLMetaElement() {}

/**
 * @type {string}
 * @see http://www.w3.org/TR/2000/CR-DOM-Level-2-20000510/html.html#ID-87670826
 */
HTMLMetaElement.prototype.content;

/**
 * @type {string}
 * @see http://www.w3.org/TR/2000/CR-DOM-Level-2-20000510/html.html#ID-77289449
 */
HTMLMetaElement.prototype.httpEquiv;

/**
 * @type {string}
 * @see http://www.w3.org/TR/2000/CR-DOM-Level-2-20000510/html.html#ID-31037081
 */
HTMLMetaElement.prototype.name;

/**
 * @type {string}
 * @see http://www.w3.org/TR/2000/CR-DOM-Level-2-20000510/html.html#ID-35993789
 */
HTMLMetaElement.prototype.scheme;

/**
 * @constructor
 * @extends {HTMLElement}
 * @see http://www.w3.org/TR/2000/CR-DOM-Level-2-20000510/html.html#ID-73629039
 */
function HTMLBaseElement() {}

/**
 * @type {string}
 * @implicitCast
 * @see http://www.w3.org/TR/2000/CR-DOM-Level-2-20000510/html.html#ID-65382887
 */
HTMLBaseElement.prototype.href;

/**
 * @type {string}
 * @see http://www.w3.org/TR/2000/CR-DOM-Level-2-20000510/html.html#ID-73844298
 */
HTMLBaseElement.prototype.target;

/**
 * @constructor
 * @extends {HTMLElement}
 * @see http://www.w3.org/TR/2000/CR-DOM-Level-2-20000510/html.html#ID-85283003
 */
function HTMLIsIndexElement() {}

/**
 * @type {HTMLFormElement}
 * @see http://www.w3.org/TR/2000/CR-DOM-Level-2-20000510/html.html#ID-87069980
 */
HTMLIsIndexElement.prototype.form;

/**
 * @type {string}
 * @see http://www.w3.org/TR/2000/CR-DOM-Level-2-20000510/html.html#ID-33589862
 */
HTMLIsIndexElement.prototype.prompt;

/**
 * @constructor
 * @extends {HTMLElement}
 * @implements {LinkStyle}
 * @see http://www.w3.org/TR/2000/CR-DOM-Level-2-20000510/html.html#ID-16428977
 */
function HTMLStyleElement() {}

/**
 * @type {boolean}
 * @see http://www.w3.org/TR/2000/CR-DOM-Level-2-20000510/html.html#ID-51162010
 */
HTMLStyleElement.prototype.disabled;

/**
 * @type {string}
 * @see http://www.w3.org/TR/2000/CR-DOM-Level-2-20000510/html.html#ID-76412738
 */
HTMLStyleElement.prototype.media;

/**
 * @type {string}
 * @see http://www.w3.org/TR/2000/CR-DOM-Level-2-20000510/html.html#ID-22472002
 */
HTMLStyleElement.prototype.type;

/** @type {StyleSheet} */
HTMLStyleElement.prototype.sheet;

/**
 * @constructor
 * @extends {HTMLElement}
 * @see http://www.w3.org/TR/2000/CR-DOM-Level-2-20000510/html.html#ID-62018039
 */
function HTMLBodyElement() {}

/**
 * @type {string}
 * @see http://www.w3.org/TR/2000/CR-DOM-Level-2-20000510/html.html#ID-59424581
 */
HTMLBodyElement.prototype.aLink;

/**
 * @type {string}
 * @see http://www.w3.org/TR/2000/CR-DOM-Level-2-20000510/html.html#ID-37574810
 */
HTMLBodyElement.prototype.background;

/**
 * @type {string}
 * @see http://www.w3.org/TR/2000/CR-DOM-Level-2-20000510/html.html#ID-24940084
 */
HTMLBodyElement.prototype.bgColor;

/**
 * @type {string}
 * @see http://www.w3.org/TR/2000/CR-DOM-Level-2-20000510/html.html#ID-7662206
 */
HTMLBodyElement.prototype.link;

/**
 * @type {string}
 * @see http://www.w3.org/TR/2000/CR-DOM-Level-2-20000510/html.html#ID-73714763
 */
HTMLBodyElement.prototype.text;

/**
 * @type {string}
 * @see http://www.w3.org/TR/2000/CR-DOM-Level-2-20000510/html.html#ID-83224305
 */
HTMLBodyElement.prototype.vLink;

/**
 * @constructor
 * @extends {HTMLCollection<T>}
 * @implements {IObject<string, (T|RadioNodeList<T>)>}
 * @implements {IArrayLike<T>}
 * @template T
 * @see https://html.spec.whatwg.org/multipage/infrastructure.html#the-htmlformcontrolscollection-interface
 */
function HTMLFormControlsCollection() {}

/**
 * @param {string} name
 * @return {T|RadioNodeList<T>|null}
 * @see https://html.spec.whatwg.org/multipage/infrastructure.html#dom-htmlformcontrolscollection-nameditem
 * @nosideeffects
 * @override
 */
HTMLFormControlsCollection.prototype.namedItem = function(name) {};

/**
 * @constructor
 * @extends {HTMLElement}
 * @see http://www.w3.org/TR/2000/CR-DOM-Level-2-20000510/html.html#ID-40002357
 */
function HTMLFormElement() {}

/**
 * @type {!HTMLFormControlsCollection<!HTMLElement>}
 * @see http://www.w3.org/TR/2000/CR-DOM-Level-2-20000510/html.html#ID-76728479
 */
HTMLFormElement.prototype.elements;

/**
 * @type {number}
 * @see http://www.w3.org/TR/2000/CR-DOM-Level-2-20000510/html.html#HTML-HTMLFormElement-length
 */
HTMLFormElement.prototype.length;

/**
 * @type {string}
 * @see http://www.w3.org/TR/2000/CR-DOM-Level-2-20000510/html.html#ID-22051454
 */
HTMLFormElement.prototype.name;

/**
 * @type {string}
 * @see http://www.w3.org/TR/2000/CR-DOM-Level-2-20000510/html.html#ID-19661795
 */
HTMLFormElement.prototype.acceptCharset;

/**
 * @type {string}
 * @implicitCast
 * @see http://www.w3.org/TR/2000/CR-DOM-Level-2-20000510/html.html#ID-74049184
 */
HTMLFormElement.prototype.action;

/**
 * @type {string}
 * @see http://www.w3.org/TR/2000/CR-DOM-Level-2-20000510/html.html#ID-84227810
 */
HTMLFormElement.prototype.enctype;

/**
 * @type {string}
 * @see http://www.w3.org/TR/2000/CR-DOM-Level-2-20000510/html.html#ID-82545539
 */
HTMLFormElement.prototype.method;

/**
 * @type {string}
 * @see http://www.w3.org/TR/2000/CR-DOM-Level-2-20000510/html.html#ID-6512890
 */
HTMLFormElement.prototype.target;

/**
 * @return {undefined}
 * @see http://www.w3.org/TR/2000/CR-DOM-Level-2-20000510/html.html#ID-76767676
 */
HTMLFormElement.prototype.submit = function() {};

/**
 * @return {undefined}
 * @see http://www.w3.org/TR/2000/CR-DOM-Level-2-20000510/html.html#ID-76767677
 */
HTMLFormElement.prototype.reset = function() {};

/**
 * @constructor
 * @extends {HTMLElement}
 * @see http://www.w3.org/TR/2000/CR-DOM-Level-2-20000510/html.html#ID-94282980
 */
function HTMLSelectElement() {}

/**
 * @type {string}
 * @see http://www.w3.org/TR/2000/CR-DOM-Level-2-20000510/html.html#ID-58783172
 */
HTMLSelectElement.prototype.type;

/**
 * @type {number}
 * @see http://www.w3.org/TR/2000/CR-DOM-Level-2-20000510/html.html#ID-85676760
 */
HTMLSelectElement.prototype.selectedIndex;

/**
 * @type {string}
 * @implicitCast
 * @see http://www.w3.org/TR/2000/CR-DOM-Level-2-20000510/html.html#ID-59351919
 */
HTMLSelectElement.prototype.value;

/**
 * @type {number}
 * @see http://www.w3.org/TR/2000/CR-DOM-Level-2-20000510/html.html#ID-5933486
 */
HTMLSelectElement.prototype.length;

/**
 * @type {HTMLFormElement}
 * @see http://www.w3.org/TR/2000/CR-DOM-Level-2-20000510/html.html#ID-20489458
 */
HTMLSelectElement.prototype.form;

/**
 * @type {!HTMLOptionsCollection}
 * @see http://www.w3.org/TR/2000/CR-DOM-Level-2-20000510/html.html#ID-30606413
 */
HTMLSelectElement.prototype.options;

/**
 * @type {boolean}
 * @see http://www.w3.org/TR/2000/CR-DOM-Level-2-20000510/html.html#ID-79102918
 */
HTMLSelectElement.prototype.disabled;

/**
 * @type {boolean}
 * @see http://www.w3.org/TR/2000/CR-DOM-Level-2-20000510/html.html#ID-13246613
 */
HTMLSelectElement.prototype.multiple;

/**
 * @type {string}
 * @see http://www.w3.org/TR/2000/CR-DOM-Level-2-20000510/html.html#ID-41636323
 */
HTMLSelectElement.prototype.name;

/**
 * @type {number}
 * @see http://www.w3.org/TR/2000/CR-DOM-Level-2-20000510/html.html#ID-18293826
 */
HTMLSelectElement.prototype.size;

/**
 * @param {HTMLElement} element
 * @param {HTMLElement=} opt_before
 * @return {undefined}
 * @see http://www.w3.org/TR/2000/CR-DOM-Level-2-20000510/html.html#ID-14493106
 */
HTMLSelectElement.prototype.add = function(element, opt_before) {};

/**
 * @return {undefined}
 * @see http://www.w3.org/TR/2000/CR-DOM-Level-2-20000510/html.html#ID-28216144
 * @override
 */
HTMLSelectElement.prototype.blur = function() {};

/**
 * @return {undefined}
 * @see http://www.w3.org/TR/2000/CR-DOM-Level-2-20000510/html.html#ID-32130014
 * @override
 */
HTMLSelectElement.prototype.focus = function() {};

/**
 * @param {number=} opt_index
 * @return {undefined}
 * @see http://www.w3.org/TR/2000/CR-DOM-Level-2-20000510/html.html#ID-33404570
 * @override
 */
HTMLSelectElement.prototype.remove = function(opt_index) {};

/**
 * @constructor
 * @extends {HTMLElement}
 * @see http://www.w3.org/TR/2000/CR-DOM-Level-2-20000510/html.html#ID-38450247
 */
function HTMLOptGroupElement() {}

/**
 * @type {boolean}
 * @see http://www.w3.org/TR/2000/CR-DOM-Level-2-20000510/html.html#ID-15518803
 */
HTMLOptGroupElement.prototype.disabled;

/**
 * @type {string}
 * @see http://www.w3.org/TR/2000/CR-DOM-Level-2-20000510/html.html#ID-95806054
 */
HTMLOptGroupElement.prototype.label;

/**
 * @constructor
 * @extends {HTMLElement}
 * @see http://www.w3.org/TR/2000/CR-DOM-Level-2-20000510/html.html#ID-70901257
 */
function HTMLOptionElement() {}

/**
 * @type {boolean}
 * @see http://www.w3.org/TR/2000/CR-DOM-Level-2-20000510/html.html#ID-37770574
 */
HTMLOptionElement.prototype.defaultSelected;

/**
 * @type {boolean}
 * @see http://www.w3.org/TR/2000/CR-DOM-Level-2-20000510/html.html#ID-23482473
 */
HTMLOptionElement.prototype.disabled;

/**
 * @type {HTMLFormElement}
 * @see http://www.w3.org/TR/2000/CR-DOM-Level-2-20000510/html.html#ID-17116503
 */
HTMLOptionElement.prototype.form;

/**
 * @type {number}
 * @see http://www.w3.org/TR/2000/CR-DOM-Level-2-20000510/html.html#ID-14038413
 */
HTMLOptionElement.prototype.index;

/**
 * @type {string}
 * @see http://www.w3.org/TR/2000/CR-DOM-Level-2-20000510/html.html#ID-40736115
 */
HTMLOptionElement.prototype.label;

/**
 * @type {boolean}
 * @see http://www.w3.org/TR/2000/CR-DOM-Level-2-20000510/html.html#ID-70874476
 */
HTMLOptionElement.prototype.selected;

/**
 * @type {string}
 * @see http://www.w3.org/TR/2000/CR-DOM-Level-2-20000510/html.html#ID-48154426
 */
HTMLOptionElement.prototype.text;

/**
 * @type {string}
 * @implicitCast
 * @see http://www.w3.org/TR/2000/CR-DOM-Level-2-20000510/html.html#ID-6185554
 */
HTMLOptionElement.prototype.value;



/**
 * @constructor
 * @extends {HTMLOptionElement}
 * @param {*=} opt_text
 * @param {*=} opt_value
 * @param {*=} opt_defaultSelected
 * @param {*=} opt_selected
 */
function Option(opt_text, opt_value, opt_defaultSelected, opt_selected) {}



/**
 * @constructor
 * @extends {HTMLElement}
 * @see http://www.w3.org/TR/2000/CR-DOM-Level-2-20000510/html.html#ID-6043025
 */
function HTMLInputElement() {}

/**
 * @type {string}
 * @see http://www.w3.org/TR/2000/CR-DOM-Level-2-20000510/html.html#ID-15328520
 */
HTMLInputElement.prototype.accept;

/**
 * @type {string}
 * @see http://www.w3.org/TR/2000/CR-DOM-Level-2-20000510/html.html#ID-59914154
 */
HTMLInputElement.prototype.accessKey;

/**
 * @type {string}
 * @see http://www.w3.org/TR/2000/CR-DOM-Level-2-20000510/html.html#ID-96991182
 */
HTMLInputElement.prototype.align;

/**
 * @type {string}
 * @see http://www.w3.org/TR/2000/CR-DOM-Level-2-20000510/html.html#ID-92701314
 */
HTMLInputElement.prototype.alt;

/**
 * @type {boolean}
 * @see http://www.w3.org/TR/2000/CR-DOM-Level-2-20000510/html.html#ID-30233917
 */
HTMLInputElement.prototype.checked;

/**
 * @type {boolean}
 * @see http://www.w3.org/TR/2000/CR-DOM-Level-2-20000510/html.html#ID-20509171
 */
HTMLInputElement.prototype.defaultChecked;

/**
 * @type {string}
 * @see http://www.w3.org/TR/2000/CR-DOM-Level-2-20000510/html.html#ID-26091157
 */
HTMLInputElement.prototype.defaultValue;

/**
 * @type {boolean}
 * @see http://www.w3.org/TR/2000/CR-DOM-Level-2-20000510/html.html#ID-50886781
 */
HTMLInputElement.prototype.disabled;

/**
 * @type {HTMLFormElement}
 * @see http://www.w3.org/TR/2000/CR-DOM-Level-2-20000510/html.html#ID-63239895
 */
HTMLInputElement.prototype.form;

/**
 * @type {number}
 * @see http://www.w3.org/TR/2000/CR-DOM-Level-2-20000510/html.html#ID-54719353
 */
HTMLInputElement.prototype.maxLength;

/**
 * @type {string}
 * @see http://www.w3.org/TR/2000/CR-DOM-Level-2-20000510/html.html#ID-89658498
 */
HTMLInputElement.prototype.name;

/**
 * @type {boolean}
 * @see http://www.w3.org/TR/2000/CR-DOM-Level-2-20000510/html.html#ID-88461592
 */
HTMLInputElement.prototype.readOnly;

/**
 * @type {number}
 * @see http://www.w3.org/TR/2000/CR-DOM-Level-2-20000510/html.html#ID-79659438
 */
HTMLInputElement.prototype.size;

/**
 * @type {string}
 * @implicitCast
 * @see http://www.w3.org/TR/2000/CR-DOM-Level-2-20000510/html.html#ID-97320704
 */
HTMLInputElement.prototype.src;

/**
 * @type {number}
 * @see http://www.w3.org/TR/2000/CR-DOM-Level-2-20000510/html.html#ID-62176355
 */
HTMLInputElement.prototype.tabIndex;

/**
 * @type {string}
 * @see http://www.w3.org/TR/2000/CR-DOM-Level-2-20000510/html.html#ID-62883744
 */
HTMLInputElement.prototype.type;

/**
 * @type {string}
 * @see http://www.w3.org/TR/2000/CR-DOM-Level-2-20000510/html.html#ID-32463706
 */
HTMLInputElement.prototype.useMap;

/**
 * @type {string}
 * @implicitCast
 * @see http://www.w3.org/TR/2000/CR-DOM-Level-2-20000510/html.html#ID-49531485
 */
HTMLInputElement.prototype.value;

/**
 * @return {undefined}
 * @see http://www.w3.org/TR/2000/CR-DOM-Level-2-20000510/html.html#ID-26838235
 * @override
 */
HTMLInputElement.prototype.blur = function() {};

/**
 * @return {undefined}
 * @see http://www.w3.org/TR/2000/CR-DOM-Level-2-20000510/html.html#ID-2651361
 * @override
 */
HTMLInputElement.prototype.click = function() {};

/**
 * @return {undefined}
 * @see http://www.w3.org/TR/2000/CR-DOM-Level-2-20000510/html.html#ID-65996295
 * @override
 */
HTMLInputElement.prototype.focus = function() {};

/**
 * @return {undefined}
 * @see http://www.w3.org/TR/2000/CR-DOM-Level-2-20000510/html.html#ID-34677168
 */
HTMLInputElement.prototype.select = function() {};

/**
 * @constructor
 * @extends {HTMLElement}
 * @see http://www.w3.org/TR/2000/CR-DOM-Level-2-20000510/html.html#ID-24874179
 */
function HTMLTextAreaElement() {}

/**
 * @type {string}
 * @see http://www.w3.org/TR/2000/CR-DOM-Level-2-20000510/html.html#ID-93102991
 */
HTMLTextAreaElement.prototype.accessKey;

/**
 * @type {number}
 * @see http://www.w3.org/TR/2000/CR-DOM-Level-2-20000510/html.html#ID-51387225
 */
HTMLTextAreaElement.prototype.cols;

/**
 * @type {string}
 * @see http://www.w3.org/TR/2000/CR-DOM-Level-2-20000510/html.html#ID-36152213
 */
HTMLTextAreaElement.prototype.defaultValue;

/**
 * @type {boolean}
 * @see http://www.w3.org/TR/2000/CR-DOM-Level-2-20000510/html.html#ID-98725443
 */
HTMLTextAreaElement.prototype.disabled;

/**
 * @type {HTMLFormElement}
 * @see http://www.w3.org/TR/2000/CR-DOM-Level-2-20000510/html.html#ID-18911464
 */
HTMLTextAreaElement.prototype.form;

/**
 * @type {string}
 * @see http://www.w3.org/TR/2000/CR-DOM-Level-2-20000510/html.html#ID-70715578
 */
HTMLTextAreaElement.prototype.name;

/**
 * @type {boolean}
 * @see http://www.w3.org/TR/2000/CR-DOM-Level-2-20000510/html.html#ID-39131423
 */
HTMLTextAreaElement.prototype.readOnly;

/**
 * @type {number}
 * @see http://www.w3.org/TR/2000/CR-DOM-Level-2-20000510/html.html#ID-46975887
 */
HTMLTextAreaElement.prototype.rows;

/**
 * @type {number}
 * @see http://www.w3.org/TR/2000/CR-DOM-Level-2-20000510/html.html#ID-60363303
 */
HTMLTextAreaElement.prototype.tabIndex;

/**
 * @type {string}
 * @see http://www.w3.org/TR/2000/CR-DOM-Level-2-20000510/html.html#HTML-HTMLTextAreaElement-type
 */
HTMLTextAreaElement.prototype.type;

/**
 * @type {string}
 * @implicitCast
 * @see http://www.w3.org/TR/2000/CR-DOM-Level-2-20000510/html.html#ID-70715579
 */
HTMLTextAreaElement.prototype.value;

/**
 * @return {undefined}
 * @see http://www.w3.org/TR/2000/CR-DOM-Level-2-20000510/html.html#ID-6750689
 * @override
 */
HTMLTextAreaElement.prototype.blur = function() {};

/**
 * @return {undefined}
 * @see http://www.w3.org/TR/2000/CR-DOM-Level-2-20000510/html.html#ID-39055426
 * @override
 */
HTMLTextAreaElement.prototype.focus = function() {};

/**
 * @return {undefined}
 * @see http://www.w3.org/TR/2000/CR-DOM-Level-2-20000510/html.html#ID-48880622
 */
HTMLTextAreaElement.prototype.select = function() {};

/**
 * @constructor
 * @extends {HTMLElement}
 * @see http://www.w3.org/TR/2000/CR-DOM-Level-2-20000510/html.html#ID-34812697
 */
function HTMLButtonElement() {}

/**
 * @type {string}
 * @see http://www.w3.org/TR/2000/CR-DOM-Level-2-20000510/html.html#ID-73169431
 */
HTMLButtonElement.prototype.accessKey;

/**
 * @type {boolean}
 * @see http://www.w3.org/TR/2000/CR-DOM-Level-2-20000510/html.html#ID-92757155
 */
HTMLButtonElement.prototype.disabled;

/**
 * @type {HTMLFormElement}
 * @see http://www.w3.org/TR/2000/CR-DOM-Level-2-20000510/html.html#ID-71254493
 */
HTMLButtonElement.prototype.form;

/**
 * @type {string}
 * @see http://www.w3.org/TR/2000/CR-DOM-Level-2-20000510/html.html#ID-11029910
 */
HTMLButtonElement.prototype.name;

/**
 * @type {number}
 * @see http://www.w3.org/TR/2000/CR-DOM-Level-2-20000510/html.html#ID-39190908
 */
HTMLButtonElement.prototype.tabIndex;

/**
 * @type {string}
 * @see http://www.w3.org/TR/2000/CR-DOM-Level-2-20000510/html.html#ID-27430092
 */
HTMLButtonElement.prototype.type;

/**
 * @type {string}
 * @see http://www.w3.org/TR/2000/CR-DOM-Level-2-20000510/html.html#ID-72856782
 */
HTMLButtonElement.prototype.value;

/**
 * @constructor
 * @extends {HTMLElement}
 * @see http://www.w3.org/TR/2000/CR-DOM-Level-2-20000510/html.html#ID-13691394
 */
function HTMLLabelElement() {}

/**
 * @type {string}
 * @see http://www.w3.org/TR/2000/CR-DOM-Level-2-20000510/html.html#ID-43589892
 */
HTMLLabelElement.prototype.accessKey;

/**
 * @type {HTMLFormElement}
 * @see http://www.w3.org/TR/2000/CR-DOM-Level-2-20000510/html.html#ID-32480901
 */
HTMLLabelElement.prototype.form;

/**
 * @type {string}
 * @see http://www.w3.org/TR/2000/CR-DOM-Level-2-20000510/html.html#ID-96509813
 */
HTMLLabelElement.prototype.htmlFor;

/**
 * @constructor
 * @extends {HTMLElement}
 * @see http://www.w3.org/TR/2000/CR-DOM-Level-2-20000510/html.html#ID-7365882
 */
function HTMLFieldSetElement() {}

/**
 * @type {HTMLFormElement}
 * @see http://www.w3.org/TR/2000/CR-DOM-Level-2-20000510/html.html#ID-75392630
 */
HTMLFieldSetElement.prototype.form;

/**
 * @type {boolean}
 * @see https://www.w3.org/TR/html5/forms.html#attr-fieldset-disabled
 */
HTMLFieldSetElement.prototype.disabled;

/**
 * @constructor
 * @extends {HTMLElement}
 * @see http://www.w3.org/TR/2000/CR-DOM-Level-2-20000510/html.html#ID-21482039
 */
function HTMLLegendElement() {}

/**
 * @type {string}
 * @see http://www.w3.org/TR/2000/CR-DOM-Level-2-20000510/html.html#ID-11297832
 */
HTMLLegendElement.prototype.accessKey;

/**
 * @type {string}
 * @see http://www.w3.org/TR/2000/CR-DOM-Level-2-20000510/html.html#ID-79538067
 */
HTMLLegendElement.prototype.align;

/**
 * @type {HTMLFormElement}
 * @see http://www.w3.org/TR/2000/CR-DOM-Level-2-20000510/html.html#ID-29594519
 */
HTMLLegendElement.prototype.form;

/**
 * @constructor
 * @extends {HTMLElement}
 * @see http://www.w3.org/TR/2000/CR-DOM-Level-2-20000510/html.html#ID-86834457
 */
function HTMLUListElement() {}

/**
 * @type {boolean}
 * @see http://www.w3.org/TR/2000/CR-DOM-Level-2-20000510/html.html#ID-39864178
 */
HTMLUListElement.prototype.compact;

/**
 * @type {string}
 * @see http://www.w3.org/TR/2000/CR-DOM-Level-2-20000510/html.html#ID-96874670
 */
HTMLUListElement.prototype.type;

/**
 * @constructor
 * @extends {HTMLElement}
 * @see http://www.w3.org/TR/2000/CR-DOM-Level-2-20000510/html.html#ID-58056027
 */
function HTMLOListElement() {}

/**
 * @type {boolean}
 * @see http://www.w3.org/TR/2000/CR-DOM-Level-2-20000510/html.html#ID-76448506
 */
HTMLOListElement.prototype.compact;

/**
 * @type {number}
 * @see http://www.w3.org/TR/2000/CR-DOM-Level-2-20000510/html.html#ID-14793325
 */
HTMLOListElement.prototype.start;

/**
 * @type {string}
 * @see http://www.w3.org/TR/2000/CR-DOM-Level-2-20000510/html.html#ID-40971103
 */
HTMLOListElement.prototype.type;

/**
 * @constructor
 * @extends {HTMLElement}
 * @see http://www.w3.org/TR/2000/CR-DOM-Level-2-20000510/html.html#ID-52368974
 */
function HTMLDListElement() {}

/**
 * @type {boolean}
 * @see http://www.w3.org/TR/2000/CR-DOM-Level-2-20000510/html.html#ID-21738539
 */
HTMLDListElement.prototype.compact;

/**
 * @constructor
 * @extends {HTMLElement}
 * @see http://www.w3.org/TR/2000/CR-DOM-Level-2-20000510/html.html#ID-71600284
 */
function HTMLDirectoryElement() {}

/**
 * @type {boolean}
 * @see http://www.w3.org/TR/2000/CR-DOM-Level-2-20000510/html.html#ID-75317739
 */
HTMLDirectoryElement.prototype.compact;

/**
 * @constructor
 * @extends {HTMLElement}
 * @see http://www.w3.org/TR/2000/CR-DOM-Level-2-20000510/html.html#ID-72509186
 * @see http://www.w3.org/html/wg/drafts/html/master/interactive-elements.html#the-menu-element
 */
function HTMLMenuElement() {}

/**
 * @type {boolean}
 * @see http://www.w3.org/TR/2000/CR-DOM-Level-2-20000510/html.html#ID-68436464
 */
HTMLMenuElement.prototype.compact;

/**
 * @constructor
 * @extends {HTMLElement}
 * @see http://www.w3.org/TR/2000/CR-DOM-Level-2-20000510/html.html#ID-74680021
 */
function HTMLLIElement() {}

/**
 * @type {string}
 * @see http://www.w3.org/TR/2000/CR-DOM-Level-2-20000510/html.html#ID-52387668
 */
HTMLLIElement.prototype.type;

/**
 * @type {number}
 * @see http://www.w3.org/TR/2000/CR-DOM-Level-2-20000510/html.html#ID-45496263
 */
HTMLLIElement.prototype.value;

/**
 * @constructor
 * @extends {HTMLElement}
 * @see http://www.w3.org/TR/2000/CR-DOM-Level-2-20000510/html.html#ID-22445964
 */
function HTMLDivElement() {}

/**
 * @type {string}
 * @see http://www.w3.org/TR/2000/CR-DOM-Level-2-20000510/html.html#ID-70908791
 */
HTMLDivElement.prototype.align;

/**
 * @constructor
 * @extends {HTMLElement}
 * @see http://www.w3.org/TR/2000/CR-DOM-Level-2-20000510/html.html#ID-84675076
 */
function HTMLParagraphElement() {}

/**
 * @type {string}
 * @see http://www.w3.org/TR/2000/CR-DOM-Level-2-20000510/html.html#ID-53465507
 */
HTMLParagraphElement.prototype.align;

/**
 * @constructor
 * @extends {HTMLElement}
 * @see http://www.w3.org/TR/2000/CR-DOM-Level-2-20000510/html.html#ID-43345119
 */
function HTMLHeadingElement() {}

/**
 * @type {string}
 * @see http://www.w3.org/TR/2000/CR-DOM-Level-2-20000510/html.html#ID-6796462
 */
HTMLHeadingElement.prototype.align;

/**
 * @constructor
 * @extends {HTMLElement}
 * @see http://www.w3.org/TR/2000/CR-DOM-Level-2-20000510/html.html#ID-70319763
 */
function HTMLQuoteElement() {}

/**
 * @type {string}
 * @see http://www.w3.org/TR/2000/CR-DOM-Level-2-20000510/html.html#ID-53895598
 */
HTMLQuoteElement.prototype.cite;

/**
 * @constructor
 * @extends {HTMLElement}
 * @see http://www.w3.org/TR/2000/CR-DOM-Level-2-20000510/html.html#ID-11383425
 */
function HTMLPreElement() {}

/**
 * @type {number}
 * @see http://www.w3.org/TR/2000/CR-DOM-Level-2-20000510/html.html#ID-13894083
 */
HTMLPreElement.prototype.width;

/**
 * @constructor
 * @extends {HTMLElement}
 * @see http://www.w3.org/TR/2000/CR-DOM-Level-2-20000510/html.html#ID-56836063
 */
function HTMLBRElement() {}

/**
 * @type {string}
 * @see http://www.w3.org/TR/2000/CR-DOM-Level-2-20000510/html.html#ID-82703081
 */
HTMLBRElement.prototype.clear;

/**
 * @constructor
 * @extends {HTMLElement}
 * @see http://www.w3.org/TR/2000/CR-DOM-Level-2-20000510/html.html#ID-32774408
 */
function HTMLBaseFontElement() {}

/**
 * @type {string}
 * @see http://www.w3.org/TR/2000/CR-DOM-Level-2-20000510/html.html#ID-87502302
 */
HTMLBaseFontElement.prototype.color;

/**
 * @type {string}
 * @see http://www.w3.org/TR/2000/CR-DOM-Level-2-20000510/html.html#ID-88128969
 */
HTMLBaseFontElement.prototype.face;

/**
 * @type {number}
 * @see http://www.w3.org/TR/2000/CR-DOM-Level-2-20000510/html.html#ID-38930424
 */
HTMLBaseFontElement.prototype.size;

/**
 * @constructor
 * @extends {HTMLElement}
 * @see http://www.w3.org/TR/2000/CR-DOM-Level-2-20000510/html.html#ID-43943847
 */
function HTMLFontElement() {}

/**
 * @type {string}
 * @see http://www.w3.org/TR/2000/CR-DOM-Level-2-20000510/html.html#ID-53532975
 */
HTMLFontElement.prototype.color;

/**
 * @type {string}
 * @see http://www.w3.org/TR/2000/CR-DOM-Level-2-20000510/html.html#ID-55715655
 */
HTMLFontElement.prototype.face;

/**
 * @type {string}
 * @see http://www.w3.org/TR/2000/CR-DOM-Level-2-20000510/html.html#ID-90127284
 */
HTMLFontElement.prototype.size;

/**
 * @constructor
 * @extends {HTMLElement}
 * @see http://www.w3.org/TR/2000/CR-DOM-Level-2-20000510/html.html#ID-68228811
 */
function HTMLHRElement() {}

/**
 * @type {string}
 * @see http://www.w3.org/TR/2000/CR-DOM-Level-2-20000510/html.html#ID-15235012
 */
HTMLHRElement.prototype.align;

/**
 * @type {boolean}
 * @see http://www.w3.org/TR/2000/CR-DOM-Level-2-20000510/html.html#ID-79813978
 */
HTMLHRElement.prototype.noShade;

/**
 * @type {string}
 * @see http://www.w3.org/TR/2000/CR-DOM-Level-2-20000510/html.html#ID-77612587
 */
HTMLHRElement.prototype.size;

/**
 * @type {string}
 * @implicitCast
 * @see http://www.w3.org/TR/2000/CR-DOM-Level-2-20000510/html.html#ID-87744198
 */
HTMLHRElement.prototype.width;

/**
 * @constructor
 * @extends {HTMLElement}
 * @see http://www.w3.org/TR/2000/CR-DOM-Level-2-20000510/html.html#ID-79359609
 */
function HTMLModElement() {}

/**
 * @type {string}
 * @see http://www.w3.org/TR/2000/CR-DOM-Level-2-20000510/html.html#ID-75101708
 */
HTMLModElement.prototype.cite;

/**
 * @type {string}
 * @see http://www.w3.org/TR/2000/CR-DOM-Level-2-20000510/html.html#ID-88432678
 */
HTMLModElement.prototype.dateTime;

/**
 * @constructor
 * @extends {HTMLElement}
 * @see http://www.w3.org/TR/2000/CR-DOM-Level-2-20000510/html.html#ID-48250443
 */
function HTMLAnchorElement() {}

/**
 * @type {string}
 * @see http://www.w3.org/TR/2000/CR-DOM-Level-2-20000510/html.html#ID-89647724
 */
HTMLAnchorElement.prototype.accessKey;

/**
 * @type {string}
 * @see http://www.w3.org/TR/2000/CR-DOM-Level-2-20000510/html.html#ID-67619266
 */
HTMLAnchorElement.prototype.charset;

/**
 * @type {string}
 * @see http://www.w3.org/TR/2000/CR-DOM-Level-2-20000510/html.html#ID-92079539
 */
HTMLAnchorElement.prototype.coords;

/**
 * @type {string}
 * @implicitCast
 * @see http://www.w3.org/TR/2000/CR-DOM-Level-2-20000510/html.html#ID-88517319
 */
HTMLAnchorElement.prototype.href;

/**
 * @type {string}
 * @see http://www.w3.org/TR/2000/CR-DOM-Level-2-20000510/html.html#ID-87358513
 */
HTMLAnchorElement.prototype.hreflang;

/**
 * @type {string}
 * @see http://www.w3.org/TR/2000/CR-DOM-Level-2-20000510/html.html#ID-32783304
 */
HTMLAnchorElement.prototype.name;

/**
 * @type {string}
 * @see http://www.w3.org/TR/2000/CR-DOM-Level-2-20000510/html.html#ID-3815891
 */
HTMLAnchorElement.prototype.rel;

/**
 * @type {string}
 * @see http://www.w3.org/TR/2000/CR-DOM-Level-2-20000510/html.html#ID-58259771
 */
HTMLAnchorElement.prototype.rev;

/**
 * @type {string}
 * @see http://www.w3.org/TR/2000/CR-DOM-Level-2-20000510/html.html#ID-49899808
 */
HTMLAnchorElement.prototype.shape;

/**
 * @type {number}
 * @see http://www.w3.org/TR/2000/CR-DOM-Level-2-20000510/html.html#ID-41586466
 */
HTMLAnchorElement.prototype.tabIndex;

/**
 * @type {string}
 * @see http://www.w3.org/TR/2000/CR-DOM-Level-2-20000510/html.html#ID-6414197
 */
HTMLAnchorElement.prototype.target;

/**
 * @type {string}
 * @see http://www.w3.org/TR/2000/CR-DOM-Level-2-20000510/html.html#ID-63938221
 */
HTMLAnchorElement.prototype.type;

/**
 * @return {undefined}
 * @see http://www.w3.org/TR/2000/CR-DOM-Level-2-20000510/html.html#ID-65068939
 * @override
 */
HTMLAnchorElement.prototype.blur = function() {};

/**
 * @return {undefined}
 * @see http://www.w3.org/TR/2000/CR-DOM-Level-2-20000510/html.html#ID-47150313
 * @override
 */
HTMLAnchorElement.prototype.focus = function() {};

/**
 * @constructor
 * @extends {HTMLElement}
 * @see http://www.w3.org/TR/2000/CR-DOM-Level-2-20000510/html.html#ID-17701901
 */
function HTMLImageElement() {}

/**
 * @type {string}
 * @see http://www.w3.org/TR/2000/CR-DOM-Level-2-20000510/html.html#ID-3211094
 */
HTMLImageElement.prototype.align;

/**
 * @type {string}
 * @see http://www.w3.org/TR/2000/CR-DOM-Level-2-20000510/html.html#ID-95636861
 */
HTMLImageElement.prototype.alt;

/**
 * @type {string}
 * @see http://www.w3.org/TR/2000/CR-DOM-Level-2-20000510/html.html#ID-136671
 */
HTMLImageElement.prototype.border;

/**
 * @type {number}
 * @see http://www.w3.org/TR/2000/CR-DOM-Level-2-20000510/html.html#ID-91561496
 */
HTMLImageElement.prototype.height;

/**
 * @type {number}
 * @see http://www.w3.org/TR/2000/CR-DOM-Level-2-20000510/html.html#ID-53675471
 */
HTMLImageElement.prototype.hspace;

/**
 * @type {boolean}
 * @see http://www.w3.org/TR/2000/CR-DOM-Level-2-20000510/html.html#ID-58983880
 */
HTMLImageElement.prototype.isMap;

/**
 * @type {string}
 * @see http://www.w3.org/TR/2000/CR-DOM-Level-2-20000510/html.html#ID-77376969
 */
HTMLImageElement.prototype.longDesc;

/**
 * @type {string}
 * @see http://www.w3.org/TR/2000/CR-DOM-Level-2-20000510/html.html#ID-91256910
 */
HTMLImageElement.prototype.lowSrc;

/**
 * @type {string}
 * @see http://www.w3.org/TR/2000/CR-DOM-Level-2-20000510/html.html#ID-47534097
 */
HTMLImageElement.prototype.name;

/**
 * @type {string}
 * @implicitCast
 * @see http://www.w3.org/TR/2000/CR-DOM-Level-2-20000510/html.html#ID-87762984
 */
HTMLImageElement.prototype.src;

/**
 * @type {string}
 * @see http://www.w3.org/TR/2000/CR-DOM-Level-2-20000510/html.html#ID-35981181
 */
HTMLImageElement.prototype.useMap;

/**
 * @type {number}
 * @see http://www.w3.org/TR/2000/CR-DOM-Level-2-20000510/html.html#ID-85374897
 */
HTMLImageElement.prototype.vspace;

/**
 * @type {number}
 * @see http://www.w3.org/TR/2000/CR-DOM-Level-2-20000510/html.html#ID-13839076
 */
HTMLImageElement.prototype.width;

/**
 * @constructor
 * @extends {HTMLElement}
 * @see http://www.w3.org/TR/2000/CR-DOM-Level-2-20000510/html.html#ID-9893177
 */
function HTMLObjectElement() {}

/**
 * @type {string}
 * @see http://www.w3.org/TR/2000/CR-DOM-Level-2-20000510/html.html#ID-16962097
 */
HTMLObjectElement.prototype.align;

/**
 * @type {string}
 * @see http://www.w3.org/TR/2000/CR-DOM-Level-2-20000510/html.html#ID-47783837
 */
HTMLObjectElement.prototype.archive;

/**
 * @type {string}
 * @see http://www.w3.org/TR/2000/CR-DOM-Level-2-20000510/html.html#ID-82818419
 */
HTMLObjectElement.prototype.border;

/**
 * @type {string}
 * @see http://www.w3.org/TR/2000/CR-DOM-Level-2-20000510/html.html#ID-75241146
 */
HTMLObjectElement.prototype.code;

/**
 * @type {string}
 * @implicitCast
 * @see http://www.w3.org/TR/2000/CR-DOM-Level-2-20000510/html.html#ID-25709136
 */
HTMLObjectElement.prototype.codeBase;

/**
 * @type {string}
 * @see http://www.w3.org/TR/2000/CR-DOM-Level-2-20000510/html.html#ID-19945008
 */
HTMLObjectElement.prototype.codeType;

/**
 * @type {Document}
 * @see http://www.w3.org/TR/2000/CR-DOM-Level-2-20000510/html.html#ID-38538621
 */
HTMLObjectElement.prototype.contentDocument;

/**
 * @type {string}
 * @implicitCast
 * @see http://www.w3.org/TR/2000/CR-DOM-Level-2-20000510/html.html#ID-81766986
 */
HTMLObjectElement.prototype.data;

/**
 * @type {boolean}
 * @see http://www.w3.org/TR/2000/CR-DOM-Level-2-20000510/html.html#ID-942770
 */
HTMLObjectElement.prototype.declare;

/**
 * @type {HTMLFormElement}
 * @see http://www.w3.org/TR/2000/CR-DOM-Level-2-20000510/html.html#ID-46094773
 */
HTMLObjectElement.prototype.form;

/**
 * @type {string}
 * @implicitCast
 * @see http://www.w3.org/TR/2000/CR-DOM-Level-2-20000510/html.html#ID-88925838
 */
HTMLObjectElement.prototype.height;

/**
 * @type {number}
 * @see http://www.w3.org/TR/2000/CR-DOM-Level-2-20000510/html.html#ID-17085376
 */
HTMLObjectElement.prototype.hspace;

/**
 * @type {string}
 * @see http://www.w3.org/TR/2000/CR-DOM-Level-2-20000510/html.html#ID-20110362
 */
HTMLObjectElement.prototype.name;

/**
 * @type {string}
 * @see http://www.w3.org/TR/2000/CR-DOM-Level-2-20000510/html.html#ID-25039673
 */
HTMLObjectElement.prototype.standby;

/**
 * @type {number}
 * @see http://www.w3.org/TR/2000/CR-DOM-Level-2-20000510/html.html#ID-27083787
 */
HTMLObjectElement.prototype.tabIndex;

/**
 * @type {string}
 * @see http://www.w3.org/TR/2000/CR-DOM-Level-2-20000510/html.html#ID-91665621
 */
HTMLObjectElement.prototype.type;

/**
 * @type {string}
 * @see http://www.w3.org/TR/2000/CR-DOM-Level-2-20000510/html.html#ID-6649772
 */
HTMLObjectElement.prototype.useMap;

/**
 * @type {number}
 * @see http://www.w3.org/TR/2000/CR-DOM-Level-2-20000510/html.html#ID-8682483
 */
HTMLObjectElement.prototype.vspace;

/**
 * @type {string}
 * @implicitCast
 * @see http://www.w3.org/TR/2000/CR-DOM-Level-2-20000510/html.html#ID-38538620
 */
HTMLObjectElement.prototype.width;

/**
 * @constructor
 * @extends {HTMLElement}
 * @see http://www.w3.org/TR/2000/CR-DOM-Level-2-20000510/html.html#ID-64077273
 */
function HTMLParamElement() {}

/**
 * @type {string}
 * @see http://www.w3.org/TR/2000/CR-DOM-Level-2-20000510/html.html#ID-59871447
 */
HTMLParamElement.prototype.name;

/**
 * @type {string}
 * @see http://www.w3.org/TR/2000/CR-DOM-Level-2-20000510/html.html#ID-18179888
 */
HTMLParamElement.prototype.type;

/**
 * @type {string}
 * @see http://www.w3.org/TR/2000/CR-DOM-Level-2-20000510/html.html#ID-77971357
 */
HTMLParamElement.prototype.value;

/**
 * @type {string}
 * @see http://www.w3.org/TR/2000/CR-DOM-Level-2-20000510/html.html#ID-23931872
 */
HTMLParamElement.prototype.valueType;

/**
 * @constructor
 * @extends {HTMLElement}
 * @see http://www.w3.org/TR/2000/CR-DOM-Level-2-20000510/html.html#ID-31006348
 */
function HTMLAppletElement() {}

/**
 * @type {string}
 * @see http://www.w3.org/TR/2000/CR-DOM-Level-2-20000510/html.html#ID-8049912
 */
HTMLAppletElement.prototype.align;

/**
 * @type {string}
 * @see http://www.w3.org/TR/2000/CR-DOM-Level-2-20000510/html.html#ID-58610064
 */
HTMLAppletElement.prototype.alt;

/**
 * @type {string}
 * @see http://www.w3.org/TR/2000/CR-DOM-Level-2-20000510/html.html#ID-14476360
 */
HTMLAppletElement.prototype.archive;

/**
 * @type {string}
 * @see http://www.w3.org/TR/2000/CR-DOM-Level-2-20000510/html.html#ID-61509645
 */
HTMLAppletElement.prototype.code;

/**
 * @type {string}
 * @see http://www.w3.org/TR/2000/CR-DOM-Level-2-20000510/html.html#ID-6581160
 */
HTMLAppletElement.prototype.codeBase;

/**
 * @type {string}
 * @implicitCast
 * @see http://www.w3.org/TR/2000/CR-DOM-Level-2-20000510/html.html#ID-90184867
 */
HTMLAppletElement.prototype.height;

/**
 * @type {number}
 * @see http://www.w3.org/TR/2000/CR-DOM-Level-2-20000510/html.html#ID-1567197
 */
HTMLAppletElement.prototype.hspace;

/**
 * @type {string}
 * @see http://www.w3.org/TR/2000/CR-DOM-Level-2-20000510/html.html#ID-39843695
 */
HTMLAppletElement.prototype.name;

/**
 * @type {string}
 * @see http://www.w3.org/TR/2000/CR-DOM-Level-2-20000510/html.html#ID-93681523
 */
HTMLAppletElement.prototype.object;

/**
 * @type {number}
 * @see http://www.w3.org/TR/2000/CR-DOM-Level-2-20000510/html.html#ID-22637173
 */
HTMLAppletElement.prototype.vspace;

/**
 * @type {string}
 * @implicitCast
 * @see http://www.w3.org/TR/2000/CR-DOM-Level-2-20000510/html.html#ID-16526327
 */
HTMLAppletElement.prototype.width;

/**
 * @constructor
 * @extends {HTMLElement}
 * @see http://www.w3.org/TR/2000/CR-DOM-Level-2-20000510/html.html#ID-94109203
 */
function HTMLMapElement() {}

/**
 * @type {HTMLCollection<!HTMLAreaElement>}
 * @see http://www.w3.org/TR/2000/CR-DOM-Level-2-20000510/html.html#ID-71838730
 */
HTMLMapElement.prototype.areas;

/**
 * @type {string}
 * @see http://www.w3.org/TR/2000/CR-DOM-Level-2-20000510/html.html#ID-52696514
 */
HTMLMapElement.prototype.name;

/**
 * @constructor
 * @extends {HTMLElement}
 * @see http://www.w3.org/TR/2000/CR-DOM-Level-2-20000510/html.html#ID-26019118
 */
function HTMLAreaElement() {}

/**
 * @type {string}
 * @see http://www.w3.org/TR/2000/CR-DOM-Level-2-20000510/html.html#ID-57944457
 */
HTMLAreaElement.prototype.accessKey;

/**
 * @type {string}
 * @see http://www.w3.org/TR/2000/CR-DOM-Level-2-20000510/html.html#ID-39775416
 */
HTMLAreaElement.prototype.alt;

/**
 * @type {string}
 * @see http://www.w3.org/TR/2000/CR-DOM-Level-2-20000510/html.html#ID-66021476
 */
HTMLAreaElement.prototype.coords;

/**
 * @type {string}
 * @implicitCast
 * @see http://www.w3.org/TR/2000/CR-DOM-Level-2-20000510/html.html#ID-34672936
 */
HTMLAreaElement.prototype.href;

/**
 * @type {boolean}
 * @see http://www.w3.org/TR/2000/CR-DOM-Level-2-20000510/html.html#ID-61826871
 */
HTMLAreaElement.prototype.noHref;

/**
 * @type {string}
 * @see http://www.w3.org/TR/2000/CR-DOM-Level-2-20000510/html.html#ID-85683271
 */
HTMLAreaElement.prototype.shape;

/**
 * @type {number}
 * @see http://www.w3.org/TR/2000/CR-DOM-Level-2-20000510/html.html#ID-8722121
 */
HTMLAreaElement.prototype.tabIndex;

/**
 * @type {string}
 * @see http://www.w3.org/TR/2000/CR-DOM-Level-2-20000510/html.html#ID-46054682
 */
HTMLAreaElement.prototype.target;

/**
 * @constructor
 * @extends {HTMLElement}
 * @see http://www.w3.org/TR/2000/CR-DOM-Level-2-20000510/html.html#ID-81598695
 */
function HTMLScriptElement() {}

/**
 * @type {string}
 * @see http://www.w3.org/TR/2000/CR-DOM-Level-2-20000510/html.html#ID-35305677
 */
HTMLScriptElement.prototype.charset;

/**
 * @type {boolean}
 * @see http://www.w3.org/TR/2000/CR-DOM-Level-2-20000510/html.html#ID-93788534
 */
HTMLScriptElement.prototype.defer;

/**
 * @type {string}
 * @see http://www.w3.org/TR/2000/CR-DOM-Level-2-20000510/html.html#ID-56700403
 */
HTMLScriptElement.prototype.event;

/**
 * @type {string}
 * @see http://www.w3.org/TR/2000/CR-DOM-Level-2-20000510/html.html#ID-66979266
 */
HTMLScriptElement.prototype.htmlFor;

/**
 * @type {?function(!Event)}
 */
HTMLScriptElement.prototype.onreadystatechange;

/**
 * @type {string}
 * @implicitCast
 * @see http://www.w3.org/TR/2000/CR-DOM-Level-2-20000510/html.html#ID-75147231
 */
HTMLScriptElement.prototype.src;

/**
 * @type {string}
 * @implicitCast
 * @see http://www.w3.org/TR/2000/CR-DOM-Level-2-20000510/html.html#ID-46872999
 */
HTMLScriptElement.prototype.text;

/**
 * @type {string}
 * @see http://www.w3.org/TR/2000/CR-DOM-Level-2-20000510/html.html#ID-30534818
 */
HTMLScriptElement.prototype.type;

/**
 * @constructor
 * @extends {HTMLElement}
 * @see http://www.w3.org/TR/2000/CR-DOM-Level-2-20000510/html.html#ID-64060425
 */
function HTMLTableElement() {}

/**
 * @type {string}
 * @see http://www.w3.org/TR/2000/CR-DOM-Level-2-20000510/html.html#ID-23180977
 */
HTMLTableElement.prototype.align;

/**
 * @type {string}
 * @see http://www.w3.org/TR/2000/CR-DOM-Level-2-20000510/html.html#ID-83532985
 */
HTMLTableElement.prototype.bgColor;

/**
 * @type {string}
 * @see http://www.w3.org/TR/2000/CR-DOM-Level-2-20000510/html.html#ID-50969400
 */
HTMLTableElement.prototype.border;

/**
 * @type {HTMLTableCaptionElement}
 * @see http://www.w3.org/TR/2000/CR-DOM-Level-2-20000510/html.html#ID-14594520
 */
HTMLTableElement.prototype.caption;

/**
 * @type {string}
 * @see http://www.w3.org/TR/2000/CR-DOM-Level-2-20000510/html.html#ID-59162158
 */
HTMLTableElement.prototype.cellPadding;

/**
 * @type {string}
 * @see http://www.w3.org/TR/2000/CR-DOM-Level-2-20000510/html.html#ID-68907883
 */
HTMLTableElement.prototype.cellSpacing;

/**
 * @type {string}
 * @see http://www.w3.org/TR/2000/CR-DOM-Level-2-20000510/html.html#ID-64808476
 */
HTMLTableElement.prototype.frame;

/**
 * @type {HTMLCollection<!HTMLTableRowElement>}
 * @see http://www.w3.org/TR/2000/CR-DOM-Level-2-20000510/html.html#ID-6156016
 */
HTMLTableElement.prototype.rows;

/**
 * @type {string}
 * @see http://www.w3.org/TR/2000/CR-DOM-Level-2-20000510/html.html#ID-26347553
 */
HTMLTableElement.prototype.rules;

/**
 * @type {string}
 * @see http://www.w3.org/TR/2000/CR-DOM-Level-2-20000510/html.html#ID-44998528
 */
HTMLTableElement.prototype.summary;

/**
 * @type {HTMLCollection<!HTMLTableSectionElement>}
 * @see http://www.w3.org/TR/2000/CR-DOM-Level-2-20000510/html.html#ID-63206416
 */
HTMLTableElement.prototype.tBodies;

/**
 * @type {HTMLTableSectionElement}
 * @see http://www.w3.org/TR/2000/CR-DOM-Level-2-20000510/html.html#ID-64197097
 */
HTMLTableElement.prototype.tFoot;

/**
 * @type {HTMLTableSectionElement}
 * @see http://www.w3.org/TR/2000/CR-DOM-Level-2-20000510/html.html#ID-9530944
 */
HTMLTableElement.prototype.tHead;

/**
 * @type {string}
 * @implicitCast
 * @see http://www.w3.org/TR/2000/CR-DOM-Level-2-20000510/html.html#ID-77447361
 */
HTMLTableElement.prototype.width;

/**
 * @return {HTMLElement}
 * @see http://www.w3.org/TR/2000/CR-DOM-Level-2-20000510/html.html#ID-96920263
 */
HTMLTableElement.prototype.createCaption = function() {};

/**
 * @return {HTMLElement}
 * @see http://www.w3.org/TR/2000/CR-DOM-Level-2-20000510/html.html#ID-8453710
 */
HTMLTableElement.prototype.createTFoot = function() {};

/**
 * @return {HTMLElement}
 * @see http://www.w3.org/TR/2000/CR-DOM-Level-2-20000510/html.html#ID-70313345
 */
HTMLTableElement.prototype.createTHead = function() {};

/**
 * @return {undefined}
 * @see http://www.w3.org/TR/2000/CR-DOM-Level-2-20000510/html.html#ID-22930071
 */
HTMLTableElement.prototype.deleteCaption = function() {};

/**
 * @param {number} index
 * @return {HTMLElement}
 * @see http://www.w3.org/TR/2000/CR-DOM-Level-2-20000510/html.html#ID-13114938
 */
HTMLTableElement.prototype.deleteRow = function(index) {};

/**
 * @return {undefined}
 * @see http://www.w3.org/TR/2000/CR-DOM-Level-2-20000510/html.html#ID-78363258
 */
HTMLTableElement.prototype.deleteTFoot = function() {};

/**
 * @return {undefined}
 * @see http://www.w3.org/TR/2000/CR-DOM-Level-2-20000510/html.html#ID-38310198
 */
HTMLTableElement.prototype.deleteTHead = function() {};

/**
 * @param {number=} opt_index
 * @return {HTMLElement}
 * @see https://www.w3.org/TR/html5/tabular-data.html#htmltableelement
 */
HTMLTableElement.prototype.insertRow = function(opt_index) {};

/**
 * @constructor
 * @extends {HTMLElement}
 * @see http://www.w3.org/TR/2000/CR-DOM-Level-2-20000510/html.html#ID-12035137
 */
function HTMLTableCaptionElement() {}

/**
 * @type {string}
 * @see http://www.w3.org/TR/2000/CR-DOM-Level-2-20000510/html.html#ID-79875068
 */
HTMLTableCaptionElement.prototype.align;

/**
 * @constructor
 * @extends {HTMLElement}
 * @see http://www.w3.org/TR/2000/CR-DOM-Level-2-20000510/html.html#ID-84150186
 */
function HTMLTableColElement() {}

/**
 * @type {string}
 * @see http://www.w3.org/TR/2000/CR-DOM-Level-2-20000510/html.html#ID-31128447
 */
HTMLTableColElement.prototype.align;

/**
 * @type {string}
 * @see http://www.w3.org/TR/2000/CR-DOM-Level-2-20000510/html.html#ID-9447412
 */
HTMLTableColElement.prototype.ch;

/**
 * @type {string}
 * @see http://www.w3.org/TR/2000/CR-DOM-Level-2-20000510/html.html#ID-57779225
 */
HTMLTableColElement.prototype.chOff;

/**
 * @type {number}
 * @see http://www.w3.org/TR/2000/CR-DOM-Level-2-20000510/html.html#ID-96511335
 */
HTMLTableColElement.prototype.span;

/**
 * @type {string}
 * @see http://www.w3.org/TR/2000/CR-DOM-Level-2-20000510/html.html#ID-83291710
 */
HTMLTableColElement.prototype.vAlign;

/**
 * @type {string}
 * @implicitCast
 * @see http://www.w3.org/TR/2000/CR-DOM-Level-2-20000510/html.html#ID-25196799
 */
HTMLTableColElement.prototype.width;

/**
 * @constructor
 * @extends {HTMLElement}
 * @see http://www.w3.org/TR/2000/CR-DOM-Level-2-20000510/html.html#ID-67417573
 */
function HTMLTableSectionElement() {}

/**
 * @type {string}
 * @see http://www.w3.org/TR/2000/CR-DOM-Level-2-20000510/html.html#ID-40530119
 */
HTMLTableSectionElement.prototype.align;

/**
 * @type {string}
 * @see http://www.w3.org/TR/2000/CR-DOM-Level-2-20000510/html.html#ID-83470012
 */
HTMLTableSectionElement.prototype.ch;

/**
 * @type {string}
 * @see http://www.w3.org/TR/2000/CR-DOM-Level-2-20000510/html.html#ID-53459732
 */
HTMLTableSectionElement.prototype.chOff;

/**
 * @type {HTMLCollection<!HTMLTableRowElement>}
 * @see http://www.w3.org/TR/2000/CR-DOM-Level-2-20000510/html.html#ID-52092650
 */
HTMLTableSectionElement.prototype.rows;

/**
 * @type {string}
 * @see http://www.w3.org/TR/2000/CR-DOM-Level-2-20000510/html.html#ID-4379116
 */
HTMLTableSectionElement.prototype.vAlign;

/**
 * @param {number} index
 * @return {HTMLElement}
 * @see http://www.w3.org/TR/2000/CR-DOM-Level-2-20000510/html.html#ID-5625626
 */
HTMLTableSectionElement.prototype.deleteRow = function(index) {};

/**
 * @param {number=} opt_index
 * @return {HTMLElement}
 * @see https://www.w3.org/TR/html5/tabular-data.html#htmltablesectionelement
 */
HTMLTableSectionElement.prototype.insertRow = function(opt_index) {};

/**
 * @constructor
 * @extends {HTMLElement}
 * @see http://www.w3.org/TR/2000/CR-DOM-Level-2-20000510/html.html#ID-6986576
 */
function HTMLTableRowElement() {}

/**
 * @type {string}
 * @see http://www.w3.org/TR/2000/CR-DOM-Level-2-20000510/html.html#ID-74098257
 */
HTMLTableRowElement.prototype.align;

/**
 * @type {string}
 * @see http://www.w3.org/TR/2000/CR-DOM-Level-2-20000510/html.html#ID-18161327
 */
HTMLTableRowElement.prototype.bgColor;

/**
 * @type {HTMLCollection<!HTMLTableCellElement>}
 * @see http://www.w3.org/TR/2000/CR-DOM-Level-2-20000510/html.html#ID-67349879
 */
HTMLTableRowElement.prototype.cells;

/**
 * @type {string}
 * @see http://www.w3.org/TR/2000/CR-DOM-Level-2-20000510/html.html#ID-16230502
 */
HTMLTableRowElement.prototype.ch;

/**
 * @type {string}
 * @see http://www.w3.org/TR/2000/CR-DOM-Level-2-20000510/html.html#ID-68207461
 */
HTMLTableRowElement.prototype.chOff;

/**
 * @type {number}
 * @see http://www.w3.org/TR/2000/CR-DOM-Level-2-20000510/html.html#ID-67347567
 */
HTMLTableRowElement.prototype.rowIndex;

/**
 * @type {number}
 * @see http://www.w3.org/TR/2000/CR-DOM-Level-2-20000510/html.html#ID-79105901
 */
HTMLTableRowElement.prototype.sectionRowIndex;

/**
 * @type {string}
 * @see http://www.w3.org/TR/2000/CR-DOM-Level-2-20000510/html.html#ID-90000058
 */
HTMLTableRowElement.prototype.vAlign;

/**
 * @param {number} index
 * @return {undefined}
 * @see http://www.w3.org/TR/2000/CR-DOM-Level-2-20000510/html.html#ID-11738598
 */
HTMLTableRowElement.prototype.deleteCell = function(index) {};

/**
 * @param {number} index
 * @return {!HTMLElement}
 * @see http://www.w3.org/TR/2000/CR-DOM-Level-2-20000510/html.html#ID-68927016
 */
HTMLTableRowElement.prototype.insertCell = function(index) {};

/**
 * @constructor
 * @extends {HTMLElement}
 * @see http://www.w3.org/TR/2000/CR-DOM-Level-2-20000510/html.html#ID-82915075
 */
function HTMLTableCellElement() {}

/**
 * @type {string}
 * @see http://www.w3.org/TR/2000/CR-DOM-Level-2-20000510/html.html#ID-74444037
 */
HTMLTableCellElement.prototype.abbr;

/**
 * @type {string}
 * @see http://www.w3.org/TR/2000/CR-DOM-Level-2-20000510/html.html#ID-98433879
 */
HTMLTableCellElement.prototype.align;

/**
 * @type {string}
 * @see http://www.w3.org/TR/2000/CR-DOM-Level-2-20000510/html.html#ID-76554418
 */
HTMLTableCellElement.prototype.axis;

/**
 * @type {string}
 * @see http://www.w3.org/TR/2000/CR-DOM-Level-2-20000510/html.html#ID-88135431
 */
HTMLTableCellElement.prototype.bgColor;

/**
 * @type {number}
 * @see http://www.w3.org/TR/2000/CR-DOM-Level-2-20000510/html.html#ID-80748363
 */
HTMLTableCellElement.prototype.cellIndex;

/**
 * @type {string}
 * @see http://www.w3.org/TR/2000/CR-DOM-Level-2-20000510/html.html#ID-30914780
 */
HTMLTableCellElement.prototype.ch;

/**
 * @type {string}
 * @see http://www.w3.org/TR/2000/CR-DOM-Level-2-20000510/html.html#ID-20144310
 */
HTMLTableCellElement.prototype.chOff;

/**
 * @type {number}
 * @see http://www.w3.org/TR/2000/CR-DOM-Level-2-20000510/html.html#ID-84645244
 */
HTMLTableCellElement.prototype.colSpan;

/**
 * @type {string}
 * @see http://www.w3.org/TR/2000/CR-DOM-Level-2-20000510/html.html#ID-89104817
 */
HTMLTableCellElement.prototype.headers;

/**
 * @type {string}
 * @implicitCast
 * @see http://www.w3.org/TR/2000/CR-DOM-Level-2-20000510/html.html#ID-83679212
 */
HTMLTableCellElement.prototype.height;

/**
 * @type {boolean}
 * @see http://www.w3.org/TR/2000/CR-DOM-Level-2-20000510/html.html#ID-62922045
 */
HTMLTableCellElement.prototype.noWrap;

/**
 * @type {number}
 * @see http://www.w3.org/TR/2000/CR-DOM-Level-2-20000510/html.html#ID-48237625
 */
HTMLTableCellElement.prototype.rowSpan;

/**
 * @type {string}
 * @see http://www.w3.org/TR/2000/CR-DOM-Level-2-20000510/html.html#ID-36139952
 */
HTMLTableCellElement.prototype.scope;

/**
 * @type {string}
 * @see http://www.w3.org/TR/2000/CR-DOM-Level-2-20000510/html.html#ID-58284221
 */
HTMLTableCellElement.prototype.vAlign;

/**
 * @type {string}
 * @implicitCast
 * @see http://www.w3.org/TR/2000/CR-DOM-Level-2-20000510/html.html#ID-27480795
 */
HTMLTableCellElement.prototype.width;

/**
 * @constructor
 * @extends {HTMLElement}
 * @see http://www.w3.org/TR/2000/CR-DOM-Level-2-20000510/html.html#ID-43829095
 */
function HTMLFrameSetElement() {}

/**
 * @type {string}
 * @see http://www.w3.org/TR/2000/CR-DOM-Level-2-20000510/html.html#ID-98869594
 */
HTMLFrameSetElement.prototype.cols;

/**
 * @type {string}
 * @see http://www.w3.org/TR/2000/CR-DOM-Level-2-20000510/html.html#ID-19739247
 */
HTMLFrameSetElement.prototype.rows;

/**
 * @constructor
 * @extends {HTMLElement}
 * @see http://www.w3.org/TR/2000/CR-DOM-Level-2-20000510/html.html#ID-97790553
 */
function HTMLFrameElement() {}

/**
 * @type {Document}
 * @see http://www.w3.org/TR/2000/CR-DOM-Level-2-20000510/html.html#ID-78799536
 */
HTMLFrameElement.prototype.contentDocument;

/**
 * @type {string}
 * @see http://www.w3.org/TR/2000/CR-DOM-Level-2-20000510/html.html#ID-11858633
 */
HTMLFrameElement.prototype.frameBorder;

/**
 * @type {string}
 * @see http://www.w3.org/TR/2000/CR-DOM-Level-2-20000510/html.html#ID-7836998
 */
HTMLFrameElement.prototype.longDesc;

/**
 * @type {string}
 * @see http://www.w3.org/TR/2000/CR-DOM-Level-2-20000510/html.html#ID-55569778
 */
HTMLFrameElement.prototype.marginHeight;

/**
 * @type {string}
 * @see http://www.w3.org/TR/2000/CR-DOM-Level-2-20000510/html.html#ID-8369969
 */
HTMLFrameElement.prototype.marginWidth;

/**
 * @type {string}
 * @see http://www.w3.org/TR/2000/CR-DOM-Level-2-20000510/html.html#ID-91128709
 */
HTMLFrameElement.prototype.name;

/**
 * @type {boolean}
 * @see http://www.w3.org/TR/2000/CR-DOM-Level-2-20000510/html.html#ID-80766578
 */
HTMLFrameElement.prototype.noResize;

/**
 * @type {string}
 * @see http://www.w3.org/TR/2000/CR-DOM-Level-2-20000510/html.html#ID-45411424
 */
HTMLFrameElement.prototype.scrolling;

/**
 * @type {string}
 * @implicitCast
 * @see http://www.w3.org/TR/2000/CR-DOM-Level-2-20000510/html.html#ID-78799535
 */
HTMLFrameElement.prototype.src;

/**
 * @constructor
 * @extends {HTMLElement}
 * @see http://www.w3.org/TR/2000/CR-DOM-Level-2-20000510/html.html#ID-50708718
 */
function HTMLIFrameElement() {}

/**
 * @type {string}
 * @see http://www.w3.org/TR/2000/CR-DOM-Level-2-20000510/html.html#ID-11309947
 */
HTMLIFrameElement.prototype.align;

/**
 * @type {Document}
 * @see http://www.w3.org/TR/2000/CR-DOM-Level-2-20000510/html.html#ID-67133006
 */
HTMLIFrameElement.prototype.contentDocument;

/**
 * @type {string}
 * @see http://www.w3.org/TR/2000/CR-DOM-Level-2-20000510/html.html#ID-22463410
 */
HTMLIFrameElement.prototype.frameBorder;

/**
 * @type {string}
 * @implicitCast
 * @see http://www.w3.org/TR/2000/CR-DOM-Level-2-20000510/html.html#ID-1678118
 */
HTMLIFrameElement.prototype.height;

/**
 * @type {string}
 * @see http://www.w3.org/TR/2000/CR-DOM-Level-2-20000510/html.html#ID-70472105
 */
HTMLIFrameElement.prototype.longDesc;

/**
 * @type {string}
 * @see http://www.w3.org/TR/2000/CR-DOM-Level-2-20000510/html.html#ID-91371294
 */
HTMLIFrameElement.prototype.marginHeight;

/**
 * @type {string}
 * @see http://www.w3.org/TR/2000/CR-DOM-Level-2-20000510/html.html#ID-66486595
 */
HTMLIFrameElement.prototype.marginWidth;

/**
 * @type {string}
 * @see http://www.w3.org/TR/2000/CR-DOM-Level-2-20000510/html.html#ID-96819659
 */
HTMLIFrameElement.prototype.name;

/**
 * @type {string}
 * @see http://www.w3.org/TR/2000/CR-DOM-Level-2-20000510/html.html#ID-36369822
 */
HTMLIFrameElement.prototype.scrolling;

/**
 * @type {string}
 * @implicitCast
 * @see http://www.w3.org/TR/2000/CR-DOM-Level-2-20000510/html.html#ID-43933957
 */
HTMLIFrameElement.prototype.src;

/**
 * @type {string}
 * @implicitCast
 * @see http://www.w3.org/TR/2000/CR-DOM-Level-2-20000510/html.html#ID-67133005
 */
HTMLIFrameElement.prototype.width;

/**
 * @const {number}
 * @see http://www.w3.org/TR/DOM-Level-2-Core/core.html#ID-258A00AF
 */
DOMException.INVALID_STATE_ERR;

/**
 * @const {number}
 * @see http://www.w3.org/TR/DOM-Level-2-Core/core.html#ID-258A00AF
 */
DOMException.SYNTAX_ERR;

/**
 * @const {number}
 * @see http://www.w3.org/TR/DOM-Level-2-Core/core.html#ID-258A00AF
 */
DOMException.INVALID_MODIFICATION_ERR;

/**
 * @const {number}
 * @see http://www.w3.org/TR/DOM-Level-2-Core/core.html#ID-258A00AF
 */
DOMException.NAMESPACE_ERR;

/**
 * @const {number}
 * @see http://www.w3.org/TR/DOM-Level-2-Core/core.html#ID-258A00AF
 */
DOMException.INVALID_ACCESS_ERR;
/**
 * @type {boolean}
 * @see https://developer.mozilla.org/en/DOM/window.closed
 */
Window.prototype.closed;

/**
 * @type {HTMLObjectElement|HTMLIFrameElement|null}
 * @see https://developer.mozilla.org/en/DOM/window.frameElement
 */
Window.prototype.frameElement;

/**
 * Allows lookup of frames by index or by name.
 * @type {!Window}
 * @see https://developer.mozilla.org/en/DOM/window.frames
 */
Window.prototype.frames;

/**
 * @type {!History}
 * @suppress {duplicate}
 * @see https://developer.mozilla.org/en/DOM/window.history
 */
var history;

/**
 * @type {!History}
 * @see https://developer.mozilla.org/en/DOM/window.history
 */
Window.prototype.history;

/**
 * Returns the number of frames (either frame or iframe elements) in the
 * window.
 *
 * @type {number}
 * @see https://developer.mozilla.org/en/DOM/window.length
 */
Window.prototype.length;

/**
 * Location has an exception in the DeclaredGlobalExternsOnWindow pass
 * so we have to manually include it:
 * https://github.com/google/closure-compiler/blob/master/src/com/google/javascript/jscomp/DeclaredGlobalExternsOnWindow.java#L116
 *
 * @type {!Location}
 * @implicitCast
 * @see https://developer.mozilla.org/en/DOM/window.location
 */
Window.prototype.location;

/**

 * @type {string}
 * @see https://developer.mozilla.org/en/DOM/window.name
 */
Window.prototype.name;

/**
 * @type {!Navigator}
 * @see https://developer.mozilla.org/en/DOM/window.navigator
 */
Window.prototype.navigator;

/**
 * @type {?Window}
 * @see https://developer.mozilla.org/en/DOM/window.opener
 */
Window.prototype.opener;

/**
 * @type {!Window}
 * @see https://developer.mozilla.org/en/DOM/window.parent
 */
Window.prototype.parent;

/**
 * @type {!Window}
 * @see https://developer.mozilla.org/en/DOM/window.self
 */
Window.prototype.self;

/**
 * @type {?string}
 * @see https://developer.mozilla.org/en/DOM/window.status
 */
Window.prototype.status;

/**
 * @interface
 * @see https://html.spec.whatwg.org/multipage/window-object.html#the-status-bar-barprop-object
 */
function BarProp() {}

/** @const {boolean} */
BarProp.prototype.visible;

/**
 * @type {!BarProp}
 * @see https://developer.mozilla.org/en/DOM/window.locationbar
 */
Window.prototype.locationbar;

/**
 * @type {!BarProp}
 * @see https://developer.mozilla.org/en/DOM/window.menubar
 */
Window.prototype.menubar;

/**
 * @type {!BarProp}
 * @see https://developer.mozilla.org/en/DOM/window.personalbar
 */
Window.prototype.personalbar;


/**
 * @type {!BarProp}
 * @see https://developer.mozilla.org/en/DOM/window.scrollbars
 */
Window.prototype.scrollbars;

/**
 * @type {!BarProp}
 * @see https://developer.mozilla.org/en/DOM/window.statusbar
 */
Window.prototype.statusbar;

/**
 * @type {!BarProp}
 * @see https://developer.mozilla.org/en/DOM/window.toolbar
 */
Window.prototype.toolbar;

/**
 * @type {!Window}
 * @see https://developer.mozilla.org/en/DOM/window.self
 */
Window.prototype.top;

/**
 * @type {!Window}
 * @see https://developer.mozilla.org/en/DOM/window.self
 */
Window.prototype.window;

/**
 * @param {*} message
 * @see https://developer.mozilla.org/en/DOM/window.alert
 * @return {undefined}
 */
Window.prototype.alert = function(message) {};

/**
 * @param {*} message
 * @return {boolean}
 * @see https://developer.mozilla.org/en/DOM/window.confirm
 */
Window.prototype.confirm = function(message) {};

/**
 * @param {string} message
 * @param {string=} value
 * @return {?string}
 * @see https://developer.mozilla.org/en/DOM/window.prompt
 */
Window.prototype.prompt = function(message, value) {};

/**
 * @see https://developer.mozilla.org/en/DOM/window.blur
 * @return {undefined}
 */
Window.prototype.blur = function() {};

/**
 * @see https://developer.mozilla.org/en/DOM/window.close
 * @return {undefined}
 */
Window.prototype.close = function() {};

/**
 * @see https://developer.mozilla.org/en/DOM/window.focus
 * @return {undefined}
 */
Window.prototype.focus = function() {};

/**
 * @see https://developer.mozilla.org/en-US/docs/Web/API/Window/print
 * @return {undefined}
 */
Window.prototype.print = function() {};

/**
 * @see https://developer.mozilla.org/en-US/docs/Web/API/Window/stop
 * @return {undefined}
 */
Window.prototype.stop = function() {};

/** @typedef {boolean|!AttributionSourceParams} */
var BoolOrAttributionSourceParams;

/**
 * @param {*=} url
 * @param {string=} windowName
 * @param {string=} windowFeatures
 * @param {!BoolOrAttributionSourceParams=} replaceOrAttributionParams
 * @return {Window}
 * @see https://github.com/WICG/conversion-measurement-api
 * @see http://msdn.microsoft.com/en-us/library/ms536651(VS.85).aspx
 */
Window.prototype.open = function(
    url, windowName, windowFeatures, replaceOrAttributionParams) {};

/**
 * @type {string}
 * @see https://developer.mozilla.org/en-US/docs/Web/API/Element/innerHTML
 * @implicitCast
 */
Element.prototype.innerHTML;

/**
 * @type {string}
 * @implicitCast
 * @see https://w3c.github.io/DOM-Parsing/#extensions-to-the-element-interface
 */
Element.prototype.outerHTML;

/**
 * AttributionSourceParams is a dictionary which contains the same attributes
 * used by attribution source anchor tags as seen in the link below.
 * NOTE: Ideally this record would be defined in a separate file, because this
 * API is not official yet, however, part of the proposed change is a
 * modification to the `Window.prototype.open` method to allow it to accept one
 * of these objects.
 * @record
 * @see https://github.com/WICG/conversion-measurement-api/tree/main#registering-attribution-sources-for-windowopen-navigations
 */
function AttributionSourceParams() {}

/**
 * A DOMString encoding a 64-bit unsigned integer which represents the
 * event-level data associated with this source. This will be limited to 64 bits
 * of information but the value can vary for browsers that want a higher level
 * of privacy.
 * @type {string}
 * @see https://github.com/WICG/conversion-measurement-api/tree/main#registering-attribution-sources-for-windowopen-navigations
 */
AttributionSourceParams.prototype.attributionSourceEventId;

/**
 * An origin whose eTLD+1 is where attribution will be triggered for this
 * source.
 * @type {string}
 * @see https://github.com/WICG/conversion-measurement-api/tree/main#registering-attribution-sources-for-windowopen-navigations
 */
AttributionSourceParams.prototype.attributionDestination;

/**
 * The desired endpoint that the attribution report for this source should go
 * to. Default is the top level origin of the page.
 * @type {string|undefined}
 * @see https://github.com/WICG/conversion-measurement-api/tree/main#registering-attribution-sources-for-windowopen-navigations
 */
AttributionSourceParams.prototype.attributionReportTo;

/**
 * Expiry in milliseconds for when the source should be deleted. Default is 30
 * days, with a maximum value of 30 days. The maximum expiry can also vary
 * between browsers.
 * @type {number|undefined}
 * @see https://github.com/WICG/conversion-measurement-api/tree/main#registering-attribution-sources-for-windowopen-navigations
 */
AttributionSourceParams.prototype.attributionExpiry;
/*
 * Copyright 2008 The Closure Compiler Authors
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/**
 * @fileoverview Definitions for W3C's DOM Level 3 specification.
 *  This file depends on w3c_dom2.js.
 *  The whole file has been fully type annotated.
 *  Created from
 *   http://www.w3.org/TR/DOM-Level-3-Core/ecma-script-binding.html
 *
 * @externs
 * @author stevey@google.com (Steve Yegge)
 */

/**
 * @type {number}
 * @see http://www.w3.org/TR/DOM-Level-3-Core/core.html#ID-258A00AF
 */
DOMException.prototype.code;

/**
 * @const {number}
 * @see http://www.w3.org/TR/DOM-Level-3-Core/core.html#ID-258A00AF
 */
DOMException.VALIDATION_ERR;

/**
 * @const {number}
 * @see http://www.w3.org/TR/DOM-Level-3-Core/core.html#ID-258A00AF
 */
DOMException.TYPE_MISMATCH_ERR;

/**
 * @constructor
 * @implements {IArrayLike<string>}
 * @see http://www.w3.org/TR/DOM-Level-3-Core/core.html#DOMStringList
 */
function DOMStringList() {}

/**
 * @type {number}
 * @see http://www.w3.org/TR/DOM-Level-3-Core/core.html#DOMStringList-length
 */
DOMStringList.prototype.length;

/**
 * @param {string} str
 * @return {boolean}
 * @see http://www.w3.org/TR/DOM-Level-3-Core/core.html#DOMStringList-contains
 * @nosideeffects
 */
DOMStringList.prototype.contains = function(str) {};

/**
 * @param {number} index
 * @return {string}
 * @see http://www.w3.org/TR/DOM-Level-3-Core/core.html#DOMStringList-item
 * @nosideeffects
 */
DOMStringList.prototype.item = function(index) {};

/**
 * @constructor
 * @implements {IArrayLike<!DOMImplementation>}
 * @see http://www.w3.org/TR/DOM-Level-3-Core/core.html#DOMImplementationList
 */
function DOMImplementationList() {}

/**
 * @type {number}
 * @see http://www.w3.org/TR/DOM-Level-3-Core/core.html#DOMImplementationList-length
 */
DOMImplementationList.prototype.length;

/**
 * @param {number} index
 * @return {DOMImplementation}
 * @see http://www.w3.org/TR/DOM-Level-3-Core/core.html#DOMImplementationList-item
 * @nosideeffects
 */
DOMImplementationList.prototype.item = function(index) {};

/**
 * @constructor
 * @see http://www.w3.org/TR/DOM-Level-3-Core/core.html#DOMImplementationSource
 */
function DOMImplementationSource() {}

/**
 * @param {?string} namespaceURI
 * @param {string} publicId
 * @param {DocumentType=} doctype
 * @return {Document}
 * @see https://dom.spec.whatwg.org/#ref-for-dom-domimplementation-createdocument%E2%91%A0
 * @nosideeffects
 */
DOMImplementation.prototype.createDocument = function(namespaceURI, publicId, doctype) {};

/**
 * @param {string} qualifiedName
 * @param {string} publicId
 * @param {string} systemId
 * @return {DocumentType}
 * @see http://www.w3.org/TR/DOM-Level-3-Core/core.html#Level-2-Core-DOM-createDocType
 * @nosideeffects
 */
DOMImplementation.prototype.createDocumentType = function(qualifiedName, publicId, systemId) {};

/**
 * @param {string} features
 * @return {DOMImplementation}
 * @see http://www.w3.org/TR/DOM-Level-3-Core/core.html#ID-getDOMImpl
 * @nosideeffects
 */
DOMImplementationSource.prototype.getDOMImplementation = function(features) {};

/**
 * @param {string} features
 * @return {DOMImplementationList}
 * @see http://www.w3.org/TR/DOM-Level-3-Core/core.html#ID-getDOMImpls
 * @nosideeffects
 */
DOMImplementationSource.prototype.getDOMImplementationList = function(features) {};

/**
 * @param {Node} externalNode
 * @return {Node}
 * @see http://www.w3.org/TR/DOM-Level-3-Core/core.html#Document3-adoptNode
 */
Document.prototype.adoptNode = function(externalNode) {};

/**
 * @type {string}
 * @see http://www.w3.org/TR/DOM-Level-3-Core/core.html#Document3-documentURI
 */
Document.prototype.documentURI;

/**
 * @type {string}
 * @see http://www.w3.org/TR/DOM-Level-3-Core/core.html#Document3-inputEncoding
 */
Document.prototype.inputEncoding;

/**
 * @type {string}
 * @see http://www.w3.org/TR/DOM-Level-3-Core/core.html#Document3-encoding
 */
Document.prototype.xmlEncoding;

/**
 * @type {boolean}
 * @see http://www.w3.org/TR/DOM-Level-3-Core/core.html#Document3-standalone
 */
Document.prototype.xmlStandalone;

/**
 * @type {string}
 * @see http://www.w3.org/TR/DOM-Level-3-Core/core.html#Document3-version
 */
Document.prototype.xmlVersion;

/**
 * @type {?string}
 * @see http://www.w3.org/TR/DOM-Level-3-Core/core.html#Node3-baseURI
 */
Node.prototype.baseURI;

/**
 * @type {string}
 * @see http://www.w3.org/TR/DOM-Level-3-Core/core.html#ID-NodeNSLocalN
 */
Node.prototype.localName;

/**
 * @type {string}
 * @see http://www.w3.org/TR/DOM-Level-3-Core/core.html#ID-NodeNSname
 */
Node.prototype.namespaceURI;

/**
 * @type {string}
 * @see http://www.w3.org/TR/DOM-Level-3-Core/core.html#ID-NodeNSPrefix
 */
Node.prototype.prefix;

/**
 * @type {string}
 * @implicitCast
 * @see http://www.w3.org/TR/DOM-Level-3-Core/core.html#Node3-textContent
 */
Node.prototype.textContent;

/**
 * @const {number}
 * @see http://www.w3.org/TR/DOM-Level-3-Core/core.html#Node-DOCUMENT_POSITION_DISCONNECTED
 */
Node.DOCUMENT_POSITION_DISCONNECTED;

/**
 * @const {number}
 * @see http://www.w3.org/TR/DOM-Level-3-Core/core.html#Node-DOCUMENT_POSITION_PRECEDING
 */
Node.DOCUMENT_POSITION_PRECEDING;

/**
 * @const {number}
 * @see http://www.w3.org/TR/DOM-Level-3-Core/core.html#Node-DOCUMENT_POSITION_FOLLOWING
 */
Node.DOCUMENT_POSITION_FOLLOWING;

/**
 * @const {number}
 * @see http://www.w3.org/TR/DOM-Level-3-Core/core.html#Node-DOCUMENT_POSITION_CONTAINS
 */
Node.DOCUMENT_POSITION_CONTAINS;

/**
 * @const {number}
 * @see http://www.w3.org/TR/DOM-Level-3-Core/core.html#Node-DOCUMENT_POSITION_CONTAINED_BY
 */
Node.DOCUMENT_POSITION_CONTAINED_BY;

/**
 * @const {number}
 * @see http://www.w3.org/TR/DOM-Level-3-Core/core.html#Node-DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC
 */
Node.DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC;

/**
 * @param {Node} other
 * @return {number}
 * @see http://www.w3.org/TR/DOM-Level-3-Core/core.html#Node3-compareDocumentPosition
 * @nosideeffects
 */
Node.prototype.compareDocumentPosition = function(other) {};

/**
 * @param {string} feature
 * @param {string} version
 * @return {Object}
 * @see http://www.w3.org/TR/DOM-Level-3-Core/core.html#Node3-getFeature
 * @nosideeffects
 */
Node.prototype.getFeature = function(feature, version) {};

/**
 * @param {string} key
 * @return {Object}
 * @see http://www.w3.org/TR/DOM-Level-3-Core/core.html#Node3-getUserData
 * @nosideeffects
 */
Node.prototype.getUserData = function(key) {};

/**
 * @return {boolean}
 * @see http://www.w3.org/TR/DOM-Level-3-Core/core.html#ID-NodeHasAttrs
 * @nosideeffects
 */
Node.prototype.hasAttributes = function() {};

/**
 * @param {?string} namespaceURI
 * @return {boolean}
 * @see http://www.w3.org/TR/DOM-Level-3-Core/core.html#Node3-isDefaultNamespace
 * @nosideeffects
 */
Node.prototype.isDefaultNamespace = function(namespaceURI) {};

/**
 * @param {Node} arg
 * @return {boolean}
 * @see http://www.w3.org/TR/DOM-Level-3-Core/core.html#Node3-isEqualNode
 * @nosideeffects
 */
Node.prototype.isEqualNode = function(arg) {};

/**
 * @param {Node} other
 * @return {boolean}
 * @see http://www.w3.org/TR/DOM-Level-3-Core/core.html#Node3-isSameNode
 * @nosideeffects
 */
Node.prototype.isSameNode = function(other) {};

/**
 * @param {string} prefix
 * @return {string}
 * @see http://www.w3.org/TR/DOM-Level-3-Core/core.html#Node3-lookupNamespaceURI
 * @nosideeffects
 */
Node.prototype.lookupNamespaceURI = function(prefix) {};

/**
 * @param {?string} namespaceURI
 * @return {string}
 * @see http://www.w3.org/TR/DOM-Level-3-Core/core.html#Node3-lookupNamespacePrefix
 * @nosideeffects
 */
Node.prototype.lookupPrefix = function(namespaceURI) {};

/**
 * @return {undefined}
 * @see http://www.w3.org/TR/DOM-Level-3-Core/core.html#ID-normalize
 */
Node.prototype.normalize = function() {};

/**
 * @param {string} query
 * @return {?Element}
 * @see http://www.w3.org/TR/selectors-api/#queryselector
 * @nosideeffects
 */
Node.prototype.querySelector = function(query) {};

/**
 * @param {string} query
 * @return {!NodeList<!Element>}
 * @see http://www.w3.org/TR/selectors-api/#queryselectorall
 * @nosideeffects
 */
Node.prototype.querySelectorAll = function(query) {};

/**
 * @type {Element}
 * @see http://www.w3.org/TR/DOM-Level-3-Core/core.html#Attr-ownerElement
 */
Attr.prototype.ownerElement;

/**
 * @type {boolean}
 * @see http://www.w3.org/TR/DOM-Level-3-Core/core.html#Attr-isId
 */
Attr.prototype.isId;

/**
 * @param {?string} namespaceURI
 * @param {string} localName
 * @return {Attr}
 * @see http://www.w3.org/TR/DOM-Level-3-Core/core.html#ID-ElGetAtNodeNS
 * @nosideeffects
 */
Element.prototype.getAttributeNodeNS = function(namespaceURI, localName) {};

/**
 * @param {?string} namespaceURI
 * @param {string} localName
 * @return {string}
 * @see http://www.w3.org/TR/DOM-Level-3-Core/core.html#ID-ElGetAttrNS
 * @nosideeffects
 */
Element.prototype.getAttributeNS = function(namespaceURI, localName) {};

/**
 * @param {?string} namespaceURI
 * @param {string} localName
 * @return {!NodeList<!Element>}
 * @see http://www.w3.org/TR/DOM-Level-3-Core/core.html#ID-A6C90942
 * @nosideeffects
 */
Element.prototype.getElementsByTagNameNS = function(namespaceURI, localName) {};

/**
 * @param {string} name
 * @return {boolean}
 * @see http://www.w3.org/TR/DOM-Level-3-Core/core.html#ID-ElHasAttr
 * @nosideeffects
 */
Element.prototype.hasAttribute = function(name) {};

/**
 * @param {?string} namespaceURI
 * @param {string} localName
 * @return {boolean}
 * @see http://www.w3.org/TR/DOM-Level-3-Core/core.html#ID-ElHasAttrNS
 * @nosideeffects
 */
Element.prototype.hasAttributeNS = function(namespaceURI, localName) {};

/**
 * @param {?string} namespaceURI
 * @param {string} localName
 * @return {undefined}
 * @see http://www.w3.org/TR/DOM-Level-3-Core/core.html#ID-ElRemAtNS
 */
Element.prototype.removeAttributeNS = function(namespaceURI, localName) {};

/**
 * @param {Attr} newAttr
 * @return {Attr}
 * @see http://www.w3.org/TR/DOM-Level-3-Core/core.html#ID-ElSetAtNodeNS
 */
Element.prototype.setAttributeNodeNS = function(newAttr) {};

/**
 * @param {?string} namespaceURI
 * @param {string} qualifiedName
 * @param {string|number|boolean} value Values are converted to strings with
 *     ToString, so we accept number and boolean since both convert easily to
 *     strings.
 * @return {undefined}
 * @see http://www.w3.org/TR/DOM-Level-3-Core/core.html#ID-ElSetAttrNS
 */
Element.prototype.setAttributeNS = function(namespaceURI, qualifiedName, value) {};

/**
 * @type {string}
 * @see http://www.w3.org/TR/DOM-Level-3-Core/core.html#Text3-wholeText
 */
Text.prototype.wholeText;

/**
 * @constructor
 * @see http://www.w3.org/TR/DOM-Level-3-Core/core.html#ERROR-Interfaces-DOMError
 */
function DOMError() {}

/**
 * @type {DOMLocator}
 * @see http://www.w3.org/TR/DOM-Level-3-Core/core.html#ERROR-DOMError-location
 */
DOMError.prototype.location;

/**
 * @type {string}
 * @see http://www.w3.org/TR/DOM-Level-3-Core/core.html#ERROR-DOMError-message
 */
DOMError.prototype.message;

/**
 * @type {Object}
 * @see http://www.w3.org/TR/DOM-Level-3-Core/core.html#ERROR-DOMError-relatedData
 */
DOMError.prototype.relatedData;

/**
 * @type {Object}
 * @see http://www.w3.org/TR/DOM-Level-3-Core/core.html#ERROR-DOMError-relatedException
 */
DOMError.prototype.relatedException;

/**
 * @const {number}
 * @see http://www.w3.org/TR/DOM-Level-3-Core/core.html#ERROR-DOMError-severity-warning
 */
DOMError.SEVERITY_WARNING;

/**
 * @const {number}
 * @see http://www.w3.org/TR/DOM-Level-3-Core/core.html#ERROR-DOMError-severity-error
 */
DOMError.SEVERITY_ERROR;

/**
 * @const {number}
 * @see http://www.w3.org/TR/DOM-Level-3-Core/core.html#ERROR-DOMError-severity-fatal-error
 */
DOMError.SEVERITY_FATAL_ERROR;

/**
 * @type {number}
 * @see http://www.w3.org/TR/DOM-Level-3-Core/core.html#ERROR-DOMError-severity
 */
DOMError.prototype.severity;

/**
 * @type {string}
 * @see http://www.w3.org/TR/DOM-Level-3-Core/core.html#ERROR-DOMError-type
 */
DOMError.prototype.type;

/**
 * @type {string}
 * @see http://www.w3.org/TR/dom/#domerror
 */
DOMError.prototype.name;

/**
 * @constructor
 * @see http://www.w3.org/TR/DOM-Level-3-Core/core.html#ERROR-Interfaces-DOMErrorHandler
 */
function DOMErrorHandler() {}

/**
 * @param {DOMError} error
 * @return {boolean}
 * @see http://www.w3.org/TR/DOM-Level-3-Core/core.html#ID-ERRORS-DOMErrorHandler-handleError
 */
DOMErrorHandler.prototype.handleError = function(error) {};

/**
 * @constructor
 * @see http://www.w3.org/TR/DOM-Level-3-Core/core.html#Interfaces-DOMLocator
 */
function DOMLocator() {}

/**
 * @type {number}
 * @see http://www.w3.org/TR/DOM-Level-3-Core/core.html#DOMLocator-byteOffset
 */
DOMLocator.prototype.byteOffset;

/**
 * @type {number}
 * @see http://www.w3.org/TR/DOM-Level-3-Core/core.html#DOMLocator-column-number
 */
DOMLocator.prototype.columnNumber;

/**
 * @type {number}
 * @see http://www.w3.org/TR/DOM-Level-3-Core/core.html#DOMLocator-line-number
 */
DOMLocator.prototype.lineNumber;

/**
 * @type {Node}
 * @see http://www.w3.org/TR/DOM-Level-3-Core/core.html#DOMLocator-node
 */
DOMLocator.prototype.relatedNode;

/**
 * @type {string}
 * @see http://www.w3.org/TR/DOM-Level-3-Core/core.html#DOMLocator-uri
 */
DOMLocator.prototype.uri;

/**
 * @type {number}
 * @see http://www.w3.org/TR/DOM-Level-3-Core/core.html#DOMLocator-utf16Offset
 */
DOMLocator.prototype.utf16Offset;

/**
 * @type {string}
 * @see http://www.w3.org/TR/DOM-Level-3-Core/core.html#ID-Core-DocType-publicId
 */
DocumentType.prototype.publicId;

/**
 * @type {string}
 * @see http://www.w3.org/TR/DOM-Level-3-Core/core.html#ID-Core-DocType-systemId
 */
DocumentType.prototype.systemId;
/*
 * Copyright 2016 The Closure Compiler Authors
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/**
 * @fileoverview Definitions for W3C's DOM4 specification. This file depends on
 * w3c_dom3.js. The whole file has been fully type annotated. Created from
 * https://www.w3.org/TR/domcore/.
 *
 * @externs
 * @author zhoumotongxue008@gmail.com (Michael Zhou)
 */

/**
 * @typedef {?(DocumentType|Element|CharacterData)}
 * @see https://www.w3.org/TR/domcore/#interface-childnode
 */
var ChildNode;

/**
 * @return {undefined}
 * @see https://www.w3.org/TR/domcore/#dom-childnode-remove
 */
DocumentType.prototype.remove = function() {};

/**
 * @return {undefined}
 * @see https://www.w3.org/TR/domcore/#dom-childnode-remove
 */
Element.prototype.remove = function() {};

/**
 * @return {undefined}
 * @see https://www.w3.org/TR/domcore/#dom-childnode-remove
 */
CharacterData.prototype.remove = function() {};

/**
 * @param {...(!Node|string)} nodes
 * @return {undefined}
 * @see https://dom.spec.whatwg.org/#dom-childnode-replacewith
 */
DocumentType.prototype.replaceWith = function(nodes) {};

/**
 * @const {string}
 * @see https://www.w3.org/TR/2015/REC-dom-20151119/#sec-domerror
 */
DOMException.prototype.name;

/**
 * @const {string}
 * @see https://www.w3.org/TR/2015/REC-dom-20151119/#sec-domerror
 */
DOMException.prototype.message;

/**
 * @const {number}
 * @see https://www.w3.org/TR/2015/REC-dom-20151119/#dfn-error-names-table
 */
DOMException.SECURITY_ERR;

/**
 * @const {number}
 * @see https://www.w3.org/TR/2015/REC-dom-20151119/#dfn-error-names-table
 */
DOMException.NETWORK_ERR;

/**
 * @const {number}
 * @see https://www.w3.org/TR/2015/REC-dom-20151119/#dfn-error-names-table
 */
DOMException.ABORT_ERR;

/**
 * @const {number}
 * @see https://www.w3.org/TR/2015/REC-dom-20151119/#dfn-error-names-table
 */
DOMException.URL_MISMATCH_ERR;

/**
 * @const {number}
 * @see https://www.w3.org/TR/2015/REC-dom-20151119/#dfn-error-names-table
 */
DOMException.QUOTA_EXCEEDED_ERR;

/**
 * @const {number}
 * @see https://www.w3.org/TR/2015/REC-dom-20151119/#dfn-error-names-table
 */
DOMException.TIMEOUT_ERR;

/**
 * @const {number}
 * @see https://www.w3.org/TR/2015/REC-dom-20151119/#dfn-error-names-table
 */
DOMException.INVALID_NODE_TYPE_ERR;

/**
 * @const {number}
 * @see https://www.w3.org/TR/2015/REC-dom-20151119/#dfn-error-names-table
 */
DOMException.DATA_CLONE_ERR;

/**
 * @param {...(!Node|string)} nodes
 * @return {undefined}
 * @see https://dom.spec.whatwg.org/#dom-childnode-replacewith
 */
Element.prototype.replaceWith = function(nodes) {};

/**
 * @param {...(!Node|string)} nodes
 * @return {undefined}
 * @see https://dom.spec.whatwg.org/#dom-childnode-replacewith
 */
CharacterData.prototype.replaceWith = function(nodes) {};

/**
 * @return {!Array<string>}
 * @see https://dom.spec.whatwg.org/#dom-element-getattributenames
 */
Element.prototype.getAttributeNames = function() {};

/**
 * @param {...(!Node|string)} nodes
 * @return {undefined}
 * @see https://dom.spec.whatwg.org/#dom-parentnode-append
 */
Element.prototype.append = function(nodes) {};

/**
 * @param {...(!Node|string)} nodes
 * @return {undefined}
 * @see https://dom.spec.whatwg.org/#dom-parentnode-append
 */
Document.prototype.append = function(nodes) {};

/**
 * @param {...(!Node|string)} nodes
 * @return {undefined}
 * @see https://dom.spec.whatwg.org/#dom-parentnode-append
 */
DocumentFragment.prototype.append = function(nodes) {};

/**
 * @param {...(!Node|string)} nodes
 * @return {undefined}
 * @see https://dom.spec.whatwg.org/#dom-parentnode-prepend
 */
Element.prototype.prepend = function(nodes) {};

/**
 * @param {...(!Node|string)} nodes
 * @return {undefined}
 * @see https://dom.spec.whatwg.org/#dom-parentnode-prepend
 */
Document.prototype.prepend = function(nodes) {};

/**
 * @param {...(!Node|string)} nodes
 * @return {undefined}
 * @see https://dom.spec.whatwg.org/#dom-parentnode-prepend
 */
DocumentFragment.prototype.prepend = function(nodes) {};

/**
 * @param {...(!Node|string)} nodes
 * @return {undefined}
 * @see https://dom.spec.whatwg.org/#dom-parentnode-replacechildren
 */
Element.prototype.replaceChildren = function(nodes) {};

/**
 * @param {...(!Node|string)} nodes
 * @return {undefined}
 * @see https://dom.spec.whatwg.org/#dom-parentnode-replacechildren
 */
Document.prototype.replaceChildren = function(nodes) {};

/**
 * @param {...(!Node|string)} nodes
 * @return {undefined}
 * @see https://dom.spec.whatwg.org/#dom-parentnode-replacechildren
 */
DocumentFragment.prototype.replaceChildren = function(nodes) {};

/**
 * @param {...(!Node|string)} nodes
 * @return {undefined}
 * @see https://dom.spec.whatwg.org/#dom-childnode-before
 */
Element.prototype.before = function(nodes) {};

/**
 * @param {...(!Node|string)} nodes
 * @return {undefined}
 * @see https://dom.spec.whatwg.org/#dom-childnode-before
 */
DocumentType.prototype.before = function(nodes) {};

/**
 * @param {...(!Node|string)} nodes
 * @return {undefined}
 * @see https://dom.spec.whatwg.org/#dom-childnode-before
 */
CharacterData.prototype.before = function(nodes) {};

/**
 * @param {...(!Node|string)} nodes
 * @return {undefined}
 * @see https://dom.spec.whatwg.org/#dom-childnode-after
 */
Element.prototype.after = function(nodes) {};

/**
 * @param {...(!Node|string)} nodes
 * @return {undefined}
 * @see https://dom.spec.whatwg.org/#dom-childnode-after
 */
DocumentType.prototype.after = function(nodes) {};

/**
 * @param {...(!Node|string)} nodes
 * @return {undefined}
 * @see https://dom.spec.whatwg.org/#dom-childnode-after
 */
CharacterData.prototype.after = function(nodes) {};

/**
 * @param {string} name
 * @param {boolean=} force
 * @return {boolean}
 * @throws {DOMException}
 * @see https://dom.spec.whatwg.org/#dom-element-toggleattribute
 */
Element.prototype.toggleAttribute = function(name, force) {};

/**
 * @type {Element}
 * @see http://msdn.microsoft.com/en-us/library/ms534327(VS.85).aspx
 */
Node.prototype.parentElement;

/**
 * @param {string} name
 * @return {!HTMLCollection<!Element>}
 * @nosideeffects
 * @see https://dom.spec.whatwg.org/#dom-document-getelementsbyclassname-classnames-classnames
 */
Document.prototype.getElementsByClassName = function(name) {};

/**
 * @param {string} classNames
 * @return {!HTMLCollection<!Element>}
 * @nosideeffects
 * @see https://dom.spec.whatwg.org/#dom-element-getelementsbyclassname-classnames-classnames
 */
Element.prototype.getElementsByClassName = function(classNames) {};

/**
 * @param {string} where
 * @param {Element} element
 * @return {!Element}
 * @throws {DOMException}
 * @see https://dom.spec.whatwg.org/#dom-element-insertadjacentelement
 */
Element.prototype.insertAdjacentElement = function(where, element) {};

/**
 * @param {string} where
 * @param {string} data
 * @return {undefined}
 * @throws {DOMException}
 * @see https://dom.spec.whatwg.org/#dom-element-insertadjacenttext
 */
Element.prototype.insertAdjacentText = function(where, data) {};
/*
 * Copyright 2009 The Closure Compiler Authors
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/**
 * @fileoverview Definitions for DOM Element Traversal interface.
 *  This file depends on w3c_dom1.js.
 *  The whole file has been fully type annotated.
 *  Created from:
 *    http://www.w3.org/TR/ElementTraversal/#ecmascript-bindings
 *
 * @externs
 * @author arv@google.com (Erik Arvidsson)
 */

/**
 * @typedef {?(Document|DocumentFragment|Element)}
 * @see https://dom.spec.whatwg.org/#parentnode
 */
var ParentNode;

/**
 * @typedef {?(Element|CharacterData)}
 * @see https://dom.spec.whatwg.org/#nondocumenttypechildnode
 */
var NonDocumentTypeChildNode;

/**
 * @type {Element}
 * @see https://developer.mozilla.org/En/DOM/Element.firstElementChild
 */
Element.prototype.firstElementChild;

/**
 * @type {Element}
 * @see https://developer.mozilla.org/En/DOM/Element.lastElementChild
 */
Element.prototype.lastElementChild;

/**
 * @type {Element}
 * @see https://developer.mozilla.org/En/DOM/Element.previousElementSibling
 */
Element.prototype.previousElementSibling;

/**
 * @type {Element}
 * @see https://developer.mozilla.org/En/DOM/Element.nextElementSibling
 */
Element.prototype.nextElementSibling;

/**
 * @type {number}
 * @see https://developer.mozilla.org/En/DOM/Element.childElementCount
 */
Element.prototype.childElementCount;

/**
 * @type {?Element}
 * @see https://dom.spec.whatwg.org/#dom-parentnode-firstelementchild
 */
Document.prototype.firstElementChild;

/**
 * @type {?Element}
 * @see https://dom.spec.whatwg.org/#dom-parentnode-lastelementchild
 */
Document.prototype.lastElementChild;

/**
 * @type {number}
 * @see https://dom.spec.whatwg.org/#dom-parentnode-childelementcount
 */
Document.prototype.childElementCount;

/**
 * @type {?Element}
 * @see https://dom.spec.whatwg.org/#dom-parentnode-firstelementchild
 */
DocumentFragment.prototype.firstElementChild;

/**
 * @type {?Element}
 * @see https://dom.spec.whatwg.org/#dom-parentnode-lastelementchild
 */
DocumentFragment.prototype.lastElementChild;

/**
 * @type {number}
 * @see https://dom.spec.whatwg.org/#dom-parentnode-childelementcount
 */
DocumentFragment.prototype.childElementCount;

/**
 * @type {?Element}
 * @see https://dom.spec.whatwg.org/#dom-nondocumenttypechildnode-previouselementsibling
 */
CharacterData.prototype.previousElementSibling;

/**
 * @type {?Element}
 * @see https://dom.spec.whatwg.org/#dom-nondocumenttypechildnode-nextelementsibling
 */
CharacterData.prototype.nextElementSibling;
/*
 * Copyright 2010 The Closure Compiler Authors
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/**
 * @fileoverview Definitions for W3C's event Level 3 specification.
 *  This file depends on w3c_event.js.
 *  The whole file has been partially type annotated.
 *  Created from https://www.w3.org/TR/uievents/#ui-events-intro
 *
 * @externs
 */

/**
 * @param {string} typeArg
 * @param {boolean=} canBubbleArg
 * @param {boolean=} cancelableArg
 * @param {?Window=} viewArg
 * @param {string=} keyArg
 * @param {number=} locationArg
 * @param {boolean=} ctrlKey
 * @param {boolean=} altKey
 * @param {boolean=} shiftKey
 * @param {boolean=} metaKey
 * @return {undefined}
 */
KeyboardEvent.prototype.initKeyboardEvent = function(
    typeArg, canBubbleArg, cancelableArg, viewArg, keyArg, locationArg, ctrlKey,
    altKey, shiftKey, metaKey) {};

/** @type {string} */
KeyboardEvent.prototype.char;

/** @type {string} */
KeyboardEvent.prototype.code;

/** @type {string} */
KeyboardEvent.prototype.key;

/** @type {number} */
KeyboardEvent.prototype.location;

/** @type {boolean} */
KeyboardEvent.prototype.repeat;

/** @type {string} */
KeyboardEvent.prototype.locale;

/** @type {number} */
MouseEvent.prototype.buttons;

/**
 * @param {string} keyIdentifierArg
 * @return {boolean}
 */
MouseEvent.prototype.getModifierState = function(keyIdentifierArg) {};

/** @type {boolean} */
Event.prototype.defaultPrevented;

/** @type {string} */
Event.prototype.namespaceURI;

/** @return {undefined} */
Event.prototype.stopImmediatePropagation = function() {};
/*
 * Copyright 2008 The Closure Compiler Authors
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/**
 * @fileoverview Definitions for W3C's event specification.
 *  The whole file has been fully type annotated.
 *  Created from
 *   http://www.w3.org/TR/DOM-Level-2-Events/ecma-script-binding.html
 *
 * @externs
 */


/**
 * @interface
 * @see https://dom.spec.whatwg.org/#interface-eventtarget
 */
function EventTarget() {}

/**
 * @param {string} type
 * @param {EventListener|function(this:THIS, !Event):*} listener
 * @param {(boolean|!AddEventListenerOptions)=} opt_options
 * @return {undefined}
 * @this {THIS}
 * @template THIS
 * @see https://dom.spec.whatwg.org/#dom-eventtarget-addeventlistener
 */
EventTarget.prototype.addEventListener = function(type, listener, opt_options) {
};

/**
 * @param {string} type
 * @param {EventListener|function(this:THIS, !Event):*} listener
 * @param {(boolean|!EventListenerOptions)=} opt_options
 * @return {undefined}
 * @this {THIS}
 * @template THIS
 * @see https://dom.spec.whatwg.org/#dom-eventtarget-removeeventlistener
 */
EventTarget.prototype.removeEventListener = function(
    type, listener, opt_options) {};

/**
 * @param {!Event} evt
 * @return {boolean}
 * @see https://dom.spec.whatwg.org/#dom-eventtarget-dispatchevent
 */
EventTarget.prototype.dispatchEvent = function(evt) {};

/**
 * @interface
 */
function EventListener() {}

/**
 * @param {!Event} evt
 * @return {undefined}
 */
EventListener.prototype.handleEvent = function(evt) {};

// The EventInit interface and the parameters to the Event constructor are part
// of DOM Level 3 (suggested) and the DOM "Living Standard" (mandated). They are
// included here as externs cannot be redefined. The same applies to other
// *EventInit interfaces and *Event constructors throughout this file. See:
// http://www.w3.org/TR/DOM-Level-3-Events/#event-initializers
// http://dom.spec.whatwg.org/#constructing-events
// https://dvcs.w3.org/hg/d4e/raw-file/tip/source_respec.htm#event-constructors

/**
 * @record
 * @see https://dom.spec.whatwg.org/#dictdef-eventinit
 */
function EventInit() {}

/** @type {(undefined|boolean)} */
EventInit.prototype.bubbles;

/** @type {(undefined|boolean)} */
EventInit.prototype.cancelable;

/** @type {(undefined|boolean)} */
EventInit.prototype.composed;


/**
 * @constructor
 * @param {string} type
 * @param {EventInit=} opt_eventInitDict
 */
function Event(type, opt_eventInitDict) {}

/**
 * @const {number}
 * @see http://www.w3.org/TR/DOM-Level-2-Events/ecma-script-binding.html
 */
Event.CAPTURING_PHASE;

/**
 * @const {number}
 * @see http://www.w3.org/TR/DOM-Level-2-Events/ecma-script-binding.html
 */
Event.AT_TARGET;

/**
 * @const {number}
 * @see http://www.w3.org/TR/DOM-Level-2-Events/ecma-script-binding.html
 */
Event.BUBBLING_PHASE;

/** @type {string} */
Event.prototype.type;

/** @type {EventTarget} */
Event.prototype.target;

/** @type {EventTarget} */
Event.prototype.currentTarget;

/** @type {number} */
Event.prototype.eventPhase;

/** @type {boolean} */
Event.prototype.bubbles;

/** @type {boolean} */
Event.prototype.cancelable;

/** @type {number} */
Event.prototype.timeStamp;

/**
 * Present for events spawned in browsers that support shadow dom.
 * @type {Array<!Element>|undefined}
 */
Event.prototype.path;

/**
 * Present for events spawned in browsers that support shadow dom.
 * @type {function():Array<!EventTarget>|undefined}
 * @see https://www.w3.org/TR/shadow-dom/#widl-Event-deepPath
 */
Event.prototype.deepPath;

/**
 * @return {undefined}
 */
Event.prototype.stopPropagation = function() {};

/**
 * @return {undefined}
 */
Event.prototype.preventDefault = function() {};

/**
 * @param {string} eventTypeArg
 * @param {boolean=} canBubbleArg
 * @param {boolean=} cancelableArg
 * @return {undefined}
 */
Event.prototype.initEvent = function(eventTypeArg, canBubbleArg, cancelableArg) {};

/**
 * @record
 * @extends {EventInit}
 * @template T
 * @see https://dom.spec.whatwg.org/#dictdef-customeventinit
 */
function CustomEventInit() {}

/** @type {(T|undefined)} */
CustomEventInit.prototype.detail;

/**
 * @constructor
 * @extends {Event}
 * @param {string} type
 * @param {CustomEventInit<T>=} opt_eventInitDict
 * @template T
 * @see http://www.w3.org/TR/DOM-Level-3-Events/#interface-CustomEvent
 */
function CustomEvent(type, opt_eventInitDict) {}

/**
 * @param {string} eventType
 * @param {boolean} bubbles
 * @param {boolean} cancelable
 * @param {T} detail
 * @return {undefined}
 */
CustomEvent.prototype.initCustomEvent = function(
    eventType, bubbles, cancelable, detail) {};

/**
 * @type {T}
 */
CustomEvent.prototype.detail;

/**
 * @interface
 */
function DocumentEvent() {}

/**
 * @param {string} eventType
 * @return {!Event}
 */
DocumentEvent.prototype.createEvent = function(eventType) {};

/**
 * @record
 * @extends {EventInit}
 * @see https://w3c.github.io/uievents/#idl-uieventinit
 */
function UIEventInit() {}

/** @type {undefined|?Window} */
UIEventInit.prototype.view;

/** @type {undefined|number} */
UIEventInit.prototype.detail;

/**
 * @constructor
 * @extends {Event}
 * @param {string} type
 * @param {UIEventInit=} opt_eventInitDict
 */
function UIEvent(type, opt_eventInitDict) {}

/** @type {number} */
UIEvent.prototype.detail;

/**
 * @param {string} typeArg
 * @param {boolean} canBubbleArg
 * @param {boolean} cancelableArg
 * @param {Window} viewArg
 * @param {number} detailArg
 * @return {undefined}
 */
UIEvent.prototype.initUIEvent = function(typeArg, canBubbleArg, cancelableArg,
    viewArg, detailArg) {};

/**
 * @record
 * @extends {UIEventInit}
 * @see https://w3c.github.io/uievents/#dictdef-eventmodifierinit
 */
function EventModifierInit() {}

/** @type {undefined|boolean} */
EventModifierInit.prototype.ctrlKey;

/** @type {undefined|boolean} */
EventModifierInit.prototype.shiftKey;

/** @type {undefined|boolean} */
EventModifierInit.prototype.altKey;

/** @type {undefined|boolean} */
EventModifierInit.prototype.metaKey;

/** @type {undefined|boolean} */
EventModifierInit.prototype.modifierAltGraph;

/** @type {undefined|boolean} */
EventModifierInit.prototype.modifierCapsLock;

/** @type {undefined|boolean} */
EventModifierInit.prototype.modifierFn;

/** @type {undefined|boolean} */
EventModifierInit.prototype.modifierFnLock;

/** @type {undefined|boolean} */
EventModifierInit.prototype.modifierHyper;

/** @type {undefined|boolean} */
EventModifierInit.prototype.modifierNumLock;

/** @type {undefined|boolean} */
EventModifierInit.prototype.modifierScrollLock;

/** @type {undefined|boolean} */
EventModifierInit.prototype.modifierSuper;

/** @type {undefined|boolean} */
EventModifierInit.prototype.modifierSymbol;

/** @type {undefined|boolean} */
EventModifierInit.prototype.modifierSymbolLock;

/**
 * @record
 * @extends {EventModifierInit}
 * @see https://w3c.github.io/uievents/#idl-mouseeventinit
 */
function MouseEventInit() {}

/** @type {undefined|number} */
MouseEventInit.prototype.screenX;

/** @type {undefined|number} */
MouseEventInit.prototype.screenY;

/** @type {undefined|number} */
MouseEventInit.prototype.clientX;

/** @type {undefined|number} */
MouseEventInit.prototype.clientY;

/** @type {undefined|number} */
MouseEventInit.prototype.button;

/** @type {undefined|number} */
MouseEventInit.prototype.buttons;

/** @type {undefined|?EventTarget} */
MouseEventInit.prototype.relatedTarget;

/**
 * @constructor
 * @extends {UIEvent}
 * @param {string} type
 * @param {MouseEventInit=} opt_eventInitDict
 */
function MouseEvent(type, opt_eventInitDict) {}

/** @type {number} */
MouseEvent.prototype.screenX;

/** @type {number} */
MouseEvent.prototype.screenY;

/** @type {number} */
MouseEvent.prototype.clientX;

/** @type {number} */
MouseEvent.prototype.clientY;

/** @type {boolean} */
MouseEvent.prototype.ctrlKey;

/** @type {boolean} */
MouseEvent.prototype.shiftKey;

/** @type {boolean} */
MouseEvent.prototype.altKey;

/** @type {boolean} */
MouseEvent.prototype.metaKey;

/** @type {number} */
MouseEvent.prototype.button;

/** @type {EventTarget} */
MouseEvent.prototype.relatedTarget;


/**
 * @constructor
 * @extends {Event}
 */
function MutationEvent() {}

/** @type {Node} */
MutationEvent.prototype.relatedNode;

/** @type {string} */
MutationEvent.prototype.prevValue;

/** @type {string} */
MutationEvent.prototype.newValue;

/** @type {string} */
MutationEvent.prototype.attrName;

/** @type {number} */
MutationEvent.prototype.attrChange;

/**
 * @param {string} typeArg
 * @param {boolean} canBubbleArg
 * @param {boolean} cancelableArg
 * @param {Node} relatedNodeArg
 * @param {string} prevValueArg
 * @param {string} newValueArg
 * @param {string} attrNameArg
 * @param {number} attrChangeArg
 * @return {undefined}
 */
MutationEvent.prototype.initMutationEvent = function(typeArg, canBubbleArg, cancelableArg, relatedNodeArg, prevValueArg, newValueArg, attrNameArg, attrChangeArg) {};


// DOM3
/**
 * @record
 * @extends {EventModifierInit}
 * @see https://w3c.github.io/uievents/#idl-keyboardeventinit
 */
function KeyboardEventInit() {}

/** @type {undefined|string} */
KeyboardEventInit.prototype.key;

/** @type {undefined|string} */
KeyboardEventInit.prototype.code;

/** @type {undefined|number} */
KeyboardEventInit.prototype.location;

/** @type {undefined|boolean} */
KeyboardEventInit.prototype.repeat;

/** @type {undefined|boolean} */
KeyboardEventInit.prototype.isComposing;

/** @type {undefined|string} */
KeyboardEventInit.prototype.char;

/** @type {undefined|string} */
KeyboardEventInit.prototype.locale;

/**
 * @see https://w3c.github.io/uievents/#idl-keyboardevent
 * @constructor
 * @extends {UIEvent}
 * @param {string} type
 * @param {KeyboardEventInit=} opt_eventInitDict
 */
function KeyboardEvent(type, opt_eventInitDict) {}

/** @type {string} */
KeyboardEvent.prototype.keyIdentifier;

/** @type {boolean} */
KeyboardEvent.prototype.ctrlKey;

/** @type {boolean} */
KeyboardEvent.prototype.shiftKey;

/** @type {boolean} */
KeyboardEvent.prototype.altKey;

/** @type {boolean} */
KeyboardEvent.prototype.metaKey;

/** @type {number} */
KeyboardEvent.DOM_KEY_LOCATION_STANDARD;

/** @type {number} */
KeyboardEvent.DOM_KEY_LOCATION_LEFT;

/** @type {number} */
KeyboardEvent.DOM_KEY_LOCATION_RIGHT;

/** @type {number} */
KeyboardEvent.DOM_KEY_LOCATION_NUMPAD;

/**
 * @param {string} keyIdentifierArg
 * @return {boolean}
 */
KeyboardEvent.prototype.getModifierState = function(keyIdentifierArg) {};

/**
 * @record
 * @extends {UIEventInit}
 * @see https://w3c.github.io/uievents/#idl-focuseventinit
 */
function FocusEventInit() {}

/** @type {undefined|?EventTarget} */
FocusEventInit.prototype.relatedTarget;


/**
 * The FocusEvent interface provides specific contextual information associated
 * with Focus events.
 * http://www.w3.org/TR/DOM-Level-3-Events/#events-focusevent
 *
 * @constructor
 * @extends {UIEvent}
 * @param {string} type
 * @param {FocusEventInit=} opt_eventInitDict
 */
function FocusEvent(type, opt_eventInitDict) {}

/** @type {EventTarget} */
FocusEvent.prototype.relatedTarget;


/**
 * See https://dom.spec.whatwg.org/#dictdef-eventlisteneroptions
 * @record
 */
var EventListenerOptions = function() {};

/** @type {boolean|undefined} */
EventListenerOptions.prototype.capture;

/**
 * See https://dom.spec.whatwg.org/#dictdef-addeventlisteneroptions
 * @record
 * @extends {EventListenerOptions}
 */
var AddEventListenerOptions = function() {};

/** @type {boolean|undefined} */
AddEventListenerOptions.prototype.passive;

/** @type {boolean|undefined} */
AddEventListenerOptions.prototype.once;

/**
 * @record
 * @extends {UIEventInit}
 * @see https://w3c.github.io/uievents/#idl-inputeventinit
 * @see https://w3c.github.io/input-events/#interface-InputEvent
 */
function InputEventInit() {}

/** @type {undefined|?string} */
InputEventInit.prototype.data;

/** @type {undefined|boolean} */
InputEventInit.prototype.isComposing;

/** @type {undefined|string} */
InputEventInit.prototype.inputType;

/** @type {undefined|?DataTransfer} */
InputEventInit.prototype.dataTransfer;


// TODO(charleyroy): Add getTargetRanges() once a consensus has been made
// regarding how to structure these values. See
// https://github.com/w3c/input-events/issues/38.
/**
 * @constructor
 * @extends {UIEvent}
 * @param {string} type
 * @param {InputEventInit=} opt_eventInitDict
 * @see https://www.w3.org/TR/uievents/#interface-inputevent
 * @see https://w3c.github.io/input-events/#interface-InputEvent
 */
function InputEvent(type, opt_eventInitDict) {}

/** @type {string} */
InputEvent.prototype.data;

/** @type {boolean} */
InputEvent.prototype.isComposed;

/** @type {string} */
InputEvent.prototype.inputType;

/** @type {?DataTransfer} */
InputEvent.prototype.dataTransfer;


/**
 * @record
 * @extends {EventInit}
 * @see https://html.spec.whatwg.org/multipage/webappapis.html#promiserejectioneventinit
 */
function PromiseRejectionEventInit() {}

/** @type {undefined|!Promise<*>} */
PromiseRejectionEventInit.prototype.promise;

/** @type {*} */
PromiseRejectionEventInit.prototype.reason;


/**
 * @constructor
 * @extends {Event}
 * @param {string} type
 * @param {PromiseRejectionEventInit=} eventInitDict
 * @see https://html.spec.whatwg.org/multipage/webappapis.html#promiserejectionevent
 */
function PromiseRejectionEvent(type, eventInitDict) {}

/** @type {!Promise<*>} */
PromiseRejectionEvent.prototype.promise;

/** @type {*} */
PromiseRejectionEvent.prototype.reason;/*
 * Copyright 2012 The Closure Compiler Authors
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/**
 * @fileoverview Definitions for W3C's EventSource API.
 * @see https://html.spec.whatwg.org/multipage/server-sent-events.html#server-sent-events
 *
 * @externs
 */

/** @record */
function EventSourceInit() {};

/** @type {(boolean|undefined)} */
EventSourceInit.prototype.withCredentials;

/**
 * @constructor
 * @implements {EventTarget}
 * @param {string} url
 * @param {EventSourceInit=} opt_eventSourceInitDict
 */
function EventSource(url, opt_eventSourceInitDict) {}

/** @override */
EventSource.prototype.addEventListener = function(type, listener, opt_options) {
};

/** @override */
EventSource.prototype.removeEventListener = function(
    type, listener, opt_options) {};

/** @override */
EventSource.prototype.dispatchEvent = function(evt) {};

/**
 * @const {string}
 */
EventSource.prototype.url;

/** @const {boolean} */
EventSource.prototype.withCredentials;

/**
 * @const {number}
 */
EventSource.prototype.CONNECTING;

/**
 * @const {number}
 */
EventSource.CONNECTING;

/**
 * @const {number}
 */
EventSource.prototype.OPEN;

/**
 * @const {number}
 */
EventSource.OPEN;

/**
 * @const {number}
 */
EventSource.prototype.CLOSED;

/**
 * @const {number}
 */
EventSource.CLOSED;

/**
 * @const {number}
 */
EventSource.prototype.readyState;

/**
 * @type {?function(!Event): void}
 */
EventSource.prototype.onopen = function(e) {};

/**
 * @type {?function(!MessageEvent<string>): void}
 */
EventSource.prototype.onmessage = function(e) {};

/**
 * @type {?function(!Event): void}
 */
EventSource.prototype.onerror = function(e) {};

/**
 * @return {undefined}
 */
EventSource.prototype.close = function() {};
/*
 * Copyright 2010 The Closure Compiler Authors
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/**
 * @fileoverview Definitions for objects in the File API, File Writer API, and
 * File System API. Details of the API are at:
 * http://www.w3.org/TR/FileAPI/
 *
 * @externs
 */

/** @record */
function BlobPropertyBag() {};

/** @type {(string|undefined)} */
BlobPropertyBag.prototype.type;

/**
 * @see http://dev.w3.org/2006/webapi/FileAPI/#dfn-Blob
 * @param {Array<ArrayBuffer|ArrayBufferView|Blob|string>=} opt_blobParts
 * @param {BlobPropertyBag=} opt_options
 * @constructor
 * @nosideeffects
 */
function Blob(opt_blobParts, opt_options) {}

/**
 * @see http://www.w3.org/TR/FileAPI/#dfn-size
 * @type {number}
 */
Blob.prototype.size;

/**
 * @see http://www.w3.org/TR/FileAPI/#dfn-type
 * @type {string}
 */
Blob.prototype.type;

/**
 * @see http://www.w3.org/TR/FileAPI/#dfn-slice
 * @param {number=} start
 * @param {number=} length
 * @param {string=} opt_contentType
 * @return {!Blob}
 * @nosideeffects
 */
Blob.prototype.slice = function(start, length, opt_contentType) {};

/**
 * @see http://www.w3.org/TR/FileAPI/#arraybuffer-method-algo
 * @return {!Promise<!ArrayBuffer>}
 * @nosideeffects
 */
Blob.prototype.arrayBuffer = function() {};

/**
 * @see https://www.w3.org/TR/FileAPI/#dom-blob-text
 * @return {!Promise<string>}
 * @nosideeffects
 */
Blob.prototype.text = function() {};


/**
 * @record
 * @extends {BlobPropertyBag}
 **/
function FilePropertyBag() {};

/** @type {(number|undefined)} */
FilePropertyBag.prototype.lastModified;

/**
 * @see http://www.w3.org/TR/FileAPI/#dfn-file
 * @param {!Array<string|!Blob|!ArrayBuffer>=} contents
 * @param {string=} name
 * @param {FilePropertyBag=} properties
 * @constructor
 * @extends {Blob}
 */
function File(contents, name, properties) {}

/**
 * Chrome uses this instead of name.
 * @deprecated Use name instead.
 * @type {string}
 */
File.prototype.fileName;

/**
 * Chrome uses this instead of size.
 * @deprecated Use size instead.
 * @type {string}
 */
File.prototype.fileSize;

/**
 * @see http://www.w3.org/TR/FileAPI/#dfn-name
 * @type {string}
 */
File.prototype.name;

/**
 * @see http://www.w3.org/TR/FileAPI/#dfn-lastModifiedDate
 * @type {Date}
 */
File.prototype.lastModifiedDate;

/**
 * @see http://www.w3.org/TR/FileAPI/#dfn-lastModified
 * @type {number}
 */
File.prototype.lastModified;

/**
 * @see http://www.w3.org/TR/FileAPI/#dfn-filereader
 * @constructor
 * @implements {EventTarget}
 */
function FileReader() {}

/** @override */
FileReader.prototype.addEventListener = function(type, listener, opt_options) {
};

/** @override */
FileReader.prototype.removeEventListener = function(
    type, listener, opt_options) {};

/** @override */
FileReader.prototype.dispatchEvent = function(evt) {};

/**
 * @see http://www.w3.org/TR/FileAPI/#dfn-readAsArrayBuffer
 * @param {!Blob} blob
 * @return {undefined}
 */
FileReader.prototype.readAsArrayBuffer = function(blob) {};

/**
 * @see http://www.w3.org/TR/FileAPI/#dfn-readAsBinaryStringAsync
 * @param {!Blob} blob
 * @return {undefined}
 */
FileReader.prototype.readAsBinaryString = function(blob) {};

/**
 * @see http://www.w3.org/TR/FileAPI/#dfn-readAsText
 * @param {!Blob} blob
 * @param {string=} encoding
 * @return {undefined}
 */
FileReader.prototype.readAsText = function(blob, encoding) {};

/**
 * @see http://www.w3.org/TR/FileAPI/#dfn-readAsDataURL
 * @param {!Blob} blob
 * @return {undefined}
 */
FileReader.prototype.readAsDataURL = function(blob) {};

/**
 * @see http://www.w3.org/TR/FileAPI/#dfn-abort
 * @return {undefined}
 */
FileReader.prototype.abort = function() {};

/**
 * @see http://www.w3.org/TR/FileAPI/#dfn-empty
 * @const {number}
 */
FileReader.prototype.EMPTY;

/** @const {number} */
FileReader.EMPTY;

/**
 * @see http://www.w3.org/TR/FileAPI/#dfn-loading
 * @const {number}
 */
FileReader.prototype.LOADING;

/** @const {number} */
FileReader.LOADING;

/**
 * @see http://www.w3.org/TR/FileAPI/#dfn-done
 * @const {number}
 */
FileReader.prototype.DONE;

/** @const {number} */
FileReader.DONE;

/**
 * @see http://www.w3.org/TR/FileAPI/#dfn-readystate
 * @type {number}
 */
FileReader.prototype.readyState;

/**
 * @see http://www.w3.org/TR/FileAPI/#dfn-result
 * @type {string|Blob|ArrayBuffer}
 */
FileReader.prototype.result;

/**
 * @see http://www.w3.org/TR/FileAPI/#dfn-error
 * @type {DOMError}
 */
FileReader.prototype.error;

/**
 * @see http://www.w3.org/TR/FileAPI/#dfn-onloadstart
 * @type {?function(!ProgressEvent<!FileReader>)}
 */
FileReader.prototype.onloadstart;

/**
 * @see http://www.w3.org/TR/FileAPI/#dfn-onprogress
 * @type {?function(!ProgressEvent<!FileReader>)}
 */
FileReader.prototype.onprogress;

/**
 * @see http://www.w3.org/TR/FileAPI/#dfn-onload
 * @type {?function(!ProgressEvent<!FileReader>)}
 */
FileReader.prototype.onload;

/**
 * @see http://www.w3.org/TR/FileAPI/#dfn-onabort
 * @type {?function(!ProgressEvent<!FileReader>)}
 */
FileReader.prototype.onabort;

/**
 * @see http://www.w3.org/TR/FileAPI/#dfn-onerror
 * @type {?function(!ProgressEvent<!FileReader>)}
 */
FileReader.prototype.onerror;

/**
 * @see http://www.w3.org/TR/FileAPI/#dfn-onloadend
 * @type {?function(!ProgressEvent<!FileReader>)}
 */
FileReader.prototype.onloadend;


/**
 * @see http://www.w3.org/TR/FileAPI/#FileReaderSyncSync
 * @constructor
 */
function FileReaderSync() {}

/**
 * @see http://www.w3.org/TR/FileAPI/#dfn-readAsArrayBufferSync
 * @param {!Blob} blob
 * @return {!ArrayBuffer}
 */
FileReaderSync.prototype.readAsArrayBuffer = function(blob) {};

/**
 * @see http://www.w3.org/TR/FileAPI/#dfn-readAsBinaryStringSync
 * @param {!Blob} blob
 * @return {string}
 */
FileReaderSync.prototype.readAsBinaryString = function(blob) {};

/**
 * @see http://www.w3.org/TR/FileAPI/#dfn-readAsTextSync
 * @param {!Blob} blob
 * @param {string=} encoding
 * @return {string}
 */
FileReaderSync.prototype.readAsText = function(blob, encoding) {};

/**
 * @see http://www.w3.org/TR/FileAPI/#dfn-readAsDataURLSync
 * @param {!Blob} blob
 * @return {string}
 */
FileReaderSync.prototype.readAsDataURL = function(blob) {};
/*
 * Copyright 2013 The Closure Compiler Authors.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/**
 * @fileoverview Definitions for W3C's Gamepad specification.
 * @see http://www.w3.org/TR/gamepad/
 * @externs
 */

/**
 * @return {!Array.<!Gamepad>}
 */
navigator.getGamepads = function() {};

/**
 * @return {!Array.<!Gamepad>}
 */
navigator.webkitGetGamepads = function() {};


/**
 * @interface
 */
var Gamepad = function() {};

/**
 * @type {string}
 */
Gamepad.prototype.id;  // read-only

/**
 * @type {number}
 */
Gamepad.prototype.index;  // read-only

/**
 * @type {boolean}
 */
Gamepad.prototype.connected;  // read-only

/**
 * @type {number}
 */
Gamepad.prototype.timestamp;  // read-only

/**
 * @type {string}
 */
Gamepad.prototype.mapping;  // read-only

/**
 * @type {!Array.<number>}
 */
Gamepad.prototype.axes;  // read-only

/**
 * Note: The W3C spec changed, this property now returns an array of
 * GamepadButton objects.
 *
 * @type {(!Array.<!GamepadButton>|!Array.<number>)}
 */
Gamepad.prototype.buttons;


/**
 * @interface
 */
var GamepadButton = function() {};

/**
 * @type {boolean}
 */
GamepadButton.prototype.pressed;  // read-only

/**
 * @type {number}
 */
GamepadButton.prototype.value;  // read-only

/**
 * @record
 * @extends {EventInit}
 * @see https://w3c.github.io/gamepad/#gamepadeventinit-dictionary
 */
function GamepadEventInit() {}

/** @const {Gamepad} */
GamepadEventInit.prototype.gamepad;

/**
 * @constructor
 * @param {string} type
 * @param {GamepadEventInit=} gamepadEventInit
 * @extends {Event}
 * @see https://w3c.github.io/gamepad/#gamepadevent-interface
 */
function GamepadEvent(type, gamepadEventInit) {}

/** @const {Gamepad} */
GamepadEvent.prototype.gamepad;
/*
 * Copyright 2009 The Closure Compiler Authors
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/**
 * @fileoverview Definitions for W3C's Geolocation specification
 *     http://www.w3.org/TR/geolocation-API/
 * @externs
 */

/**
 * @constructor
 * @see http://www.w3.org/TR/geolocation-API/#geolocation
 */
function Geolocation() {}

/**
 * @typedef {function(!GeolocationPosition): void}
 */
var PositionCallback;

/**
 * @typedef {function(!GeolocationPositionError): void}
 */
var PositionErrorCallback;

/**
 * @param {PositionCallback} successCallback
 * @param {PositionErrorCallback=} opt_errorCallback
 * @param {GeolocationPositionOptions=} opt_options
 * @return {undefined}
 */
Geolocation.prototype.getCurrentPosition = function(successCallback,
                                                       opt_errorCallback,
                                                       opt_options) {};

/**
 * @param {PositionCallback} successCallback
 * @param {PositionErrorCallback=} opt_errorCallback
 * @param {GeolocationPositionOptions=} opt_options
 * @return {number}
 */
Geolocation.prototype.watchPosition = function(successCallback,
                                                  opt_errorCallback,
                                                  opt_options) {};

/**
 * @param {number} watchId
 * @return {undefined}
 */
Geolocation.prototype.clearWatch = function(watchId) {};


/**
 * @record
 * @see http://www.w3.org/TR/geolocation-API/#coordinates
 */
function GeolocationCoordinates() {}
/** @type {number} */
GeolocationCoordinates.prototype.latitude;
/** @type {number} */
GeolocationCoordinates.prototype.longitude;
/** @type {number} */
GeolocationCoordinates.prototype.accuracy;
/** @type {number|null} */
GeolocationCoordinates.prototype.altitude;
/** @type {number|null} */
GeolocationCoordinates.prototype.altitudeAccuracy;
/** @type {number|null} */
GeolocationCoordinates.prototype.heading;
/** @type {number|null} */
GeolocationCoordinates.prototype.speed;


/**
 * @record
 * @see http://www.w3.org/TR/geolocation-API/#position
 */
function GeolocationPosition() {}
/** @type {GeolocationCoordinates} */
GeolocationPosition.prototype.coords;
/** @type {number} */
GeolocationPosition.prototype.timestamp;


/**
 * @record
 * @see http://www.w3.org/TR/geolocation-API/#position-options
 */
function GeolocationPositionOptions() {}
/** @type {boolean|undefined} */
GeolocationPositionOptions.prototype.enableHighAccuracy;
/** @type {number|undefined} */
GeolocationPositionOptions.prototype.maximumAge;
/** @type {number|undefined} */
GeolocationPositionOptions.prototype.timeout;


/**
 * @record
 * @see http://www.w3.org/TR/geolocation-API/#position-error
 */
function GeolocationPositionError() {}
/** @type {number} */
GeolocationPositionError.prototype.code;
/** @type {string} */
GeolocationPositionError.prototype.message;
/** @const {number} */
GeolocationPositionError.prototype.UNKNOWN_ERROR;
/** @const {number} */
GeolocationPositionError.prototype.PERMISSION_DENIED;
/** @const {number} */
GeolocationPositionError.prototype.POSITION_UNAVAILABLE;
/** @const {number} */
GeolocationPositionError.prototype.TIMEOUT;

/** @type {Geolocation} */
Navigator.prototype.geolocation;
/*
 * Copyright 2018 The Closure Compiler Authors
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/**
 * @fileoverview Definitions for W3C's Geometry Interfaces Module Level 1 spec.
 *  The whole file has been fully type annotated. Created from
 *  https://www.w3.org/TR/geometry-1/
 *
 * @externs
 */

/**
 * @deprecated ClientRect has been replaced by DOMRect in the latest spec.
 * @constructor
 * @see https://www.w3.org/TR/cssom-view/#changes-from-2011-08-04
 */
function ClientRect() {}

/**
 * @type {number}
 * @see http://www.w3.org/TR/cssom-view/#dom-clientrect-top
 */
ClientRect.prototype.top;

/**
 * @type {number}
 * @see http://www.w3.org/TR/cssom-view/#dom-clientrect-right
 */
ClientRect.prototype.right;

/**
 * @type {number}
 * @see http://www.w3.org/TR/cssom-view/#dom-clientrect-bottom
 */
ClientRect.prototype.bottom;

/**
 * @type {number}
 * @see http://www.w3.org/TR/cssom-view/#dom-clientrect-left
 */
ClientRect.prototype.left;

/**
 * @type {number}
 * @see http://www.w3.org/TR/cssom-view/#dom-clientrect-width
 */
ClientRect.prototype.width;

/**
 * @type {number}
 * @see http://www.w3.org/TR/cssom-view/#dom-clientrect-height
 */
ClientRect.prototype.height;

/**
 * @constructor
 * @extends {ClientRect} for backwards compatibility
 * @param {number=} x
 * @param {number=} y
 * @param {number=} width
 * @param {number=} height
 * @see https://www.w3.org/TR/geometry-1/#dom-domrectreadonly-domrectreadonly
 */
function DOMRectReadOnly(x, y, width, height) {}

/**
 * @param {!DOMRectInit} other
 * @return {!DOMRectReadOnly}
 * @see https://www.w3.org/TR/geometry-1/#dom-domrectreadonly-fromrect
 */
DOMRectReadOnly.prototype.fromRect = function(other) {};

/**
 * @type {number}
 * @see https://www.w3.org/TR/geometry-1/#dom-domrectreadonly-x
 */
DOMRectReadOnly.prototype.x;

/**
 * @type {number}
 * @see https://www.w3.org/TR/geometry-1/#dom-domrectreadonly-y
 */
DOMRectReadOnly.prototype.y;

/**
 * @type {number}
 * @see https://www.w3.org/TR/geometry-1/#dom-domrectreadonly-width
 */
DOMRectReadOnly.prototype.width;

/**
 * @type {number}
 * @see https://www.w3.org/TR/geometry-1/#dom-domrectreadonly-height
 */
DOMRectReadOnly.prototype.height;

/**
 * @type {number}
 * @see https://www.w3.org/TR/geometry-1/#dom-domrectreadonly-top
 */
DOMRectReadOnly.prototype.top;

/**
 * @type {number}
 * @see https://www.w3.org/TR/geometry-1/#dom-domrectreadonly-right
 */
DOMRectReadOnly.prototype.right;

/**
 * @type {number}
 * @see https://www.w3.org/TR/geometry-1/#dom-domrectreadonly-bottom
 */
DOMRectReadOnly.prototype.bottom;

/**
 * @type {number}
 * @see https://www.w3.org/TR/geometry-1/#dom-domrectreadonly-left
 */
DOMRectReadOnly.prototype.left;

/**
 * @constructor
 * @extends {DOMRectReadOnly}
 * @param {number=} x
 * @param {number=} y
 * @param {number=} width
 * @param {number=} height
 * @see https://www.w3.org/TR/geometry-1/#dom-domrect-domrect
 */
function DOMRect(x, y, width, height) {}

/**
 * @type {number}
 * @see https://www.w3.org/TR/geometry-1/#dom-domrect-x
 */
DOMRect.prototype.x;

/**
 * @type {number}
 * @see https://www.w3.org/TR/geometry-1/#dom-domrect-y
 */
DOMRect.prototype.y;

/**
 * @type {number}
 * @see https://www.w3.org/TR/geometry-1/#dom-domrect-width
 */
DOMRect.prototype.width;

/**
 * @type {number}
 * @see https://www.w3.org/TR/geometry-1/#dom-domrect-height
 */
DOMRect.prototype.height;

/**
 * @type {number}
 * @see https://www.w3.org/TR/geometry-1/#dom-domrectreadonly-top
 */
DOMRect.prototype.top;

/**
 * @type {number}
 * @see https://www.w3.org/TR/geometry-1/#dom-domrectreadonly-right
 */
DOMRect.prototype.right;

/**
 * @type {number}
 * @see https://www.w3.org/TR/geometry-1/#dom-domrectreadonly-bottom
 */
DOMRect.prototype.bottom;

/**
 * @type {number}
 * @see https://www.w3.org/TR/geometry-1/#dom-domrectreadonly-left
 */
DOMRect.prototype.left;

/**
 * @constructor
 * @see https://www.w3.org/TR/geometry-1/#dictdef-domrectinit
 */
function DOMRectInit() {}

/**
 * @type {number}
 * @see https://www.w3.org/TR/geometry-1/#dom-domrectinit-x
 */
DOMRectInit.prototype.x;

/**
 * @type {number}
 * @see https://www.w3.org/TR/geometry-1/#dom-domrectinit-y
 */
DOMRectInit.prototype.y;

/**
 * @type {number}
 * @see https://www.w3.org/TR/geometry-1/#dom-domrectinit-width
 */
DOMRectInit.prototype.width;

/**
 * @type {number}
 * @see https://www.w3.org/TR/geometry-1/#dom-domrectinit-height
 */
DOMRectInit.prototype.height;

/**
 * @constructor
 * @param {number=} x
 * @param {number=} y
 * @param {number=} z
 * @param {number=} w
 * @see https://www.w3.org/TR/geometry-1/#dom-dompointreadonly-dompointreadonly
 */
function DOMPointReadOnly(x, y, z, w) {}

/**
 * @param {!DOMPointInit} other
 * @return {!DOMPointReadOnly}
 * @see https://www.w3.org/TR/geometry-1/#dom-dompointreadonly-frompoint
 */
DOMPointReadOnly.prototype.fromPoint = function(other) {};

/**
 * @type {number}
 * @see https://www.w3.org/TR/geometry-1/#dom-dompointreadonly-x
 */
DOMPointReadOnly.prototype.x;

/**
 * @type {number}
 * @see https://www.w3.org/TR/geometry-1/#dom-dompointreadonly-y
 */
DOMPointReadOnly.prototype.y;

/**
 * @type {number}
 * @see https://www.w3.org/TR/geometry-1/#dom-dompointreadonly-z
 */
DOMPointReadOnly.prototype.z;

/**
 * @type {number}
 * @see https://www.w3.org/TR/geometry-1/#dom-dompointreadonly-w
 */
DOMPointReadOnly.prototype.w;

/**
 * @constructor
 * @extends {DOMPointReadOnly}
 * @param {number=} x
 * @param {number=} y
 * @param {number=} z
 * @param {number=} w
 * @see https://www.w3.org/TR/geometry-1/#dom-dompoint-dompoint
 */
function DOMPoint(x, y, z, w) {}

/**
 * @type {number}
 * @see https://www.w3.org/TR/geometry-1/#dom-dompoint-x
 */
DOMPoint.prototype.x;

/**
 * @type {number}
 * @see https://www.w3.org/TR/geometry-1/#dom-dompoint-y
 */
DOMPoint.prototype.y;

/**
 * @type {number}
 * @see https://www.w3.org/TR/geometry-1/#dom-dompoint-z
 */
DOMPoint.prototype.z;

/**
 * @type {number}
 * @see https://www.w3.org/TR/geometry-1/#dom-dompoint-w
 */
DOMPoint.prototype.w;

/**
 * @record
 * @see https://www.w3.org/TR/geometry-1/#dictdef-dompointinit
 */
function DOMPointInit() {}

/**
 * @type {number}
 * @see https://www.w3.org/TR/geometry-1/#dom-dompointinit-x
 */
DOMPointInit.prototype.x;

/**
 * @type {number}
 * @see https://www.w3.org/TR/geometry-1/#dom-dompointinit-y
 */
DOMPointInit.prototype.y;

/**
 * @type {number}
 * @see https://www.w3.org/TR/geometry-1/#dom-dompointinit-z
 */
DOMPointInit.prototype.z;

/**
 * @type {number}
 * @see https://www.w3.org/TR/geometry-1/#dom-dompointinit-w
 */
DOMPointInit.prototype.w;

/**
 * @constructor
 * @implements {DOMMatrixInit}
 * @param {string|Array<number>} init
 * @see https://www.w3.org/TR/geometry-1/#dommatrixreadonly
 */
function DOMMatrixReadOnly(init) {}

/**
 * @param {!DOMMatrixInit} other
 * @return {!DOMMatrixReadOnly}
 * @see https://www.w3.org/TR/geometry-1/#dom-dommatrixreadonly-frommatrix
 */
DOMMatrixReadOnly.fromMatrix = function(other) {};

/**
 * @param {!Float32Array} array32
 * @return {!DOMMatrixReadOnly}
 * @see https://www.w3.org/TR/geometry-1/#dom-dommatrixreadonly-fromfloat32array
 */
DOMMatrixReadOnly.fromFloat32Array = function(array32) {};

/**
 * @param {!Float64Array} array64
 * @return {!DOMMatrixReadOnly}
 * @see https://www.w3.org/TR/geometry-1/#dom-dommatrixreadonly-fromfloat64array
 */
DOMMatrixReadOnly.fromFloat64Array = function(array64) {};

/**
 * @type {number}
 * @see https://www.w3.org/TR/geometry-1/#dom-dommatrixreadonly-a
 */
DOMMatrixReadOnly.prototype.a;

/**
 * @type {number}
 * @see https://www.w3.org/TR/geometry-1/#dom-dommatrixreadonly-b
 */
DOMMatrixReadOnly.prototype.b;

/**
 * @type {number}
 * @see https://www.w3.org/TR/geometry-1/#dom-dommatrixreadonly-c
 */
DOMMatrixReadOnly.prototype.c;

/**
 * @type {number}
 * @see https://www.w3.org/TR/geometry-1/#dom-dommatrixreadonly-d
 */
DOMMatrixReadOnly.prototype.d;

/**
 * @type {number}
 * @see https://www.w3.org/TR/geometry-1/#dom-dommatrixreadonly-e
 */
DOMMatrixReadOnly.prototype.e;

/**
 * @type {number}
 * @see https://www.w3.org/TR/geometry-1/#dom-dommatrixreadonly-f
 */
DOMMatrixReadOnly.prototype.f;

/**
 * @type {number}
 * @see https://www.w3.org/TR/geometry-1/#dom-dommatrixreadonly-m11
 */
DOMMatrixReadOnly.prototype.m11;

/**
 * @type {number}
 * @see https://www.w3.org/TR/geometry-1/#dom-dommatrixreadonly-m12
 */
DOMMatrixReadOnly.prototype.m12;

/**
 * @type {number}
 * @see https://www.w3.org/TR/geometry-1/#dom-dommatrixreadonly-m13
 */
DOMMatrixReadOnly.prototype.m13;

/**
 * @type {number}
 * @see https://www.w3.org/TR/geometry-1/#dom-dommatrixreadonly-m14
 */
DOMMatrixReadOnly.prototype.m14;

/**
 * @type {number}
 * @see https://www.w3.org/TR/geometry-1/#dom-dommatrixreadonly-m21
 */
DOMMatrixReadOnly.prototype.m21;

/**
 * @type {number}
 * @see https://www.w3.org/TR/geometry-1/#dom-dommatrixreadonly-m22
 */
DOMMatrixReadOnly.prototype.m22;

/**
 * @type {number}
 * @see https://www.w3.org/TR/geometry-1/#dom-dommatrixreadonly-m23
 */
DOMMatrixReadOnly.prototype.m23;

/**
 * @type {number}
 * @see https://www.w3.org/TR/geometry-1/#dom-dommatrixreadonly-m24
 */
DOMMatrixReadOnly.prototype.m24;

/**
 * @type {number}
 * @see https://www.w3.org/TR/geometry-1/#dom-dommatrixreadonly-m31
 */
DOMMatrixReadOnly.prototype.m31;

/**
 * @type {number}
 * @see https://www.w3.org/TR/geometry-1/#dom-dommatrixreadonly-m32
 */
DOMMatrixReadOnly.prototype.m32;

/**
 * @type {number}
 * @see https://www.w3.org/TR/geometry-1/#dom-dommatrixreadonly-m33
 */
DOMMatrixReadOnly.prototype.m33;

/**
 * @type {number}
 * @see https://www.w3.org/TR/geometry-1/#dom-dommatrixreadonly-m34
 */
DOMMatrixReadOnly.prototype.m34;

/**
 * @type {number}
 * @see https://www.w3.org/TR/geometry-1/#dom-dommatrixreadonly-m41
 */
DOMMatrixReadOnly.prototype.m41;

/**
 * @type {number}
 * @see https://www.w3.org/TR/geometry-1/#dom-dommatrixreadonly-m42
 */
DOMMatrixReadOnly.prototype.m42;

/**
 * @type {number}
 * @see https://www.w3.org/TR/geometry-1/#dom-dommatrixreadonly-m43
 */
DOMMatrixReadOnly.prototype.m43;

/**
 * @type {number}
 * @see https://www.w3.org/TR/geometry-1/#dom-dommatrixreadonly-m44
 */
DOMMatrixReadOnly.prototype.m44;

/**
 * @type {boolean}
 * @see https://www.w3.org/TR/geometry-1/#dom-dommatrixreadonly-is2d
 */
DOMMatrixReadOnly.prototype.is2D;

/**
 * @type {boolean}
 * @see https://www.w3.org/TR/geometry-1/#dom-dommatrixreadonly-isidentity
 */
DOMMatrixReadOnly.prototype.isIdentity;

/**
 * @param {number=} tx
 * @param {number=} ty
 * @param {number=} tz
 * @return {!DOMMatrix}
 * @see https://www.w3.org/TR/geometry-1/#dom-dommatrixreadonly-translate
 */
DOMMatrixReadOnly.prototype.translate = function(tx, ty, tz) {};

/**
 * @param {number=} scaleX
 * @param {number=} scaleY
 * @param {number=} scaleZ
 * @param {number=} originX
 * @param {number=} originY
 * @param {number=} originZ
 * @return {!DOMMatrix}
 * @see https://www.w3.org/TR/geometry-1/#dom-dommatrixreadonly-scale
 */
DOMMatrixReadOnly.prototype.scale = function(
    scaleX, scaleY, scaleZ, originX, originY, originZ) {};

/**
 * @param {number=} scaleX
 * @param {number=} scaleY
 * @return {!DOMMatrix}
 * @see https://www.w3.org/TR/geometry-1/#dom-dommatrixreadonly-scalenonuniform
 */
DOMMatrixReadOnly.prototype.scaleNonUniform = function(scaleX, scaleY) {};

/**
 * @param {number=} scale
 * @param {number=} originX
 * @param {number=} originY
 * @param {number=} originZ
 * @return {!DOMMatrix}
 * @see https://www.w3.org/TR/geometry-1/#dom-dommatrixreadonly-scale3d
 */
DOMMatrixReadOnly.prototype.scale3d = function(
    scale, originX, originY, originZ) {};

/**
 * @param {number=} rotX
 * @param {number=} rotY
 * @param {number=} rotZ
 * @return {!DOMMatrix}
 * @see https://www.w3.org/TR/geometry-1/#dom-dommatrixreadonly-rotate
 */
DOMMatrixReadOnly.prototype.rotate = function(rotX, rotY, rotZ) {};

/**
 * @param {number=} x
 * @param {number=} y
 * @return {!DOMMatrix}
 * @see https://www.w3.org/TR/geometry-1/#dom-dommatrixreadonly-rotatefromvector
 */
DOMMatrixReadOnly.prototype.rotateFromVector = function(x, y) {};

/**
 * @param {number=} x
 * @param {number=} y
 * @param {number=} z
 * @param {number=} angle
 * @return {!DOMMatrix}
 * @see https://www.w3.org/TR/geometry-1/#dom-dommatrixreadonly-rotateaxisangle
 */
DOMMatrixReadOnly.prototype.rotateAxisAngle = function(x, y, z, angle) {};

/**
 * @param {number=} sx
 * @return {!DOMMatrix}
 * @see https://www.w3.org/TR/geometry-1/#dom-dommatrixreadonly-skewx
 */
DOMMatrixReadOnly.prototype.skewX = function(sx) {};

/**
 * @param {number=} sy
 * @return {!DOMMatrix}
 * @see https://www.w3.org/TR/geometry-1/#dom-dommatrixreadonly-skewy
 */
DOMMatrixReadOnly.prototype.skewY = function(sy) {};

/**
 * @param {!DOMMatrixInit} other
 * @return {!DOMMatrix}
 * @see https://www.w3.org/TR/geometry-1/#dom-dommatrixreadonly-multiply
 */
DOMMatrixReadOnly.prototype.multiply = function(other) {};

/**
 * @return {!DOMMatrix}
 * @see https://www.w3.org/TR/geometry-1/#dom-dommatrixreadonly-flipx
 */
DOMMatrixReadOnly.prototype.flipX = function() {};

/**
 * @return {!DOMMatrix}
 * @see https://www.w3.org/TR/geometry-1/#dom-dommatrixreadonly-flipy
 */
DOMMatrixReadOnly.prototype.flipY = function() {};

/**
 * @return {!DOMMatrix}
 * @see https://www.w3.org/TR/geometry-1/#dom-dommatrixreadonly-inverse
 */
DOMMatrixReadOnly.prototype.inverse = function() {};

/**
 * @param {!DOMPointInit} point
 * @return {!DOMPoint}
 * @see https://www.w3.org/TR/geometry-1/#dom-dommatrixreadonly-transformpoint
 */
DOMMatrixReadOnly.prototype.transformPoint = function(point) {};

/**
 * @return {!Float32Array}
 * @see https://www.w3.org/TR/geometry-1/#dom-dommatrixreadonly-tofloat32array
 */
DOMMatrixReadOnly.prototype.toFloat32Array = function() {};

/**
 * @return {!Float64Array}
 * @see https://www.w3.org/TR/geometry-1/#dom-dommatrixreadonly-tofloat64array
 */
DOMMatrixReadOnly.prototype.toFloat64Array = function() {};

/**
 * @constructor
 * @extends {DOMMatrixReadOnly}
 * @param {string|Array<number>} init
 * @see https://www.w3.org/TR/geometry-1/#dommatrix
 */
function DOMMatrix(init) {}

/**
 * @param {!DOMMatrixInit} other
 * @return {!DOMMatrix}
 * @see https://www.w3.org/TR/geometry-1/#dom-dommatrix-frommatrix
 */
DOMMatrix.fromMatrix = function(other) {};

/**
 * @param {!Float32Array} array32
 * @return {!DOMMatrix}
 * @see https://www.w3.org/TR/geometry-1/#dom-dommatrix-fromfloat32array
 */
DOMMatrix.fromFloat32Array = function(array32) {};

/**
 * @param {!Float64Array} array64
 * @return {!DOMMatrix}
 * @see https://www.w3.org/TR/geometry-1/#dom-dommatrix-fromfloat64array
 */
DOMMatrix.fromFloat64Array = function(array64) {};

/**
 * @param {!DOMMatrixInit} other
 * @return {!DOMMatrix}
 * @see https://www.w3.org/TR/geometry-1/#dom-dommatrix-multiply
 */
DOMMatrix.prototype.multiplySelf = function(other) {};

/**
 * @param {!DOMMatrixInit} other
 * @return {!DOMMatrix}
 * @see https://www.w3.org/TR/geometry-1/#dom-dommatrix-premultiply
 */
DOMMatrix.prototype.preMultiplySelf = function(other) {};

/**
 * @param {number=} tx
 * @param {number=} ty
 * @param {number=} tz
 * @return {!DOMMatrix}
 * @see https://www.w3.org/TR/geometry-1/#dom-dommatrix-translate
 */
DOMMatrix.prototype.translateSelf = function(tx, ty, tz) {};

/**
 * @param {number=} scaleX
 * @param {number=} scaleY
 * @param {number=} scaleZ
 * @param {number=} originX
 * @param {number=} originY
 * @param {number=} originZ
 * @return {!DOMMatrix}
 * @see https://www.w3.org/TR/geometry-1/#dom-dommatrix-scale
 */
DOMMatrix.prototype.scaleSelf = function(
    scaleX, scaleY, scaleZ, originX, originY, originZ) {};

/**
 * @param {number=} scale
 * @param {number=} originX
 * @param {number=} originY
 * @param {number=} originZ
 * @return {!DOMMatrix}
 * @see https://www.w3.org/TR/geometry-1/#dom-dommatrix-scale3d
 */
DOMMatrix.prototype.scale3dSelf = function(scale, originX, originY, originZ) {};

/**
 * @param {number=} rotX
 * @param {number=} rotY
 * @param {number=} rotZ
 * @return {!DOMMatrix}
 * @see https://www.w3.org/TR/geometry-1/#dom-dommatrix-rotate
 */
DOMMatrix.prototype.rotateSelf = function(rotX, rotY, rotZ) {};

/**
 * @param {number=} x
 * @param {number=} y
 * @return {!DOMMatrix}
 * @see https://www.w3.org/TR/geometry-1/#dom-dommatrix-rotatefromvector
 */
DOMMatrix.prototype.rotateFromVectorSelf = function(x, y) {};

/**
 * @param {number=} x
 * @param {number=} y
 * @param {number=} z
 * @param {number=} angle
 * @return {!DOMMatrix}
 * @see https://www.w3.org/TR/geometry-1/#dom-dommatrix-rotateaxisangle
 */
DOMMatrix.prototype.rotateAxisAngleSelf = function(x, y, z, angle) {};

/**
 * @param {number=} sx
 * @return {!DOMMatrix}
 * @see https://www.w3.org/TR/geometry-1/#dom-dommatrix-skewx
 */
DOMMatrix.prototype.skewXSelf = function(sx) {};

/**
 * @param {number=} sy
 * @return {!DOMMatrix}
 * @see https://www.w3.org/TR/geometry-1/#dom-dommatrix-skewy
 */
DOMMatrix.prototype.skewYSelf = function(sy) {};

/**
 * @return {!DOMMatrix}
 * @see https://www.w3.org/TR/geometry-1/#dom-dommatrix-inverse
 */
DOMMatrix.prototype.inverseSelf = function() {};

/**
 * @record
 * @see https://www.w3.org/TR/geometry-1/#dictdef-dommatrix2dinit
 */
function DOMMatrix2DInit() {}

/**
 * @type {number}
 * @see https://www.w3.org/TR/geometry-1/#dom-dommatrix2dinit-a
 */
DOMMatrix2DInit.prototype.a;

/**
 * @type {number}
 * @see https://www.w3.org/TR/geometry-1/#dom-dommatrix2dinit-b
 */
DOMMatrix2DInit.prototype.b;

/**
 * @type {number}
 * @see https://www.w3.org/TR/geometry-1/#dom-dommatrix2dinit-c
 */
DOMMatrix2DInit.prototype.c;

/**
 * @type {number}
 * @see https://www.w3.org/TR/geometry-1/#dom-dommatrix2dinit-d
 */
DOMMatrix2DInit.prototype.d;

/**
 * @type {number}
 * @see https://www.w3.org/TR/geometry-1/#dom-dommatrix2dinit-e
 */
DOMMatrix2DInit.prototype.e;

/**
 * @type {number}
 * @see https://www.w3.org/TR/geometry-1/#dom-dommatrix2dinit-f
 */
DOMMatrix2DInit.prototype.f;

/**
 * @type {number}
 * @see https://www.w3.org/TR/geometry-1/#dom-dommatrix2dinit-m11
 */
DOMMatrix2DInit.prototype.m11;

/**
 * @type {number}
 * @see https://www.w3.org/TR/geometry-1/#dom-dommatrix2dinit-m12
 */
DOMMatrix2DInit.prototype.m12;

/**
 * @type {number}
 * @see https://www.w3.org/TR/geometry-1/#dom-dommatrix2dinit-m21
 */
DOMMatrix2DInit.prototype.m21;

/**
 * @type {number}
 * @see https://www.w3.org/TR/geometry-1/#dom-dommatrix2dinit-m22
 */
DOMMatrix2DInit.prototype.m22;

/**
 * @type {number}
 * @see https://www.w3.org/TR/geometry-1/#dom-dommatrix2dinit-m41
 */
DOMMatrix2DInit.prototype.m41;

/**
 * @type {number}
 * @see https://www.w3.org/TR/geometry-1/#dom-dommatrix2dinit-m42
 */
DOMMatrix2DInit.prototype.m42;

/**
 * @record
 * @extends {DOMMatrix2DInit}
 * @see https://www.w3.org/TR/geometry-1/#dictdef-dommatrix
 */
function DOMMatrixInit() {}

/**
 * @type {number}
 * @see https://www.w3.org/TR/geometry-1/#dom-dommatrixinit-m13
 */
DOMMatrixInit.prototype.m13;

/**
 * @type {number}
 * @see https://www.w3.org/TR/geometry-1/#dom-dommatrixinit-m14
 */
DOMMatrixInit.prototype.m14;

/**
 * @type {number}
 * @see https://www.w3.org/TR/geometry-1/#dom-dommatrixinit-m23
 */
DOMMatrixInit.prototype.m23;

/**
 * @type {number}
 * @see https://www.w3.org/TR/geometry-1/#dom-dommatrixinit-m24
 */
DOMMatrixInit.prototype.m24;

/**
 * @type {number}
 * @see https://www.w3.org/TR/geometry-1/#dom-dommatrixinit-m31
 */
DOMMatrixInit.prototype.m31;

/**
 * @type {number}
 * @see https://www.w3.org/TR/geometry-1/#dom-dommatrixinit-m32
 */
DOMMatrixInit.prototype.m32;

/**
 * @type {number}
 * @see https://www.w3.org/TR/geometry-1/#dom-dommatrixinit-m33
 */
DOMMatrixInit.prototype.m33;

/**
 * @type {number}
 * @see https://www.w3.org/TR/geometry-1/#dom-dommatrixinit-m34
 */
DOMMatrixInit.prototype.m34;

/**
 * @type {number}
 * @see https://www.w3.org/TR/geometry-1/#dom-dommatrixinit-m43
 */
DOMMatrixInit.prototype.m43;

/**
 * @type {number}
 * @see https://www.w3.org/TR/geometry-1/#dom-dommatrixinit-m44
 */
DOMMatrixInit.prototype.m44;

/**
 * @type {boolean}
 * @see https://www.w3.org/TR/geometry-1/#dom-dommatrixinit-is2d
 */
DOMMatrixInit.prototype.is2D;
/*
 * Copyright 2011 The Closure Compiler Authors.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/**
 * @fileoverview Definitions for W3C's IndexedDB API and IndexedDB API 2.0 with
 *     some opportunistic enhancements from IndexedDB API 3.0.
 * @see http://www.w3.org/TR/2015/REC-IndexedDB-20150108/
 * @see https://www.w3.org/TR/2017/WD-IndexedDB-2-20170313/
 * @see https://www.w3.org/TR/2021/WD-IndexedDB-3-20210618/
 *
 * @externs
 * @author guido.tapia@picnet.com.au (Guido Tapia)
 * @author vobruba.martin@gmail.com (Martin Vobruba)
 */

/** @type {!IDBFactory} */
var indexedDB;

/** @type {!IDBFactory|undefined} */
ServiceWorkerGlobalScope.prototype.indexedDB;



/**
 * Possible values: 'readonly', 'readwrite', 'versionchange'
 *
 * @typedef {string}
 * @see https://www.w3.org/TR/IndexedDB/#idl-def-IDBTransactionMode
 */
var IDBTransactionMode;


/**
 * Possible values: 'pending', 'done'
 *
 * @typedef {string}
 * @see https://www.w3.org/TR/IndexedDB/#idl-def-IDBRequestReadyState
 */
var IDBRequestReadyState;


/**
 * Possible values: 'next', 'nextunique', 'prev', 'prevunique'
 *
 * @typedef {string}
 * @see https://www.w3.org/TR/IndexedDB/#idl-def-IDBCursorDirection
 */
var IDBCursorDirection;


/**
 * @record
 * @see https://www.w3.org/TR/IndexedDB/#idl-def-IDBIndexParameters
 */
function IDBIndexParameters(){};

/** @type {(undefined|boolean)} */
IDBIndexParameters.prototype.unique;

/** @type {(undefined|boolean)} */
IDBIndexParameters.prototype.multiEntry;


/**
 * @record
 * @extends {EventInit}
 * @see https://www.w3.org/TR/IndexedDB/#idl-def-IDBVersionChangeEventInit
 */
function IDBVersionChangeEventInit(){};

/** @type {(undefined|number)} */
IDBVersionChangeEventInit.prototype.oldVersion;

/** @type {(undefined|number|null)} */
IDBVersionChangeEventInit.prototype.newVersion;



/**
 * @record
 * @see https://www.w3.org/TR/IndexedDB/#idl-def-IDBObjectStoreParameters
 */
function IDBObjectStoreParameters() {};

/** @type {(undefined|string|!Array<string>|null)} */
IDBObjectStoreParameters.prototype.keyPath;

/** @type {(undefined|boolean)} */
IDBObjectStoreParameters.prototype.autoIncrement;


/**
 * @constructor
 * @see http://www.w3.org/TR/IndexedDB/#idl-def-IDBFactory
 */
function IDBFactory() {}

/**
 * @param {string} name The name of the database to open.
 * @param {number=} opt_version The version at which to open the database.
 * @return {!IDBOpenDBRequest} The IDBRequest object.
 */
IDBFactory.prototype.open = function(name, opt_version) {};

/**
 * @param {string} name The name of the database to delete.
 * @return {!IDBOpenDBRequest} The IDBRequest object.
 */
IDBFactory.prototype.deleteDatabase = function(name) {};

/**
 * @param {*} first
 * @param {*} second
 * @return {number}
 */
IDBFactory.prototype.cmp = function(first, second) {};

/**
 * @return {!Promise<!Array<!IDBDatabaseInfo>>}
 */
IDBFactory.prototype.databases = function() {};


/**
 * @constructor
 * @template T
 * @implements {EventTarget}
 * @see http://www.w3.org/TR/IndexedDB/#idl-def-IDBRequest
 * @see https://www.w3.org/TR/IndexedDB-2/#request-api
 */
function IDBRequest() {}

/** @override */
IDBRequest.prototype.addEventListener = function(type, listener, opt_options) {
};

/** @override */
IDBRequest.prototype.removeEventListener = function(
    type, listener, opt_options) {};

/** @override */
IDBRequest.prototype.dispatchEvent = function(evt) {};

/**
 * @type {!IDBRequestReadyState}
 */
IDBRequest.prototype.readyState; // readonly

/**
 * @type {function(!Event)}
 */
IDBRequest.prototype.onsuccess = function(e) {};

/**
 * @type {function(!Event)}
 */
IDBRequest.prototype.onerror = function(e) {};

/** @type {T} */
IDBRequest.prototype.result;  // readonly

/**
 * @type {number}
 * @deprecated Use "error"
 */
IDBRequest.prototype.errorCode;  // readonly


/** @type {?DOMError|?DOMException} */
IDBRequest.prototype.error; // readonly

/** @type {?IDBObjectStore|?IDBIndex|?IDBCursor} */
IDBRequest.prototype.source; // readonly

/** @type {?IDBTransaction} */
IDBRequest.prototype.transaction; // readonly


/**
 * @constructor
 * @extends {IDBRequest}
 * @see http://www.w3.org/TR/IndexedDB/#idl-def-IDBOpenDBRequest
 */
function IDBOpenDBRequest() {}

/**
 * @type {function(!IDBVersionChangeEvent)}
 */
IDBOpenDBRequest.prototype.onblocked = function(e) {};

/**
 * @type {function(!IDBVersionChangeEvent)}
 */
IDBOpenDBRequest.prototype.onupgradeneeded = function(e) {};


/**
 * @constructor
 * @implements {EventTarget}
 * @see http://www.w3.org/TR/IndexedDB/#idl-def-IDBDatabase
 * @see https://www.w3.org/TR/IndexedDB-2/#database-interface
 */
function IDBDatabase() {}

/**
 * @const {string}
 */
IDBDatabase.prototype.name;

/**
 * @const {number}
 */
IDBDatabase.prototype.version;

/**
 * @const {!DOMStringList}
 */
IDBDatabase.prototype.objectStoreNames;

/**
 * @param {string} name The name of the object store.
 * @param {!IDBObjectStoreParameters=} opt_parameters Parameters to be passed
 *     creating the object store.
 * @return {!IDBObjectStore} The created/open object store.
 */
IDBDatabase.prototype.createObjectStore =
    function(name, opt_parameters)  {};

/**
 * @param {string} name The name of the object store to remove.
 * @return {undefined}
 */
IDBDatabase.prototype.deleteObjectStore = function(name) {};

/**
 * Possible values: 'default', 'strict', 'relaxed'
 *
 * @typedef {string}
 * @see https://www.w3.org/TR/IndexedDB-3/#enumdef-idbtransactiondurability
 */
var IDBTransactionDurability;

/**
 * See https://www.w3.org/TR/IndexedDB-3/#ref-for-dictdef-idbtransactionoptions
 * @record
 */
var IDBTransactionOptions = function() {};

/**
 * @type {!IDBTransactionDurability}
 * @see https://www.w3.org/TR/IndexedDB-3/#ref-for-dictdef-idbtransactionoptions
 */
IDBTransactionOptions.prototype.durability;

/**
 * @param {(string|!Array<string>|!DOMStringList)} storeNames The stores to open
 *     in this transaction.
 * @param {!IDBTransactionMode=} mode The mode for opening the object stores.
 * @param {!IDBTransactionOptions=} options Extra options, like durability.
 * @return {!IDBTransaction} The IDBRequest object.
 */
IDBDatabase.prototype.transaction = function(storeNames, mode, options) {};

/**
 * Closes the database connection.
 * @return {undefined}
 */
IDBDatabase.prototype.close = function() {};

/**
 * @type {?function(!Event)}
 */
IDBDatabase.prototype.onabort;

/**
 * @type {?function(!Event)}
 */
IDBDatabase.prototype.onclose;

/**
 * @type {?function(!Event)}
 */
IDBDatabase.prototype.onerror;

/**
 * @type {?function(!IDBVersionChangeEvent)}
 */
IDBDatabase.prototype.onversionchange;

/** @override */
IDBDatabase.prototype.addEventListener = function(type, listener, opt_options) {
};

/** @override */
IDBDatabase.prototype.removeEventListener = function(
    type, listener, opt_options) {};

/** @override */
IDBDatabase.prototype.dispatchEvent = function(evt) {};


/**
 * Typedef for valid key types according to the w3 specification. Note that this
 * is slightly wider than what is actually allowed, as all Array elements must
 * have a valid key type.
 * @see http://www.w3.org/TR/IndexedDB/#key-construct
 * @see https://www.w3.org/TR/IndexedDB-2/#key-construct
 * @typedef {number|string|!Date|!Array<?>|!BufferSource}
 */
var IDBKeyType;


/**
 * @constructor
 * @see http://www.w3.org/TR/IndexedDB/#idl-def-IDBObjectStore
 * @see https://www.w3.org/TR/IndexedDB-2/#object-store-interface
 */
function IDBObjectStore() {}

/**
 * @type {string}
 */
IDBObjectStore.prototype.name;

/**
 * @type {*}
 */
IDBObjectStore.prototype.keyPath;

/**
 * @type {!DOMStringList}
 */
IDBObjectStore.prototype.indexNames;

/** @type {!IDBTransaction} */
IDBObjectStore.prototype.transaction;

/** @type {boolean} */
IDBObjectStore.prototype.autoIncrement;

/**
 * @param {*} value The value to put into the object store.
 * @param {!IDBKeyType=} key The key of this value.
 * @return {!IDBRequest} The IDBRequest object.
 */
IDBObjectStore.prototype.put = function(value, key) {};

/**
 * @param {*} value The value to add into the object store.
 * @param {!IDBKeyType=} key The key of this value.
 * @return {!IDBRequest} The IDBRequest object.
 */
IDBObjectStore.prototype.add = function(value, key) {};

/**
 * @param {!IDBKeyType|!IDBKeyRange} key The key of this value.
 * @return {!IDBRequest} The IDBRequest object.
 */
IDBObjectStore.prototype.delete = function(key) {};

/**
 * @param {!IDBKeyType|!IDBKeyRange} key The key of the document to retrieve.
 * @return {!IDBRequest} The IDBRequest object.
 */
IDBObjectStore.prototype.get = function(key) {};

/**
 * @return {!IDBRequest} The IDBRequest object.
 */
IDBObjectStore.prototype.clear = function() {};

/**
 * @param {?IDBKeyRange=} range The range of the cursor.
 *     Nullable because IE <11 has problems with undefined.
 * @param {!IDBCursorDirection=} direction The direction of cursor enumeration.
 * @return {!IDBRequest} The IDBRequest object.
 */
IDBObjectStore.prototype.openCursor = function(range, direction) {};

/**
 * @param {string} name The name of the index.
 * @param {string|!Array<string>} keyPath The path to the index key.
 * @param {!IDBIndexParameters=} opt_paramters Optional parameters
 *     for the created index.
 * @return {!IDBIndex} The IDBIndex object.
 */
IDBObjectStore.prototype.createIndex = function(name, keyPath, opt_paramters) {};

/**
 * @param {string} name The name of the index to retrieve.
 * @return {!IDBIndex} The IDBIndex object.
 */
IDBObjectStore.prototype.index = function(name) {};

/**
 * @param {string} indexName The name of the index to remove.
 * @return {undefined}
 */
IDBObjectStore.prototype.deleteIndex = function(indexName) {};

/**
 * @param {(!IDBKeyType|IDBKeyRange)=} key The key of this value.
 * @return {!IDBRequest} The IDBRequest object.
 * @see http://www.w3.org/TR/IndexedDB/#widl-IDBObjectStore-count
 */
IDBObjectStore.prototype.count = function(key) {};

/**
 * @param {(!IDBKeyType|IDBKeyRange)=} query
 * @return {!IDBRequest} The IDBRequest object.
 * @see https://www.w3.org/TR/IndexedDB-2/#dom-idbobjectstore-getkey
 */
IDBObjectStore.prototype.getKey = function(query) {};

/**
 * @param {(!IDBKeyType|IDBKeyRange)=} query
 * @param {number=} count
 * @return {!IDBRequest} The IDBRequest object.
 * @see https://www.w3.org/TR/IndexedDB-2/#dom-idbobjectstore-getall
 */
IDBObjectStore.prototype.getAll = function(query, count) {};

/**
 * @param {(!IDBKeyType|IDBKeyRange)=} query
 * @param {number=} count
 * @return {!IDBRequest} The IDBRequest object.
 * @see https://www.w3.org/TR/IndexedDB-2/#dom-idbobjectstore-getallkeys
 */
IDBObjectStore.prototype.getAllKeys = function(query, count) {};

/**
 * @param {(!IDBKeyType|IDBKeyRange)=} query
 * @param {!IDBCursorDirection=} direction
 * @return {!IDBRequest} The IDBRequest object.
 * @see https://www.w3.org/TR/IndexedDB-2/#dom-idbobjectstore-openkeycursor
 */
IDBObjectStore.prototype.openKeyCursor = function(query, direction) {};


/**
 * @constructor
 * @see http://www.w3.org/TR/IndexedDB/#idl-def-IDBIndex
 * @see https://www.w3.org/TR/IndexedDB-2/#index-interface
 */
function IDBIndex() {}

/**
 * @type {string}
 */
IDBIndex.prototype.name;

/**
 * @const {!IDBObjectStore}
 */
IDBIndex.prototype.objectStore;

/**
 * @const {*}
 */
IDBIndex.prototype.keyPath;

/**
 * @const {boolean}
 */
IDBIndex.prototype.multiEntry;

/**
 * @const {boolean}
 */
IDBIndex.prototype.unique;

/**
 * @param {(!IDBKeyType|?IDBKeyRange)=} range The range of the cursor.
 *     Nullable because IE <11 has problems with undefined.
 * @param {!IDBCursorDirection=} direction The direction of cursor enumeration.
 * @return {!IDBRequest} The IDBRequest object.
 */
IDBIndex.prototype.openCursor = function(range, direction) {};

/**
 * @param {(!IDBKeyType|?IDBKeyRange)=} range The range of the cursor.
 *     Nullable because IE <11 has problems with undefined.
 * @param {!IDBCursorDirection=} direction The direction of cursor enumeration.
 * @return {!IDBRequest} The IDBRequest object.
 */
IDBIndex.prototype.openKeyCursor = function(range, direction) {};

/**
 * @param {!IDBKeyType|!IDBKeyRange} key The id of the object to retrieve.
 * @return {!IDBRequest} The IDBRequest object.
 */
IDBIndex.prototype.get = function(key) {};

/**
 * @param {!IDBKeyType|!IDBKeyRange} key The id of the object to retrieve.
 * @return {!IDBRequest} The IDBRequest object.
 */
IDBIndex.prototype.getKey = function(key) {};

/**
 * @param {(!IDBKeyType|!IDBKeyRange)=} query
 * @param {number=} count
 * @return {!IDBRequest}
 * @see https://www.w3.org/TR/IndexedDB-2/#dom-idbindex-getall
 */
IDBIndex.prototype.getAll = function(query, count) {};

/**
 * @param {(!IDBKeyType|!IDBKeyRange)=} query
 * @param {number=} count
 * @return {!IDBRequest}
 * @see https://www.w3.org/TR/IndexedDB-2/#dom-idbindex-getallkeys
 */
IDBIndex.prototype.getAllKeys = function(query, count) {};

/**
 * @param {(!IDBKeyType|!IDBKeyRange)=} opt_key
 * @return {!IDBRequest}
 */
IDBIndex.prototype.count = function(opt_key) {};


/**
 * @constructor
 * @see http://www.w3.org/TR/IndexedDB/#idl-def-IDBCursor
 * @see https://www.w3.org/TR/IndexedDB-2/#cursor-interface
 */
function IDBCursor() {}

/**
 * @const {(!IDBObjectStore|!IDBIndex)}
 */
IDBCursor.prototype.source;

/**
 * @const {!IDBCursorDirection}
 */
IDBCursor.prototype.direction;

/**
 * @const {!IDBKeyType}
 */
IDBCursor.prototype.key;

/**
 * @const {!IDBKeyType}
 */
IDBCursor.prototype.primaryKey;

/**
 * @param {*} value The new value for the current object in the cursor.
 * @return {!IDBRequest} The IDBRequest object.
 */
IDBCursor.prototype.update = function(value) {};

/**
 * Note: Must be quoted to avoid parse error.
 * @param {!IDBKeyType=} key Continue enumerating the cursor from the specified
 *     key (or next).
 * @return {undefined}
 */
IDBCursor.prototype.continue = function(key) {};

/**
 * @param {!IDBKeyType} key
 * @param {!IDBKeyType} primaryKey
 * @return {undefined}
 * @see https://www.w3.org/TR/IndexedDB-2/#dom-idbcursor-continueprimarykey
 */
IDBCursor.prototype.continuePrimaryKey = function(key, primaryKey) {};

/**
 * @param {number} count Number of times to iterate the cursor.
 * @return {undefined}
 */
IDBCursor.prototype.advance = function(count) {};

/**
 * Note: Must be quoted to avoid parse error.
 * @return {!IDBRequest} The IDBRequest object.
 */
IDBCursor.prototype.delete = function() {};


/**
 * @constructor
 * @extends {IDBCursor}
 * @see http://www.w3.org/TR/IndexedDB/#idl-def-IDBCursorWithValue
 */
function IDBCursorWithValue() {}

/** @type {*} */
IDBCursorWithValue.prototype.value; // readonly


/**
 * @constructor
 * @see http://www.w3.org/TR/IndexedDB/#idl-def-IDBTransaction
 * @see https://www.w3.org/TR/IndexedDB-2/#transaction
 */
function IDBTransaction() {}

/**
 * @const {!DOMStringList}
 */
IDBTransaction.prototype.objectStoreNames;

/**
 * @const {!IDBTransactionMode}
 */
IDBTransaction.prototype.mode;

/**
 * @const {!IDBDatabase}
 */
IDBTransaction.prototype.db;

/**
 * @type {!DOMError|!DOMException}
 */
IDBTransaction.prototype.error;

/**
 * @param {string} name The name of the object store to retrieve.
 * @return {!IDBObjectStore} The object store.
 */
IDBTransaction.prototype.objectStore = function(name) {};

/**
 * Aborts the transaction.
 * @return {undefined}
 */
IDBTransaction.prototype.abort = function() {};

/**
 * Commits the transaction.
 * @return {undefined}
 */
IDBTransaction.prototype.commit = function() {};

/**
 * @type {?function(!Event)}
 */
IDBTransaction.prototype.onabort;

/**
 * @type {?function(!Event)}
 */
IDBTransaction.prototype.oncomplete;

/**
 * @type {?function(!Event)}
 */
IDBTransaction.prototype.onerror;


/**
 * @constructor
 * @see http://www.w3.org/TR/IndexedDB/#idl-def-IDBKeyRange
 * @see https://www.w3.org/TR/IndexedDB-2/#keyrange
 */
function IDBKeyRange() {}

/**
 * @const {*}
 */
IDBKeyRange.prototype.lower;

/**
 * @const {*}
 */
IDBKeyRange.prototype.upper;

/**
 * @const {boolean}
 */
IDBKeyRange.prototype.lowerOpen;

/**
 * @const {boolean}
 */
IDBKeyRange.prototype.upperOpen;

/**
 * @param {!IDBKeyType} value The single key value of this range.
 * @return {!IDBKeyRange} The key range.
 */
IDBKeyRange.only = function(value) {};

/**
 * @param {!IDBKeyType} bound Creates a lower bound key range.
 * @param {boolean=} open Open the key range.
 * @return {!IDBKeyRange} The key range.
 */
IDBKeyRange.lowerBound = function(bound, open) {};

/**
 * @param {!IDBKeyType} bound Creates an upper bound key range.
 * @param {boolean=} open Open the key range.
 * @return {!IDBKeyRange} The key range.
 */
IDBKeyRange.upperBound = function(bound, open) {};

/**
 * @param {!IDBKeyType} left The left bound value.
 * @param {!IDBKeyType} right The right bound value.
 * @param {boolean=} openLeft Whether the left bound value should be excluded.
 * @param {boolean=} openRight Whether the right bound value should be excluded.
 * @return {!IDBKeyRange} The key range.
 */
IDBKeyRange.bound = function(left, right, openLeft, openRight) {};

/**
 * @param {!IDBKeyType} key
 * @return {boolean}
 * @see https://www.w3.org/TR/IndexedDB-2/#dom-idbkeyrange-includes
 */
IDBKeyRange.prototype.includes = function(key) {};


/**
 * @param {string} type
 * @param {!IDBVersionChangeEventInit=} opt_eventInit
 * @constructor
 * @extends {Event}
 * @see http://www.w3.org/TR/IndexedDB/#idl-def-IDBVersionChangeEvent
 */
function IDBVersionChangeEvent(type, opt_eventInit) {}

/**
 * @const {number}
 */
IDBVersionChangeEvent.prototype.oldVersion;

/**
 * @const {?number}
 */
IDBVersionChangeEvent.prototype.newVersion;


/**
 * @record
 * @see https://www.w3.org/TR/IndexedDB/#dictdef-idbdatabaseinfo
 */
function IDBDatabaseInfo() {}

/**
 * @type {string|undefined}
 */
IDBDatabaseInfo.prototype.name;

/**
 * @type {number|undefined}
 */
IDBDatabaseInfo.prototype.version;
/*
 * Copyright 2020 The Closure Compiler Authors
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/**
 * @fileoverview Definitions for the W3C Keyboard Lock API.
 * @see https://wicg.github.io/keyboard-lock/
 * @externs
 */

/**
 * Keyboard API object.
 * @constructor
 * @see https://w3c.github.io/keyboard-lock/#keyboard-interface
 */
function Keyboard() {}

/**
 * Lock the specified keys for this page, or all keys if keyCodes is omitted.
 * @param {?Array<string>=} keyCodes
 * @return {!Promise<undefined>}
 */
Keyboard.prototype.lock = function(keyCodes) {};

/**
 * Unlock any locked keys.
 */
Keyboard.prototype.unlock = function() {};


/**
 * @type {!Keyboard}
 * @see https://w3c.github.io/keyboard-lock/#API
 */
Navigator.prototype.keyboard;
/*
 * Copyright 2019 The Closure Compiler Authors.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/**
 * @fileoverview MediaCapabilities externs.
 * Based on {@link https://w3c.github.io/media-capabilities/ MC draft 6 November
 * 2019}.
 * @externs
 */

/**
 * @typedef {string}
 * @see https://w3c.github.io/media-capabilities/#enumdef-hdrmetadatatype
 */
var HdrMetadataType;

/**
 * @typedef {string}
 * @see https://w3c.github.io/media-capabilities/#enumdef-colorgamut
 */
var ColorGamut;

/**
 * @typedef {string}
 * @see https://w3c.github.io/media-capabilities/#enumdef-transferfunction
 */
var TransferFunction;

/**
 * @typedef {string}
 * @see https://w3c.github.io/media-capabilities/#enumdef-mediadecodingtype
 */
var MediaDecodingType;

/**
 * @typedef {string}
 * @see https://w3c.github.io/media-capabilities/#enumdef-mediaencodingtype
 */
var MediaEncodingType;

/**
 * @typedef {{
 *   contentType: string,
 *   width: number,
 *   height: number,
 *   bitrate: number,
 *   framerate: number,
 *   hasAlphaChannel: (boolean|undefined),
 *   hdrMetadataType: (!HdrMetadataType|undefined),
 *   colorGamut: (!ColorGamut|undefined),
 *   transferFunction: (!TransferFunction|undefined)
 * }}
 * @see https://w3c.github.io/media-capabilities/#dictdef-videoconfiguration
 */
var VideoConfiguration;

// NOTE: channels definition below is not yet stable in the spec as of Dec 2019.
// "The channels needs to be defined as a double (2.1, 4.1, 5.1, ...), an
// unsigned short (number of channels) or as an enum value. The current
// definition is a placeholder."
/**
 * @typedef {{
 *   contentType: string,
 *   channels: (*|undefined),
 *   bitrate: (number|undefined),
 *   samplerate: (number|undefined),
 *   spatialRendering: (boolean|undefined)
 * }}
 * @see https://w3c.github.io/media-capabilities/#dictdef-audioconfiguration
 */
var AudioConfiguration;

// NOTE: encryptionScheme is not yet in the MC spec as of Dec 2019, but has
// already landed in EME and should be in MC soon.
// https://github.com/w3c/media-capabilities/issues/100
/**
 * @typedef {{
 *   robustness: (string|undefined),
 *   encryptionScheme: (string|undefined)
 * }}
 * @see https://w3c.github.io/media-capabilities/#dictdef-keysystemtrackconfiguration
 */
var KeySystemTrackConfiguration;

/**
 * @typedef {{
 *   keySystem: string,
 *   initDataType: (string|undefined),
 *   distinctiveIdentifier: (string|undefined),
 *   persistentState: (string|undefined),
 *   sessionTypes: (!Array<string>|undefined),
 *   audio: (!KeySystemTrackConfiguration|undefined),
 *   video: (!KeySystemTrackConfiguration|undefined)
 * }}
 * @see https://w3c.github.io/media-capabilities/#dictdef-mediacapabilitieskeysystemconfiguration
 */
var MediaCapabilitiesKeySystemConfiguration;

/**
 * @record
 * @see https://w3c.github.io/media-capabilities/#dictdef-mediaconfiguration
 */
function MediaConfiguration() {}

/** @type {!VideoConfiguration|undefined} */
MediaConfiguration.prototype.video;

/** @type {!AudioConfiguration|undefined} */
MediaConfiguration.prototype.audio;

/**
 * @record
 * @extends {MediaConfiguration}
 * @see https://w3c.github.io/media-capabilities/#dictdef-mediadecodingconfiguration
 */
function MediaDecodingConfiguration() {}

/** @type {!MediaDecodingType} */
MediaDecodingConfiguration.prototype.type;

/** @type {!MediaCapabilitiesKeySystemConfiguration|undefined} */
MediaDecodingConfiguration.prototype.keySystemConfiguration;

/**
 * @record
 * @extends {MediaConfiguration}
 * @see https://w3c.github.io/media-capabilities/#dictdef-mediaencodingconfiguration
 */
function MediaEncodingConfiguration() {}

/** @type {!MediaEncodingType} */
MediaEncodingConfiguration.prototype.type;

/**
 * @record
 * @see https://w3c.github.io/media-capabilities/#dictdef-mediacapabilitiesinfo
 */
function MediaCapabilitiesInfo() {}

/** @type {boolean} */
MediaCapabilitiesInfo.prototype.supported;

/** @type {boolean} */
MediaCapabilitiesInfo.prototype.smooth;

/** @type {boolean} */
MediaCapabilitiesInfo.prototype.powerEfficient;

/**
 * @record
 * @extends {MediaCapabilitiesInfo}
 * @see https://w3c.github.io/media-capabilities/#dictdef-mediacapabilitiesdecodinginfo
 */
function MediaCapabilitiesDecodingInfo() {}

/** @type {?MediaKeySystemAccess} */
MediaCapabilitiesDecodingInfo.prototype.keySystemAccess;

/** @type {!MediaDecodingConfiguration} */
MediaCapabilitiesDecodingInfo.prototype.configuration;

/**
 * @record
 * @extends {MediaCapabilitiesInfo}
 * @see https://w3c.github.io/media-capabilities/#dictdef-mediacapabilitiesencodinginfo
 */
function MediaCapabilitiesEncodingInfo() {}

/** @type {!MediaEncodingConfiguration} */
MediaCapabilitiesEncodingInfo.prototype.configuration;

/**
 * @interface
 * @see https://w3c.github.io/media-capabilities/#mediacapabilities
 */
function MediaCapabilities() {}

/**
 * @param {!MediaDecodingConfiguration} configuration
 * @return {!Promise<!MediaCapabilitiesDecodingInfo>}
 */
MediaCapabilities.prototype.decodingInfo = function(configuration) {};

/**
 * @param {!MediaEncodingConfiguration} configuration
 * @return {!Promise<!MediaCapabilitiesEncodingInfo>}
 */
MediaCapabilities.prototype.encodingInfo = function(configuration) {};

/** @const {?MediaCapabilities} */
Navigator.prototype.mediaCapabilities;

/** @const {?MediaCapabilities} */
WorkerNavigator.prototype.mediaCapabilities;
/*
 * Copyright 2014 The Closure Compiler Authors.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/**
 * @fileoverview W3C Web MIDI specification.
 * @see http://www.w3.org/TR/webmidi/
 *
 * @externs
 */


/**
 * @param {!MIDIOptions=} opt_options
 * @return {!Promise.<!MIDIAccess>}
 */
navigator.requestMIDIAccess = function(opt_options) {};


/**
 * @typedef {{
 *   sysex: boolean
 * }}
 */
var MIDIOptions;



/**
 * @interface
 */
var MIDIInputMap = function() {};


/**
 * @const {number}
 */
MIDIInputMap.prototype.size;


/**
 * @param {function(string)} iterator
 */
MIDIInputMap.prototype.keys = function(iterator) {};


/**
 * @param {function(!Array.<*>)} iterator
 */
MIDIInputMap.prototype.entries = function(iterator) {};


/**
 * @param {function(!MIDIInput)} iterator
 */
MIDIInputMap.prototype.values = function(iterator) {};


/**
 * @param {string} key
 * @return {!MIDIInput}
 */
MIDIInputMap.prototype.get = function(key) {};


/**
 * @param {string} key
 * @return {boolean}
 */
MIDIInputMap.prototype.has = function(key) {};



/**
 * @interface
 */
var MIDIOutputMap = function() {};


/**
 * @const {number}
 */
MIDIOutputMap.prototype.size;


/**
 * @param {function(string)} iterator
 */
MIDIOutputMap.prototype.keys = function(iterator) {};


/**
 * @param {function(!Array.<*>)} iterator
 */
MIDIOutputMap.prototype.entries = function(iterator) {};


/**
 * @param {function(!MIDIOutput)} iterator
 */
MIDIOutputMap.prototype.values = function(iterator) {};


/**
 * @param {string} key
 * @return {!MIDIOutput}
 */
MIDIOutputMap.prototype.get = function(key) {};


/**
 * @param {string} key
 * @return {boolean}
 */
MIDIOutputMap.prototype.has = function(key) {};



/**
 * @interface
 * @extends {EventTarget}
 */
var MIDIAccess = function() {};


/**
 * @const {!MIDIInputMap}
 */
MIDIAccess.prototype.inputs;


/**
 * @const {!MIDIOutputMap}
 */
MIDIAccess.prototype.outputs;


/**
 * @const {function(!MIDIConnectionEvent)}
 */
MIDIAccess.prototype.onconnect;


/**
 * @type {function(!MIDIConnectionEvent)}
 */
MIDIAccess.prototype.ondisconnect;


/**
 * @const {boolean}
 */
MIDIAccess.prototype.sysexEnabled;



/**
 * @interface
 * @extends {EventTarget}
 */
var MIDIPort = function() {};


/**
 * @const {string}
 */
MIDIPort.prototype.id;


/**
 * @const {string}
 */
MIDIPort.prototype.manufacturer;


/**
 * @const {string}
 */
MIDIPort.prototype.name;


/**
 * @const {string}
 */
MIDIPort.prototype.type;


/**
 * @const {string}
 */
MIDIPort.prototype.version;


/**
 * @type {function(!MIDIConnectionEvent)}
 */
MIDIPort.prototype.ondisconnect;



/**
 * @interface
 * @extends {MIDIPort}
 */
var MIDIInput = function() {};


/**
 * @type {function(!MIDIMessageEvent)}
 */
MIDIInput.prototype.onmidimessage;



/**
 * @interface
 * @extends {MIDIPort}
 */
var MIDIOutput = function() {};


/**
 * @param {!Uint8Array} data
 * @param {number=} opt_timestamp
 */
MIDIOutput.prototype.send = function(data, opt_timestamp) {};



/**
 * @constructor
 * @extends {Event}
 * @param {string} type
 * @param {!MIDIMessageEventInit=} opt_init
 */
var MIDIMessageEvent = function(type, opt_init) {};


/**
 * @const {number}
 */
MIDIMessageEvent.prototype.receivedTime;


/**
 * @const {!Uint8Array}
 */
MIDIMessageEvent.prototype.data;


/**
 * @record
 * @extends {EventInit}
 * @see https://www.w3.org/TR/webmidi/#midimessageeventinit-interface
 */
function MIDIMessageEventInit() {}

/** @type {undefined|number} */
MIDIMessageEventInit.prototype.receivedTime;

/** @type {undefined|!Uint8Array} */
MIDIMessageEventInit.prototype.data;



/**
 * @constructor
 * @extends {Event}
 * @param {string} type
 * @param {!MIDIConnectionEventInit=} opt_init
 */
var MIDIConnectionEvent = function(type, opt_init) {};


/**
 * @const {MIDIPort}
 */
MIDIConnectionEvent.prototype.port;


/**
 * @record
 * @extends {EventInit}
 * @see https://www.w3.org/TR/webmidi/#idl-def-MIDIConnectionEventInit
 */
function MIDIConnectionEventInit() {}

/** @type {undefined|!MIDIPort} */
MIDIConnectionEventInit.prototype.port;
/*
 * Copyright 2011 The Closure Compiler Authors
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/**
 * @fileoverview Definitions for W3C's Navigation Timing specification.
 *
 * Created from
 * @see http://dvcs.w3.org/hg/webperf/raw-file/tip/specs/NavigationTiming/Overview.html
 * @see http://w3c-test.org/webperf/specs/ResourceTiming
 * @see http://www.w3.org/TR/performance-timeline
 * @see http://www.w3.org/TR/user-timing/
 * @see https://w3c.github.io/server-timing/
 *
 * @externs
 */

/** @constructor */
function PerformanceTiming() {}
/** @type {number} */ PerformanceTiming.prototype.navigationStart;
/** @type {number} */ PerformanceTiming.prototype.unloadEventStart;
/** @type {number} */ PerformanceTiming.prototype.unloadEventEnd;
/** @type {number} */ PerformanceTiming.prototype.redirectStart;
/** @type {number} */ PerformanceTiming.prototype.redirectEnd;
/** @type {number} */ PerformanceTiming.prototype.fetchStart;
/** @type {number} */ PerformanceTiming.prototype.domainLookupStart;
/** @type {number} */ PerformanceTiming.prototype.domainLookupEnd;
/** @type {number} */ PerformanceTiming.prototype.connectStart;
/** @type {number} */ PerformanceTiming.prototype.connectEnd;
/** @type {number} */ PerformanceTiming.prototype.secureConnectionStart;
/** @type {number} */ PerformanceTiming.prototype.requestStart;
/** @type {number} */ PerformanceTiming.prototype.responseStart;
/** @type {number} */ PerformanceTiming.prototype.responseEnd;
/** @type {number} */ PerformanceTiming.prototype.domLoading;
/** @type {number} */ PerformanceTiming.prototype.domInteractive;
/** @type {number} */ PerformanceTiming.prototype.domContentLoadedEventStart;
/** @type {number} */ PerformanceTiming.prototype.domContentLoadedEventEnd;
/** @type {number} */ PerformanceTiming.prototype.domComplete;
/** @type {number} */ PerformanceTiming.prototype.loadEventStart;
/** @type {number} */ PerformanceTiming.prototype.loadEventEnd;

/** @constructor */
function PerformanceEntry() {}
/** @type {string} */ PerformanceEntry.prototype.name;
/** @type {string} */ PerformanceEntry.prototype.entryType;
/** @type {number} */ PerformanceEntry.prototype.startTime;
/** @type {number} */ PerformanceEntry.prototype.duration;

/**
 * https://www.w3.org/TR/resource-timing-2/#performanceresourcetiming
 * @constructor
 * @extends {PerformanceEntry}
 */
function PerformanceResourceTiming() {}
/** @type {number} */ PerformanceResourceTiming.prototype.redirectStart;
/** @type {number} */ PerformanceResourceTiming.prototype.redirectEnd;
/** @type {number} */ PerformanceResourceTiming.prototype.fetchStart;
/** @type {number} */ PerformanceResourceTiming.prototype.domainLookupStart;
/** @type {number} */ PerformanceResourceTiming.prototype.domainLookupEnd;
/** @type {number} */ PerformanceResourceTiming.prototype.connectStart;
/** @type {number} */ PerformanceResourceTiming.prototype.connectEnd;
/** @type {number} */
PerformanceResourceTiming.prototype.secureConnectionStart;
/** @type {number} */ PerformanceResourceTiming.prototype.requestStart;
/** @type {number} */ PerformanceResourceTiming.prototype.responseStart;
/** @type {number} */ PerformanceResourceTiming.prototype.responseEnd;
/** @type {string} */ PerformanceResourceTiming.prototype.initiatorType;
/** @type {number|undefined} */
PerformanceResourceTiming.prototype.transferSize;
/** @type {number|undefined} */
PerformanceResourceTiming.prototype.encodedBodySize;
/** @type {number|undefined} */
PerformanceResourceTiming.prototype.decodedBodySize;
/** @type {number|undefined} */
PerformanceResourceTiming.prototype.workerStart;
/** @type {string} */ PerformanceResourceTiming.prototype.nextHopProtocol;
/** @type {!Array<!PerformanceServerTiming>} */ PerformanceResourceTiming.prototype.serverTiming;

/**
 * https://w3c.github.io/server-timing/#dom-performanceservertiming
 * @constructor
 */
function PerformanceServerTiming() {}
/** @type {string} */ PerformanceServerTiming.prototype.name;
/** @type {number} */ PerformanceServerTiming.prototype.duration;
/** @type {string} */ PerformanceServerTiming.prototype.description;

/**
 * Possible values are 'navigate', 'reload', 'back_forward', and 'prerender'.
 * See https://w3c.github.io/navigation-timing/#sec-performance-navigation-types
 * @typedef {string}
 */
var NavigationType;

/**
 * https://w3c.github.io/navigation-timing/#sec-PerformanceNavigationTiming
 * @constructor
 * @extends {PerformanceResourceTiming}
 */
function PerformanceNavigationTiming() {}
/** @type {number} */ PerformanceNavigationTiming.prototype.unloadEventStart;
/** @type {number} */ PerformanceNavigationTiming.prototype.unloadEventEnd;
/** @type {number} */ PerformanceNavigationTiming.prototype.domInteractive;
/** @type {number} */ PerformanceNavigationTiming.prototype
    .domContentLoadedEventStart;
/** @type {number} */ PerformanceNavigationTiming.prototype
    .domContentLoadedEventEnd;
/** @type {number} */ PerformanceNavigationTiming.prototype.domComplete;
/** @type {number} */ PerformanceNavigationTiming.prototype.loadEventStart;
/** @type {number} */ PerformanceNavigationTiming.prototype.loadEventEnd;
/** @type {NavigationType} */ PerformanceNavigationTiming.prototype.type;
/** @type {number} */ PerformanceNavigationTiming.prototype.redirectCount;

/**
 * https://w3c.github.io/paint-timing/#sec-PerformancePaintTiming
 * @constructor
 * @extends {PerformanceEntry}
 */
function PerformancePaintTiming() {}

/** @constructor */
function PerformanceNavigation() {}
/** @const {number} */ PerformanceNavigation.TYPE_NAVIGATE;
/** @const {number} */ PerformanceNavigation.prototype.TYPE_NAVIGATE;
/** @const {number} */ PerformanceNavigation.TYPE_RELOAD;
/** @const {number} */ PerformanceNavigation.prototype.TYPE_RELOAD;
/** @const {number} */ PerformanceNavigation.TYPE_BACK_FORWARD;
/** @const {number} */ PerformanceNavigation.prototype.TYPE_BACK_FORWARD;
/** @const {number} */ PerformanceNavigation.TYPE_RESERVED;
/** @const {number} */ PerformanceNavigation.prototype.TYPE_RESERVED;
/** @type {number} */ PerformanceNavigation.prototype.type;
/** @type {number} */ PerformanceNavigation.prototype.redirectCount;

/**
 * https://w3c.github.io/longtasks/#taskattributiontiming
 * @constructor
 * @extends {PerformanceEntry}
 */
function TaskAttributionTiming() {}
/** @type {string} */ TaskAttributionTiming.prototype.containerId;
/** @type {string} */ TaskAttributionTiming.prototype.containerName;
/** @type {string} */ TaskAttributionTiming.prototype.containerSrc;
/** @type {string} */ TaskAttributionTiming.prototype.containerType;

/**
 * https://w3c.github.io/longtasks/#performancelongtasktiming
 * @constructor
 * @extends {PerformanceEntry}
 */
function PerformanceLongTaskTiming() {}
/** @type {!Array<!TaskAttributionTiming>} */
PerformanceLongTaskTiming.prototype.attribution;

/**
 * https://wicg.github.io/layout-instability/#sec-layout-shift
 * @constructor
 * @extends {PerformanceEntry}
 */
function LayoutShift() {}
/** @type {number} */ LayoutShift.prototype.value;
/** @type {boolean} */ LayoutShift.prototype.hadRecentInput;
/** @type {number} */ LayoutShift.prototype.lastInputTime;
/** @type {!Array<!LayoutShiftAttribution>} */ LayoutShift.prototype.sources;

/**
 * https://wicg.github.io/layout-instability/#sec-layout-shift
 * @constructor
 */
function LayoutShiftAttribution() {}
/** @type {?Node} */ LayoutShiftAttribution.prototype.node;
/** @type {!DOMRectReadOnly} */ LayoutShiftAttribution.prototype.previousRect;
/** @type {!DOMRectReadOnly} */ LayoutShiftAttribution.prototype.currentRect;

/**
 * https://wicg.github.io/largest-contentful-paint/#largestcontentfulpaint
 * @constructor
 * @extends {PerformanceEntry}
 */
function LargestContentfulPaint() {}
/** @type {number} */ LargestContentfulPaint.prototype.renderTime;
/** @type {number} */ LargestContentfulPaint.prototype.loadTime;
/** @type {number} */ LargestContentfulPaint.prototype.size;
/** @type {string} */ LargestContentfulPaint.prototype.id;
/** @type {string} */ LargestContentfulPaint.prototype.url;
/** @type {?Element} */ LargestContentfulPaint.prototype.element;

/**
 * https://wicg.github.io/event-timing/#sec-performance-event-timing
 * @constructor
 * @extends {PerformanceEntry}
 */
function PerformanceEventTiming() {}
/** @type {number} */ PerformanceEventTiming.prototype.processingStart;
/** @type {number} */ PerformanceEventTiming.prototype.processingEnd;
/** @type {boolean} */ PerformanceEventTiming.prototype.cancelable;
/** @type {?Node} */ PerformanceEventTiming.prototype.target;

/**
 * @record
 * @see https://www.w3.org/TR/user-timing-3/#performancemarkoptions-dictionary
 */
function PerformanceMarkOptions() {}
/** @type {Object|undefined} */ PerformanceMarkOptions.prototype.detail;
/** @type {number|undefined} */ PerformanceMarkOptions.prototype.startTime;

/**
 * @record
 * @see https://www.w3.org/TR/user-timing-3/#performancemeasureoptions-dictionary
 */
function PerformanceMeasureOptions() {}
/** @type {Object|undefined} */ PerformanceMeasureOptions.prototype.detail;
/** @type {string|number|undefined} */ PerformanceMeasureOptions.prototype
    .start;
/** @type {number|undefined} */ PerformanceMeasureOptions.prototype.duration;
/** @type {string|number|undefined} */ PerformanceMeasureOptions.prototype.end;

/** @constructor */
function Performance() {}

/** @type {PerformanceTiming} */
Performance.prototype.timing;

/** @type {PerformanceNavigation} */
Performance.prototype.navigation;

/** @type {number} */
Performance.prototype.timeOrigin;


/**
 * Clears the buffer used to store the current list of
 * PerformanceResourceTiming resources.
 * @return {undefined}
 */
Performance.prototype.clearResourceTimings = function() {};

/**
 * A callback that is invoked when the resourcetimingbufferfull event is fired.
 * @type {?function(Event)}
 */
Performance.prototype.onresourcetimingbufferfull = function() {};

/**
 * Set the maximum number of PerformanceResourceTiming resources that may be
 * stored in the buffer.
 * @param {number} maxSize
 * @return {undefined}
 */
Performance.prototype.setResourceTimingBufferSize = function(maxSize) {};

/**
 * @return {!Array<!PerformanceEntry>} A copy of the PerformanceEntry list,
 *     in chronological order with respect to startTime.
 * @nosideeffects
 */
Performance.prototype.getEntries = function() {};

/**
 * @param {string} entryType Only return `PerformanceEntry`s with this
 *     entryType.
 * @return {!Array<!PerformanceEntry>} A copy of the PerformanceEntry list,
 *     in chronological order with respect to startTime.
 * @nosideeffects
 */
Performance.prototype.getEntriesByType = function(entryType) {};

/**
 * @param {string} name Only return `PerformanceEntry`s with this name.
 * @param {string=} opt_entryType Only return `PerformanceEntry`s with
 *     this entryType.
 * @return {!Array<!PerformanceEntry>} PerformanceEntry list in chronological
 *     order with respect to startTime.
 * @nosideeffects
 */
Performance.prototype.getEntriesByName = function(name, opt_entryType) {};

/**
 * @return {number}
 * @nosideeffects
 */
Performance.prototype.now = function() {};

/**
 * @param {string} markName
 * @param {PerformanceMarkOptions=} markOptions
 * @return {PerformanceMark|undefined}
 */
Performance.prototype.mark = function(markName, markOptions) {};

/**
 * @param {string=} opt_markName
 * @return {undefined}
 */
Performance.prototype.clearMarks = function(opt_markName) {};

/**
 * @param {string} measureName
 * @param {string|PerformanceMeasureOptions=} startOrMeasureOptions
 * @param {string=} endMark
 * @return {PerformanceMeasure|undefined}
 */
Performance.prototype.measure = function(
    measureName, startOrMeasureOptions, endMark) {};

/**
 * @param {string=} opt_measureName
 * @return {undefined}
 */
Performance.prototype.clearMeasures = function(opt_measureName) {};

/** @type {Performance} */
Window.prototype.performance;

/**
 * @type {!Performance}
 * @suppress {duplicate}
 */
var performance;

/**
 * @constructor
 * @extends {PerformanceEntry}
 * @param {string} markName
 * @param {PerformanceMarkOptions=} markOptions
 * @see https://www.w3.org/TR/user-timing-3/#performancemark
 */
function PerformanceMark(markName, markOptions) {}
/** @type {Object} (readonly) */ PerformanceMark.prototype.detail;

/**
 * @constructor
 * @extends {PerformanceEntry}
 * @see https://www.w3.org/TR/user-timing-3/#performancemeasure
 */
function PerformanceMeasure() {}
/** @type {Object} (readonly) */ PerformanceMeasure.prototype.detail;

/**
 * @constructor
 * @extends {Performance}
 */
function WorkerPerformance() {}

/**
 * @typedef {function(!PerformanceObserverEntryList, !PerformanceObserver): void}
 */
var PerformanceObserverCallback;

/**
 * See:
 * https://w3c.github.io/performance-timeline/#the-performanceobserver-interface
 * @constructor
 * @param {!PerformanceObserverCallback} callback
 */
function PerformanceObserver(callback) {}

/**
 * @param {!PerformanceObserverInit} options
 */
PerformanceObserver.prototype.observe = function(options) {};

/** @return {void} */
PerformanceObserver.prototype.disconnect = function() {};

/**
 * @see https://developer.mozilla.org/en-US/docs/Web/API/PerformanceObserver/takeRecords
 * @see https://www.w3.org/TR/performance-timeline-2/#takerecords-method
 * @return {!Array<!PerformanceEntry>} The current PerformanceEntry list stored
 *     in the performance observer buffer, emptying it out.
 */
PerformanceObserver.prototype.takeRecords = function() {};

/** @const {!Array<string>} */
PerformanceObserver.supportedEntryTypes;

/**
 * @record
 */
function PerformanceObserverInit() {}

/** @type {undefined|!Array<string>} */
PerformanceObserverInit.prototype.entryTypes;
/** @type {undefined|string} */
PerformanceObserverInit.prototype.type;
/** @type {undefined|boolean} */
PerformanceObserverInit.prototype.buffered;

/**
 * @constructor
 */
function PerformanceObserverEntryList() {}

/** @return {!Array<!PerformanceEntry>} */
PerformanceObserverEntryList.prototype.getEntries = function() {};
/**
 * @param {string} type
 * @return {!Array<!PerformanceEntry>}
 */
PerformanceObserverEntryList.prototype.getEntriesByName = function(type) {};
/**
 * @param {string} name
 * @param {string=} opt_type
 * @return {!Array<!PerformanceEntry>}
 */
PerformanceObserverEntryList.prototype.getEntriesByType = function(
    name, opt_type) {};
/*
 * Copyright 2017 The Closure Compiler Authors.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/**
 * @fileoverview Externs for the Network Information API.
 * @externs
 */

/**
 * @see http://wicg.github.io/netinfo/#-dfn-networkinformation-dfn-interface
 * @constructor
 */
function NetworkInformation() {}

/** @type {ConnectionType} */
NetworkInformation.prototype.type;

/** @type {EffectiveConnectionType} */
NetworkInformation.prototype.effectiveType;

/** @type {Megabit} */
NetworkInformation.prototype.downlinkMax;

/** @type {Megabit} */
NetworkInformation.prototype.downlink;

/** @type {Millisecond} */
NetworkInformation.prototype.rtt;

/** @type {?function(Event)} */
NetworkInformation.prototype.onchange;

/** @type {boolean} */
NetworkInformation.prototype.saveData;

/**
 * @typedef {number}
 */
var Megabit;

/**
 * @typedef {number}
 */
var Millisecond;

/**
 * Enum of:
 * 'bluetooth',
 * 'cellular',
 * 'ethernet',
 * 'mixed',
 * 'none',
 * 'other',
 * 'unknown',
 * 'wifi',
 * 'wimax'
 * @typedef {string}
 */
var ConnectionType;

/**
 * Enum of:
 * '2g',
 * '3g',
 * '4g',
 * 'slow-2g'
 * @typedef {string}
 */
var EffectiveConnectionType;

/** @type {!NetworkInformation} */
Navigator.prototype.connection;
/*
 * Copyright 2019 The Closure Compiler Authors
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/**
 * @fileoverview Definitions for W3C's Payment Request API.
 * @see https://w3c.github.io/payment-request/
 *
 * @externs
 */

/**
 * @constructor
 * @param {!Array<!PaymentMethodData>} methodData
 * @param {!PaymentDetailsInit} details
 * @param {!PaymentOptions=} options
 * @implements {EventTarget}
 * @see https://w3c.github.io/payment-request/#paymentrequest-interface
 */
function PaymentRequest(methodData, details, options) {}
/**
 * @param {!Promise<!PaymentDetailsUpdate>=} detailsPromise
 * @return {!Promise<!PaymentResponse>}
 */
PaymentRequest.prototype.show = function(detailsPromise) {};
/** @return {!Promise<undefined>} */
PaymentRequest.prototype.abort = function() {};
/** @return {!Promise<boolean>} */
PaymentRequest.prototype.canMakePayment = function() {};
/** @return {!Promise<boolean>} */
PaymentRequest.prototype.hasEnrolledInstrument = function() {};
/** @const {string} */
PaymentRequest.prototype.id;
/** @const {?PaymentAddress} */
PaymentRequest.prototype.shippingAddress;
/** @const {?string} */
PaymentRequest.prototype.shippingOption;
/** @const {?string} */
PaymentRequest.prototype.shippingType;
/** @type {?function(!Event)} */
PaymentRequest.prototype.onmerchantvalidation;
/** @type {?function(!Event)} */
PaymentRequest.prototype.onshippingaddresschange;
/** @type {?function(!Event)} */
PaymentRequest.prototype.onshippingoptionchange;
/** @type {?function(!Event)} */
PaymentRequest.prototype.onpaymentmethodchange;

/**
 * @record
 * @see https://w3c.github.io/payment-request/#paymentmethoddata-dictionary
 */
function PaymentMethodData() {};
/** @type {string} */
PaymentMethodData.prototype.supportedMethods;
/** @type {!Object|undefined} */
PaymentMethodData.prototype.data;

/**
 * @record
 * @see https://w3c.github.io/payment-request/#paymentcurrencyamount-dictionary
 */
function PaymentCurrencyAmount() {};
/** @type {string} */
PaymentCurrencyAmount.prototype.currency;
/** @type {string} */
PaymentCurrencyAmount.prototype.value;

/**
 * @record
 * @see https://w3c.github.io/payment-request/#paymentdetailsbase-dictionary
 */
function PaymentDetailsBase() {};
/** @type {!Array<!PaymentItem>|undefined} */
PaymentDetailsBase.prototype.displayItems;
/** @type {!Array<!PaymentShippingOption>|undefined} */
PaymentDetailsBase.prototype.shippingOptions;
/** @type {!Array<!PaymentDetailsModifier>|undefined} */
PaymentDetailsBase.prototype.modifiers;

/**
 * @extends {PaymentDetailsBase}
 * @record
 * @see https://w3c.github.io/payment-request/#paymentdetailsinit-dictionary
 */
function PaymentDetailsInit() {};
/** @type {string|undefined} */
PaymentDetailsInit.prototype.id;
/** @type {!PaymentItem} */
PaymentDetailsInit.prototype.total;

/**
 * @extends {PaymentDetailsBase}
 * @record
 * @see https://w3c.github.io/payment-request/#paymentdetailsupdate-dictionary
 */
function PaymentDetailsUpdate() {};
/** @type {string|undefined} */
PaymentDetailsUpdate.prototype.error;
/** @type {!PaymentItem|undefined} */
PaymentDetailsUpdate.prototype.total;
/** @type {!AddressErrors|undefined} */
PaymentDetailsUpdate.prototype.shippingAddressErrors;
/** @type {!PayerErrors|undefined} */
PaymentDetailsUpdate.prototype.payerErrors;
/** @type {!Object|undefined} */
PaymentDetailsUpdate.prototype.paymentMethodErrors;

/**
 * @record
 * @see https://w3c.github.io/payment-request/#paymentdetailsmodifier-dictionary
 */
function PaymentDetailsModifier() {};
/** @type {string} */
PaymentDetailsModifier.prototype.supportedMethods;
/** @type {!PaymentItem|undefined} */
PaymentDetailsModifier.prototype.total;
/** @type {!Array<!PaymentItem>|undefined} */
PaymentDetailsModifier.prototype.additionalDisplayItems;
/** @type {!Object|undefined} */
PaymentDetailsModifier.prototype.data;

/**
 * @record
 * @see https://w3c.github.io/payment-request/#paymentoptions-dictionary
 */
function PaymentOptions() {};
/** @type {boolean|undefined} */
PaymentOptions.prototype.requestPayerName;
/** @type {boolean|undefined} */
PaymentOptions.prototype.requestBillingAddress;
/** @type {boolean|undefined} */
PaymentOptions.prototype.requestPayerEmail;
/** @type {boolean|undefined} */
PaymentOptions.prototype.requestPayerPhone;
/** @type {boolean|undefined} */
PaymentOptions.prototype.requestShipping;
/** @type {string|undefined} */
PaymentOptions.prototype.shippingType;

/**
 * @record
 * @see https://w3c.github.io/payment-request/#paymentitem-dictionary
 */
function PaymentItem() {};
/** @type {string} */
PaymentItem.prototype.label;
/** @type {!PaymentCurrencyAmount} */
PaymentItem.prototype.amount;
/** @type {boolean|undefined} */
PaymentItem.prototype.pending;

/**
 * @interface
 * @see https://w3c.github.io/payment-request/#paymentaddress-interface
 */
function PaymentAddress() {}
/**
 * @return {Object}
 * @override
 */
PaymentAddress.prototype.toJSON = function() {};
/** @const {string|undefined} */
PaymentAddress.prototype.city;
/** @const {string|undefined} */
PaymentAddress.prototype.country;
/** @const {string|undefined} */
PaymentAddress.prototype.dependentLocality;
/** @const {string|undefined} */
PaymentAddress.prototype.organization;
/** @const {string|undefined} */
PaymentAddress.prototype.phone;
/** @const {string|undefined} */
PaymentAddress.prototype.postalCode;
/** @const {string|undefined} */
PaymentAddress.prototype.recipient;
/** @const {string|undefined} */
PaymentAddress.prototype.region;
/** @const {string|undefined} */
PaymentAddress.prototype.sortingCode;
/** @const {!Array<string>|undefined} */
PaymentAddress.prototype.addressLine;

/**
 * @record
 * @see https://w3c.github.io/payment-request/#addressinit-dictionary
 */
function AddressInit() {};
/** @type {string|undefined} */
AddressInit.prototype.country;
/** @type {!Array<string>|undefined} */
AddressInit.prototype.addressLine;
/** @type {string|undefined} */
AddressInit.prototype.region;
/** @type {string|undefined} */
AddressInit.prototype.city;
/** @type {string|undefined} */
AddressInit.prototype.dependentLocality;
/** @type {string|undefined} */
AddressInit.prototype.postalCode;
/** @type {string|undefined} */
AddressInit.prototype.sortingCode;
/** @type {string|undefined} */
AddressInit.prototype.organization;
/** @type {string|undefined} */
AddressInit.prototype.recipient;
/** @type {string|undefined} */
AddressInit.prototype.phone;

/**
 * @record
 * @see https://w3c.github.io/payment-request/#addresserrors-dictionary
 */
function AddressErrors() {};
/** @type {string|undefined} */
AddressErrors.prototype.addressLine;
/** @type {string|undefined} */
AddressErrors.prototype.city;
/** @type {string|undefined} */
AddressErrors.prototype.country;
/** @type {string|undefined} */
AddressErrors.prototype.dependentLocality;
/** @type {string|undefined} */
AddressErrors.prototype.organization;
/** @type {string|undefined} */
AddressErrors.prototype.phone;
/** @type {string|undefined} */
AddressErrors.prototype.postalCode;
/** @type {string|undefined} */
AddressErrors.prototype.recipient;
/** @type {string|undefined} */
AddressErrors.prototype.region;
/** @type {string|undefined} */
AddressErrors.prototype.sortingCode;

/**
 * @record
 * @see https://w3c.github.io/payment-request/#paymentshippingoption-dictionary
 */
function PaymentShippingOption() {};
/** @type {string} */
PaymentShippingOption.prototype.id;
/** @type {string} */
PaymentShippingOption.prototype.label;
/** @type {!PaymentCurrencyAmount} */
PaymentShippingOption.prototype.amount;
/** @type {boolean|undefined} */
PaymentShippingOption.prototype.selected;

/**
 * @constructor
 * @implements {EventTarget}
 * @see https://w3c.github.io/payment-request/#paymentresponse-interface
 */
function PaymentResponse() {}
/**
 * @return {!Object}
 * @override
 */
PaymentResponse.prototype.toJSON = function() {};
/** @const {string} */
PaymentResponse.prototype.requestId;
/** @const {string} */
PaymentResponse.prototype.methodName;
/** @const {!Object} */
PaymentResponse.prototype.details;
/** @const {?PaymentAddress} */
PaymentResponse.prototype.shippingAddress;
/** @const {?string} */
PaymentResponse.prototype.shippingOption;
/** @const {?string} */
PaymentResponse.prototype.payerName;
/** @const {?string} */
PaymentResponse.prototype.payerEmail;
/** @const {?string} */
PaymentResponse.prototype.payerPhone;
/**
 * @param {string=} result
 * @return {!Promise<undefined>}
 */
PaymentResponse.prototype.complete = function(result) {};
/**
 * @param {!PaymentValidationErrors=} errorFields
 * @return {!Promise<undefined>}
 */
PaymentResponse.prototype.retry = function(errorFields) {};
/** @type {?function(!Event)} */
PaymentResponse.prototype.onpayerdetailchange;

/**
 * @record
 * @see https://w3c.github.io/payment-request/#paymentvalidationerrors-dictionary
 */
function PaymentValidationErrors() {};
/** @type {!PayerErrors|undefined} */
PaymentValidationErrors.prototype.payer;
/** @type {!AddressErrors|undefined} */
PaymentValidationErrors.prototype.shippingAddress;
/** @type {string|undefined} */
PaymentValidationErrors.prototype.error;
/** @type {!Object|undefined} */
PaymentValidationErrors.prototype.paymentMethod;

/**
 * @record
 * @see https://w3c.github.io/payment-request/#payererrors-dictionary
 */
function PayerErrors() {};
/** @type {string|undefined} */
PayerErrors.prototype.email;
/** @type {string|undefined} */
PayerErrors.prototype.name;
/** @type {string|undefined} */
PayerErrors.prototype.phone;

/**
 * @constructor
 * @param {string} type
 * @param {!MerchantValidationEventInit=} eventInitDict
 * @extends {Event}
 * @see https://w3c.github.io/payment-request/#merchantvalidationevent-interface
 */
function MerchantValidationEvent(type, eventInitDict) {};
/** @const {string} */
MerchantValidationEvent.prototype.methodName;
/** @const {string} */
MerchantValidationEvent.prototype.validationURL;
/**
 * @param {!Promise<undefined>} merchantSessionPromise
 * @return {undefined}
 */
MerchantValidationEvent.prototype.complete = function(
    merchantSessionPromise) {};

/**
 * @extends {EventInit}
 * @record
 * @see https://w3c.github.io/payment-request/#merchantvalidationeventinit-dictionary
 */
function MerchantValidationEventInit() {};
/** @type {string|undefined} */
MerchantValidationEventInit.prototype.methodName;
/** @type {string|undefined} */
MerchantValidationEventInit.prototype.validationURL;

/**
 * @constructor
 * @param {string} type
 * @param {!PaymentMethodChangeEventInit=} eventInitDict
 * @extends {PaymentRequestUpdateEvent}
 * @see https://w3c.github.io/payment-request/#paymentmethodchangeevent-interface
 */
function PaymentMethodChangeEvent(type, eventInitDict) {};
/** @const {string} */
PaymentMethodChangeEvent.prototype.methodName;
/** @const {?Object} */
PaymentMethodChangeEvent.prototype.methodDetails;

/**
 * @extends {PaymentRequestUpdateEventInit}
 * @record
 * @see https://w3c.github.io/payment-request/#paymentmethodchangeeventinit-dictionary
 */
function PaymentMethodChangeEventInit() {};
/** @type {string|undefined} */
PaymentMethodChangeEventInit.prototype.methodName;
/** @type {?Object|undefined} */
PaymentMethodChangeEventInit.prototype.methodDetails;

/**
 * @constructor
 * @param {string} type
 * @param {!PaymentRequestUpdateEventInit=} eventInitDict
 * @extends {Event}
 * @see https://w3c.github.io/payment-request/#paymentrequestupdateevent-interface
 */
function PaymentRequestUpdateEvent(type, eventInitDict) {};
/**
 * @param {!Promise<!PaymentDetailsUpdate>} detailsPromise
 * @return {undefined}
 */
PaymentRequestUpdateEvent.prototype.updateWith = function(detailsPromise) {};

/**
 * @extends {EventInit}
 * @record
 * @see https://w3c.github.io/payment-request/#paymentrequestupdateeventinit-dictionary
 */
function PaymentRequestUpdateEventInit() {};
/*
 * Copyright 2015 The Closure Compiler Authors
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/**
 * @fileoverview Definitions for W3C's Permissions API.
 * @see https://w3c.github.io/permissions/
 *
 * @externs
 */


/**
 * @typedef {{name: PermissionName}}
 * @see https://w3c.github.io/permissions/#permission-descriptor
 */
var PermissionDescriptor;


/**
 * @typedef {{name: PermissionName, userVisibleOnly: boolean}}
 * @see https://w3c.github.io/permissions/#push
 */
var PushPermissionDescriptor;


/**
 * @typedef {{name: PermissionName, sysex: boolean}}
 * @see https://w3c.github.io/permissions/#midi
 */
var MidiPermissionDescriptor;


/**
 * Set of possible values: 'geolocation', 'notifications', 'push', 'midi'.
 * @typedef {string}
 * @see https://w3c.github.io/permissions/#idl-def-PermissionName
 */
var PermissionName;


/**
 * Set of possible values: 'granted', 'denied', 'prompt'.
 * @typedef {string}
 * @see https://w3c.github.io/permissions/#idl-def-PermissionState
 */
var PermissionState;


/**
 * @constructor
 * @implements {EventTarget}
 * @see https://w3c.github.io/permissions/#status-of-a-permission
 */
function PermissionStatus() {}

/** @type {PermissionState} */
PermissionStatus.prototype.state;

/**
 * @type {PermissionState}
 * @deprecated, use PermissionStatus.state for newer clients
 */
PermissionStatus.prototype.status;

/** @type {?function(!Event)} */
PermissionStatus.prototype.onchange;

/** @override */
PermissionStatus.prototype.addEventListener = function(
    type, listener, opt_options) {};

/** @override */
PermissionStatus.prototype.removeEventListener = function(
    type, listener, opt_options) {};

/** @override */
PermissionStatus.prototype.dispatchEvent = function(evt) {};


/**
 * @constructor
 * @see https://w3c.github.io/permissions/#idl-def-permissions
 */
function Permissions() {}

/**
 * @param {PermissionDescriptor} permission The permission to look up
 * @return {!Promise<!PermissionStatus>}
 * @see https://w3c.github.io/permissions/#dom-permissions-query
 */
Permissions.prototype.query = function(permission) {};


/** @type {Permissions} */
Navigator.prototype.permissions;
/*
 * Copyright 2021 The Closure Compiler Authors
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/**
 * @fileoverview Definitions for W3C's Permissions Policy API and Feature Policy API.
 * @see https://w3c.github.io/webappsec-permissions-policy/
 * @see https://developer.mozilla.org/en-US/docs/Web/HTTP/Feature_Policy
 *
 * @externs
 * @author zhengwe@google.com (Zheng Wei)
 */

/**
 * @interface
 * @see https://w3c.github.io/webappsec-permissions-policy/#the-policy-object
 */
function PermissionsPolicy() {}

/**
 * @param {string} feature
 * @param {string=} origin
 * @return {boolean}
 */
PermissionsPolicy.prototype.allowsFeature = function(feature, origin) {};

/**
 * @return {!Array<string>}
 */
PermissionsPolicy.prototype.features = function() {};

/**
 * @return {!Array<string>}
 */
PermissionsPolicy.prototype.allowedFeatures = function() {};

/**
 * @param {string} feature
 * @return {!Array<string>}
 */
PermissionsPolicy.prototype.getAllowlistForFeature = function(feature) {};

/**
 * @type {!PermissionsPolicy|undefined}
 */
Document.prototype.featurePolicy;

/**
 * @type {!PermissionsPolicy|undefined}
 * @see https://w3c.github.io/webappsec-permissions-policy/#the-policy-object
 */
Document.prototype.permissionsPolicy;

/**
 * @type {!PermissionsPolicy|undefined}
 * @see https://w3c.github.io/webappsec-permissions-policy/#the-policy-object
 */
HTMLIFrameElement.prototype.featurePolicy;

/**
 * @type {!PermissionsPolicy|undefined}
 * @see https://w3c.github.io/webappsec-permissions-policy/#the-policy-object
 */
HTMLIFrameElement.prototype.permissionsPolicy;


/*
 * Copyright 2014 The Closure Compiler Authors
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/**
 * @fileoverview Definitions for W3C's Pointer Events specification.
 *  Created from
 *   http://www.w3.org/TR/pointerevents/
 *
 * @externs
 */


/**
 * @type {string}
 * @see http://www.w3.org/TR/pointerevents/#the-touch-action-css-property
 */
CSSProperties.prototype.touchAction;

/**
 * @type {boolean}
 * @see http://www.w3.org/TR/pointerevents/#widl-Navigator-pointerEnabled
 */
Navigator.prototype.pointerEnabled;

/**
 * @type {number}
 * @see http://www.w3.org/TR/pointerevents/#widl-Navigator-maxTouchPoints
 */
Navigator.prototype.maxTouchPoints;


/**
 * @param {number} pointerId
 * @see https://www.w3.org/TR/pointerevents/#widl-Element-setPointerCapture-void-long-pointerId
 */
Element.prototype.setPointerCapture = function(pointerId) {};

/**
 * @param {number} pointerId
 * @see https://www.w3.org/TR/pointerevents/#widl-Element-releasePointerCapture-void-long-pointerId
 */
Element.prototype.releasePointerCapture = function(pointerId) {};

/**
 * @param {number} pointerId
 * @see https://www.w3.org/TR/pointerevents/#dom-element-haspointercapture
 * @return {boolean}
 */
Element.prototype.hasPointerCapture = function(pointerId) {};


/**
 * @record
 * @extends {MouseEventInit}
 * @see https://www.w3.org/TR/pointerevents/#idl-def-PointerEventInit
 */
function PointerEventInit() {}

/** @type {undefined|number} */
PointerEventInit.prototype.pointerId;

/** @type {undefined|number} */
PointerEventInit.prototype.width;

/** @type {undefined|number} */
PointerEventInit.prototype.height;

/** @type {undefined|number} */
PointerEventInit.prototype.pressure;

/** @type {undefined|number} */
PointerEventInit.prototype.tiltX;

/** @type {undefined|number} */
PointerEventInit.prototype.tiltY;

/** @type {undefined|string} */
PointerEventInit.prototype.pointerType;

/** @type {undefined|boolean} */
PointerEventInit.prototype.isPrimary;

/**
 * @constructor
 * @extends {MouseEvent}
 * @param {string} type
 * @param {PointerEventInit=} opt_eventInitDict
 * @see http://www.w3.org/TR/pointerevents/#pointerevent-interface
 */
function PointerEvent(type, opt_eventInitDict) {}

/** @type {number} */
PointerEvent.prototype.pointerId;

/** @type {number} */
PointerEvent.prototype.width;

/** @type {number} */
PointerEvent.prototype.height;

/** @type {number} */
PointerEvent.prototype.pressure;

/** @type {number} */
PointerEvent.prototype.tiltX;

/** @type {number} */
PointerEvent.prototype.tiltY;

/** @type {string} */
PointerEvent.prototype.pointerType;

/** @type {boolean} */
PointerEvent.prototype.isPrimary;

// Microsoft pointerType values
/** @const {string} */
PointerEvent.prototype.MSPOINTER_TYPE_TOUCH;

/** @const {string} */
PointerEvent.prototype.MSPOINTER_TYPE_PEN;

/** @const {string} */
PointerEvent.prototype.MSPOINTER_TYPE_MOUSE;

/**
 * @see https://w3c.github.io/pointerevents/extension.html
 * @return {!Array<!PointerEvent>}
 */
PointerEvent.prototype.getCoalescedEvents = function() {};

/*
 * Copyright 2015 The Closure Compiler Authors
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/**
 * @fileoverview Definitions for W3C's Pointer Lock API.
 * @see https://w3c.github.io/pointerlock/
 *
 * @externs
 */

/**
 * TODO(bradfordcsmith): update the link when PR is merged
 * @see https://github.com/w3c/pointerlock/pull/49/
 * @record
 */
function PointerLockOptions() {}

/** @type {undefined|boolean} */
PointerLockOptions.prototype.unadjustedMovement;

/**
 * @see https://w3c.github.io/pointerlock/#widl-Element-requestPointerLock-void
 * @param {!PointerLockOptions=} options
 * @return {void|!Promise<void>}
 */
Element.prototype.requestPointerLock = function(options) {};

/**
 * @see https://w3c.github.io/pointerlock/#widl-Document-pointerLockElement
 * @type {?Element}
 */
Document.prototype.pointerLockElement;

/**
 * @see https://w3c.github.io/pointerlock/#widl-Document-exitPointerLock-void
 * @return {void}
 */
Document.prototype.exitPointerLock = function() {};

/**
 * @see https://w3c.github.io/pointerlock/#widl-MouseEvent-movementX
 * @type {number}
 */
MouseEvent.prototype.movementX;

/**
 * @see https://w3c.github.io/pointerlock/#widl-MouseEvent-movementY
 * @type {number}
 */
MouseEvent.prototype.movementY;
/*
 * Copyright 2008 The Closure Compiler Authors
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/**
 * @fileoverview Definitions for W3C's range specification.
 *  This file depends on w3c_dom2.js.
 *  The whole file has been fully type annotated.
 *  Created from
 *   http://www.w3.org/TR/DOM-Level-2-Traversal-Range/ranges.html
 *
 * @externs
 * @author stevey@google.com (Steve Yegge)
 */


/**
 * @constructor
 * @see http://www.w3.org/TR/DOM-Level-2-Traversal-Range/ranges.html#Level-2-Range-Interface
 */
function Range() {}

// constants on the constructor

/**
 * @const {number}
 * @see http://www.w3.org/TR/DOM-Level-2-Traversal-Range/ranges.html#Level2-Range-compareHow
 */
Range.START_TO_START;

/**
 * @const {number}
 * @see http://www.w3.org/TR/DOM-Level-2-Traversal-Range/ranges.html#Level2-Range-compareHow
 */
Range.START_TO_END;

/**
 * @const {number}
 * @see http://www.w3.org/TR/DOM-Level-2-Traversal-Range/ranges.html#Level2-Range-compareHow
 */
Range.END_TO_END;

/**
 * @const {number}
 * @see http://www.w3.org/TR/DOM-Level-2-Traversal-Range/ranges.html#Level2-Range-compareHow
 */
Range.END_TO_START;

// constants repeated on the prototype

/**
 * @const {number}
 * @see http://www.w3.org/TR/DOM-Level-2-Traversal-Range/ranges.html#Level2-Range-compareHow
 */
Range.prototype.START_TO_START;

/**
 * @const {number}
 * @see http://www.w3.org/TR/DOM-Level-2-Traversal-Range/ranges.html#Level2-Range-compareHow
 */
Range.prototype.START_TO_END;

/**
 * @const {number}
 * @see http://www.w3.org/TR/DOM-Level-2-Traversal-Range/ranges.html#Level2-Range-compareHow
 */
Range.prototype.END_TO_END;

/**
 * @const {number}
 * @see http://www.w3.org/TR/DOM-Level-2-Traversal-Range/ranges.html#Level2-Range-compareHow
 */
Range.prototype.END_TO_START;

/**
 * @type {Node}
 * @see http://www.w3.org/TR/DOM-Level-2-Traversal-Range/ranges.html#Level-2-Range-attr-startParent
 */
Range.prototype.startContainer;

/**
 * @type {number}
 * @see http://www.w3.org/TR/DOM-Level-2-Traversal-Range/ranges.html#Level-2-Range-attr-startOffset
 */
Range.prototype.startOffset;

/**
 * @type {Node}
 * @see http://www.w3.org/TR/DOM-Level-2-Traversal-Range/ranges.html#Level-2-Range-attr-endParent
 */
Range.prototype.endContainer;

/**
 * @type {number}
 * @see http://www.w3.org/TR/DOM-Level-2-Traversal-Range/ranges.html#Level-2-Range-attr-endOffset
 */
Range.prototype.endOffset;

/**
 * @type {boolean}
 * @see http://www.w3.org/TR/DOM-Level-2-Traversal-Range/ranges.html#Level-2-Range-attr-collapsed
 */
Range.prototype.collapsed;

/**
 * @type {Node}
 * @see http://www.w3.org/TR/DOM-Level-2-Traversal-Range/ranges.html#Level-2-Range-attr-commonParent
 */
Range.prototype.commonAncestorContainer;

/**
 * @param {Node} refNode
 * @param {number} offset
 * @return {undefined}
 * @see http://www.w3.org/TR/DOM-Level-2-Traversal-Range/ranges.html#Level2-Range-method-setStart
 */
Range.prototype.setStart = function(refNode, offset) {};

/**
 * @param {Node} refNode
 * @param {number} offset
 * @return {undefined}
 * @see http://www.w3.org/TR/DOM-Level-2-Traversal-Range/ranges.html#Level2-Range-method-setEnd
 */
Range.prototype.setEnd = function(refNode, offset) {};

/**
 * @param {Node} refNode
 * @return {undefined}
 * @see http://www.w3.org/TR/DOM-Level-2-Traversal-Range/ranges.html#Level2-Range-setStartBefore
 */
Range.prototype.setStartBefore = function(refNode) {};

/**
 * @param {Node} refNode
 * @return {undefined}
 * @see http://www.w3.org/TR/DOM-Level-2-Traversal-Range/ranges.html#Level2-Range-method-setStartAfter
 */
Range.prototype.setStartAfter = function(refNode) {};

/**
 * @param {Node} refNode
 * @return {undefined}
 * @see http://www.w3.org/TR/DOM-Level-2-Traversal-Range/ranges.html#Level2-Range-method-setEndBefore
 */
Range.prototype.setEndBefore = function(refNode) {};

/**
 * @param {Node} refNode
 * @return {undefined}
 * @see http://www.w3.org/TR/DOM-Level-2-Traversal-Range/ranges.html#Level2-Range-method-setEndAfter
 */
Range.prototype.setEndAfter = function(refNode) {};

/**
 * @param {boolean} toStart
 * @return {undefined}
 * @see http://www.w3.org/TR/DOM-Level-2-Traversal-Range/ranges.html#Level2-Range-method-collapse
 */
Range.prototype.collapse = function(toStart) {};

/**
 * @param {Node} refNode
 * @return {undefined}
 * @see http://www.w3.org/TR/DOM-Level-2-Traversal-Range/ranges.html#Level2-Range-method-selectNode
 */
Range.prototype.selectNode = function(refNode) {};

/**
 * @param {Node} refNode
 * @return {undefined}
 * @see http://www.w3.org/TR/DOM-Level-2-Traversal-Range/ranges.html#Level2-Range-method-selectNodeContents
 */
Range.prototype.selectNodeContents = function(refNode) {};

/**
 * @param {number} how
 * @param {Range} sourceRange
 * @return {number}
 * @see http://www.w3.org/TR/DOM-Level-2-Traversal-Range/ranges.html#Level2-Range-method-compareBoundaryPoints
 */
Range.prototype.compareBoundaryPoints = function(how, sourceRange) {};

/**
 * @return {number}
 * @see http://www.w3.org/TR/DOM-Level-2-Traversal-Range/ranges.html#Level2-Range-method-deleteContents
 */
Range.prototype.deleteContents = function() {};

/**
 * @return {DocumentFragment}
 * @see http://www.w3.org/TR/DOM-Level-2-Traversal-Range/ranges.html#Level2-Range-method-extractContents
 */
Range.prototype.extractContents = function() {};

/**
 * @return {DocumentFragment}
 * @see http://www.w3.org/TR/DOM-Level-2-Traversal-Range/ranges.html#Level2-Range-method-cloneContents
 */
Range.prototype.cloneContents = function() {};

/**
 * @param {Node} newNode
 * @return {DocumentFragment}
 * @see http://www.w3.org/TR/DOM-Level-2-Traversal-Range/ranges.html#Level2-Range-method-insertNode
 */
Range.prototype.insertNode = function(newNode) {};

/**
 * @param {Node} newParent
 * @return {undefined}
 * @see http://www.w3.org/TR/DOM-Level-2-Traversal-Range/ranges.html#Level2-Range-method-surroundContents
 */
Range.prototype.surroundContents = function(newParent) {};

/**
 * @return {Range}
 * @see http://www.w3.org/TR/DOM-Level-2-Traversal-Range/ranges.html#Level2-Range-method-clone
 */
Range.prototype.cloneRange = function() {};

/**
 * @return {undefined}
 * @see http://www.w3.org/TR/DOM-Level-2-Traversal-Range/ranges.html#Level2-Range-method-detach
 */
Range.prototype.detach = function() {};

// Introduced in DOM Level 2:
/**
 * @interface
 * @see http://www.w3.org/TR/DOM-Level-2-Traversal-Range/ranges.html#Level-2-DocumentRange-idl
 */
function DocumentRange() {}

/**
 * @return {Range}
 * @see http://www.w3.org/TR/DOM-Level-2-Traversal-Range/ranges.html#Level2-DocumentRange-method-createRange
 */
DocumentRange.prototype.createRange = function() {};
/*
 * Copyright 2018 The Closure Compiler Authors
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/**
 * @fileoverview Definitions for W3C's referrer policy specification.
 * @see https://w3c.github.io/webappsec-referrer-policy/#referrer-policy-delivery
 * @externs
 */

/** @type {string} */
HTMLAnchorElement.prototype.referrerPolicy;

/** @type {string} */
HTMLAreaElement.prototype.referrerPolicy;

/** @type {string} */
HTMLImageElement.prototype.referrerPolicy;

/** @type {string} */
HTMLIFrameElement.prototype.referrerPolicy;

/** @type {string} */
HTMLLinkElement.prototype.referrerPolicy;
/*
 * Copyright 2015 The Closure Compiler Authors
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/**
 * @fileoverview Definitions for cooperative scheduling of background tasks in
 * the browser. This spec is still very likely to change.
 *
 * @see https://w3c.github.io/requestidlecallback/
 * @see https://developers.google.com/web/updates/2015/08/27/using-requestidlecallback?hl=en
 * @externs
 */


/**
 * @typedef {{
 *   timeout: (number|undefined)
 * }}
 */
var IdleCallbackOptions;


/**
 * Schedules a callback to run when the browser is idle.
 * @param {function(!IdleDeadline): void} callback Called when the browser is idle.
 * @param {number|IdleCallbackOptions=} opt_options If set, gives the browser a time in ms by which
 *     it must execute the callback. No timeout enforced otherwise.
 * @return {number} A handle that can be used to cancel the scheduled callback.
 */
function requestIdleCallback(callback, opt_options) {}


/**
 * Cancels a callback scheduled to run when the browser is idle.
 * @param {number} handle The handle returned by `requestIdleCallback` for
 *     the scheduled callback to cancel.
 * @return {undefined}
 */
function cancelIdleCallback(handle) {}



/**
 * An interface for an object passed into the callback for
 * `requestIdleCallback` that remains up-to-date on the amount of idle
 * time left in the current time slice.
 * @interface
 */
function IdleDeadline() {}


/**
 * @return {number} The amount of idle time (milliseconds) remaining in the
 *     current time slice. Will always be positive or 0.
 */
IdleDeadline.prototype.timeRemaining = function() {};


/**
 * Whether the callback was forced to run due to a timeout. Specifically,
 * whether the callback was invoked by the idle callback timeout algorithm:
 * https://w3c.github.io/requestidlecallback/#dfn-invoke-idle-callback-timeout-algorithm
 * @type {boolean}
 */
IdleDeadline.prototype.didTimeout;
/*
 * Copyright 2012 The Closure Compiler Authors
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/**
 * @fileoverview Definitions for components of the WebRTC browser API.
 * @see https://www.w3.org/TR/webrtc/
 * @see https://tools.ietf.org/html/draft-ietf-rtcweb-jsep-19
 * @see https://developer.mozilla.org/en-US/docs/Web/API/WebRTC_API
 * @see https://www.w3.org/TR/mediacapture-streams/
 *
 * @externs
 * @author bemasc@google.com (Benjamin M. Schwartz)
 */

/**
 * @typedef {string}
 * @see {https://www.w3.org/TR/mediacapture-streams/
 *     #idl-def-MediaStreamTrackState}
 * In WebIDL this is an enum with values 'live', 'mute', and 'ended',
 * but there is no mechanism in Closure for describing a specialization of
 * the string type.
 */
var MediaStreamTrackState;

/**
 * @interface
 */
function SourceInfo() {}

/** @const {string} */
SourceInfo.prototype.kind;

/** @const {string} */
SourceInfo.prototype.id;

/** @const {?string} */
SourceInfo.prototype.label;

/** @const {boolean} */
SourceInfo.prototype.facing;

/**
 * @interface
 * @see https://w3c.github.io/mediacapture-image/#mediasettingsrange-section
 */
function MediaSettingsRange() {}

/**
 * @const {number}
 */
MediaSettingsRange.prototype.max;

/**
 * @const {number}
 */
MediaSettingsRange.prototype.min;

/**
 * @const {number}
 */
MediaSettingsRange.prototype.step;

/**
 * @interface
 * @see https://www.w3.org/TR/mediacapture-streams/#idl-def-MediaTrackCapabilities
 * @see https://w3c.github.io/mediacapture-image/#mediatrackcapabilities-section
 */
function MediaTrackCapabilities() {}

/** @type {number} */
MediaTrackCapabilities.prototype.width;

/** @type {number} */
MediaTrackCapabilities.prototype.height;

/** @type {number} */
MediaTrackCapabilities.prototype.aspectRatio;

/** @type {number} */
MediaTrackCapabilities.prototype.frameRate;

/** @type {!Array<string>} */
MediaTrackCapabilities.prototype.facingMode;

/** @type {number} */
MediaTrackCapabilities.prototype.volume;

/** @type {number} */
MediaTrackCapabilities.prototype.sampleRate;

/** @type {number} */
MediaTrackCapabilities.prototype.sampleSize;

/** @type {!Array<boolean>} */
MediaTrackCapabilities.prototype.echoCancellation;

/** @type {number} */
MediaTrackCapabilities.prototype.latency;

/** @type {number} */
MediaTrackCapabilities.prototype.channelCount;

/** @type {string} */
MediaTrackCapabilities.prototype.deviceId;

/** @type {string} */
MediaTrackCapabilities.prototype.groupId;

/** @type {!Array<string>} */
MediaTrackCapabilities.prototype.whiteBalanceMode;

/** @type {!Array<string>} */
MediaTrackCapabilities.prototype.exposureMode;

/** @type {!Array<string>} */
MediaTrackCapabilities.prototype.focusMode;

/** @type {!MediaSettingsRange} */
MediaTrackCapabilities.prototype.exposureCompensation;

/** @type {!MediaSettingsRange} */
MediaTrackCapabilities.prototype.colorTemperature

/** @type {!MediaSettingsRange} */
MediaTrackCapabilities.prototype.iso

/** @type {!MediaSettingsRange} */
MediaTrackCapabilities.prototype.brightness

/** @type {!MediaSettingsRange} */
MediaTrackCapabilities.prototype.contrast

/** @type {!MediaSettingsRange} */
MediaTrackCapabilities.prototype.saturation

/** @type {!MediaSettingsRange} */
MediaTrackCapabilities.prototype.sharpness

/** @type {!MediaSettingsRange} */
MediaTrackCapabilities.prototype.zoom

/** @type {boolean} */
MediaTrackCapabilities.prototype.torch

/**
 * @interface
 * @see https://www.w3.org/TR/mediacapture-streams/#media-track-settings
 * @see https://w3c.github.io/mediacapture-image/#mediatracksettings-section
 */
function MediaTrackSettings() {}

/** @type {number} */
MediaTrackSettings.prototype.width;

/** @type {number} */
MediaTrackSettings.prototype.height;

/** @type {number} */
MediaTrackSettings.prototype.aspectRatio;

/** @type {number} */
MediaTrackSettings.prototype.frameRate;

/** @type {string} */
MediaTrackSettings.prototype.facingMode;

/** @type {number} */
MediaTrackSettings.prototype.volume;

/** @type {number} */
MediaTrackSettings.prototype.sampleRate;

/** @type {number} */
MediaTrackSettings.prototype.sampleSize;

/** @type {boolean} */
MediaTrackSettings.prototype.echoCancellation;

/** @type {number} */
MediaTrackSettings.prototype.latency;

/** @type {number} */
MediaTrackSettings.prototype.channelCount;

/** @type {string} */
MediaTrackSettings.prototype.deviceId;

/** @type {string} */
MediaTrackSettings.prototype.groupId;

/** @type {string} */
MediaTrackSettings.prototype.whiteBalanceMode;

/** @type {string} */
MediaTrackSettings.prototype.exposureMode;

/** @type {string} */
MediaTrackSettings.prototype.focusMode;

/** @type {!Array<{x: number, y: number}>} */
MediaTrackSettings.prototype.pointsOfInterest;

/** @type {number} */
MediaTrackSettings.prototype.exposureCompensation;

/** @type {number} */
MediaTrackSettings.prototype.colorTemperature

/** @type {number} */
MediaTrackSettings.prototype.iso

/** @type {number} */
MediaTrackSettings.prototype.brightness

/** @type {number} */
MediaTrackSettings.prototype.contrast

/** @type {number} */
MediaTrackSettings.prototype.saturation

/** @type {number} */
MediaTrackSettings.prototype.sharpness

/** @type {number} */
MediaTrackSettings.prototype.zoom

/** @type {boolean} */
MediaTrackSettings.prototype.torch


/**
 * @interface
 * @see https://w3c.github.io/mediacapture-main/#media-track-supported-constraints
 */
function MediaTrackSupportedConstraints() {}

/** @type {boolean|undefined} */
MediaTrackSupportedConstraints.prototype.width;

/** @type {boolean|undefined} */
MediaTrackSupportedConstraints.prototype.height;

/** @type {boolean|undefined} */
MediaTrackSupportedConstraints.prototype.aspectRatio;

/** @type {boolean|undefined} */
MediaTrackSupportedConstraints.prototype.frameRate;

/** @type {boolean|undefined} */
MediaTrackSupportedConstraints.prototype.facingMode;

/** @type {boolean|undefined} */
MediaTrackSupportedConstraints.prototype.volume;

/** @type {boolean|undefined} */
MediaTrackSupportedConstraints.prototype.sampleRate;

/** @type {boolean|undefined} */
MediaTrackSupportedConstraints.prototype.sampleSize;

/** @type {boolean|undefined} */
MediaTrackSupportedConstraints.prototype.echoCancellation;

/** @type {boolean|undefined} */
MediaTrackSupportedConstraints.prototype.autoGainControl;

/** @type {boolean|undefined} */
MediaTrackSupportedConstraints.prototype.noiseSuppression;

/** @type {boolean|undefined} */
MediaTrackSupportedConstraints.prototype.latency;

/** @type {boolean|undefined} */
MediaTrackSupportedConstraints.prototype.channelCount;

/** @type {boolean|undefined} */
MediaTrackSupportedConstraints.prototype.deviceId;

/** @type {boolean|undefined} */
MediaTrackSupportedConstraints.prototype.groupId;


/**
 * @interface
 * @extends {EventTarget}
 * @see https://www.w3.org/TR/mediacapture-streams/#mediastreamtrack
 */
function MediaStreamTrack() {}

/**
 * @const {string}
 */
MediaStreamTrack.prototype.kind;

/**
 * @const {string}
 */
MediaStreamTrack.prototype.id;

/**
 * @const {string}
 */
MediaStreamTrack.prototype.label;

/**
 * @type {boolean}
 */
MediaStreamTrack.prototype.enabled;

/**
 * @const {boolean}
 */
MediaStreamTrack.prototype.muted;

/**
 * @type {string}
 * @see https://crbug.com/653531
 * @see https://wicg.github.io/mst-content-hint/
 */
MediaStreamTrack.prototype.contentHint;

/**
 * @const {boolean}
 */
MediaStreamTrack.prototype.remote;

/**
 * @type {MediaStreamTrackState}
 * Read only.
 */
MediaStreamTrack.prototype.readyState;

/**
 * @type {?function(!Event)}
 */
MediaStreamTrack.prototype.onmute;

/**
 * @type {?function(!Event)}
 */
MediaStreamTrack.prototype.onunmute;

/**
 * @type {?function(!Event)}
 */
MediaStreamTrack.prototype.onended;

/**
 * @type {?function(!Event)}
 */
MediaStreamTrack.prototype.onoverconstrained;

/**
 * Applies the specified set of constraints to the track, if any specified; or
 * if no constraints are specified, removes all constraints from the track.
 *
 * @param {MediaTrackConstraints=} constraints Constraints to apply to the
 *   track.
 * @return {!Promise<void>} A |Promise| that is resolved when the constraints
 *   have been applied, or rejected if there was an error applying the
 *   constraints.
 */
MediaStreamTrack.prototype.applyConstraints = function(constraints) {};

/**
 * @return {!MediaStreamTrack}
 */
MediaStreamTrack.prototype.clone = function() {};

/** @return {void} */
MediaStreamTrack.prototype.stop = function() {};

/** @return {!MediaTrackCapabilities} */
MediaStreamTrack.prototype.getCapabilities = function() {};

/** @return {!MediaTrackConstraints} */
MediaStreamTrack.prototype.getConstraints = function() {};

/** @return {!MediaTrackSettings} */
MediaStreamTrack.prototype.getSettings = function() {};

/**
 * @typedef {{track: MediaStreamTrack}}
 */
var MediaStreamTrackEventInit;


/**
 * @param {string} type
 * @param {!MediaStreamTrackEventInit} eventInitDict
 * @constructor
 * @extends {Event}
 * @see https://www.w3.org/TR/mediacapture-streams/#mediastreamtrackevent
 */
function MediaStreamTrackEvent(type, eventInitDict) {}

/**
 * @const {!MediaStreamTrack}
 */
MediaStreamTrackEvent.prototype.track;

/**
 * @param {!MediaStream|!Array<!MediaStreamTrack>=} streamOrTracks
 * @constructor
 * @implements {EventTarget}
 * @see https://www.w3.org/TR/mediacapture-streams/#mediastream
 */
function MediaStream(streamOrTracks) {}

/**
 * @override
 */
MediaStream.prototype.addEventListener = function(type, listener,
    opt_useCapture) {};

/**
 * @override
 */
MediaStream.prototype.removeEventListener = function(type, listener,
    opt_useCapture) {};

/**
 * @override
 * @return {boolean}
 */
MediaStream.prototype.dispatchEvent = function(evt) {};

/**
 * TODO(bemasc): Remove this property.
 * @deprecated
 * @const {string}
 */
MediaStream.prototype.label;

/**
 * @const {string}
 */
MediaStream.prototype.id;

/**
 * @return {!Array<!MediaStreamTrack>}
 */
MediaStream.prototype.getAudioTracks = function() {};

/**
 * @return {!Array<!MediaStreamTrack>}
 */
MediaStream.prototype.getVideoTracks = function() {};

/**
 * @return {!Array<!MediaStreamTrack>}
 */
MediaStream.prototype.getTracks = function() {};

/**
 * @param {string} trackId
 * @return {MediaStreamTrack}
 */
MediaStream.prototype.getTrackById = function(trackId) {};

/**
 * @param {!MediaStreamTrack} track
 * @return {undefined}
 */
MediaStream.prototype.addTrack = function(track) {};

/**
 * @param {!MediaStreamTrack} track
 * @return {undefined}
 */
MediaStream.prototype.removeTrack = function(track) {};

/**
 * @return {!MediaStream}
 */
MediaStream.prototype.clone = function() {};

/**
 * @deprecated
 * @type {boolean}
 */
MediaStream.prototype.ended;

/**
 * @deprecated
 * @type {?function(!Event)}
 */
MediaStream.prototype.onended;

/**
 * @type {boolean}
 */
MediaStream.prototype.active;

/**
 * @type {?function(!Event)}
 */
MediaStream.prototype.onactive;

/**
 * @type {?function(!Event)}
 */
MediaStream.prototype.oninactive;

/**
 * @type {?function(!MediaStreamTrackEvent)}
 */
MediaStream.prototype.onaddtrack;

/**
 * @type {?function(!MediaStreamTrackEvent)}
 */
MediaStream.prototype.onremovetrack;

/**
 * @deprecated
 * TODO(bemasc): Remove this method once browsers have updated to
 * MediaStreamTrack.stop().
 * @return {undefined}
 */
MediaStream.prototype.stop = function() {};

/**
 * @typedef {{tone: string}}
 * @see https://www.w3.org/TR/webrtc/#dom-rtcdtmftonechangeeventinit
 */
var RTCDTMFToneChangeEventInit;


/**
 * @param {string} type
 * @param {!RTCDTMFToneChangeEventInit} eventInitDict
 * @constructor
 * @extends {Event}
 * @see https://www.w3.org/TR/webrtc/#dom-rtcdtmftonechangeevent
 */
function RTCDTMFToneChangeEvent(type, eventInitDict) {}

/**
 * @const {string}
 */
RTCDTMFToneChangeEvent.prototype.tone;


/**
 * @interface
 * @see https://www.w3.org/TR/webrtc/#rtcdtmfsender
 */
function RTCDTMFSender() {}

/**
 * @param {string} tones
 * @param {number=} opt_duration
 * @param {number=} opt_interToneGap
 */
RTCDTMFSender.prototype.insertDTMF =
    function(tones, opt_duration, opt_interToneGap) {};

/**
 * @type {?boolean}
 */
RTCDTMFSender.prototype.canInsertDTMF;

/**
 * @type {?function(!RTCDTMFToneChangeEvent)}
 */
RTCDTMFSender.prototype.ontonechange;

/**
 * @const {string}
 */
RTCDTMFSender.prototype.toneBuffer;


/**
 * @typedef {{
 *   mimeType: string,
 *   clockRate: number,
 *   channels: (number|undefined),
 *   sdpFmtpLine: (string|undefined),
 * }}
 *
 * @see https://www.w3.org/TR/webrtc/#dom-rtcrtpcodeccapability
 */
var RTCRtpCodecCapability;


/**
 * @typedef {{
 *   uri: string,
 * }}
 *
 * @see https://www.w3.org/TR/webrtc/#dom-rtcrtpheaderextensioncapability
 */
var RTCRtpHeaderExtensionCapability;


/**
 * @typedef {{
 *   codecs: !Array<!RTCRtpCodecCapability>,
 *   headerExtensions: !Array<!RTCRtpHeaderExtensionCapability>,
 * }}
 *
 * @see https://www.w3.org/TR/webrtc/#dom-rtcrtpcapabilities
 */
var RTCRtpCapabilities;


/**
 * @constructor
 * @see https://www.w3.org/TR/webrtc/#rtcrtpsender-interface
 */
function RTCRtpSender() {}

/**
 * @const {!RTCDTMFSender}
 */
RTCRtpSender.prototype.dtmf;

/**
 * @const {!MediaStreamTrack}
 */
RTCRtpSender.prototype.track;

/**
 * @param {?MediaStreamTrack} track
 * @return {!Promise<void>}
 * @see https://www.w3.org/TR/webrtc/#dom-rtcrtpsender
 */
RTCRtpSender.prototype.replaceTrack = function(track) {};


/**
 * @return {!RTCRtpSendParameters}
 */
RTCRtpSender.prototype.getParameters = function() {};


/**
 * @param {!RTCRtpSendParameters} params
 * @return {!Promise<undefined>}
 */
RTCRtpSender.prototype.setParameters = function(params) {};


/**
 * @return {!Promise<!RTCStatsReport>}
 */
RTCRtpSender.prototype.getStats = function() {};

/**
 * @param {string} kind
 * @return {?RTCRtpCapabilities}
 */
RTCRtpSender.getCapabilities = function(kind) {};


/**
 * @record
 * @see https://www.w3.org/TR/webrtc/#dom-rtcrtpsendparameters
 */
function RTCRtpSendParameters() {}

/**
 * @type {string|undefined}
 */
RTCRtpSendParameters.prototype.transactionId;

/**
 * @type {!Array<!RTCRtpEncodingParameters>}
 */
RTCRtpSendParameters.prototype.encodings;

/**
 * Possible string values are "maintain-framerate", "maintain-resolution", and
 * "balanced".
 * @type {string|undefined}
 */
RTCRtpSendParameters.prototype.degradationPreference;


/**
 * @interface
 * @see https://www.w3.org/TR/webrtc/#dom-rtcrtpcontributingsource
 */
function RTCRtpContributingSource() {}

/**
 * @type {?number}
 */
RTCRtpContributingSource.prototype.source;

/**
 * @type {?Date|number}
 */
RTCRtpContributingSource.prototype.timestamp;

/**
 * @type {number|undefined}
 */
RTCRtpContributingSource.prototype.audioLevel;

/**
 * This is a relatively new field and browsers may not yet be compliant to the
 * spec.
 * @type {?number}
 * @see https://w3c.github.io/webrtc-pc/#dom-rtcrtpcontributingsource-rtptimestamp
 */
RTCRtpContributingSource.prototype.rtpTimestamp;

/**
 * This is a relatively new field and browsers may not yet be compliant to the
 * spec.
 * @type {number|undefined}
 * @see https://w3c.github.io/webrtc-extensions/#dictionary-rtcrtpcontributingsource-members
 */
RTCRtpContributingSource.prototype.captureTimestamp;

/**
 * @constructor
 * @see https://www.w3.org/TR/webrtc/#rtcrtpreceiver-interface
 */
function RTCRtpReceiver() {}

/**
 * @const {!MediaStreamTrack}
 */
RTCRtpReceiver.prototype.track;

/**
 * @return {!Array<!RTCRtpContributingSource>}
 */
RTCRtpReceiver.prototype.getContributingSources = function() {};

/**
 * @return {!Array<!RTCRtpContributingSource>}
 */
RTCRtpReceiver.prototype.getSynchronizationSources = function() {};


/**
 * @return {!Promise<!RTCStatsReport>}
 */
RTCRtpReceiver.prototype.getStats = function() {};

/**
 * Chrome exclusive hint to control jitter buffer delay. Measured in seconds.
 * @see https://henbos.github.io/webrtc-extensions/#dfn-playoutdelayhint
 * @type {?number|undefined}
 */
RTCRtpReceiver.prototype.playoutDelayHint;

/**
 * Get most optimistic view of the capabilities of the system for sending media
 * of the given kind.
 * @see https://www.w3.org/TR/webrtc/#dom-rtcrtpreceiver-getcapabilities
 * @param {!string} kind Media kind: 'video' or 'audio'.
 * @return {!RTCRtpCapabilities}
 */
RTCRtpReceiver.getCapabilities = function(kind) {};

/**
 * @see https://www.w3.org/TR/webrtc/#dom-rtcrtptransceiverinit
 * @record
 */
function RTCRtpTransceiverInit() {}

/**
 * The direction of the `RTCRtpTransceiver`. Defaults to "sendrecv".
 * @type {?RTCRtpTransceiverDirection|undefined}
 */
RTCRtpTransceiverInit.prototype.direction;

/**
 * The streams to add to the tranceiver's sender.
 * @type {?Array<!MediaStream>|undefined}
 */
RTCRtpTransceiverInit.prototype.streams;

/**
 * @type {?Array<!RTCRtpEncodingParameters>|undefined}
 */
RTCRtpTransceiverInit.prototype.sendEncodings;

/**
 * @see https://www.w3.org/TR/webrtc/#dom-rtcrtpencodingparameters
 * @record
 */
function RTCRtpEncodingParameters() {}

/**
 * @type {?number|undefined}
 */
RTCRtpEncodingParameters.prototype.codecPayloadType;

/**
 * Possible values are "disabled" and "enabled".
 * @type {?string|undefined}
 */
RTCRtpEncodingParameters.prototype.dtx;

/**
 * @type {?boolean|undefined}
 */
RTCRtpEncodingParameters.prototype.active;

/**
 * Possible values are "very-low", "low" (default), "medium", and "high".
 * @type {?string|undefined}
 */
RTCRtpEncodingParameters.prototype.priority;

/**
 * Possible values are "very-low", "low" (default), "medium", and "high".
 * @see https://w3c.github.io/webrtc-dscp-exp/
 * @type {?string|undefined}
 */
RTCRtpEncodingParameters.prototype.networkPriority;

/**
 * @type {?number|undefined}
 */
RTCRtpEncodingParameters.prototype.ptime;

/**
 * @type {?number|undefined}
 */
RTCRtpEncodingParameters.prototype.maxBitrate;

/**
 * @type {?number|undefined}
 */
RTCRtpEncodingParameters.prototype.maxFramerate;

/**
 * @type {?string|number}
 */
RTCRtpEncodingParameters.prototype.rid;

/**
 * @type {?number|number}
 */
RTCRtpEncodingParameters.prototype.scaleResolutionDownBy;

/**
 * @see https://w3c.github.io/webrtc-extensions/#dom-rtcrtpencodingparameters-adaptiveptime
 * @type {?boolean|undefined}
 */
RTCRtpEncodingParameters.prototype.adaptivePtime;

/**
 * @interface
 * @see https://www.w3.org/TR/webrtc/#rtcrtptransceiver-interface
 */
function RTCRtpTransceiver() {}

/**
 * @const {?string}
 */
RTCRtpTransceiver.prototype.mid;

/**
 * @const {boolean}
 */
RTCRtpTransceiver.prototype.stopped;

/**
 * @type {!RTCRtpTransceiverDirection}
 */
RTCRtpTransceiver.prototype.direction;

/**
 * @const {?RTCRtpTransceiverDirection}
 */
RTCRtpTransceiver.prototype.currentDirection;

/**
 * @param {!RTCRtpTransceiverDirection} direction
 */
RTCRtpTransceiver.prototype.setDirection = function(direction) {};

/**
 */
RTCRtpTransceiver.prototype.stop = function() {};

/**
 * @const {?RTCRtpSender}
 */
RTCRtpTransceiver.prototype.sender;

/**
 * @const {?RTCRtpReceiver}
 */
RTCRtpTransceiver.prototype.receiver;

/**
 * @param {!Array<!RTCRtpCodecCapability>} codecs
 */
RTCRtpTransceiver.prototype.setCodecPreferences = function(codecs) {};

/**
 * @see https://w3c.github.io/mediacapture-main/getusermedia.html#dom-longrange
 * @record
 */
function LongRange() {}

/**
 * @type {number|undefined}
 */
LongRange.prototype.max;

/**
 * @type {number|undefined}
 */
LongRange.prototype.min;

/**
 * @see https://w3c.github.io/mediacapture-main/getusermedia.html#dom-doublerange
 * @record
 */
function DoubleRange() {}

/**
 * @type {number|undefined}
 */
DoubleRange.prototype.max;

/**
 * @type {number|undefined}
 */
DoubleRange.prototype.min;


/**
 * @see https://w3c.github.io/mediacapture-main/getusermedia.html#dom-constrainbooleanparameters
 * @record
 */
function ConstrainBooleanParameters() {}

/**
 * @type {boolean|undefined}
 */
ConstrainBooleanParameters.prototype.exact;

/**
 * @type {boolean|undefined}
 */
ConstrainBooleanParameters.prototype.ideal;

/**
 * @see https://w3c.github.io/mediacapture-main/getusermedia.html#dom-constraindomstringparameters
 * @record
 */
function ConstrainDOMStringParameters() {}

/**
 * @type {string|Array<string>|undefined}
 */
ConstrainDOMStringParameters.prototype.exact;

/**
 * @type {string|Array<string>|undefined}
 */
ConstrainDOMStringParameters.prototype.ideal;

/**
 * @see https://w3c.github.io/mediacapture-main/getusermedia.html#dom-constraindoublerange
 * @record
 * @extends {DoubleRange}
 */
function ConstrainDoubleRange() {}

/**
 * @type {number|undefined}
 */
ConstrainDoubleRange.prototype.exact;

/**
 * @type {number|undefined}
 */
ConstrainDoubleRange.prototype.ideal;


/**
 * @see https://w3c.github.io/mediacapture-main/getusermedia.html#dom-constrainlongrange
 * @record
 * @extends {LongRange}
 */
function ConstrainLongRange() {}

/**
 * @type {number|undefined}
 */
ConstrainLongRange.prototype.exact;

/**
 * @type {number|undefined}
 */
ConstrainLongRange.prototype.ideal;

/**
 * @see https://w3c.github.io/mediacapture-main/getusermedia.html#dom-constrainboolean
 * @typedef {boolean|ConstrainBooleanParameters}
 */
var ConstrainBoolean;

/**
 * @see https://w3c.github.io/mediacapture-main/getusermedia.html#dom-constraindomString
 * @typedef {string|Array<string>|ConstrainDOMStringParameters}
 */
var ConstrainDOMString;

/**
 * @see https://w3c.github.io/mediacapture-main/getusermedia.html#dom-constraindouble
 * @typedef {number|ConstrainDoubleRange}
 */
var ConstrainDouble;

/**
 * @see https://w3c.github.io/mediacapture-main/getusermedia.html#dom-constrainlong
 * @typedef {number|ConstrainLongRange}
 */
var ConstrainLong;


/**
 * @see https://w3c.github.io/mediacapture-main/getusermedia.html#dom-mediatrackconstraintset
 * @record
 */
function MediaTrackConstraintSet() {}

/**
 * @type {ConstrainBoolean|undefined}
 */
MediaTrackConstraintSet.prototype.autoGainControl;

/**
 * @type {ConstrainDouble|undefined}
 */
MediaTrackConstraintSet.prototype.aspectRatio;

/**
 * @type {ConstrainLong|undefined}
 */
MediaTrackConstraintSet.prototype.channelCount;

/**
 * @type {ConstrainDOMString|undefined}
 */
MediaTrackConstraintSet.prototype.deviceId;

/**
 * @type {ConstrainBoolean|undefined}
 */
MediaTrackConstraintSet.prototype.echoCancellation;

/**
 * @type {ConstrainDOMString|undefined}
 */
MediaTrackConstraintSet.prototype.facingMode;

/**
 * @type {ConstrainDouble|undefined}
 */
MediaTrackConstraintSet.prototype.frameRate;

/**
 * @type {ConstrainDOMString|undefined}
 */
MediaTrackConstraintSet.prototype.groupId;

/**
 * @type {ConstrainLong|undefined}
 */
MediaTrackConstraintSet.prototype.height;

/**
 * @type {ConstrainDouble|undefined}
 */
MediaTrackConstraintSet.prototype.latency;

/**
 * @type {ConstrainBoolean|undefined}
 */
MediaTrackConstraintSet.prototype.noiseSuppression;

/**
 * @type {ConstrainLong|undefined}
 */
MediaTrackConstraintSet.prototype.sampleRate;

/**
 * @type {ConstrainLong|undefined}
 */
MediaTrackConstraintSet.prototype.sampleSize;

/**
 * @type {ConstrainDouble|undefined}
 */
MediaTrackConstraintSet.prototype.volume;

/**
 * @type {ConstrainLong|undefined}
 */
MediaTrackConstraintSet.prototype.width;


/**
 * @record
 * @extends {MediaTrackConstraintSet}
 */
function MediaTrackConstraints() {}

/**
 * @type {Array<!MediaTrackConstraintSet>|undefined}
 */
MediaTrackConstraints.prototype.advanced;

/**
 * @see https://w3c.github.io/mediacapture-main/getusermedia.html#media-track-constraints
 * @record
 */
function MediaStreamConstraints() {}

/**
 * @type {boolean|MediaTrackConstraints|undefined}
 */
MediaStreamConstraints.prototype.audio;

/**
 * @type {boolean|MediaTrackConstraints|undefined}
 */
MediaStreamConstraints.prototype.video;

/**
 * @see {http://dev.w3.org/2011/webrtc/editor/getusermedia.html#
 *     navigatorusermediaerror-and-navigatorusermediaerrorcallback}
 * @interface
 */
function NavigatorUserMediaError() {}

/**
 * @const {number}
 * @deprecated Removed from the standard and some browsers.
 */
NavigatorUserMediaError.prototype.PERMISSION_DENIED;

/**
 * @type {number}
 * @deprecated Removed from the standard and some browsers.
 * Read only.
 */
NavigatorUserMediaError.prototype.code;

/**
 * @type {string}
 * Read only.
 */
NavigatorUserMediaError.prototype.name;

/**
 * @type {?string}
 * Read only.
 */
NavigatorUserMediaError.prototype.message;

/**
 * @type {?string}
 * Read only.
 */
NavigatorUserMediaError.prototype.constraintName;

/**
 * @param {string} type
 * @param {!Object} eventInitDict
 * @constructor
 */
function MediaStreamEvent(type, eventInitDict) {}

/**
 * @const {?MediaStream}
 */
MediaStreamEvent.prototype.stream;

/**
 * @record
 * @see https://www.w3.org/TR/mediastream-recording/#dictdef-mediarecorderoptions
 */
function MediaRecorderOptions() {}

/** @type {(string|undefined)} */
MediaRecorderOptions.prototype.mimeType

/** @type {(number|undefined)} */
MediaRecorderOptions.prototype.audioBitsPerSecond

/** @type {(number|undefined)} */
MediaRecorderOptions.prototype.videoBitsPerSecond

/** @type {(number|undefined)} */
MediaRecorderOptions.prototype.bitsPerSecond

/**
 * @see https://www.w3.org/TR/mediastream-recording/#mediarecorder-api
 * @param {!MediaStream} stream
 * @param {MediaRecorderOptions=} options
 * @implements {EventTarget}
 * @constructor
 */
function MediaRecorder(stream, options) {}

/**
 * @override
 */
MediaRecorder.prototype.addEventListener = function(type, listener,
    opt_useCapture) {};

/**
 * @override
 */
MediaRecorder.prototype.removeEventListener = function(type, listener,
    opt_useCapture) {};

/**
 * @override
 * @return {boolean}
 */
MediaRecorder.prototype.dispatchEvent = function(evt) {};

/**
 * @type {!MediaStream}
 */
MediaRecorder.prototype.stream;

/**
 * @type {string}
 */
MediaRecorder.prototype.mimeType;

/**
 * @type {string}
 */
MediaRecorder.prototype.state;

/**
 * @type {(function(!Event)|undefined)}
 */
MediaRecorder.prototype.onstart;

/**
 * @type {(function(!Event)|undefined)}
 */
MediaRecorder.prototype.onstop;

/**
 * @type {(function(!Event)|undefined)}
 */
MediaRecorder.prototype.ondataavailable;

/**
 * @type {(function(!Event)|undefined)}
 */
MediaRecorder.prototype.onpause;

/**
 * @type {(function(!Event)|undefined)}
 */
MediaRecorder.prototype.onresume;

/**
 * @type {(function(!Event)|undefined)}
 */
MediaRecorder.prototype.onerror;

/**
 * @type {number}
 */
MediaRecorder.prototype.videoBitsPerSecond;

/**
 * @type {number}
 */
MediaRecorder.prototype.audioBitsPerSecond;

/**
 * @param {number=} timeslice
 */
MediaRecorder.prototype.start = function(timeslice) {};

/** @return {void} */
MediaRecorder.prototype.stop = function() {};

/** @return {void} */
MediaRecorder.prototype.pause = function() {};

/** @return {void} */
MediaRecorder.prototype.resume = function() {};

/** @return {void} */
MediaRecorder.prototype.requestData = function() {};

/**
 * @param {string} type
 * @return {boolean}
 */
MediaRecorder.isTypeSupported = function(type) {};

/**
 * @see https://developer.mozilla.org/en-US/docs/Web/API/MediaRecorderErrorEvent
 * @interface
 */
function MediaRecorderErrorEvent() {}

/**
 * @type {DOMException} type
 */
MediaRecorderErrorEvent.prototype.error;

/**
 * @interface
 */
function MediaRecorderEventMap() {}

/** @type {BlobEvent} */
MediaRecorderEventMap.prototype.dataavailable;

/** @type {Event} */
MediaRecorderEventMap.prototype.error;

/** @type {Event} */
MediaRecorderEventMap.prototype.pause;

/** @type {Event} */
MediaRecorderEventMap.prototype.resume;

/** @type {Event} */
MediaRecorderEventMap.prototype.start;

/** @type {Event} */
MediaRecorderEventMap.prototype.stop;

/**
 * @constructor
 * @extends {Event}
 * @param {string} type
 * @param {{data: !Blob, timecode: (number|undefined)}} eventInitDict
 * @see https://www.w3.org/TR/mediastream-recording/#blobevent-section
 */
function BlobEvent(type, eventInitDict) {}

/** @type {!Blob} */
BlobEvent.prototype.data;

/** @type {number} */
BlobEvent.prototype.timecode;

/**
 * @interface
 * @see https://w3c.github.io/mediacapture-image/##photosettings-section
 */
function PhotoSettings() {}

/**
 * @type {string}
 */
PhotoSettings.prototype.fillLightMode;

/**
 * @type {number}
 */
PhotoSettings.prototype.imageHeight;

/**
 * @type {number}
 */
PhotoSettings.prototype.imageWidth;

/**
 * @type {boolean}
 */
PhotoSettings.prototype.redEyeReduction;

/**
 * @interface
 * @see https://w3c.github.io/mediacapture-image/##photocapabilities-section
 */
function PhotoCapabilities() {}

/**
 * @const {string}
 */
PhotoCapabilities.prototype.redEyeReduction;

/**
 * @const {!MediaSettingsRange}
 */
PhotoCapabilities.prototype.imageHeight;

/**
 * @const {!MediaSettingsRange}
 */
PhotoCapabilities.prototype.imageWidth;

/**
 * @const {!Array<string>}
 */
PhotoCapabilities.prototype.fillLightMode;

/**
 * @see https://w3c.github.io/mediacapture-image/
 * @param {!MediaStreamTrack} videoTrack
 * @constructor
 */
function ImageCapture(videoTrack) {}

/**
 * @param {!PhotoSettings=} photoSettings
 * @return {!Promise<!Blob>}
 */
ImageCapture.prototype.takePhoto = function(photoSettings) {};

/**
 * @return {!Promise<!PhotoCapabilities>}
 */
ImageCapture.prototype.getPhotoCapabilities = function() {};

/**
 * @return {!Promise<!ImageBitmap>}
 */
ImageCapture.prototype.grabFrame = function() {};

/**
 * @const {!MediaStreamTrack}
 */
ImageCapture.prototype.track;

/**
 * @see https://www.w3.org/TR/webrtc/#rtctrackevent
 * @param {string} type
 * @param {!Object} eventInitDict
 * @constructor
 */
function RTCTrackEvent(type, eventInitDict) {}

/**
 * @const {!RTCRtpReceiver}
 */
RTCTrackEvent.prototype.receiver;

/**
 * @const {!MediaStreamTrack}
 */
RTCTrackEvent.prototype.track;

/**
 * @const {!Array<!MediaStream>}
 */
RTCTrackEvent.prototype.streams;

/**
 * @const {!RTCRtpTransceiver}
 */
RTCTrackEvent.prototype.transceiver;

/**
 * @typedef {string}
 * @see https://www.w3.org/TR/mediacapture-streams/#idl-def-MediaDeviceKind
 * In WebIDL this is an enum with values 'audioinput', 'audiooutput', and
 * 'videoinput', but there is no mechanism in Closure for describing a
 * specialization of the string type.
 */
var MediaDeviceKind;

/**
 * Possible values are "sendrecv", "sendonly", "recvonly", and "inactive".
 * @typedef {string}
 * @see https://www.w3.org/TR/webrtc/#dom-rtcrtptransceiverdirection
 */
var RTCRtpTransceiverDirection;

/**
 * @interface
 */
function MediaDeviceInfo() {}

/** @const {string} */
MediaDeviceInfo.prototype.deviceId;

/** @const {!MediaDeviceKind} */
MediaDeviceInfo.prototype.kind;

/** @const {string} */
MediaDeviceInfo.prototype.label;

/** @const {string} */
MediaDeviceInfo.prototype.groupId;

/**
 * @interface
 * @extends {MediaDeviceInfo}
 * @see https://www.w3.org/TR/mediacapture-streams/#input-specific-device-info
 */
function InputDeviceInfo() {
}

/** @return {!MediaTrackCapabilities} */
InputDeviceInfo.prototype.getCapabilities = function() {};

/**
 * @interface
 * @extends {EventTarget}
 * @see https://www.w3.org/TR/mediacapture-streams/#mediadevices
 */
function MediaDevices() {}

/**
 * @return {!Promise<!Array<!MediaDeviceInfo>>}
 */
MediaDevices.prototype.enumerateDevices = function() {};

/**
 * @see https://developer.mozilla.org/en-US/docs/Web/API/MediaDevices/getUserMedia
 * @param {!MediaStreamConstraints} constraints
 * @return {!Promise<!MediaStream>}
 */
MediaDevices.prototype.getUserMedia = function(constraints) {}

/**
 * @see https://w3c.github.io/mediacapture-screen-share/#dom-mediadevices-getdisplaymedia
 * @param {!MediaStreamConstraints=} constraints
 * @return {!Promise<!MediaStream>}
 */
MediaDevices.prototype.getDisplayMedia = function(constraints) {}

/**
 * @see https://w3c.github.io/mediacapture-main/#dom-mediadevices-getsupportedconstraints
 * @return {!MediaTrackSupportedConstraints}
 */
MediaDevices.prototype.getSupportedConstraints = function()  {}

/** @const {!MediaDevices} */
Navigator.prototype.mediaDevices;

/**
 * @typedef {string}
 * @see https://www.w3.org/TR/webrtc/#rtcsdptype
 * In WebIDL this is an enum with values 'offer', 'pranswer', and 'answer',
 * but there is no mechanism in Closure for describing a specialization of
 * the string type.
 */
var RTCSdpType;

/**
 * @param {!Object=} descriptionInitDict The RTCSessionDescriptionInit
 * dictionary.  This optional argument may have type
 * {type:RTCSdpType, sdp:string}, but neither of these keys are required to be
 * present, and other keys are ignored, so the closest Closure type is Object.
 * @constructor
 * @see https://www.w3.org/TR/webrtc/#rtcsessiondescription-class
 */
function RTCSessionDescription(descriptionInitDict) {}

/**
 * @type {?RTCSdpType}
 * @see https://www.w3.org/TR/webrtc/#dom-rtcsessiondescription-type
 */
RTCSessionDescription.prototype.type;

/**
 * @type {?string}
 * @see https://www.w3.org/TR/webrtc/#dom-rtcsessiondescription-sdp
 */
RTCSessionDescription.prototype.sdp;

/**
 * TODO(bemasc): Remove this definition once it is removed from the browser.
 * @param {string} label The label index (audio/video/data -> 0,1,2)
 * @param {string} sdp The ICE candidate in SDP text form
 * @constructor
 */
function IceCandidate(label, sdp) {}

/**
 * @return {string}
 */
IceCandidate.prototype.toSdp = function() {};

/**
 * @type {?string}
 */
IceCandidate.prototype.label;

/** @record */
function RTCIceCandidateInit() {};

/** @type {?string|undefined} */
RTCIceCandidateInit.prototype.candidate;

/** @type {(?string|undefined)} */
RTCIceCandidateInit.prototype.sdpMid;

/** @type {(?number|undefined)} */
RTCIceCandidateInit.prototype.sdpMLineIndex;

/** @type {(string|undefined)} */
RTCIceCandidateInit.prototype.usernameFragment;

/**
 * @param {!RTCIceCandidateInit=} candidateInitDict  The RTCIceCandidateInit dictionary.
 * @constructor
 * @see https://www.w3.org/TR/webrtc/#rtcicecandidate-interface
 */
function RTCIceCandidate(candidateInitDict) {}

/**
 * @type {?string}
 */
RTCIceCandidate.prototype.candidate;

/**
 * @type {?string}
 */
RTCIceCandidate.prototype.sdpMid;

/**
 * @type {?number}
 */
RTCIceCandidate.prototype.sdpMLineIndex;

/**
 * @typedef {{urls: string}|{urls: !Array<string>}}
 * @private
 * @see https://www.w3.org/TR/webrtc/#rtciceserver-dictionary
 * This dictionary type also has an optional key {credential: ?string}.
 */
var RTCIceServerRecord_;

/**
 * @interface
 * @private
 */
function RTCIceServerInterface_() {}

/**
 * @type {string|!Array<string>}
 */
RTCIceServerInterface_.prototype.urls;

/**
 * @type {?string}
 */
RTCIceServerInterface_.prototype.username;

/**
 * @type {?string}
 */
RTCIceServerInterface_.prototype.credential;

/**
 * This type, and several below it, are constructed as unions between records
 *
 * @typedef {RTCIceServerRecord_|RTCIceServerInterface_}
 * @private
 */
var RTCIceServer;

/**
 * @typedef {{
 *   iceServers: !Array<!RTCIceServer>,
 *   iceTransportPolicy: (string|undefined),
 *   sdpSemantics: (string|undefined)
 * }}
 * @private
 */
var RTCConfigurationRecord_;

/**
 * @interface
 * @private
 */
function RTCConfigurationInterface_() {}

/**
 * @type {!Array<!RTCIceServer>}
 */
RTCConfigurationInterface_.prototype.iceServers;

/**
 * Allows specifying the ICE transport policy. Valid values are "all" and
 * "relay", with "all" being the default.
 * @type {string|undefined}
 */
RTCConfigurationInterface_.prototype.iceTransportPolicy;

/**
 * Allows specifying the SDP semantics. Valid values are "plan-b" and
 * "unified-plan".
 *
 * @see {@link https://webrtc.org/web-apis/chrome/unified-plan/}
 * @type {string|undefined}
 */
RTCConfigurationInterface_.prototype.sdpSemantics;

/**
 * @typedef {RTCConfigurationRecord_|RTCConfigurationInterface_}
 */
var RTCConfiguration;

/**
 * @typedef {function(!RTCSessionDescription)}
 */
var RTCSessionDescriptionCallback;

/**
 * @typedef {function(string)}
 */
var RTCPeerConnectionErrorCallback;

/**
 * @typedef {function()}
 */
var RTCVoidCallback;

/**
 * @typedef {string}
 */
var RTCSignalingState;

/**
 * @typedef {string}
 */
var RTCIceConnectionState;

/**
 * @typedef {string}
 */
var RTCIceGatheringState;

/**
 * @see https://www.w3.org/TR/webrtc/#rtcpeerconnectionstate-enum
 * @typedef {string}
 */
var RTCPeerConnectionState;

/**
 * @param {string} type
 * @param {!Object} eventInitDict
 * @extends {Event}
 * @constructor
 */
function RTCPeerConnectionIceEvent(type, eventInitDict) {}

/**
 * @const {RTCIceCandidate}
 */
RTCPeerConnectionIceEvent.prototype.candidate;

// Note: The specification of RTCStats types is still under development.
// Declarations here will be updated and removed to follow the development of
// modern browsers, breaking compatibility with older versions as they become
// obsolete.
/**
 * @see https://www.w3.org/TR/webrtc/#dom-rtcstats
 * @interface
 */
function RTCStats() {}

/**
 * @const {?Date|number}
 */
RTCStats.prototype.timestamp;

/**
 * https://www.w3.org/TR/webrtc-stats/#rtcstatstype-str*
 * @const {string}
 */
RTCStats.prototype.type;

/**
 * @const {string}
 */
RTCStats.prototype.id;

/**
 * @see https://www.w3.org/TR/webrtc-stats/#dom-rtcrtpstreamstats
 * @interface
 * @extends {RTCStats}
 */
function RTCRtpStreamStats() {}

/** @const {number} */
RTCRtpStreamStats.prototype.ssrc;

/** @const {string} */
RTCRtpStreamStats.prototype.kind;

/**
 * Safari 13 still uses .mediaType instead of .kind.
 * @const {string}
 */
RTCRtpStreamStats.prototype.mediaType;

/** @const {string} */
RTCRtpStreamStats.prototype.transportId;

/** @const {string} */
RTCRtpStreamStats.prototype.codecId;


/**
 * @see https://www.w3.org/TR/webrtc-stats/#dom-rtcreceivedrtpstreamstats
 * @interface
 * @extends {RTCRtpStreamStats}
 */
function RTCReceivedRtpStreamStats() {}

/** @const {number} */
RTCReceivedRtpStreamStats.prototype.packetsReceived;

/** @const {number} */
RTCReceivedRtpStreamStats.prototype.packetsLost;

/** @const {number} */
RTCReceivedRtpStreamStats.prototype.jitter;

/** @const {number} */
RTCReceivedRtpStreamStats.prototype.packetsDiscarded;

/** @const {number} */
RTCReceivedRtpStreamStats.prototype.packetsRepaired;

/** @const {number} */
RTCReceivedRtpStreamStats.prototype.burstPacketsLost;

/** @const {number} */
RTCReceivedRtpStreamStats.prototype.burstPacketsDiscarded;

/** @const {number} */
RTCReceivedRtpStreamStats.prototype.burstLossCount;

/** @const {number} */
RTCReceivedRtpStreamStats.prototype.burstDiscardCount;

/** @const {number} */
RTCReceivedRtpStreamStats.prototype.burstLossRate;

/** @const {number} */
RTCReceivedRtpStreamStats.prototype.burstDiscardRate;

/** @const {number} */
RTCReceivedRtpStreamStats.prototype.gapLossRate;

/** @const {number} */
RTCReceivedRtpStreamStats.prototype.gapDiscardRate;

/** @const {number} */
RTCReceivedRtpStreamStats.prototype.framesDropped;

/** @const {number} */
RTCReceivedRtpStreamStats.prototype.partialFramesLost;

/** @const {number} */
RTCReceivedRtpStreamStats.prototype.fullFramesLost;


/**
 * @see https://www.w3.org/TR/webrtc-stats/#dom-rtcinboundrtpstreamstats
 * @interface
 * @extends {RTCReceivedRtpStreamStats}
 */
function RTCInboundRtpStreamStats() {}

/** @const {string} */
RTCInboundRtpStreamStats.prototype.trackId;

/** @const {string} */
RTCInboundRtpStreamStats.prototype.receiverId;

/** @const {string} */
RTCInboundRtpStreamStats.prototype.remoteId;

/** @const {number} */
RTCInboundRtpStreamStats.prototype.framesDecoded;

/** @const {number} */
RTCInboundRtpStreamStats.prototype.keyFramesDecoded;

/** @const {number} */
RTCInboundRtpStreamStats.prototype.frameWidth;

/** @const {number} */
RTCInboundRtpStreamStats.prototype.frameHeight;

/** @const {number} */
RTCInboundRtpStreamStats.prototype.frameBitDepth;

/** @const {number} */
RTCInboundRtpStreamStats.prototype.framesPerSecond;

/** @const {number} */
RTCInboundRtpStreamStats.prototype.qpSum;

/** @const {number} */
RTCInboundRtpStreamStats.prototype.totalDecodeTime;

/** @const {number} */
RTCInboundRtpStreamStats.prototype.totalInterframeDelay;

/** @const {number} */
RTCInboundRtpStreamStats.prototype.totalSquaredInterFrameDelay;

/** @const {boolean} */
RTCInboundRtpStreamStats.prototype.voiceActivityFlag;

/** @const {?Date|number} */
RTCInboundRtpStreamStats.prototype.lastPacketReceivedTimestamp;

/** @const {number} */
RTCInboundRtpStreamStats.prototype.averageRtcpInterval;

/** @const {number} */
RTCInboundRtpStreamStats.prototype.headerBytesReceived;

/**
 * Not available in Safari 13, Firefox 69 (Chrome 81+ only).
 * @const {number|undefined}
 */
RTCInboundRtpStreamStats.prototype.fecPacketsReceived;

/**
 * Not available in Safari 13, Firefox 69 (Chrome 81+ only).
 * @const {number|undefined}
 */
RTCInboundRtpStreamStats.prototype.fecPacketsDiscarded;

/** @const {number} */
RTCInboundRtpStreamStats.prototype.bytesReceived;

/** @const {number} */
RTCInboundRtpStreamStats.prototype.packetsFailedDecryption;

/** @const {number} */
RTCInboundRtpStreamStats.prototype.packetsDuplicated;

// TODO: record<USVString, unsigned long long> perDscpPacketsReceived;

/** @const {number} */
RTCInboundRtpStreamStats.prototype.nackCount;

/** @const {number} */
RTCInboundRtpStreamStats.prototype.firCount;

/** @const {number} */
RTCInboundRtpStreamStats.prototype.pliCount;

/** @const {number} */
RTCInboundRtpStreamStats.prototype.sliCount;

/** @const {?Date|number} */
RTCInboundRtpStreamStats.prototype.estimatedPlayoutTimestamp;

/**
 * Firefox specific value.
 * @const {number|undefined}
 */
RTCInboundRtpStreamStats.prototype.bitrateMean;

/** @const {number|undefined} */
RTCInboundRtpStreamStats.prototype.jitterBufferDelay;

/** @const {number|undefined} */
RTCInboundRtpStreamStats.prototype.jitterBufferEmittedCount;

/**
 * Experimental chrome stats under this origin trial:
 * https://groups.google.com/a/chromium.org/forum/#!topic/blink-dev/hE2B1iItPDk
 * @const {number|undefined}
 */
RTCInboundRtpStreamStats.prototype.jitterBufferFlushes;

/** @const {number|undefined} */
RTCInboundRtpStreamStats.prototype.totalSamplesReceived;

/** @const {number|undefined} */
RTCInboundRtpStreamStats.prototype.samplesDecodedWithSilk;

/** @const {number|undefined} */
RTCInboundRtpStreamStats.prototype.samplesDecodedWithCelt;

/** @const {number|undefined} */
RTCInboundRtpStreamStats.prototype.concealedSamples;

/**
 * Not available in Safari 13.
 * @const {number|undefined}
 */
RTCInboundRtpStreamStats.prototype.silentConcealedSamples;

/**
 * Not available in Safari 13.
 * @const {number|undefined}
 */
RTCInboundRtpStreamStats.prototype.concealmentEvents;

/**
 * Not available in Safari 13.
 * @const {number|undefined}
 */
RTCInboundRtpStreamStats.prototype.insertedSamplesForDeceleration

/**
 * Not available in Safari 13.
 * @const {number|undefined}
 */
RTCInboundRtpStreamStats.prototype.removedSamplesForAcceleration;

/**
 * Experimental chrome stats under this origin trial:
 * https://groups.google.com/a/chromium.org/forum/#!topic/blink-dev/hE2B1iItPDk
 * @const {number|undefined}
 */
RTCInboundRtpStreamStats.prototype.delayedPacketOutageSamples;

/**
 * Safari still reprorting it as inbound-rtp, it supposed to be in remote part.
 * @const {number|undefined}
 */
RTCInboundRtpStreamStats.prototype.fractionLost;

/** @const {number} */
RTCInboundRtpStreamStats.prototype.audioLevel;

/** @const {number|undefined} */
RTCInboundRtpStreamStats.prototype.totalAudioEnergy;

/** @const {number|undefined} */
RTCInboundRtpStreamStats.prototype.totalSamplesDuration;

/** @const {number|undefined} */
RTCInboundRtpStreamStats.prototype.framesReceived;

/** @const {string|undefined} */
RTCInboundRtpStreamStats.prototype.decoderImplementation;



/**
 * @see https://www.w3.org/TR/webrtc-stats/#dom-rtcremoteinboundrtpstreamstats
 * @interface
 * @extends {RTCReceivedRtpStreamStats}
 */
function RTCRemoteInboundRtpStreamStats() {}

/** @const {string} */
RTCRemoteInboundRtpStreamStats.prototype.localId;

/** @const {number} */
RTCRemoteInboundRtpStreamStats.prototype.roundTripTime;

/** @const {number} */
RTCRemoteInboundRtpStreamStats.prototype.fractionLost;


/**
 * @see https://www.w3.org/TR/webrtc-stats/#dom-rtcsentrtpstreamstats
 * @interface
 * @extends {RTCRtpStreamStats}
 */
function RTCSentRtpStreamStats() {}

/** @const {number} */
RTCSentRtpStreamStats.prototype.packetsSent;

/** @const {number} */
RTCSentRtpStreamStats.prototype.packetsDiscardedOnSend;

/** @const {number} */
RTCSentRtpStreamStats.prototype.fecPacketsSent;

/** @const {number} */
RTCSentRtpStreamStats.prototype.bytesSent;

/** @const {number} */
RTCSentRtpStreamStats.prototype.bytesDiscardedOnSend;


/**
/**
 * @see https://www.w3.org/TR/webrtc-stats/#dom-rtcoutboundrtpstreamstats
 * @interface
 * @extends {RTCSentRtpStreamStats}
 */
function RTCOutboundRtpStreamStats() {}

/** @const {string} */
RTCOutboundRtpStreamStats.prototype.trackId;

/** @const {string} */
RTCOutboundRtpStreamStats.prototype.senderId;

/** @const {string} */
RTCOutboundRtpStreamStats.prototype.remoteId;

/** @const {number} */
RTCOutboundRtpStreamStats.prototype.lastPacketSentTimestamp;

/** @const {number} */
RTCOutboundRtpStreamStats.prototype.targetBitrate;

/** @const {number} */
RTCOutboundRtpStreamStats.prototype.framesEncoded;

/** @const {number} */
RTCOutboundRtpStreamStats.prototype.totalEncodeTime;

/** @const {number} */
RTCOutboundRtpStreamStats.prototype.averageRTCPInterval;

/** @const {number|undefined} */
RTCOutboundRtpStreamStats.prototype.qualityLimitationResolutionChanges;

/** @const {string|undefined} */
RTCOutboundRtpStreamStats.prototype.qualityLimitationReason;

/** @const {string} */
RTCOutboundRtpStreamStats.prototype.mediaSourceId;

/** @const {number} */
RTCOutboundRtpStreamStats.prototype.frameWidth;

/** @const {number} */
RTCOutboundRtpStreamStats.prototype.frameHeight;

/** @const {number} */
RTCOutboundRtpStreamStats.prototype.qpSum;

/**
 * Firefox specific value.
 * @const {number|undefined}
 */
RTCOutboundRtpStreamStats.prototype.bitrateMean;

/** @const {number} */
RTCOutboundRtpStreamStats.prototype.nackCount;

/** @const {number} */
RTCOutboundRtpStreamStats.prototype.firCount;

/** @const {number} */
RTCOutboundRtpStreamStats.prototype.pliCount;

/** @const {number} */
RTCOutboundRtpStreamStats.prototype.sliCount;

/** @const {string|undefined} */
RTCOutboundRtpStreamStats.prototype.encoderImplementation;


/**
 * @see https://www.w3.org/TR/webrtc-stats/#dom-rtcremoteoutboundrtpstreamstats
 * @interface
 * @extends {RTCSentRtpStreamStats}
 */
function RTCRemoteOutboundRtpStreamStats() {}

/** @const {string} */
RTCRemoteOutboundRtpStreamStats.prototype.localId;

/** @const {?Date|number} */
RTCRemoteOutboundRtpStreamStats.prototype.remoteTimestamp;


/**
 * @see https://www.w3.org/TR/webrtc-stats/#transportstats-dict*
 * @interface
 * @extends {RTCStats}
 */
function RTCTransportStats() {}

/** @type {number} */
RTCTransportStats.prototype.packetsSent;

/** @type {number} */
RTCTransportStats.prototype.packetsReceived;

/** @type {number} */
RTCTransportStats.prototype.bytesSent;

/** @type {number} */
RTCTransportStats.prototype.bytesReceived;

/** @type {string} */
RTCTransportStats.prototype.rtcpTransportStatsId;

/**
 * @type {string}
 * Set of possible string values: 'unknown', 'controlling', 'controlled'.
 */
RTCTransportStats.prototype.iceRole;

/**
 * @type {string}
 * Set of possible string values: 'new', 'connecting', 'connected',
 * 'closed', 'failed'.
 */
RTCTransportStats.prototype.dtlsState;

/** @type {string} */
RTCTransportStats.prototype.selectedCandidatePairId;

/** @type {string} */
RTCTransportStats.prototype.localCertificateId;

/** @type {string} */
RTCTransportStats.prototype.remoteCertificateId;

/** @type {string} */
RTCTransportStats.prototype.tlsVersion;

/** @type {string} */
RTCTransportStats.prototype.dtlsCipher;

/** @type {string} */
RTCTransportStats.prototype.srtpCipher;

/** @type {string} */
RTCTransportStats.prototype.tlsGroup;

/** @type {number} */
RTCTransportStats.prototype.selectedCandidatePairChanges;


/**
 * @see https://w3c.github.io/webrtc-stats/#dom-rtcmediasourcestats
 * @interface
 * @extends {RTCStats}
 */
function RTCMediaSourceStats() {}

/** @const {string} */
RTCMediaSourceStats.prototype.trackIdentifier;

/** @const {string} */
RTCMediaSourceStats.prototype.kind;

/**
 * @see https://w3c.github.io/webrtc-stats/#dom-rtcvideosourcestats
 * @interface
 * @extends {RTCMediaSourceStats}
 */
function RTCVideoSourceStats() {}

/** @const {number} */
RTCVideoSourceStats.prototype.width;

/** @const {number} */
RTCVideoSourceStats.prototype.height;

/** @const {number} */
RTCVideoSourceStats.prototype.bitDepth;

/** @const {number} */
RTCVideoSourceStats.prototype.frames;

/** @const {number} */
RTCVideoSourceStats.prototype.framesPerSecond;

/**
 * @see https://w3c.github.io/webrtc-stats/#dom-rtcaudiosourcestats
 * @interface
 * @extends {RTCMediaSourceStats}
 */
function RTCAudioSourceStats() {}

/** @const {number} */
RTCAudioSourceStats.prototype.audioLevel;

/** @const {number} */
RTCAudioSourceStats.prototype.totalAudioEnergy;

/** @const {number} */
RTCAudioSourceStats.prototype.totalSamplesDuration;

/** @const {number} */
RTCAudioSourceStats.prototype.echoReturnLoss;

/** @const {number} */
RTCAudioSourceStats.prototype.echoReturnLossEnhancement;


/**
 * @interface
 * @extends {Iterable<!Array<string|!RTCStats>>}
 * @see https://w3c.github.io/webrtc-pc/#rtcstatsreport-object
 */
function RTCStatsReport() {}

/**
 * @const {?Date|number}
 */
RTCStatsReport.prototype.timestamp;

/**
 * @return {!Array<string>}
 */
RTCStatsReport.prototype.names = function() {};

/**
 * @param {string} name
 * @return {string}
 */
RTCStatsReport.prototype.stat = function(name) {};

/**
 * @deprecated
 * @const {RTCStatsReport}
 */
RTCStatsReport.prototype.local;

/**
 * @deprecated
 * @const {RTCStatsReport}
 */
RTCStatsReport.prototype.remote;

/**
 * @const {string}
 */
RTCStatsReport.prototype.type;

/**
 * @const {string}
 */
RTCStatsReport.prototype.id;

// Note: Below are Map like methods supported by WebRTC statistics
// specification-compliant RTCStatsReport. Currently only implemented by
// Mozilla.
// See https://www.w3.org/TR/webrtc/#rtcstatsreport-object for definition.
/**
 * @param {function(this:SCOPE, !RTCStats, string, MAP)} callback
 * @param {SCOPE=} opt_thisObj The value of "this" inside callback function.
 * @this {MAP}
 * @template MAP,SCOPE
 */
RTCStatsReport.prototype.forEach = function(callback, opt_thisObj) {};

/**
 * @param {string} key
 * @return {!IteratorIterable<!Array<string|!RTCStats>>}
 */
RTCStatsReport.prototype.entries = function(key) {};

/**
 * @param {string} key
 * @return {!RTCStats}
 */
RTCStatsReport.prototype.get = function(key) {};

/**
 * @return {!IteratorIterable<string>}
 */
RTCStatsReport.prototype.keys = function() {};

/**
 * @return {!IteratorIterable<!RTCStats>}
 */
RTCStatsReport.prototype.values = function() {};

/**
 * @param {string} key
 * @return {boolean}
 */
RTCStatsReport.prototype.has = function(key) {};

/**
 * @const {number}
 */
RTCStatsReport.prototype.size;

/**
 * @return {!Iterator<!Array<string|!RTCStats>>}
 */
RTCStatsReport.prototype[Symbol.iterator] = function() {};


/**
 * TODO(bemasc): Remove this type once it is no longer in use.  It has already
 * been removed from the specification.
 * @typedef {RTCStatsReport}
 * @deprecated
 */
var RTCStatsElement;

/**
 * @interface
 */
function RTCStatsResponse() {}

/**
 * @return {!Array<!RTCStatsReport>}
 */
RTCStatsResponse.prototype.result = function() {};

/**
 * @typedef {function(!RTCStatsResponse, MediaStreamTrack=)}
 */
var RTCStatsCallback;

/**
 * This type is not yet standardized, so the properties here only represent
 * the current capabilities of libjingle (and hence Chromium).
 * TODO(bemasc): Add a link to the relevant standard once MediaConstraint has a
 * standard definition.
 *
 * @interface
 * @private
 */
function MediaConstraintSetInterface_() {}

/**
 * @type {?boolean}
 */
MediaConstraintSetInterface_.prototype.OfferToReceiveAudio;

/**
 * @type {?boolean}
 */
MediaConstraintSetInterface_.prototype.OfferToReceiveVideo;

/**
 * @type {?boolean}
 */
MediaConstraintSetInterface_.prototype.DtlsSrtpKeyAgreement;

/**
 * @type {?boolean}
 */
MediaConstraintSetInterface_.prototype.RtpDataChannels;

/**
 * TODO(bemasc): Make this type public once it is defined in a standard.
 *
 * @typedef {Object|MediaConstraintSetInterface_}
 * @private
 */
var MediaConstraintSet_;

/**
 * @interface
 * @private
 */
function MediaConstraintsInterface_() {}

/**
 * @type {?MediaConstraintSet_}
 */
MediaConstraintsInterface_.prototype.mandatory;

/**
 * @type {?Array<!MediaConstraintSet_>}
 */
MediaConstraintsInterface_.prototype.optional;

/**
 * This type is used extensively in
 * {@see http://dev.w3.org/2011/webrtc/editor/webrtc.html} but is not yet
 * defined.
 *
 * @typedef {Object|MediaConstraintsInterface_}
 */
var MediaConstraints;

/**
 * @interface
 * @extends {EventTarget}
 * @see https://w3c.github.io/webrtc-pc/#dom-rtcdatachannel
 */
function RTCDataChannel() {}

/**
 * @const {string}
 */
RTCDataChannel.prototype.label;

/**
 * @const {boolean}
 */
RTCDataChannel.prototype.reliable;

/**
 * An enumerated string type (RTCDataChannelState) with values:
 * "connecting", "open", "closing", and "closed".
 * @type {string}
 * Read only.
 */
RTCDataChannel.prototype.readyState;

/**
 * @type {number}
 * Read only.
 */
RTCDataChannel.prototype.bufferedAmount;

/**
 * @type {number}
 */
RTCDataChannel.prototype.bufferedAmountLowThreshold;

/**
 * @type {?function(!Event)}
 */
RTCDataChannel.prototype.onopen;

/**
 * @type {?function(!Event)}
 */
RTCDataChannel.prototype.onerror;

/**
 * @type {?function(!Event)}
 */
RTCDataChannel.prototype.onclose;

RTCDataChannel.prototype.close = function() {};

/**
 * @type {?function(!MessageEvent<*>)}
 */
RTCDataChannel.prototype.onmessage;

/**
 * @type {?function(!Event)}
 */
RTCDataChannel.prototype.onbufferedamountlow;

/**
 * @type {string}
 */
RTCDataChannel.prototype.binaryType;

/**
 * @param {string|!Blob|!ArrayBuffer|!ArrayBufferView} data
 * @return {undefined}
 */
RTCDataChannel.prototype.send = function(data) {};

/**
 * @constructor
 * @extends {Event}
 * @private
 */
function RTCDataChannelEvent() {}

/**
 * @type {!RTCDataChannel}
 * Read only.
 */
RTCDataChannelEvent.prototype.channel;

/**
 * @typedef {{reliable: boolean}}
 */
var RTCDataChannelInitRecord_;

/**
 * @interface
 * @private
 */
function RTCDataChannelInitInterface_() {}

/**
 * @type {boolean}
 */
RTCDataChannelInitInterface_.prototype.reliable;

/**
 * @typedef {{
 *   ordered: (boolean|undefined),
 *   maxPacketLifeTime: (number|undefined),
 *   maxRetransmits: (number|undefined),
 *   protocol: (string|undefined),
 *   negotiated: (boolean|undefined),
 *   id: (number|undefined),
 *   priority: (string|undefined),
 * }}
 * see https://www.w3.org/TR/webrtc/#dom-rtcdatachannelinit for documentation
 * Type inconsistencies due to Closure limitations:
 * maxPacketLifeTime should be UnsignedShort
 * maxRetransmits should be UnsignedShort
 * protocol should be USVString
 * id should be UnsignedShort
 * In WebIDL priority is an enum with values 'very-low', 'low',
 * 'medium' and 'high', but there is no mechanism in Closure for describing
 * a specialization of the string type.
 */
var RTCDataChannelInitDictionary_;

/**
 * @typedef {RTCDataChannelInitInterface_|RTCDataChannelInitRecord_|RTCDataChannelInitDictionary_}
 */
var RTCDataChannelInit;

/**
 * @typedef {{expires: number}}
 */
var RTCCertificate;

/**
 * @param {RTCConfiguration} configuration
 * @param {!MediaConstraints=} constraints
 * @constructor
 * @implements {EventTarget}
 * @see https://www.w3.org/TR/webrtc/#interface-definition
 */
function RTCPeerConnection(configuration, constraints) {}

/**
 * @param {Object} keygenAlgorithm
 * @return {Promise<RTCCertificate>}
 */
RTCPeerConnection.generateCertificate = function (keygenAlgorithm) {};

/**
 * @override
 */
RTCPeerConnection.prototype.addEventListener = function(
    type, listener, opt_useCapture) {};

/**
 * @override
 */
RTCPeerConnection.prototype.removeEventListener = function(
    type, listener, opt_useCapture) {};

/**
 * @override
 * @return {boolean}
 */
RTCPeerConnection.prototype.dispatchEvent = function(evt) {};


// NB: Until closure annotations support overloading, many of the following
// functions take odd unions of parameter types.  This is to support the various
// api differences between browsers.  Generally, returning a promise means you
// don't take callback function parameters and draw any further parameters
// forward, and vice versa.

/**
 * @param {(!RTCSessionDescriptionCallback|!MediaConstraints)=}
 *    successCallbackOrConstraints
 * @param {!RTCPeerConnectionErrorCallback=} errorCallback
 * @param {!MediaConstraints=} constraints
 * @return {!Promise<!RTCSessionDescription>}
 */
RTCPeerConnection.prototype.createOffer = function(successCallbackOrConstraints,
    errorCallback, constraints) {};

/**
 * @param {(!RTCSessionDescriptionCallback|!MediaConstraints)=}
 *    successCallbackOrConstraints
 * @param {!RTCPeerConnectionErrorCallback=} errorCallback
 * @param {!MediaConstraints=} constraints
 * @return {!Promise<!RTCSessionDescription>|undefined}
 */
RTCPeerConnection.prototype.createAnswer =
    function(successCallbackOrConstraints, errorCallback, constraints) {};

/**
 * @param {!RTCSessionDescription=} description
 * @param {!RTCVoidCallback=} successCallback
 * @param {!RTCPeerConnectionErrorCallback=} errorCallback
 * @return {!Promise<!RTCSessionDescription>}
 */
RTCPeerConnection.prototype.setLocalDescription = function(description,
    successCallback, errorCallback) {};

/**
 * @param {!RTCSessionDescription} description
 * @param {!RTCVoidCallback=} successCallback
 * @param {!RTCPeerConnectionErrorCallback=} errorCallback
 * @return {!Promise<!RTCSessionDescription>}
 */
RTCPeerConnection.prototype.setRemoteDescription = function(description,
    successCallback, errorCallback) {};

/**
 * @type {?RTCSessionDescription}
 * Read only.
 */
RTCPeerConnection.prototype.localDescription;

/**
 * @type {?RTCSessionDescription}
 * Read only.
 */
RTCPeerConnection.prototype.remoteDescription;

/**
 * @type {RTCSignalingState}
 * Read only.
 */
RTCPeerConnection.prototype.signalingState;

/**
 * @param {?RTCConfiguration=} configuration
 * @param {?MediaConstraints=} constraints
 * @return {undefined}
 */
RTCPeerConnection.prototype.updateIce = function(configuration, constraints) {};

/**
 * Void in Chrome for now, a promise that you can then/catch in Firefox.
 * @param {!RTCIceCandidate} candidate
 * @param {!RTCVoidCallback=} successCallback
 * @param {function(DOMException)=} errorCallback
 * @return {!Promise|undefined}
 */
RTCPeerConnection.prototype.addIceCandidate = function(candidate, successCallback, errorCallback) {};

/**
 * @type {!RTCIceGatheringState}
 * Read only.
 */
RTCPeerConnection.prototype.iceGatheringState;

/**
 * @type {!RTCIceConnectionState}
 * Read only.
 */
RTCPeerConnection.prototype.iceConnectionState;

/**
 * @type {!RTCPeerConnectionState}
 * Read only.
 */
RTCPeerConnection.prototype.connectionState;

/**
 * @return {!Array<!MediaStream>}
 */
RTCPeerConnection.prototype.getLocalStreams = function() {};

/**
 * @return {!Array<!MediaStream>}
 */
RTCPeerConnection.prototype.getRemoteStreams = function() {};

/**
 * @param {string} streamId
 * @return {MediaStream}
 */
RTCPeerConnection.prototype.getStreamById = function(streamId) {};

/**
 * @return {!Array<!RTCRtpSender>}
 */
RTCPeerConnection.prototype.getSenders = function() {};

/**
 * @return {!Array<!RTCRtpReceiver>}
 */
RTCPeerConnection.prototype.getReceivers = function() {};

/**
 * @param {?string} label
 * @param {RTCDataChannelInit=} dataChannelDict
 * @return {!RTCDataChannel}
 */
RTCPeerConnection.prototype.createDataChannel =
    function(label, dataChannelDict) {};
/**
 * @param {!MediaStream} stream
 * @param {!MediaConstraints=} constraints
 * @return {undefined}
 */
RTCPeerConnection.prototype.addStream = function(stream, constraints) {};

/**
 * @param {!MediaStream} stream
 * @return {undefined}
 */
RTCPeerConnection.prototype.removeStream = function(stream) {};

/**
 * @param {!MediaStreamTrack} track
 * @param {!MediaStream} stream
 * @param {...MediaStream} var_args Additional streams.
 * @return {!RTCRtpSender}
 */
RTCPeerConnection.prototype.addTrack = function(track, stream, var_args) {};

/**
 * @param {!MediaStreamTrack|string} trackOrKind
 * @param {?RTCRtpTransceiverInit=} init
 * @return {!RTCRtpTransceiver}
 */
RTCPeerConnection.prototype.addTransceiver = function(trackOrKind, init) {};

/**
 * Returns the list of transceivers are currently attached to this peer.
 *
 * @return {!Array<!RTCRtpTransceiver>}
 */
RTCPeerConnection.prototype.getTransceivers = function() {};

/**
 * @return {!RTCConfiguration}
 */
RTCPeerConnection.prototype.getConfiguration = function() {};

/**
 * @param {!RTCConfiguration} configuration
 * @return {undefined}
 */
RTCPeerConnection.prototype.setConfiguration = function(configuration) {};

/**
 * @param {!RTCRtpSender} sender
 * @return {undefined}
 */
RTCPeerConnection.prototype.removeTrack = function(sender) {};

// TODO(bemasc): Add identity provider stuff once implementations exist

// TODO(rjogrady): Per w3c spec, getStats() should always return a Promise.
// Remove RTCStatsReport from the return value once Firefox supports that.
/**
 * Firefox' getstats is synchronous and returns a much simpler
 * {!RTCStatsReport} Map-like object.
 * @param {!RTCStatsCallback=} successCallback
 * @param {MediaStreamTrack=} selector
 * @return {undefined|!RTCStatsReport|!Promise<!RTCStatsReport>}
 */
RTCPeerConnection.prototype.getStats = function(successCallback, selector) {};

RTCPeerConnection.prototype.close = function() {};

/**
 * @type {?function(!Event)}
 */
RTCPeerConnection.prototype.onnegotiationneeded;

/**
 * @type {?function(!RTCPeerConnectionIceEvent)}
 */
RTCPeerConnection.prototype.onicecandidate;

/**
 * @type {?function(!Event)}
 */
RTCPeerConnection.prototype.onicegatheringstatechange;

/**
 * @type {?function(!Event)}
 */
RTCPeerConnection.prototype.onsignalingstatechange;

/**
 * @type {?function(!MediaStreamEvent)}
 */
RTCPeerConnection.prototype.onaddstream;

/**
 * @type {?function(!RTCTrackEvent)}
 */
RTCPeerConnection.prototype.ontrack;

/**
 * @type {?function(!MediaStreamEvent)}
 */
RTCPeerConnection.prototype.onremovestream;

/**
 * @type {?function(!Event)}
 */
RTCPeerConnection.prototype.oniceconnectionstatechange;

/**
 * @type {?function(!RTCDataChannelEvent)}
 */
RTCPeerConnection.prototype.ondatachannel;

/**
 * @type {?function(!Event)}
 */
RTCPeerConnection.prototype.onconnectionstatechange;

/**
 * @typedef {string}
 * @see https://www.w3.org/TR/webrtc/#dom-rtcerrordetailtype
 * Possible values: 'data-channel-failure', 'dtls-failure',
 *   'fingerprint-failure', 'sctp-failure', 'sdp-syntax-error',
 *   'hardware-encoder-not-available', 'hardware-encoder-error'
 */
var RTCErrorDetailType;

/**
 * @see https://www.w3.org/TR/webrtc/#rtcerror-interface
 * @interface
 */
function RTCError() {}

/** @const {!RTCErrorDetailType} */
RTCError.prototype.errorDetail;

/** @const {number|undefined} */
RTCError.prototype.sdpLineNumber;

/** @const {number|undefined} */
RTCError.prototype.httpRequestStatusCode;

/** @const {number|undefined} */
RTCError.prototype.sctpCauseCode;

/** @const {number|undefined} */
RTCError.prototype.receivedAlert;

/** @const {number|undefined} */
RTCError.prototype.sentAlert;

/**
 * @see https://www.w3.org/TR/webrtc/#rtcerrorevent-interface
 * @interface
 */
function RTCErrorEvent() {}

/** @const {!RTCError} */
RTCErrorEvent.prototype.error;

/** @const {string} */
RTCErrorEvent.prototype.message;
/*
 * Copyright 2016 The Closure Compiler Authors
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/**
 * @fileoverview Definitions for W3C's Screen Orientation API.
 * @see https://w3c.github.io/screen-orientation/
 *
 * @externs
 */

/**
 * @interface
 * @extends {EventTarget}
 * @see https://w3c.github.io/screen-orientation/#screenorientation-interface
 */
var ScreenOrientation = function() {};

/**
 * @param {string} orientation
 * @return {!Promise<void>}
 */
ScreenOrientation.prototype.lock = function(orientation) {};

/** @return {void} */
ScreenOrientation.prototype.unlock = function() {};

/** @const {string} */
ScreenOrientation.prototype.type;

/** @const {number} */
ScreenOrientation.prototype.angle;

/** @type {?function(!Event)} */
ScreenOrientation.prototype.onchange;

/**
 * @type {?ScreenOrientation}
 * @see https://w3c.github.io/screen-orientation/#extensions-to-the-screen-interface
 */
Screen.prototype.orientation;
/*
 * Copyright 2020 The Closure Compiler Authors
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/**
 * Screen Wake Lock API
 * W3C Editor's Draft 01 September 2020
 * @externs
 * @see https://w3c.github.io/screen-wake-lock/
 */


/** @type {!WakeLock} */
Navigator.prototype.wakeLock;


/**
 * @interface
 * @see https://w3c.github.io/screen-wake-lock/#the-wakelock-interface
 */
function WakeLock() {};

/**
 * @param {string} type
 * @return {!Promise<!WakeLockSentinel>}
 */
WakeLock.prototype.request = function(type) {};


/**
 * @interface
 * @extends {EventTarget}
 * @see https://w3c.github.io/screen-wake-lock/#the-wakelocksentinel-interface
 */
function WakeLockSentinel() {};

/** @type {?function(!Event)} */
WakeLockSentinel.prototype.onrelease;

/** @return {!Promise<void>} */
WakeLockSentinel.prototype.release = function() {};

/** @type {boolean} @const */
WakeLockSentinel.prototype.released;

/** @type {string} @const */
WakeLockSentinel.prototype.type;
/*
 * Copyright 2008 The Closure Compiler Authors
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/**
 * @fileoverview Definitions for W3C's Selection API.
 *
 * @see https://w3c.github.io/selection-api/
 *
 * @externs
 */

/**
 * @constructor
 * @see http://w3c.github.io/selection-api/#selection-interface
 */
function Selection() {}

/**
 * @type {?Node}
 * @see https://w3c.github.io/selection-api/#dom-selection-anchornode
 */
Selection.prototype.anchorNode;

/**
 * @type {number}
 * @see https://w3c.github.io/selection-api/#dom-selection-anchoroffset
 */
Selection.prototype.anchorOffset;

/**
 * @type {?Node}
 * @see https://w3c.github.io/selection-api/#dom-selection-focusnode
 */
Selection.prototype.focusNode;

/**
 * @type {number}
 * @see https://w3c.github.io/selection-api/#dom-selection-focusoffset
 */
Selection.prototype.focusOffset;

/**
 * @type {boolean}
 * @see https://w3c.github.io/selection-api/#dom-selection-iscollapsed
 */
Selection.prototype.isCollapsed;

/**
 * @type {number}
 * @see https://w3c.github.io/selection-api/#dom-selection-rangecount
 */
Selection.prototype.rangeCount;

/**
 * @type {string}
 * @see https://w3c.github.io/selection-api/#dom-selection-type
 */
Selection.prototype.type;

/**
 * @param {number} index
 * @return {!Range}
 * @nosideeffects
 * @see https://w3c.github.io/selection-api/#dom-selection-getrangeat
 */
Selection.prototype.getRangeAt = function(index) {};

/**
 * TODO(tjgq): Clean up internal usages and make the `range` parameter a
 * `!Range` per the spec.
 * @param {?Range} range
 * @return {undefined}
 * @see https://w3c.github.io/selection-api/#dom-selection-addrange
 */
Selection.prototype.addRange = function(range) {};

/**
 * @param {!Range} range
 * @return {undefined}
 * @see https://w3c.github.io/selection-api/#dom-selection-removerange
 */
Selection.prototype.removeRange = function(range) {};

/**
 * @return {undefined}
 * @see https://w3c.github.io/selection-api/#dom-selection-removeallranges
 */
Selection.prototype.removeAllRanges = function() {};

/**
 * @return {undefined}
 * @see https://w3c.github.io/selection-api/#dom-selection-empty
 */
Selection.prototype.empty = function() {};

/**
 * @param {?Node} node
 * @param {number=} offset
 * @return {undefined}
 * @see https://w3c.github.io/selection-api/#dom-selection-collapse
 */
Selection.prototype.collapse = function(node, offset) {};

/**
 * @param {?Node} node
 * @param {number=} offset
 * @return {undefined}
 * @see https://w3c.github.io/selection-api/#dom-selection-setposition
 */
Selection.prototype.setPosition = function(node, offset) {};

/**
 * @return {undefined}
 * @see https://w3c.github.io/selection-api/#dom-selection-collapsetostart
 */
Selection.prototype.collapseToStart = function() {};

/**
 * @return {undefined}
 * @see https://w3c.github.io/selection-api/#dom-selection-collapsetoend
 */
Selection.prototype.collapseToEnd = function() {};

/**
 * TODO(tjgq): Clean up internal usages and make the `node` parameter a `!Node`
 * per the spec.
 * @param {?Node} node
 * @param {number=} offset
 * @return {undefined}
 * @see https://w3c.github.io/selection-api/#dom-selection-extend
 */
Selection.prototype.extend = function(node, offset) {};

/**
 * TODO(tjgq): Clean up internal usages and make the `anchorNode` and
 * `focusNode` parameters `!Node` per the spec.
 * @param {?Node} anchorNode
 * @param {number} anchorOffset
 * @param {?Node} focusNode
 * @param {number} focusOffset
 * @return {undefined}
 * @see https://w3c.github.io/selection-api/#dom-selection-setbaseandextent
 */
Selection.prototype.setBaseAndExtent = function(anchorNode, anchorOffset, focusNode, focusOffset) {};

/**
 * TODO(tjgq): Clean up internal usages and make the `node` parameter a `!Node`
 * per the spec.
 * @param {?Node} node
 * @return {undefined}
 * @see http://w3c.github.io/selection-api/#dom-selection-selectallchildren
 */
Selection.prototype.selectAllChildren = function(node) {};

/**
 * @return {undefined}
 * @see https://w3c.github.io/selection-api/#dom-selection-deletefromdocument
 */
Selection.prototype.deleteFromDocument = function() {};

/**
 * @param {!Node} node
 * @param {boolean=} allowPartialContainment
 * @return {boolean}
 * @nosideeffects
 * @see https://w3c.github.io/selection-api/#dom-selection-containsnode
 */
Selection.prototype.containsNode = function(node, allowPartialContainment) {};

/**
 * @return {?Selection}
 * @nosideeffects
 * @see https://w3c.github.io/selection-api/#dom-window-getselection
 */
Window.prototype.getSelection = function() {};

/**
 * @return {?Selection}
 * @nosideeffects
 * @see https://w3c.github.io/selection-api/#dom-document-getselection
 */
Document.prototype.getSelection = function() {};

/**
 * TODO(tjgq): Clean up internal usages and make this `?function(!Event): void`
 * per the spec.
 * @type {?function(?Event)}
 * @see https://w3c.github.io/selection-api/#dom-globaleventhandlers-onselectstart
 */
Element.prototype.onselectstart;

/**
 * @type {?function(!Event): void}
 * @see https://w3c.github.io/selection-api/#dom-globaleventhandlers-onselectionchange
 */
Element.prototype.onselectionchange;
/*
 * Copyright 2008 The Closure Compiler Authors
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/**
 * @fileoverview Definitions for W3C's Selectors API.
 *  This file depends on w3c_dom1.js.
 *  @see http://www.w3.org/TR/selectors-api2/
 *
 * @externs
 */

/**
 * @param {string} selectors
 * @return {?Element}
 * @override
 * @nosideeffects
 */
Document.prototype.querySelector = function(selectors) {};

/**
 * @param {string} selectors
 * @return {!NodeList<!Element>}
 * @override
 * @nosideeffects
 */
Document.prototype.querySelectorAll = function(selectors) {};

/**
 * @param {string} selectors
 * @return {?Element}
 * @override
 * @nosideeffects
 */
Element.prototype.querySelector = function(selectors) {};

/**
 * @param {string} selectors
 * @return {!NodeList<!Element>}
 * @override
 * @nosideeffects
 */
Element.prototype.querySelectorAll = function(selectors) {};

/**
 * https://dom.spec.whatwg.org/#dom-element-closest
 * https://developer.mozilla.org/en-US/docs/Web/API/Element.closest
 * @param {string} selectors
 * @return {?Element}
 * @nosideeffects
 */
Element.prototype.closest = function(selectors) {};

/**
 * https://dom.spec.whatwg.org/#dom-element-matches
 * https://developer.mozilla.org/en-US/docs/Web/API/Element.matches
 * @param {string} selectors
 * @return {boolean}
 * @nosideeffects
 */
Element.prototype.matches = function(selectors) {};

/**
 * @param {string} selectors
 * @param {(Node|NodeList<?>)=} refNodes
 * @return {boolean}
 * @nosideeffects
 */
Element.prototype.matchesSelector = function(selectors, refNodes) {};

/**
 * @see https://developer.mozilla.org/en/DOM/Node.mozMatchesSelector
 * @param {string} selectors
 * @return {boolean}
 * @nosideeffects
 */
Element.prototype.mozMatchesSelector = function(selectors) {};

/**
 * @see http://developer.apple.com/library/safari/documentation/WebKit/Reference/ElementClassRef/Element/Element.html
 * @param {string} selectors
 * @return {boolean}
 * @nosideeffects
 */
Element.prototype.webkitMatchesSelector = function(selectors) {};

/**
 * @see http://msdn.microsoft.com/en-us/library/ff975201.aspx
 * @param {string} selectors
 * @return {boolean}
 * @nosideeffects
 */
Element.prototype.msMatchesSelector = function(selectors) {};

/**
 * @see http://www.opera.com/docs/changelogs/windows/1150/
 * @param {string} selectors
 * @return {boolean}
 * @nosideeffects
 */
Element.prototype.oMatchesSelector = function(selectors) {};
/*
 * Copyright 2014 The Closure Compiler Authors
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/**
 * @fileoverview Externs for service worker.
 *
 * @see http://www.w3.org/TR/service-workers/
 * @externs
 */

/**
 * @see http://www.w3.org/TR/service-workers/#service-worker-interface
 * @constructor
 * @extends {Worker}
 */
function ServiceWorker() {}

/** @type {string} */
ServiceWorker.prototype.scriptURL;

/** @type {ServiceWorkerState} */
ServiceWorker.prototype.state;

/** @type {?function(!Event)} */
ServiceWorker.prototype.onstatechange;

/**
 *  Set of possible string values: 'installing', 'installed', 'activating',
 * 'activated', 'redundant'.
 *  @typedef {string}
 */
var ServiceWorkerState;

/**
 * @see https://w3c.github.io/ServiceWorker/#navigationpreloadmanager
 * @constructor
 */
function NavigationPreloadManager() {}

/** @return {!Promise<void>} */
NavigationPreloadManager.prototype.enable = function() {};

/** @return {!Promise<void>} */
NavigationPreloadManager.prototype.disable = function() {};

/**
 * @param {string=} value
 * @return {!Promise<void>}
 */
NavigationPreloadManager.prototype.setHeaderValue = function(value) {};

/** @return {!Promise<NavigationPreloadState>} */
NavigationPreloadManager.prototype.getState = function() {};

/**
 *  @typedef {{
 *   enabled: (boolean|undefined),
 *   headerValue: (string|undefined)
 * }}
 */
var NavigationPreloadState;

/** @record */
function PushSubscriptionOptions() {}

/** @type {ArrayBuffer|undefined} */
PushSubscriptionOptions.prototype.applicationServerKey;

/** @type {boolean|undefined} */
PushSubscriptionOptions.prototype.userVisibleOnly;

/** @record */
function PushSubscriptionOptionsInit() {}

/** @type {BufferSource|string|undefined} */
PushSubscriptionOptionsInit.prototype.applicationServerKey;

/** @type {boolean|undefined} */
PushSubscriptionOptionsInit.prototype.userVisibleOnly;


/**
 * @see https://w3c.github.io/push-api/
 * @constructor
 */
function PushSubscription() {}

/** @type {string} */
PushSubscription.prototype.endpoint;

/**
 * Please note there is an intent to deprecate this field in Chrome 43 or 44.
 * See https://www.chromestatus.com/feature/5283829761703936.
 * @type {string}
 */
PushSubscription.prototype.subscriptionId;

/** @type {!PushSubscriptionOptions} */
PushSubscription.prototype.options;

/** @return {!Promise<boolean>} */
PushSubscription.prototype.unsubscribe = function() {};

/** @enum {string} */
// This is commented out since it has not been implemented yet in Chrome beta.
// Uncomment once it is available.
// var PushPermissionStatus  = {
//  GRANTED: 'granted',
//  DENIED: 'denied',
//  DEFAULT: 'default'
//};

/**
 * @see https://w3c.github.io/push-api/#idl-def-PushManager
 * @constructor
 */
function PushManager() {}

/**
 * @param {PushSubscriptionOptionsInit=} opt_options
 * @return {!Promise<!PushSubscription>}
 */
PushManager.prototype.subscribe = function(opt_options) {};

/** @return {!Promise<PushSubscription>} */
PushManager.prototype.getSubscription = function() {};

/** @return {!Promise<PushPermissionStatus>} */
// This is commented out since it has not been implemented yet in Chrome beta.
// Uncomment once it is available.
// PushManager.prototype.hasPermission = function() {};

/**
 * @see https://wicg.github.io/BackgroundSync/spec/#sync-manager-interface
 * @constructor
 */
function SyncManager() {}

/**
 * @param {string} tag
 * @return {!Promise<void>}
 */
SyncManager.prototype.register = function(tag) {}

/**
 * @return {!Promise<Array<string>>}
 */
SyncManager.prototype.getTags = function() {}

/**
 * @see https://wicg.github.io/BackgroundSync/spec/#sync-event
 * @constructor
 * @extends{ExtendableEvent}
 */
function SyncEvent() {}

/** @type {string} */
SyncEvent.prototype.tag;

/** @type {boolean} */
SyncEvent.prototype.lastChance;

/**
 * @see http://www.w3.org/TR/push-api/#idl-def-PushMessageData
 * @constructor
 */
function PushMessageData() {}

/** @return {!ArrayBuffer} */
PushMessageData.prototype.arrayBuffer = function() {};

/** @return {!Blob} */
PushMessageData.prototype.blob = function() {};

/** @return {*} */
PushMessageData.prototype.json = function() {};

/** @return {string} */
PushMessageData.prototype.text = function() {};


/**
 * @see http://www.w3.org/TR/push-api/#idl-def-PushEvent
 * @constructor
 * @param {string} type
 * @param {!ExtendableEventInit=} opt_eventInitDict
 * @extends {ExtendableEvent}
 */
function PushEvent(type, opt_eventInitDict) {}

/** @type {?PushMessageData} */
PushEvent.prototype.data;


/**
 * @see http://www.w3.org/TR/service-workers/#service-worker-registration-interface
 * @interface
 * @extends {EventTarget}
 */
function ServiceWorkerRegistration() {}

/** @type {ServiceWorker} */
ServiceWorkerRegistration.prototype.installing;

/** @type {ServiceWorker} */
ServiceWorkerRegistration.prototype.waiting;

/** @type {ServiceWorker} */
ServiceWorkerRegistration.prototype.active;

/** @type {NavigationPreloadManager} */
ServiceWorkerRegistration.prototype.navigationPreload;

/** @type {string} */
ServiceWorkerRegistration.prototype.scope;

/** @return {!Promise<boolean>} */
ServiceWorkerRegistration.prototype.unregister = function() {};

/** @type {?function(!Event)} */
ServiceWorkerRegistration.prototype.onupdatefound;

/** @return {!Promise<void>} */
ServiceWorkerRegistration.prototype.update = function() {};

/**
 * @see https://w3c.github.io/push-api/
 * @type {!PushManager}
 */
ServiceWorkerRegistration.prototype.pushManager;

/**
 * @see https://notifications.spec.whatwg.org/#service-worker-api
 * @param {string} title
 * @param {NotificationOptions=} opt_options
 * @return {!Promise<void>}
 */
ServiceWorkerRegistration.prototype.showNotification =
    function(title, opt_options) {};

/**
 * @see https://notifications.spec.whatwg.org/#service-worker-api
 * @param {!GetNotificationOptions=} opt_filter
 * @return {!Promise<?Array<?Notification>>}
 */
ServiceWorkerRegistration.prototype.getNotifications = function(opt_filter) {};

/**
 * @see https://wicg.github.io/BackgroundSync/spec/#service-worker-registration-extensions
 * @type {!SyncManager}
 */
ServiceWorkerRegistration.prototype.sync;

/**
 * @see http://www.w3.org/TR/service-workers/#service-worker-container-interface
 * @interface
 * @extends {EventTarget}
 */
function ServiceWorkerContainer() {}

/** @type {?ServiceWorker} */
ServiceWorkerContainer.prototype.controller;

/** @type {!Promise<!ServiceWorkerRegistration>} */
ServiceWorkerContainer.prototype.ready;

/**
 * @param {!TrustedScriptURL|string} scriptURL
 * @param {RegistrationOptions=} opt_options
 * @return {!Promise<!ServiceWorkerRegistration>}
 */
ServiceWorkerContainer.prototype.register = function(scriptURL, opt_options) {};

/**
 * @param {string=} opt_documentURL
 * @return {!Promise<!ServiceWorkerRegistration|undefined>}
 */
ServiceWorkerContainer.prototype.getRegistration = function(opt_documentURL) {};

/**
 * @return {!Promise<Array<!ServiceWorkerRegistration>>}
 */
ServiceWorkerContainer.prototype.getRegistrations = function() {};

/** @type {?function(!Event): void} */
ServiceWorkerContainer.prototype.oncontrollerchange;

/** @type {?function(!ExtendableMessageEvent): void} */
ServiceWorkerContainer.prototype.onmessage;

/** @type {?function(!ErrorEvent): void} */
ServiceWorkerContainer.prototype.onerror;

/**
 * @typedef {{scope: (string|undefined), useCache: (boolean|undefined), updateViaCache: (string|undefined)}}
 */
var RegistrationOptions;

/** @type {!ServiceWorkerContainer} */
Navigator.prototype.serviceWorker;

/**
 * @see http://www.w3.org/TR/service-workers/#service-worker-global-scope-interface
 * @interface
 * @extends {WorkerGlobalScope}
 */
function ServiceWorkerGlobalScope() {}

/** @type {!Cache} */
ServiceWorkerGlobalScope.prototype.scriptCache;

/** @type {!CacheStorage} */
ServiceWorkerGlobalScope.prototype.caches;

/** @type {!ServiceWorkerClients} */
ServiceWorkerGlobalScope.prototype.clients;

/** @type {string} */
ServiceWorkerGlobalScope.prototype.scope;

/** @type {!ServiceWorkerRegistration} */
ServiceWorkerGlobalScope.prototype.registration;

/** @return {!Promise<void>} */
ServiceWorkerGlobalScope.prototype.skipWaiting = function() {};

/** @type {!Console} */
ServiceWorkerGlobalScope.prototype.console;

/** @type {?function(!InstallEvent)} */
ServiceWorkerGlobalScope.prototype.oninstall;

/** @type {?function(!ExtendableEvent)} */
ServiceWorkerGlobalScope.prototype.onactivate;

/** @type {?function(!FetchEvent)} */
ServiceWorkerGlobalScope.prototype.onfetch;

/**
 * TODO(mtragut): This handler should get a custom event in the future.
 * @type {?function(!Event)}
 */
ServiceWorkerGlobalScope.prototype.onbeforeevicted;

/**
 * TODO(mtragut): This handler should get a custom event in the future.
 * @type {?function(!Event)}
 */
ServiceWorkerGlobalScope.prototype.onevicted;

/** @type {?function(!MessageEvent)} */
ServiceWorkerGlobalScope.prototype.onmessage;

/**
 * While not strictly correct, this should be effectively correct. Notification
 * is the Notification constructor but calling it from the Service Worker throws
 * (https://notifications.spec.whatwg.org/#constructors) so its only use is as
 * an object holding some static properties (note that requestPermission is only
 * exposed to window context - https://notifications.spec.whatwg.org/#api).
 *
 * @type {{
 *   permission: string,
 *   maxActions: number,
 * }}
 */
ServiceWorkerGlobalScope.prototype.Notification;

/**
 * @see http://www.w3.org/TR/service-workers/#service-worker-client-interface
 * @constructor
 */
function ServiceWorkerClient() {}

/** @type {!Promise<void>} */
ServiceWorkerClient.prototype.ready;

/** @type {boolean} */
ServiceWorkerClient.prototype.hidden;

/** @type {boolean} */
ServiceWorkerClient.prototype.focused;

/** @type {VisibilityState} */
ServiceWorkerClient.prototype.visibilityState;

/** @type {string} */
ServiceWorkerClient.prototype.url;

/** @type {string} */
ServiceWorkerClient.prototype.id;

/**
 * // TODO(mtragut): Possibly replace the type with enum ContextFrameType once
 * the enum is defined.
 * @type {string}
 */
ServiceWorkerClient.prototype.frameType;

/**
 * @param {*} message
 * @param {(!Array<!Transferable>|undefined)=} opt_transfer
 * @return {undefined}
 */
ServiceWorkerClient.prototype.postMessage = function(message, opt_transfer) {};

/** @return {!Promise} */
ServiceWorkerClient.prototype.focus = function() {};

/**
 * @param {string} url
 * @return {!Promise<!ServiceWorkerClient>}
 */
ServiceWorkerClient.prototype.navigate = function(url) {};

/**
 * @see http://www.w3.org/TR/service-workers/#service-worker-clients-interface
 * @interface
 */
function ServiceWorkerClients() {}

/**
 * Deprecated in Chrome M43+, use matchAll instead. Reference:
 * https://github.com/slightlyoff/ServiceWorker/issues/610.
 * TODO(joeltine): Remove when getAll is fully deprecated.
 * @param {ServiceWorkerClientQueryOptions=} opt_options
 * @return {!Promise<!Array<!ServiceWorkerClient>>}
 */
ServiceWorkerClients.prototype.getAll = function(opt_options) {};

/**
 * @param {ServiceWorkerClientQueryOptions=} opt_options
 * @return {!Promise<!Array<!ServiceWorkerClient>>}
 */
ServiceWorkerClients.prototype.matchAll = function(opt_options) {};

/**
 * @return {!Promise<void>}
 */
ServiceWorkerClients.prototype.claim = function() {};

/**
 * @param {string} url
 * @return {!Promise<!ServiceWorkerClient>}
 */
ServiceWorkerClients.prototype.openWindow = function(url) {};

/**
 * @param {string} id
 * @return {!Promise<!ServiceWorkerClient|undefined>}
 */
ServiceWorkerClients.prototype.get = function(id) {};

/** @typedef {{includeUncontrolled: (boolean|undefined)}} */
var ServiceWorkerClientQueryOptions;

/**
 * @see http://www.w3.org/TR/service-workers/#cache-interface
 * @interface
 */
function Cache() {}

/**
 * @param {!RequestInfo} request
 * @param {CacheQueryOptions=} opt_options
 * @return {!Promise<!Response|undefined>}
 */
Cache.prototype.match = function(request, opt_options) {};

/**
 * @param {RequestInfo=} opt_request
 * @param {CacheQueryOptions=} opt_options
 * @return {!Promise<!Array<!Response>>}
 */
Cache.prototype.matchAll = function(opt_request, opt_options) {};

/**
 * @param {!RequestInfo} request
 * @return {!Promise<void>}
 */
Cache.prototype.add = function(request) {};

/**
 * @param {!Array<!RequestInfo>} requests
 * @return {!Promise<void>}
 */
Cache.prototype.addAll = function(requests) {};

/**
 * @param {!RequestInfo} request
 * @param {!Response} response
 * @return {!Promise<void>}
 */
Cache.prototype.put = function(request, response) {};

/**
 * @param {!RequestInfo} request
 * @param {CacheQueryOptions=} opt_options
 * @return {!Promise<boolean>}
 */
Cache.prototype.delete = function(request, opt_options) {};

/**
 * @param {RequestInfo=} opt_request
 * @param {CacheQueryOptions=} opt_options
 * @return {!Promise<!Array<!Request>>}
 */
Cache.prototype.keys = function(opt_request, opt_options) {};

/**
 * @typedef {{
 *   ignoreSearch: (boolean|undefined),
 *   ignoreMethod: (boolean|undefined),
 *   ignoreVary: (boolean|undefined),
 *   prefixMatch: (boolean|undefined),
 *   cacheName: (string|undefined)
 * }}
 */
var CacheQueryOptions;

/**
 * @see http://www.w3.org/TR/service-workers/#cache-storage-interface
 * @interface
 */
function CacheStorage() {}

/**
 * Window instances have a property called caches which implements CacheStorage
 * @see https://www.w3.org/TR/service-workers/#cache-objects
 * @type {!CacheStorage}
 */
Window.prototype.caches;

/**
 * @param {!RequestInfo} request
 * @param {CacheQueryOptions=} opt_options
 * @return {!Promise<!Response|undefined>}
 */
CacheStorage.prototype.match = function(request, opt_options) {};

/**
 * @param {string} cacheName
 * @return {!Promise<boolean>}
 */
CacheStorage.prototype.has = function(cacheName) {};

/**
 * @param {string} cacheName
 * @return {!Promise<!Cache>}
 */
CacheStorage.prototype.open = function(cacheName) {};

/**
 * @param {string} cacheName
 * @return {!Promise<boolean>}
 */
CacheStorage.prototype.delete = function(cacheName) {};

/** @return {!Promise<!Array<string>>} */
CacheStorage.prototype.keys = function() {};

/**
 * @see http://www.w3.org/TR/service-workers/#extendable-event-interface
 * @constructor
 * @param {string} type
 * @param {ExtendableEventInit=} opt_eventInitDict
 * @extends {Event}
 */
function ExtendableEvent(type, opt_eventInitDict) {}

/**
 * @param {IThenable} f
 * @return {undefined}
 */
ExtendableEvent.prototype.waitUntil = function(f) {};

/**
 * @typedef {{
 *   bubbles: (boolean|undefined),
 *   cancelable: (boolean|undefined)
 * }}
 */
var ExtendableEventInit;

/**
 * @see http://www.w3.org/TR/service-workers/#install-event-interface
 * @constructor
 * @param {string} type
 * @param {InstallEventInit=} opt_eventInitDict
 * @extends {ExtendableEvent}
 */
function InstallEvent(type, opt_eventInitDict) {}

/** @type {ServiceWorker} */
ExtendableEvent.prototype.activeWorker;

/**
 * @typedef {{
 *   bubbles: (boolean|undefined),
 *   cancelable: (boolean|undefined),
 *   activeWorker: (!ServiceWorker|undefined)
 * }}
 */
var InstallEventInit;

/**
 * @see http://www.w3.org/TR/service-workers/#fetch-event-interface
 * @constructor
 * @param {string} type
 * @param {FetchEventInit=} opt_eventInitDict
 * @extends {ExtendableEvent}
 */
function FetchEvent(type, opt_eventInitDict) {}

/** @type {!Request} */
FetchEvent.prototype.request;

/**
 * @type {!Promise<Response>}
 */
FetchEvent.prototype.preloadResponse;

/**
 * @type {!ServiceWorkerClient}
 * @deprecated
 */
FetchEvent.prototype.client;

/** @type {?string} */
FetchEvent.prototype.clientId;

/** @type {boolean} */
FetchEvent.prototype.isReload;

/** @type {?string} */
FetchEvent.prototype.resultingClientId;

/**
 * @param {(Response|IThenable<Response>)} r
 * @return {undefined}
 */
FetchEvent.prototype.respondWith = function(r) {};

/**
 * @param {string} url
 * @return {!Promise<!Response>}
 */
FetchEvent.prototype.forwardTo = function(url) {};

/**
 * @return {!Promise<!Response>}
 */
FetchEvent.prototype.default = function() {};

/**
 * @typedef {{
 *   bubbles: (boolean|undefined),
 *   cancelable: (boolean|undefined),
 *   request: (!Request|undefined),
 *   preloadResponse: (!Promise<Response>),
 *   client: (!ServiceWorkerClient|undefined),
 *   isReload: (boolean|undefined)
 * }}
 */
var FetchEventInit;


/**
 * @see https://www.w3.org/TR/service-workers/#extendablemessage-event-interface
 * @param {string} type
 * @param {!ExtendableMessageEventInit<T>=} opt_eventInitDict
 * @constructor
 * @extends {ExtendableEvent}
 * @template T
 */
function ExtendableMessageEvent(type, opt_eventInitDict) {};

/** @type {T} */
ExtendableMessageEvent.prototype.data;

/** @type {string} */
ExtendableMessageEvent.prototype.origin;

/** @type {string} */
ExtendableMessageEvent.prototype.lastEventId;

/** @type {?ServiceWorkerClient|?ServiceWorker|?MessagePort} */
ExtendableMessageEvent.prototype.source;

/** @type {?Array<!MessagePort>} */
ExtendableMessageEvent.prototype.ports;


/**
 * @see https://www.w3.org/TR/service-workers/#extendablemessage-event-init-dictionary
 * @record
 * @extends {ExtendableEventInit}
 * @template T
 */
function ExtendableMessageEventInit() {};

/** @type {T} */
ExtendableMessageEventInit.prototype.data;

/** @type {string|undefined} */
ExtendableMessageEventInit.prototype.origin;

/** @type {string|undefined} */
ExtendableMessageEventInit.prototype.lastEventId;

/** @type {!ServiceWorkerClient|!ServiceWorker|!MessagePort|undefined} */
ExtendableMessageEventInit.prototype.source;

/** @type {!Array<!MessagePort>|undefined} */
ExtendableMessageEventInit.prototype.ports;
/*
 * Copyright 2011 The Closure Compiler Authors
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/**
 * @fileoverview Definitions for W3C's Speech Input 2010 draft API and the
 * 2012 Web Speech draft API (in progress).
 * 2010 Speech Input API:
 * http://www.w3.org/2005/Incubator/htmlspeech/2010/10/google-api-draft.html
 * 2012 Web Speech API:
 * http://dvcs.w3.org/hg/speech-api/raw-file/tip/speechapi.html
 * This file contains only those functions/properties that are actively
 * used in the Voice Search experiment. Because the draft is under discussion
 * and constantly evolving, this file does not attempt to stay in sync with it.
 *
 * @externs
 */

// W3C Speech Input API implemented in Chrome M12
/**
 * @constructor
 * @extends {UIEvent}
 */
function SpeechInputEvent() {}

/** @type {SpeechInputResultList} */
SpeechInputEvent.prototype.results;


/**
 * @constructor
 */
function SpeechInputResultList() {}

/** @type {number} */
SpeechInputResultList.prototype.length;


/**
 * @constructor
 */
function SpeechInputResult() {}

/** @type {string} */
SpeechInputResult.prototype.utterance;

/** @type {number} */
SpeechInputResult.prototype.confidence;


// HTMLInputElement
/** @type {boolean} */
HTMLInputElement.prototype.webkitspeech;

/** @type {?function (Event)} */
HTMLInputElement.prototype.onwebkitspeechchange;



// W3C Web Speech API implemented in Chrome M23
/**
 * @constructor
 * @implements {EventTarget}
 */
function SpeechRecognition() {}

/** @override */
SpeechRecognition.prototype.addEventListener = function(
    type, listener, opt_options) {};

/** @override */
SpeechRecognition.prototype.removeEventListener = function(
    type, listener, opt_options) {};

/** @override */
SpeechRecognition.prototype.dispatchEvent = function(evt) {};

/** @type {SpeechGrammarList} */
SpeechRecognition.prototype.grammars;

/** @type {string} */
SpeechRecognition.prototype.lang;

/** @type {boolean} */
SpeechRecognition.prototype.continuous;

/** @type {boolean} */
SpeechRecognition.prototype.interimResults;

/** @type {number} */
SpeechRecognition.prototype.maxAlternatives;

/** @type {string} */
SpeechRecognition.prototype.serviceURI;

/** @type {function()} */
SpeechRecognition.prototype.start;

/** @type {function()} */
SpeechRecognition.prototype.stop;

/** @type {function()} */
SpeechRecognition.prototype.abort;

/** @type {?function(!Event)} */
SpeechRecognition.prototype.onaudiostart;

/** @type {?function(!Event)} */
SpeechRecognition.prototype.onsoundstart;

/** @type {?function(!Event)} */
SpeechRecognition.prototype.onspeechstart;

/** @type {?function(!Event)} */
SpeechRecognition.prototype.onspeechend;

/** @type {?function(!Event)} */
SpeechRecognition.prototype.onsoundend;

/** @type {?function(!Event)} */
SpeechRecognition.prototype.onaudioend;

/** @type {?function(!SpeechRecognitionEvent)} */
SpeechRecognition.prototype.onresult;

/** @type {?function(!SpeechRecognitionEvent)} */
SpeechRecognition.prototype.onnomatch;

/** @type {?function(!SpeechRecognitionError)} */
SpeechRecognition.prototype.onerror;

/** @type {?function(!Event)} */
SpeechRecognition.prototype.onstart;

/** @type {?function(!Event)} */
SpeechRecognition.prototype.onend;


/**
 * @constructor
 * @extends {Event}
 */
function SpeechRecognitionError() {}

/** @type {string} */
SpeechRecognitionError.prototype.error;

/** @type {string} */
SpeechRecognitionError.prototype.message;


/**
 * @constructor
 */
function SpeechRecognitionAlternative() {}

/** @type {string} */
SpeechRecognitionAlternative.prototype.transcript;

/** @type {number} */
SpeechRecognitionAlternative.prototype.confidence;


/**
 * @constructor
 */
function SpeechRecognitionResult() {}

/**
 * @type {number}
 */
SpeechRecognitionResult.prototype.length;

/**
 * @type {function(number): SpeechRecognitionAlternative}
 */
SpeechRecognitionResult.prototype.item = function(index) {};

/**
 * @type {boolean}
 */
SpeechRecognitionResult.prototype.isFinal;


/**
 * @constructor
 */
function SpeechRecognitionResultList() {}

/**
 * @type {number}
 */
SpeechRecognitionResultList.prototype.length;

/**
 * @type {function(number): SpeechRecognitionResult}
 */
SpeechRecognitionResultList.prototype.item = function(index) {};


/**
 * @constructor
 * @extends {Event}
 */
function SpeechRecognitionEvent() {}

/** @type {number} */
SpeechRecognitionEvent.prototype.resultIndex;

/** @type {SpeechRecognitionResultList} */
SpeechRecognitionEvent.prototype.results;

/** @type {*} */
SpeechRecognitionEvent.prototype.interpretation;

/** @type {Document} */
SpeechRecognitionEvent.prototype.emma;


/**
 * @constructor
 */
function SpeechGrammar() {}

/** @type {string} */
SpeechGrammar.prototype.src;

/** @type {number} */
SpeechGrammar.prototype.weight;


/**
 * @constructor
 */
function SpeechGrammarList() {}

/**
 * @type {number}
 */
SpeechGrammarList.prototype.length;

/**
 * @type {function(number): SpeechGrammar}
 */
SpeechGrammarList.prototype.item = function(index) {};

/**
 * @type {function(string, number)}
 */
SpeechGrammarList.prototype.addFromUri = function(src, weight) {};

/**
 * @type {function(string, number)}
 */
SpeechGrammarList.prototype.addFromString = function(str, weight) {};


// Webkit implementations of Web Speech API
/**
 * @constructor
 * @extends {SpeechGrammarList}
 */
function webkitSpeechGrammarList() {}


/**
 * @constructor
 * @extends {SpeechGrammar}
 */
function webkitSpeechGrammar() {}


/**
 * @constructor
 * @extends {SpeechRecognitionEvent}
 */
function webkitSpeechRecognitionEvent() {}


/**
 * @constructor
 * @extends {SpeechRecognitionError}
 */
function webkitSpeechRecognitionError() {}


/**
 * @constructor
 * @extends {SpeechRecognition}
 */
function webkitSpeechRecognition() {}



// W3C Web Speech Synthesis API is implemented in Chrome M33
/**
 * @type {SpeechSynthesis}
 * @see https://dvcs.w3.org/hg/speech-api/raw-file/tip/speechapi.html#tts-section
 */
var speechSynthesis;


/**
 * @constructor
 * @param {string} text
 */
function SpeechSynthesisUtterance(text) {}

/** @type {string} */
SpeechSynthesisUtterance.prototype.text;

/** @type {string} */
SpeechSynthesisUtterance.prototype.lang;

/** @type {number} */
SpeechSynthesisUtterance.prototype.pitch;

/** @type {number} */
SpeechSynthesisUtterance.prototype.rate;

/** @type {SpeechSynthesisVoice} */
SpeechSynthesisUtterance.prototype.voice;

/** @type {number} */
SpeechSynthesisUtterance.prototype.volume;

/**
 * @param {Event} event
 */
SpeechSynthesisUtterance.prototype.onstart = function(event) {};

/**
 * @param {Event} event
 */
SpeechSynthesisUtterance.prototype.onend = function(event) {};

/**
 * @param {Event} event
 */
SpeechSynthesisUtterance.prototype.onerror = function(event) {};

/**
 * @constructor
 */
function SpeechSynthesisVoice() {}

/** @type {string} */
SpeechSynthesisVoice.prototype.voiceURI;

/** @type {string} */
SpeechSynthesisVoice.prototype.name;

/** @type {string} */
SpeechSynthesisVoice.prototype.lang;

/** @type {boolean} */
SpeechSynthesisVoice.prototype.localService;

/** @type {boolean} */
SpeechSynthesisVoice.prototype.default;


/**
 * @constructor
 * @extends {Array<!SpeechSynthesisVoice>}
 */
function SpeechSynthesisVoiceList() {}


/**
 * @interface
 * @extends {EventTarget}
 */
function SpeechSynthesis() {}

/**
 * @param {SpeechSynthesisUtterance} utterance
 * @return {undefined}
 */
SpeechSynthesis.prototype.speak = function(utterance) {};

/** @type {function()} */
SpeechSynthesis.prototype.cancel;

/** @type {function()} */
SpeechSynthesis.prototype.pause;

/** @type {function()} */
SpeechSynthesis.prototype.resume;

/**
 * @return {SpeechSynthesisVoiceList}
 */
SpeechSynthesis.prototype.getVoices = function() {};

/**
 * @param {Event} event
 * @see https://dvcs.w3.org/hg/speech-api/raw-file/tip/speechapi-errata.html
 */
SpeechSynthesis.prototype.onvoiceschanged = function(event) {};
/*
 * Copyright 2015 The Closure Compiler Authors
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/**
 * @fileoverview Definitions for W3C's Touch Events specification.
 * @see http://www.w3.org/TR/touch-events/
 * @externs
 */

/**
 * @typedef {{
 *   identifier: number,
 *   target: !EventTarget,
 *   clientX: (number|undefined),
 *   clientY: (number|undefined),
 *   screenX: (number|undefined),
 *   screenY: (number|undefined),
 *   pageX: (number|undefined),
 *   pageY: (number|undefined),
 *   radiusX: (number|undefined),
 *   radiusY: (number|undefined),
 *   rotationAngle: (number|undefined),
 *   force: (number|undefined)
 * }}
 */
var TouchInitDict;

/**
 * The Touch class represents a single touch on the surface. A touch is the
 * presence or movement of a finger that is part of a unique multi-touch
 * sequence.
 * @see http://www.w3.org/TR/touch-events/#touch-interface
 * @param {!TouchInitDict} touchInitDict
 * @constructor
 */
function Touch(touchInitDict) {}

/**
 * The x-coordinate of the touch's location relative to the window's viewport.
 * @type {number}
 */
Touch.prototype.clientX;

/**
 * The y-coordinate of the touch's location relative to the window's viewport.
 * @type {number}
 */
Touch.prototype.clientY;

/**
 * The unique identifier for this touch object.
 * @type {number}
 */
Touch.prototype.identifier;

/**
 * The x-coordinate of the touch's location in page coordinates.
 * @type {number}
 */
Touch.prototype.pageX;

/**
 * The y-coordinate of the touch's location in page coordinates.
 * @type {number}
 */
Touch.prototype.pageY;

/**
 * The x-coordinate of the touch's location in screen coordinates.
 * @type {number}
 */
Touch.prototype.screenX;

/**
 * The y-coordinate of the touch's location in screen coordinates.
 * @type {number}
 */
Touch.prototype.screenY;

/**
 * The target of this touch.
 * @type {EventTarget}
 */
Touch.prototype.target;

/**
 * @type {number}
 * @see http://www.w3.org/TR/touch-events-extensions/#widl-Touch-force
 */
Touch.prototype.force;

/**
 * @type {number}
 * @see http://www.w3.org/TR/touch-events-extensions/#widl-Touch-radiusX
 */
Touch.prototype.radiusX;

/**
 * @type {number}
 * @see http://www.w3.org/TR/touch-events-extensions/#widl-Touch-radiusY
 */
Touch.prototype.radiusY;


/**
 * @type {number}
 * @see http://www.w3.org/TR/2011/WD-touch-events-20110505/#widl-Touch-rotationAngle
 */
Touch.prototype.rotationAngle;


/**
 * Creates a new Touch object.
 * @see http://www.w3.org/TR/touch-events/#widl-Document-createTouch-Touch-WindowProxy-view-EventTarget-target-long-identifier-long-pageX-long-pageY-long-screenX-long-screenY
 * @param {Window} view
 * @param {EventTarget} target
 * @param {number} identifier
 * @param {number} pageX
 * @param {number} pageY
 * @param {number} screenX
 * @param {number} screenY
 * @return {Touch}
 */
Document.prototype.createTouch = function(view, target, identifier, pageX,
    pageY, screenX, screenY) {};


/**
 * The TouchList class is used to represent a collection of Touch objects.
 * @see http://www.w3.org/TR/touch-events/#touchlist-interface
 * @constructor
 * @implements {IArrayLike<!Touch>}
 */
function TouchList() {}

/**
 * The number of Touch objects in this TouchList object.
 * @type {number}
 */
TouchList.prototype.length;

/**
 * Returns the Touch object at the given index.
 * @param {number} index
 * @return {?Touch}
 */
TouchList.prototype.item = function(index) {};

/**
 * @param {number} identifier
 * @return {?Touch}
 * @see http://www.w3.org/TR/touch-events-extensions/#widl-TouchList-identifiedTouch-Touch-long-identifier
 */
TouchList.prototype.identifiedTouch = function(identifier) {};

/**
 * Creates a new TouchList object.
 * @see http://www.w3.org/TR/touch-events/#widl-Document-createTouchList-TouchList-Touch-touches
 * @param {Array<?Touch>} touches
 * @return {TouchList}
 */
Document.prototype.createTouchList = function(touches) {};

/**
 * @record
 * @extends {UIEventInit}
 */
function TouchEventInit() {}

/** @type {undefined|?EventTarget} */
TouchEventInit.prototype.relatedTarget;

/** @type {undefined|!Array<?Touch>} */
TouchEventInit.prototype.touches;

/** @type {undefined|!Array<?Touch>} */
TouchEventInit.prototype.targetTouches;

/** @type {undefined|!Array<?Touch>} */
TouchEventInit.prototype.changedTouches;

/**
 * The TouchEvent class encapsulates information about a touch event.
 *
 * <p>The system continually sends TouchEvent objects to an application as
 * fingers touch and move across a surface. A touch event provides a snapshot of
 * all touches during a multi-touch sequence, most importantly the touches that
 * are new or have changed for a particular target. A multi-touch sequence
 * begins when a finger first touches the surface. Other fingers may
 * subsequently touch the surface, and all fingers may move across the surface.
 * The sequence ends when the last of these fingers is lifted from the surface.
 * An application receives touch event objects during each phase of any touch.
 * </p>
 *
 * <p>The different types of TouchEvent objects that can occur are:
 * <ul>
 *   <li>touchstart - Sent when a finger for a given event touches the surface.
 *   <li>touchmove - Sent when a given event moves on the surface.
 *   <li>touchend - Sent when a given event lifts from the surface.
 *   <li>touchcancel - Sent when the system cancels tracking for the touch.
 * </ul>
 * TouchEvent objects are combined together to form high-level GestureEvent
 * objects that are also sent during a multi-touch sequence.</p>
 *
 * @see http://www.w3.org/TR/touch-events/#touchevent-interface
 * @param {string} type
 * @param {!TouchEventInit=} opt_eventInitDict
 * @extends {UIEvent}
 * @constructor
 */
function TouchEvent(type, opt_eventInitDict) {}

/**
 * A collection of Touch objects representing all touches associated with this
 * target.
 * @type {TouchList}
 */
TouchEvent.prototype.touches;

/**
 * A collection of Touch objects representing all touches associated with this
 * target.
 * @type {TouchList}
 */
TouchEvent.prototype.targetTouches;

/**
 * A collection of Touch objects representing all touches that changed in this event.
 * @type {TouchList}
 */
TouchEvent.prototype.changedTouches;

/**
 * @type {boolean}
 */
TouchEvent.prototype.altKey;

/**
 * @type {boolean}
 */
TouchEvent.prototype.metaKey;

/**
 * @type {boolean}
 */
TouchEvent.prototype.ctrlKey;

/**
 * @type {boolean}
 */
TouchEvent.prototype.shiftKey;


/**
 * Specifies the JavaScript method to invoke when the system cancels tracking
 * for the touch.
 * @type {?function(!TouchEvent)}
 */
Element.prototype.ontouchcancel;

/**
 * Specifies the JavaScript method to invoke when a given event lifts from the
 * surface.
 * @type {?function(!TouchEvent)}
 */
Element.prototype.ontouchend;

/**
 * Specifies the JavaScript method to invoke when a finger for a given event
 * moves on the surface.
 * @type {?function(!TouchEvent)}
 */
Element.prototype.ontouchmove;

/**
 * Specifies the JavaScript method to invoke when a finger for a given event
 * touches the surface.
 * @type {?function(!TouchEvent)}
 */
Element.prototype.ontouchstart;
/*
 * Copyright 2018 The Closure Compiler Authors
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/**
 * @fileoverview Definitions for W3C's Trusted Types specification.
 * @see https://w3c.github.io/webappsec-trusted-types/dist/spec/
 * @externs
 */


/** @constructor */
function TrustedHTML() {}

// function TrustedScript() was moved to `es3.js` so that is could be used by
// `eval()`.

/** @constructor */
function TrustedScriptURL() {}


/**
 * @template Options
 * @constructor
 */
function TrustedTypePolicy() {}

/**
 * @param {string} s
 * @param {...*} args
 * @return {!TrustedHTML}
 */
TrustedTypePolicy.prototype.createHTML = function(s, args) {};

/**
 * @param {string} s
 * @param {...*} args
 * @return {!TrustedScript}
 */
TrustedTypePolicy.prototype.createScript = function(s, args) {};

/**
 * @param {string} s
 * @param {...*} args
 * @return {!TrustedScriptURL}
 */
TrustedTypePolicy.prototype.createScriptURL = function(s, args) {};


/** @constructor */
function TrustedTypePolicyFactory() {}

/** @record @private */
function TrustedTypePolicyOptions() {};

/**
 *  @type {(function(string, ...*): string)|undefined},
 */
TrustedTypePolicyOptions.prototype.createHTML;

/**
 *  @type {(function(string, ...*): string)|undefined},
 */
TrustedTypePolicyOptions.prototype.createScript;

/**
 *  @type {(function(string, ...*): string)|undefined},
 */
TrustedTypePolicyOptions.prototype.createScriptURL;


/**
 * @param {string} name
 * @param {!TrustedTypePolicyOptions} policy
 * @return {!TrustedTypePolicy}
 */
TrustedTypePolicyFactory.prototype.createPolicy = function(name, policy) {};


/**
 * @param {*} obj
 * @return {boolean}
 */
TrustedTypePolicyFactory.prototype.isHTML = function(obj) {};

/**
 * @param {*} obj
 * @return {boolean}
 */
TrustedTypePolicyFactory.prototype.isScript = function(obj) {};

/**
 * @param {*} obj
 * @return {boolean}
 */
TrustedTypePolicyFactory.prototype.isScriptURL = function(obj) {};


/** @type {!TrustedHTML} */
TrustedTypePolicyFactory.prototype.emptyHTML;


/** @type {!TrustedScript} */
TrustedTypePolicyFactory.prototype.emptyScript;

/**
 * @param {string} tagName
 * @param {string} attribute
 * @param {string=} elementNs
 * @param {string=} attrNs
 * @return {?string}
 */
TrustedTypePolicyFactory.prototype.getAttributeType = function(
    tagName, attribute, elementNs, attrNs) {};

/**
 * @param {string} tagName
 * @param {string} property
 * @param {string=} elementNs
 * @return {?string}
 */
TrustedTypePolicyFactory.prototype.getPropertyType = function(
    tagName, property, elementNs) {};

/** @type {?TrustedTypePolicy} */
TrustedTypePolicyFactory.prototype.defaultPolicy;


/** @type {!TrustedTypePolicyFactory} */
var trustedTypes;
/*
 * Copyright 2017 The Closure Compiler Authors.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/**
 * @fileoverview Definitions for Vibration API based on "W3C Recommendation 18 October 2016"
 * @see https://www.w3.org/TR/2016/REC-vibration-20161018/
 *
 * @externs
 * @author vobruba.martin@gmail.com (Martin Vobruba)
 */


/**
 * @typedef {number|!Array<number>}
 * @see https://www.w3.org/TR/2016/REC-vibration-20161018/#idl-def-vibratepattern
 */
var VibratePattern;


/**
 * @param {!VibratePattern} pattern
 * @return {boolean}
 * @see https://www.w3.org/TR/2016/REC-vibration-20161018/#idl-def-navigator-vibrate(vibratepattern)
 */
Navigator.prototype.vibrate = function(pattern) {};
/*
 * Copyright 2015 The Closure Compiler Authors
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


/**
 * @fileoverview Definitions for W3C's Web Cryptography specification
 * http://www.w3.org/TR/webCryptoAPI
 * @externs
 * @author chrismoon@google.com (Chris Moon)
 * This file was created using the best practices as described in:
 *     chrome_extensions.js
 */


/**
 * @const
 * @see http://www.w3.org/TR/webCryptoAPI
 */
var webCrypto = {};


/**
 * @typedef {?{
 *   name: string
 * }}
 * @see http://www.w3.org/TR/WebCryptoAPI/#algorithm-dictionary
 */
webCrypto.Algorithm;


/**
 * @typedef {string|!webCrypto.Algorithm}
 * @see http://www.w3.org/TR/WebCryptoAPI/#dfn-AlgorithmIdentifier
 */
webCrypto.AlgorithmIdentifier;

/**
 * @typedef {webCrypto.AlgorithmIdentifier}
 * @see http://www.w3.org/TR/WebCryptoAPI/#dfn-HashAlgorithmIdentifier
 */
webCrypto.HashAlgorithmIdentifier;


/**
 * @typedef {Uint8Array}
 * @see https://www.w3.org/TR/WebCryptoAPI/#dfn-BigInteger
 */
webCrypto.BigInteger;


/**
 * @constructor
 * @see http://www.w3.org/TR/webCryptoAPI/#dfn-CryptoKey
 */
webCrypto.CryptoKey = function() {};


/**
 * @type {string} An enumerated value representing the type of the key, a secret
 *    key (for symmetric algorithm), a public or a private key
 *    (for an asymmetric algorithm).
 */
webCrypto.CryptoKey.prototype.type;


/**
 * @type {boolean} Determines whether or not the raw keying material may be
 *     exported by the application.
 */
webCrypto.CryptoKey.prototype.extractable;


/**
 * @type {!Object} An opaque object representing a particular cipher the key
 *     has to be used with.
 */
webCrypto.CryptoKey.prototype.algorithm;


/**
 * @type {!Object} Returns the cached ECMAScript object associated with the
 *   usages internal slot, which indicates which cryptographic operations are
 *   permissible to be used with this key.
 */
webCrypto.CryptoKey.prototype.usages;


/**
 * @constructor
 * @see https://www.w3.org/TR/WebCryptoAPI/#keypair
 */
webCrypto.CryptoKeyPair = function() {};


/**
 * @type {!webCrypto.CryptoKey}
 */
webCrypto.CryptoKeyPair.prototype.publicKey;


/**
 * @type {!webCrypto.CryptoKey}
 */
webCrypto.CryptoKeyPair.prototype.privateKey;


/**
 * @typedef {?{
 *   name: string
 * }}
 * @see http://www.w3.org/TR/WebCryptoAPI/#key-algorithm-dictionary-members
 */
webCrypto.KeyAlgorithm;


/**
 * @constructor
 * @see http://www.w3.org/TR/WebCryptoAPI/#dfn-JsonWebKey
 * @see Section 3.1:
 *     https://tools.ietf.org/html/draft-ietf-jose-json-web-key-41
 */
webCrypto.JsonWebKey = function() {};


/**
 * @type {string} Identifies the cryptographic algorithm family used with
 *     the key, such as "RSA" or "EC".
 */
webCrypto.JsonWebKey.prototype.kty;


/**
 * @type {string} Identifies the intended use of the public key.
 */
webCrypto.JsonWebKey.prototype.use;


/**
 * @type {!Array<string>} Identifies the operation(s) that the key is
 *     intended to be used for.
 */
webCrypto.JsonWebKey.prototype.key_ops;


/**
 * @type {string} Identifies the algorithm intended for use with the key.
 */
webCrypto.JsonWebKey.prototype.alg;


/**
 * @type {boolean} Boolean to be used with kty values.
 */
webCrypto.JsonWebKey.prototype.ext;


/**
 * @type {string} Identifies the cryptographic curve used with the key.
 */
webCrypto.JsonWebKey.prototype.crv;


/**
 * @type {string} Contains the x coordinate for the elliptic curve point.
 */
webCrypto.JsonWebKey.prototype.x;


/**
 * @type {string} Contains the y coordinate for the elliptic curve point.
 */
webCrypto.JsonWebKey.prototype.y;


/**
 * @type {string} Contains the Elliptic Curve private key value.
 */
webCrypto.JsonWebKey.prototype.d;


/**
 * @type {string} Contains the modulus value for the RSA public key.
 */
webCrypto.JsonWebKey.prototype.n;


/**
 * @type {string} Contains the exponent value for the RSA public key.
 */
webCrypto.JsonWebKey.prototype.e;


/**
 * @type {string} Contains the first prime factor.
 */
webCrypto.JsonWebKey.prototype.p;


/**
 * @type {string} Contains the second prime factor.
 */
webCrypto.JsonWebKey.prototype.q;


/**
 * @type {string} Contains the Chinese Remainder Theorem (CRT) exponent of
 *     the first factor.
 */
webCrypto.JsonWebKey.prototype.dp;


/**
 * @type {string} Contains the Chinese Remainder Theorem (CRT) exponent of
 *     the second factor.
 */
webCrypto.JsonWebKey.prototype.dq;


/**
 * @type {string} Contains the Chinese Remainder Theorem (CRT) coefficient
 *     of the second factor.
 */
webCrypto.JsonWebKey.prototype.qi;


/**
 * @type {!Array<!webCrypto.RsaOtherPrimesInfo>} Contains an array of
 *     information about any third and subsequent primes, should they exist.
 */
webCrypto.JsonWebKey.prototype.oth;


/**
 * @type {string} Contains the value of the symmetric (or other
 *     single-valued) key.
 */
webCrypto.JsonWebKey.prototype.k;


/**
 * @constructor
 * @see http://www.w3.org/TR/WebCryptoAPI/#dfn-RsaOtherPrimesInfo
 * @see Section-6.3.2.7:
 *     https://tools.ietf.org/html/draft-ietf-jose-json-web-algorithms-40
 */
webCrypto.RsaOtherPrimesInfo = function() {};


/**
 * @type {string} Parameter within an "oth" array member represents the value
 *     of a subsequent prime factor.
 */
webCrypto.RsaOtherPrimesInfo.prototype.r;


/**
 * @type {string} Parameter within an "oth" array member represents the CRT
 *     exponent of the corresponding prime factor.
 */
webCrypto.RsaOtherPrimesInfo.prototype.d;


/**
 * @type {string} Parameter within an "oth" array member represents the CRT
 *     coefficient of the corresponding prime factor.
 */
webCrypto.RsaOtherPrimesInfo.prototype.t;


/**
 * @record
 * @extends webCrypto.Algorithm
 * @see https://www.w3.org/TR/WebCryptoAPI/#dfn-RsaKeyGenParams
 */
webCrypto.RsaKeyGenParams;
/**
 * @type {number}
 */
webCrypto.RsaKeyGenParams.prototype.modulusLength;
/**
 * @type {webCrypto.BigInteger}
 */
webCrypto.RsaKeyGenParams.prototype.publicExponent;


/**
 * @record
 * @extends webCrypto.RsaKeyGenParams
 * @see https://www.w3.org/TR/WebCryptoAPI/#dfn-RsaHashedKeyGenParams
 */
webCrypto.RsaHashedKeyGenParams;
/**
 * @type {webCrypto.HashAlgorithmIdentifier}
 */
webCrypto.RsaHashedKeyGenParams.prototype.hash;


/**
 * @record
 * @extends webCrypto.KeyAlgorithm
 * @see https://www.w3.org/TR/WebCryptoAPI/#dfn-RsaKeyAlgorithm
 */
webCrypto.RsaKeyAlgorithm;
/**
 * @type {number}
 */
webCrypto.RsaKeyAlgorithm.prototype.modulusLength;
/**
 * @type {webCrypto.BigInteger}
 */
webCrypto.RsaKeyAlgorithm.prototype.publicExponent;


/**
 * @record
 * @extends webCrypto.RsaKeyAlgorithm
 * @see https://www.w3.org/TR/WebCryptoAPI/#dfn-RsaHashedKeyAlgorithm
 */
webCrypto.RsaHashedKeyAlgorithm;
/**
 * @type {webCrypto.KeyAlgorithm}
 */
webCrypto.RsaHashedKeyAlgorithm.prototype.hash;


/**
 * @record
 * @extends webCrypto.Algorithm
 * @see https://www.w3.org/TR/WebCryptoAPI/#dfn-RsaHashedImportParams
 */
webCrypto.RsaHashedImportParams;
/**
 * @type {webCrypto.HashAlgorithmIdentifier}
 */
webCrypto.RsaHashedImportParams.prototype.hash;


/**
 * @record
 * @extends webCrypto.Algorithm
 * @see https://www.w3.org/TR/WebCryptoAPI/#dfn-RsaPssParams
 */
webCrypto.RsaPssParams;
/**
 * @type {number}
 */
webCrypto.RsaPssParams.prototype.saltLength;


/**
 * @record
 * @extends webCrypto.Algorithm
 * @see https://www.w3.org/TR/WebCryptoAPI/#dfn-RsaOaepParams
 */
webCrypto.RsaOaepParams;
/**
 * @type {undefined|!BufferSource}
 */
webCrypto.RsaOaepParams.prototype.label;


/**
 * @record
 * @extends webCrypto.Algorithm
 * @see https://www.w3.org/TR/WebCryptoAPI/#dfn-EcdsaParams
 */
webCrypto.EcdsaParams;
/**
 * @type {!webCrypto.HashAlgorithmIdentifier}
 */
webCrypto.EcdsaParams.prototype.hash;


/**
 * @typedef {string}
 * @see https://www.w3.org/TR/WebCryptoAPI/#dfn-NamedCurve
 */
webCrypto.NamedCurve;


/**
 * @record
 * @extends webCrypto.Algorithm
 * @see https://www.w3.org/TR/WebCryptoAPI/#dfn-EcKeyGenParams
 */
webCrypto.EcKeyGenParams;
/**
 * @type {!webCrypto.NamedCurve}
 */
webCrypto.EcKeyGenParams.prototype.namedCurve;


/**
 * @record
 * @extends webCrypto.KeyAlgorithm
 * @see https://www.w3.org/TR/WebCryptoAPI/#dfn-EcKeyAlgorithm
 */
webCrypto.EcKeyAlgorithm;
/**
 * @type {!webCrypto.NamedCurve}
 */
webCrypto.EcKeyAlgorithm.prototype.namedCurve;


/**
 * @record
 * @extends webCrypto.Algorithm
 * @see https://www.w3.org/TR/WebCryptoAPI/#dfn-EcKeyImportParams
 */
webCrypto.EcKeyImportParams;
/**
 * @type {!webCrypto.NamedCurve}
 */
webCrypto.EcKeyImportParams.prototype.namedCurve;


/**
 * @record
 * @extends webCrypto.Algorithm
 * @see https://www.w3.org/TR/WebCryptoAPI/#dfn-EcKeyDeriveParams
 */
webCrypto.EcKeyDeriveParams;
/**
 * @type {!webCrypto.CryptoKey}
 */
webCrypto.EcKeyDeriveParams.prototype.public;


/**
 * @record
 * @extends webCrypto.Algorithm
 * @see https://www.w3.org/TR/WebCryptoAPI/#dfn-AesCtrParams
 */
webCrypto.AesCtrParams;
/**
 * @type {!BufferSource}
 */
webCrypto.AesCtrParams.prototype.counter;
/**
 * @type {number}
 */
webCrypto.AesCtrParams.prototype.length;


/**
 * @record
 * @extends webCrypto.KeyAlgorithm
 * @see https://www.w3.org/TR/WebCryptoAPI/#dfn-AesKeyAlgorithm
 */
webCrypto.AesKeyAlgorithm;
/**
 * @type {number}
 */
webCrypto.AesKeyAlgorithm.prototype.length;


/**
 * @record
 * @extends webCrypto.Algorithm
 * @see https://www.w3.org/TR/WebCryptoAPI/#dfn-AesKeyGenParams
 */
webCrypto.AesKeyGenParams;
/**
 * @type {number}
 */
webCrypto.AesKeyGenParams.prototype.length;


/**
 * @record
 * @extends webCrypto.Algorithm
 * @see https://www.w3.org/TR/WebCryptoAPI/#dfn-AesDerivedKeyParams
 */
webCrypto.AesDerivedKeyParams;
/**
 * @type {number}
 */
webCrypto.AesDerivedKeyParams.prototype.length;


/**
 * @record
 * @extends webCrypto.Algorithm
 * @see https://www.w3.org/TR/WebCryptoAPI/#dfn-AesCbcParams
 */
webCrypto.AesCbcParams;
/**
 * @type {!BufferSource}
 */
webCrypto.AesCbcParams.prototype.iv;


/**
 * @record
 * @extends webCrypto.Algorithm
 * @see https://www.w3.org/TR/WebCryptoAPI/#dfn-AesGcmParams
 */
webCrypto.AesGcmParams;
/**
 * @type {!BufferSource}
 */
webCrypto.AesGcmParams.prototype.iv;
/**
 * @type {undefined|!BufferSource}
 */
webCrypto.AesGcmParams.prototype.additionalData;
/**
 * @type {undefined|number}
 */
webCrypto.AesGcmParams.prototype.tagLength;


/**
 * @record
 * @extends webCrypto.Algorithm
 * @see https://www.w3.org/TR/WebCryptoAPI/#dfn-HmacImportParams
 */
webCrypto.HmacImportParams;
/**
 * @type {!webCrypto.HashAlgorithmIdentifier}
 */
webCrypto.HmacImportParams.prototype.hash;
/**
 * @type {undefined|number}
 */
webCrypto.HmacImportParams.prototype.length;


/**
 * @record
 * @extends webCrypto.KeyAlgorithm
 * @see https://www.w3.org/TR/WebCryptoAPI/#dfn-HmacKeyAlgorithm
 */
webCrypto.HmacKeyAlgorithm;
/**
 * @type {!webCrypto.KeyAlgorithm}
 */
webCrypto.HmacKeyAlgorithm.prototype.hash;
/**
 * @type {number}
 */
webCrypto.HmacKeyAlgorithm.prototype.length;


/**
 * @record
 * @extends webCrypto.Algorithm
 * @see https://www.w3.org/TR/WebCryptoAPI/#dfn-HmacKeyGenParams
 */
webCrypto.HmacKeyGenParams;
/**
 * @type {!webCrypto.HashAlgorithmIdentifier}
 */
webCrypto.HmacKeyGenParams.prototype.hash;
/**
 * @type {undefined|number}
 */
webCrypto.HmacKeyGenParams.prototype.length;


/**
 * @record
 * @extends webCrypto.Algorithm
 * @see https://www.w3.org/TR/WebCryptoAPI/#dfn-HkdfParams
 */
webCrypto.HkdfParams;
/**
 * @type {!webCrypto.HashAlgorithmIdentifier}
 */
webCrypto.HkdfParams.prototype.hash;
/**
 * @type {!BufferSource}
 */
webCrypto.HkdfParams.prototype.salt;
/**
 * @type {!BufferSource}
 */
webCrypto.HkdfParams.prototype.info;


/**
 * @record
 * @extends webCrypto.Algorithm
 * @see https://www.w3.org/TR/WebCryptoAPI/#dfn-Pbkdf2Params
 */
webCrypto.Pbkdf2Params;
/**
 * @type {!BufferSource}
 */
webCrypto.Pbkdf2Params.prototype.salt;
/**
 * @type {number}
 */
webCrypto.Pbkdf2Params.prototype.iterations;
/**
 * @type {!webCrypto.HashAlgorithmIdentifier}
 */
webCrypto.Pbkdf2Params.prototype.hash;


/**
 * @constructor
 * @see http://www.w3.org/TR/WebCryptoAPI/#subtlecrypto-interface
 */
webCrypto.SubtleCrypto = function() {};


/**
 * @param {!webCrypto.AlgorithmIdentifier} algorithm Supported
 *     values are: AES-CBC, AES-CTR, AES-GCM, and RSA-OAEP.
 * @param {!webCrypto.CryptoKey} key Key to be used for signing.
 * @param {!BufferSource} data Data to be encrypted (cleartext).
 * @return {!Promise<!ArrayBuffer>} Ciphertext generated by the encryption of
 *     the cleartext.
 */
webCrypto.SubtleCrypto.prototype.encrypt = function(algorithm, key,
    data) {};


/**
 * @param {!webCrypto.AlgorithmIdentifier} algorithm Supported
 *     values are: AES-CBC, AES-CTR, AES-GCM, and RSA-OAEP.
 * @param {!webCrypto.CryptoKey} key Key to be used for signing.
 * @param {!BufferSource} data Data to be decrypted (ciphertext).
 * @return {!Promise<!ArrayBuffer>} Cleartext generated by the decryption of the
 *     ciphertext.
 */
webCrypto.SubtleCrypto.prototype.decrypt = function(algorithm, key,
    data) {};


/**
 * @param {!webCrypto.AlgorithmIdentifier} algorithm Supported
 *     values are: HMAC, RSASSA-PKCS1-v1_5, and ECDSA.
 * @param {!webCrypto.CryptoKey} key Private key to be used for signing.
 * @param {!BufferSource} data Data to be signed.
 * @return {!Promise<!ArrayBuffer>} Returns the signature on success.
 */
webCrypto.SubtleCrypto.prototype.sign = function(algorithm, key,
    data) {};


/**
 * @param {!webCrypto.AlgorithmIdentifier} algorithm Supported
 *     values are: HMAC, RSASSA-PKCS1-v1_5, and ECDSA.
 * @param {!webCrypto.CryptoKey} key Private key to be used for signing.
 * @param {!BufferSource} signature Signature to verify.
 * @param {!BufferSource} data Data whose signature needs to be verified.
 * @return {!Promise<boolean>} Returns if the signature operating has been
 *     successful.
 */
webCrypto.SubtleCrypto.prototype.verify = function(algorithm, key,
    signature, data) {};


/**
 * @param {!webCrypto.AlgorithmIdentifier} algorithm Supported
 *     values are: SHA-1, SHA-256, SHA-384, and SHA-512.
 * @param {!BufferSource} data Data to be hashed using the hashing algorithm.
 * @return {!Promise<!ArrayBuffer>} returns the hash on success.
 */
webCrypto.SubtleCrypto.prototype.digest = function(algorithm, data) {};


/**
 * @param {!webCrypto.AlgorithmIdentifier|webCrypto.RsaHashedKeyGenParams}
 *     algorithm Supported values are: SHA-1, SHA-256, SHA-384, and SHA-512.
 * @param {boolean} extractable If the key can be extracted from the CryptoKey
 *     object at a later stage.
 * @param {!Array<string>} keyUsages Indication of new key options i.e.
 *     encrypt, decrypt, sign, verify, deriveKey, deriveBits, wrapKey,
 *     unwrapKey.
 * @return {!Promise<!webCrypto.CryptoKey|!webCrypto.CryptoKeyPair>} returns the
 *     generated key.
 */
webCrypto.SubtleCrypto.prototype.generateKey = function(algorithm,
    extractable, keyUsages) {};


/**
 * @param {!webCrypto.AlgorithmIdentifier} algorithm The key derivation
 *     algorithm to use. Supported values are:  ECDH, DH, PBKDF2, and HKDF-CTR.
 * @param {!webCrypto.CryptoKey} baseKey Key to be used by the key
 *     derivation algorithm.
 * @param {!webCrypto.AlgorithmIdentifier} derivedKeyAlgo Defines the key
 *     derivation algorithm to use.
 * @param {boolean} extractable Indicates if the key can be extracted from the
 *     CryptoKey object at a later stage.
 * @param {!Array<string>} keyUsages Indicates what can be done with the
 *     derivated key.
 * @return {!Promise<!webCrypto.CryptoKey|!webCrypto.CryptoKeyPair>} returns the
 *     generated key.
 */
webCrypto.SubtleCrypto.prototype.deriveKey = function(algorithm,
   baseKey, derivedKeyAlgo, extractable, keyUsages) {};


/**
 * @param {!webCrypto.AlgorithmIdentifier} algorithm The key derivation
 *     algorithm to use.
 * @param {!webCrypto.CryptoKey} baseKey Key to be used by the key
 *     derivation algorithm.
 * @param {number} length
 * @return {!Promise<!ArrayBuffer>} returns the generated bits.
 */
webCrypto.SubtleCrypto.prototype.deriveBits = function(algorithm,
   baseKey, length) {};


/**
 * @param {string} format Enumerated value describing the data
 *     format of the key to imported.
 * @param {!BufferSource|!webCrypto.JsonWebKey} keyData The key
 *     in the given format.
 * @param {!webCrypto.AlgorithmIdentifier|webCrypto.RsaHashedImportParams}
 *     algorithm Supported values are: AES-CTR, AES-CBC, AES-GCM, RSA-OAEP,
 *     AES-KW, HMAC, RSASSA-PKCS1-v1_5, ECDSA, ECDH, DH.
 * @param {boolean} extractable If the key can be extracted from the CryptoKey
 *     object at a later stage.
 * @param {!Array<string>} keyUsages Indication of new key options i.e.
 *     encrypt, decrypt, sign, verify, deriveKey, deriveBits, wrapKey,
 *     unwrapKey.
 * @return {!Promise<!webCrypto.CryptoKey>} returns the generated key.
 */
webCrypto.SubtleCrypto.prototype.importKey = function(format, keyData,
    algorithm, extractable, keyUsages) {};


/**
 * @param {string} format Enumerated value describing the data
 *     format of the key to imported.
 * @param {!webCrypto.CryptoKey} key CryptoKey to export.
 * @return {!Promise<!ArrayBuffer|!webCrypto.JsonWebKey>} returns the key in the
 *     requested format.
 */
webCrypto.SubtleCrypto.prototype.exportKey = function(format, key) {};


/**
 * @param {string} format Value describing the data format in which the key must
 *     be wrapped. It can be one of the following: raw, pkcs8, spki, jwk.
 * @param {!webCrypto.CryptoKey} key CryptoKey to wrap.
 * @param {!webCrypto.CryptoKey} wrappingKey CryptoKey used to perform
 *     the wrapping.
 * @param {!webCrypto.AlgorithmIdentifier} wrapAlgorithm algorithm used
 *     to perform the wrapping. It is one of the following: AES-CBC, AES-CTR,
 *     AES-GCM, RSA-OAEP, and AES-KW.
 * @return {!Promise<!ArrayBuffer>} returns the wrapped key in the requested
 *     format.
 */
webCrypto.SubtleCrypto.prototype.wrapKey = function(format,
   key, wrappingKey, wrapAlgorithm) {};


/**
 * @param {string} format Value describing the data format in which the key must
 *     be wrapped. It can be one of the following: raw, pkcs8, spki, jwk.
 * @param {!BufferSource} wrappedKey Contains the wrapped key in the given
 *     format.
 * @param {!webCrypto.CryptoKey} unwrappingKey CryptoKey used to perform
 *     the unwrapping.
 * @param {!webCrypto.AlgorithmIdentifier} unwrapAlgorithm Algorithm
 *    used to perform the unwrapping. It is one of the following: AES-CBC,
 *    AES-CTR, AES-GCM, RSA-OAEP, and AES-KW.
 * @param {!webCrypto.AlgorithmIdentifier} unwrappedKeyAlgorithm
 *     Represents the algorithm of the wrapped key.
 * @param {boolean} extractable Indicates if the key can be extracted from the
 *     CryptoKey object at a later stage.
 * @param {!Array<string>} keyUsages Indicates what can be done with the
 *     derivated key.
 * @return {!Promise<!webCrypto.CryptoKey>} returns the unwrapped key.
 */
webCrypto.SubtleCrypto.prototype.unwrapKey = function(format, wrappedKey,
    unwrappingKey, unwrapAlgorithm, unwrappedKeyAlgorithm, extractable,
    keyUsages) {};


/**
 * @see https://developer.mozilla.org/en-US/docs/Web/API/Crypto
 * @interface
 */
webCrypto.Crypto = function() {};

/**
 * @see https://developer.mozilla.org/en/DOM/window.crypto.getRandomValues
 * @param {!Int8Array|!Uint8Array|!Uint8ClampedArray|!Int16Array|!Uint16Array|!Int32Array|!Uint32Array|!BigInt64Array|!BigUint64Array}
 *     typedArray
 * @return {!Int8Array|!Uint8Array|!Uint8ClampedArray|!Int16Array|!Uint16Array|!Int32Array|!Uint32Array|!BigInt64Array|!BigUint64Array}
 * @throws {Error}
 */
webCrypto.Crypto.prototype.getRandomValues = function(typedArray) {};

/**
 * @see https://developer.mozilla.org/en/docs/Web/API/Crypto/randomUUID
 * @return {string}
 */
webCrypto.Crypto.prototype.randomUUID = function() {};

/**
 * @type {?webCrypto.SubtleCrypto}
 * @see http://www.w3.org/TR/WebCryptoAPI/#Crypto-attribute-subtle
 */
webCrypto.Crypto.prototype.subtle;

/**
 * @see https://developer.mozilla.org/en/DOM/window.crypto
 * @type {!webCrypto.Crypto|undefined}
 */
var crypto;

/**
 * @type {!webCrypto.Crypto}
 * @see https://www.w3.org/TR/WebCryptoAPI/#crypto-interface
 */
WorkerGlobalScope.prototype.crypto;
/*
 * Copyright 2020 The Closure Compiler Authors.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/**
 * @fileoverview Definitions for the Worklets API.
 * This file is based on the W3C Editor's Draft 07 April 2020.
 * @see https://drafts.css-houdini.org/worklets/
 *
 * @externs
 */

/**
 * @interface
 * @see https://drafts.css-houdini.org/worklets/#the-global-scope
 */
function WorkletGlobalScope() {}

/**
 * @record
 * @see https://drafts.css-houdini.org/worklets/#dictdef-workletoptions
 */
function WorkletOptions() {};

/**
 * @type {!RequestCredentials}
 * See https://fetch.spec.whatwg.org/#requestcredentials for valid values.
 */
WorkletOptions.prototype.credentials;

/**
 * @interface
 * @see https://drafts.css-houdini.org/worklets/#worklet-section
 */
function Worklet() {}

/**
 * @param {string} moduleURL
 * @param {!WorkletOptions=} options
 * @return {!Promise<void>}
 */
Worklet.prototype.addModule = function(moduleURL, options) {};
/*
 * Copyright 2008 The Closure Compiler Authors
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/**
 * @fileoverview Definitions for W3C's XML related specifications.
 *  This file depends on w3c_dom2.js.
 *  The whole file has been fully type annotated.
 *
 *  Provides the XML standards from W3C.
 *   Includes:
 *    XPath          - Fully type annotated
 *    XMLHttpRequest - Fully type annotated
 *
 * @see http://www.w3.org/TR/DOM-Level-3-XPath/xpath.html
 * @see https://xhr.spec.whatwg.org/
 *
 * @externs
 * @author stevey@google.com (Steve Yegge)
 */


/**
 * @constructor
 * @see http://www.w3.org/TR/DOM-Level-3-XPath/xpath.html#XPathException
 */
function XPathException() {}

/**
 * @const {number}
 * @see http://www.w3.org/TR/DOM-Level-3-XPath/xpath.html#INVALID_EXPRESSION_ERR
 */
XPathException.INVALID_EXPRESSION_ERR;

/**
 * @const {number}
 * @see http://www.w3.org/TR/DOM-Level-3-XPath/xpath.html#TYPE_ERR
 */
XPathException.TYPE_ERR;

/**
 * @type {number}
 * @see http://www.w3.org/TR/DOM-Level-3-XPath/xpath.html#
 */
XPathException.prototype.code;

/**
 * @constructor
 * @see http://www.w3.org/TR/DOM-Level-3-XPath/xpath.html#XPathEvaluator
 */
function XPathEvaluator() {}

/**
 * @param {string} expr
 * @param {?XPathNSResolver=} opt_resolver
 * @see http://www.w3.org/TR/DOM-Level-3-XPath/xpath.html#XPathEvaluator-createExpression
 * @throws XPathException
 * @throws DOMException
 * @return {undefined}
 */
XPathEvaluator.prototype.createExpression = function(expr, opt_resolver) {};

/**
 * @param {Node} nodeResolver
 * @see http://www.w3.org/TR/DOM-Level-3-XPath/xpath.html#XPathEvaluator-createNSResolver
 * @return {undefined}
 */
XPathEvaluator.prototype.createNSResolver = function(nodeResolver) {};

/**
 * @param {string} expr
 * @param {Node} contextNode
 * @param {?XPathNSResolver=} opt_resolver
 * @param {?number=} opt_type
 * @param {*=} opt_result
 * @return {XPathResult}
 * @throws XPathException
 * @throws DOMException
 * @see http://www.w3.org/TR/DOM-Level-3-XPath/xpath.html#XPathEvaluator-evaluate
 */
XPathEvaluator.prototype.evaluate = function(expr, contextNode, opt_resolver,
    opt_type, opt_result) {};


/**
 * @constructor
 * @see http://www.w3.org/TR/DOM-Level-3-XPath/xpath.html#XPathExpression
 */
function XPathExpression() {}

/**
 * @param {Node} contextNode
 * @param {number=} opt_type
 * @param {*=} opt_result
 * @return {*}
 * @throws XPathException
 * @throws DOMException
 * @see http://www.w3.org/TR/DOM-Level-3-XPath/xpath.html#XPathExpression-evaluate
 */
XPathExpression.prototype.evaluate = function(contextNode, opt_type,
    opt_result) {};


/**
 * @constructor
 * @see http://www.w3.org/TR/DOM-Level-3-XPath/xpath.html#XPathNSResolver
 */
function XPathNSResolver() {}

/**
 * @param {string} prefix
 * @return {?string}
 * @see http://www.w3.org/TR/DOM-Level-3-XPath/xpath.html#XPathNSResolver-lookupNamespaceURI
 */
XPathNSResolver.prototype.lookupNamespaceURI = function(prefix) {};

/**
 * From http://www.w3.org/TR/xpath
 *
 * XPath is a language for addressing parts of an XML document, designed to be
 * used by both XSLT and XPointer.
 *
 * @constructor
 * @see http://www.w3.org/TR/DOM-Level-3-XPath/xpath.html#XPathResult
 */
function XPathResult() {}

/**
 * @type {boolean} {@see XPathException.TYPE_ERR}
 * @see http://www.w3.org/TR/DOM-Level-3-XPath/xpath.html#XPathResult-booleanValue
 */
XPathResult.prototype.booleanValue;

/**
 * @type {boolean} {@see XPathException.TYPE_ERR}
 * @see http://www.w3.org/TR/DOM-Level-3-XPath/xpath.html#XPathResult-invalid-iterator-state
 */
XPathResult.prototype.invalidInteratorState;

/**
 * @type {number}
 * @throws XPathException {@see XPathException.TYPE_ERR}
 * @see http://www.w3.org/TR/DOM-Level-3-XPath/xpath.html#XPathResult-numberValue
 */
XPathResult.prototype.numberValue;

/**
 * @type {number}
 * @throws XPathException {@see XPathException.TYPE_ERR}
 * @see http://www.w3.org/TR/DOM-Level-3-XPath/xpath.html#XPathResult-resultType
 */
XPathResult.prototype.resultType;

/**
 * @type {Node}
 * @throws XPathException {@see XPathException.TYPE_ERR}
 * @see http://www.w3.org/TR/DOM-Level-3-XPath/xpath.html#XPathResult-singleNodeValue
 */
XPathResult.prototype.singleNodeValue;

/**
 * @type {number}
 * @throws XPathException {@see XPathException.TYPE_ERR}
 * @see http://www.w3.org/TR/DOM-Level-3-XPath/xpath.html#XPathResult-snapshot-length
 */
XPathResult.prototype.snapshotLength;

/**
 * @type {string}
 * @throws XPathException {@see XPathException.TYPE_ERR}
 * @see http://www.w3.org/TR/DOM-Level-3-XPath/xpath.html#XPathResult-stringValue
 */
XPathResult.prototype.stringValue;

/**
 * @return {Node}
 * @throws XPathException {@see XPathException.TYPE_ERR}
 * @throws DOMException {@see DOMException.INVALID_STATE_ERR}
 * @see http://www.w3.org/TR/DOM-Level-3-XPath/xpath.html#XPathResult-iterateNext
 */
XPathResult.prototype.iterateNext = function() {};

/**
 * @param {number} index
 * @return {Node}
 * @throws XPathException
 * @see http://www.w3.org/TR/DOM-Level-3-XPath/xpath.html#XPathResult-snapshotItem
 */
XPathResult.prototype.snapshotItem = function(index) {};

/**
 * @const {number}
 * @see http://www.w3.org/TR/DOM-Level-3-XPath/xpath.html#XPathResult-ANY-TYPE
 */
XPathResult.ANY_TYPE;

/**
 * @const {number}
 * @see http://www.w3.org/TR/DOM-Level-3-XPath/xpath.html#XPathResult-NUMBER-TYPE
 */
XPathResult.NUMBER_TYPE;

/**
 * @const {number}
 * @see http://www.w3.org/TR/DOM-Level-3-XPath/xpath.html#XPathResult-STRING-TYPE
 */
XPathResult.STRING_TYPE;

/**
 * @const {number}
 * @see http://www.w3.org/TR/DOM-Level-3-XPath/xpath.html#XPathResult-BOOLEAN-TYPE
 */
XPathResult.BOOLEAN_TYPE;

/**
 * @const {number}
 * @see http://www.w3.org/TR/DOM-Level-3-XPath/xpath.html#XPathResult-UNORDERED-NODE-ITERATOR-TYPE
 */
XPathResult.UNORDERED_NODE_ITERATOR_TYPE;

/**
 * @const {number}
 * @see http://www.w3.org/TR/DOM-Level-3-XPath/xpath.html#XPathResult-ORDERED-NODE-ITERATOR-TYPE
 */
XPathResult.ORDERED_NODE_ITERATOR_TYPE;

/**
 * @const {number}
 * @see http://www.w3.org/TR/DOM-Level-3-XPath/xpath.html#XPathResult-UNORDERED-NODE-SNAPSHOT-TYPE
 */
XPathResult.UNORDERED_NODE_SNAPSHOT_TYPE;

/**
 * @const {number}
 * @see http://www.w3.org/TR/DOM-Level-3-XPath/xpath.html#XPathResult-ORDERED-NODE-SNAPSHOT-TYPE
 */
XPathResult.ORDERED_NODE_SNAPSHOT_TYPE;

/**
 * @const {number}
 * @see http://www.w3.org/TR/DOM-Level-3-XPath/xpath.html#XPathResult-ANY-UNORDERED-NODE-TYPE
 */
XPathResult.ANY_UNORDERED_NODE_TYPE;

/**
 * @const {number}
 * @see http://www.w3.org/TR/DOM-Level-3-XPath/xpath.html#XPathResult-FIRST-ORDERED-NODE-TYPE
 */
XPathResult.FIRST_ORDERED_NODE_TYPE;

/**
 * @constructor
 * @extends {Node}
 * @see http://www.w3.org/TR/DOM-Level-3-XPath/xpath.html#XPathNamespace
 */
function XPathNamespace() {}

/**
 * @type {Element}
 * @see http://www.w3.org/TR/DOM-Level-3-XPath/xpath.html#XPathNamespace-ownerElement
 */
XPathNamespace.prototype.ownerElement;

/**
 * @const {number}
 * @see http://www.w3.org/TR/DOM-Level-3-XPath/xpath.html#XPATH_NAMESPACE_NODE
 */
XPathNamespace.XPATH_NAMESPACE_NODE;

/**
 * From https://xhr.spec.whatwg.org/#xmlhttprequest
 *
 * (Draft)
 *
 * The XMLHttpRequest Object specification defines an API that provides
 * scripted client functionality for transferring data between a client and a
 * server.
 *
 * @constructor
 * @implements {EventTarget}
 * @see https://xhr.spec.whatwg.org/#xmlhttprequest
 */
function XMLHttpRequest() {}

/** @override */
XMLHttpRequest.prototype.addEventListener = function(
    type, listener, opt_options) {};

/** @override */
XMLHttpRequest.prototype.removeEventListener = function(
    type, listener, opt_options) {};

/** @override */
XMLHttpRequest.prototype.dispatchEvent = function(evt) {};

/**
 * @param {string} method
 * @param {string} url
 * @param {?boolean=} opt_async
 * @param {?string=} opt_user
 * @param {?string=} opt_password
 * @return {undefined}
 * @see https://xhr.spec.whatwg.org/#the-open()-method
 */
XMLHttpRequest.prototype.open = function(method, url, opt_async, opt_user,
    opt_password) {};

/**
 * @param {string} header
 * @param {string} value
 * @return {undefined}
 * @see https://xhr.spec.whatwg.org/#the-setrequestheader()-method
 */
XMLHttpRequest.prototype.setRequestHeader = function(header, value) {};

/**
 * @param {ArrayBuffer|ArrayBufferView|Blob|Document|FormData|string=} opt_data
 * @return {undefined}
 * @see https://xhr.spec.whatwg.org/#the-send()-method
 */
XMLHttpRequest.prototype.send = function(opt_data) {};

/**
 * @return {undefined}
 * @see https://xhr.spec.whatwg.org/#the-abort()-method
 */
XMLHttpRequest.prototype.abort = function() {};

/**
 * @return {string}
 * @see https://xhr.spec.whatwg.org/#the-getallresponseheaders()-method
 */
XMLHttpRequest.prototype.getAllResponseHeaders = function() {};

/**
 * @param {string} header
 * @return {?string}
 * @see https://xhr.spec.whatwg.org/#the-getresponseheader()-method
 */
XMLHttpRequest.prototype.getResponseHeader = function(header) {};

/**
 * @type {string}
 * @see https://xhr.spec.whatwg.org/#the-responsetext-attribute
 */
XMLHttpRequest.prototype.responseText;

/**
 * This is not supported in any IE browser (as of August 2016).
 * @type {string}
 * @see https://xhr.spec.whatwg.org/#the-responseurl-attribute
 */
XMLHttpRequest.prototype.responseURL;

/**
 * @type {Document}
 * @see https://xhr.spec.whatwg.org/#the-responsexml-attribute
 */
XMLHttpRequest.prototype.responseXML;

/**
 * @type {number}
 * @see https://xhr.spec.whatwg.org/#dom-xmlhttprequest-readystate
 */
XMLHttpRequest.prototype.readyState;

/**
 * @type {number}
 * @see https://xhr.spec.whatwg.org/#the-status-attribute
 */
XMLHttpRequest.prototype.status;

/**
 * @type {string}
 * @see https://xhr.spec.whatwg.org/#the-statustext-attribute
 */
XMLHttpRequest.prototype.statusText;

/**
 * @type {number}
 * @see https://xhr.spec.whatwg.org/#the-timeout-attribute
 */
XMLHttpRequest.prototype.timeout;

/**
 * @type {?function(!Event)}
 * @see https://xhr.spec.whatwg.org/#event-handlers
 */
XMLHttpRequest.prototype.onreadystatechange;

/**
 * @type {?function(!Event)}
 * @see https://xhr.spec.whatwg.org/#event-handlers
 */
XMLHttpRequest.prototype.onerror;

/**
 * @const {number}
 * @see https://xhr.spec.whatwg.org/#states
 */
XMLHttpRequest.UNSENT;

/**
 * @const {number}
 * @see https://xhr.spec.whatwg.org/#states
 */
XMLHttpRequest.prototype.UNSENT;

/**
 * @const {number}
 * @see https://xhr.spec.whatwg.org/#states
 */
XMLHttpRequest.OPENED;

/**
 * @const {number}
 * @see https://xhr.spec.whatwg.org/#states
 */
XMLHttpRequest.prototype.OPENED;

/**
 * @const {number}
 * @see https://xhr.spec.whatwg.org/#states
 */
XMLHttpRequest.HEADERS_RECEIVED;

/**
 * @const {number}
 * @see https://xhr.spec.whatwg.org/#states
 */
XMLHttpRequest.prototype.HEADERS_RECEIVED;

/**
 * @const {number}
 * @see https://xhr.spec.whatwg.org/#states
 */
XMLHttpRequest.LOADING;

/**
 * @const {number}
 * @see https://xhr.spec.whatwg.org/#states
 */
XMLHttpRequest.prototype.LOADING;

/**
 * @const {number}
 * @see https://xhr.spec.whatwg.org/#states
 */
XMLHttpRequest.DONE;

/**
 * @const {number}
 * @see https://xhr.spec.whatwg.org/#states
 */
XMLHttpRequest.prototype.DONE;


/**
 * @see https://xhr.spec.whatwg.org/#formdataentryvalue
 * @typedef {!File|string}
 */
var FormDataEntryValue;

/**
 * The FormData object represents an ordered collection of entries. Each entry
 * has a name and value.
 *
 * @param {?Element=} form An optional form to use for constructing the form
 *     data set.
 * @constructor
 * @implements {Iterable<!Array<!FormDataEntryValue>>}
 * @see https://xhr.spec.whatwg.org/#interface-formdata
 */
function FormData(form) {}

/**
 * @param {string} name
 * @param {?Blob|string} value
 * @param {string=} filename
 * @return {undefined}
 * @see https://xhr.spec.whatwg.org/#dom-formdata-append
 */
FormData.prototype.append = function(name, value, filename) {};

/**
 * @param {string} name
 * @return {undefined}
 * @see https://xhr.spec.whatwg.org/#dom-formdata-delete
 */
FormData.prototype.delete = function(name) {};

/**
 * @param {string} name
 * @return {?FormDataEntryValue}
 * @see https://xhr.spec.whatwg.org/#dom-formdata-get
 */
FormData.prototype.get = function(name) {};

/**
 * @param {string} name
 * @return {!Array<!FormDataEntryValue>}
 * @see https://xhr.spec.whatwg.org/#dom-formdata-getall
 */
FormData.prototype.getAll = function(name) {};

/**
 * @param {string} name
 * @return {boolean}
 * @see https://xhr.spec.whatwg.org/#dom-formdata-has
 */
FormData.prototype.has = function(name) {};

/**
 * @param {string} name
 * @param {!Blob|string} value
 * @param {string=} filename
 * @return {undefined}
 * @see https://xhr.spec.whatwg.org/#dom-formdata-set
 */
FormData.prototype.set = function(name, value, filename) {};

/*
 * Copyright 2016 The Closure Compiler authors
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


/**
 * @fileoverview Basic externs for the Web Animations API. This is not
 * nessecarily exhaustive. For more information, see the spec-
 *   https://w3c.github.io/web-animations
 * @externs
 */


/**
 * @param {!Object} frames
 * @param {(number|KeyframeAnimationOptions)=} options
 * @return {!Animation}
 * @see https://www.w3.org/TR/web-animations/#the-animatable-interface-mixin
 */
Element.prototype.animate = function(frames, options) {};

/**
 * @return {!Array<!Animation>}
 */
Element.prototype.getAnimations = function() {};

/**
 * @return {!Array<!Animation>}
 * @see https://www.w3.org/TR/web-animations/#dom-documentorshadowroot-getanimations
 */
Document.prototype.getAnimations = function() {};

/**
 * @return {!Array<!Animation>}
 * @see https://www.w3.org/TR/web-animations/#dom-documentorshadowroot-getanimations
 */
ShadowRoot.prototype.getAnimations = function() {};

/**
 * @constructor
 * @param {?AnimationEffect=} effect
 * @param {AnimationTimeline=} timeline
 * @implements {EventTarget}
 */
var Animation = function(effect, timeline) {};

/** @override */
Animation.prototype.addEventListener = function(type, listener, options) {};

/** @override */
Animation.prototype.removeEventListener = function(type, listener, options) {};

/** @override */
Animation.prototype.dispatchEvent = function(evt) {};

/**
 * @return {undefined}
 */
Animation.prototype.cancel = function() {};

/**
 * @return {undefined}
 */
Animation.prototype.finish = function() {};

/**
 * @return {undefined}
 */
Animation.prototype.pause = function() {};

/**
 * @return {undefined}
 */
Animation.prototype.play = function() {};

/**
 * @return {undefined}
 */
Animation.prototype.reverse = function() {};

/** @type {number} */
Animation.prototype.currentTime;

/** @type {?AnimationEffect} */
Animation.prototype.effect;

/** @type {!Promise<void>} */
Animation.prototype.finished;

/** @type {string} */
Animation.prototype.id;

/** @type {?function(!Event)} */
Animation.prototype.oncancel;

/** @type {?function(!Event)} */
Animation.prototype.onfinish;

/** @type {number} */
Animation.prototype.playbackRate;

/** @type {string} */
Animation.prototype.playState;

/** @type {!Promise<void>} */
Animation.prototype.ready;

/** @type {number} */
Animation.prototype.startTime;

/** @type {!AnimationTimeline} */
Animation.prototype.timeline;


/**
 * @interface
 */
var AnimationEffect = function() {};

/**
 * @return {!ComputedTimingProperties}
 */
AnimationEffect.prototype.getComputedTiming = function() {};

/** @param {AnimationEffectTimingProperties=} timing */
AnimationEffect.prototype.updateTiming = function(timing) {};

/** @type {!AnimationEffectTiming} */
AnimationEffect.prototype.timing;

/**
 * @constructor
 * @param {Element} target
 * @param {(!Array<!Object<string, *>>|!Object<string, !Array<*>>)} frames
 * @param {(number|AnimationEffectTimingProperties)=} options
 * @implements {AnimationEffect}
 */
var KeyframeEffectReadOnly = function(target, frames, options) {};

/** @override */
KeyframeEffectReadOnly.prototype.getComputedTiming = function() {};

/** @override */
KeyframeEffectReadOnly.prototype.timing;


/**
 * @constructor
 * @param {Element} target
 * @param {(!Array<!Object<string, *>>|!Object<string, !Array<*>>)} frames
 * @param {(number|AnimationEffectTimingProperties)=} options
 * @extends {KeyframeEffectReadOnly}
 */
var KeyframeEffect = function(target, frames, options) {};


/**
 * @record
 */
var AnimationEffectTimingProperties = function() {};

/** @type {number|undefined} */
AnimationEffectTimingProperties.prototype.delay;

/** @type {number|undefined} */
AnimationEffectTimingProperties.prototype.endDelay;

/** @type {string|undefined} */
AnimationEffectTimingProperties.prototype.fill;

/** @type {number|undefined} */
AnimationEffectTimingProperties.prototype.iterationStart;

/** @type {number|undefined} */
AnimationEffectTimingProperties.prototype.iterations;

/** @type {number|string|undefined} */
AnimationEffectTimingProperties.prototype.duration;

/** @type {string|undefined} */
AnimationEffectTimingProperties.prototype.direction;

/** @type {string|undefined} */
AnimationEffectTimingProperties.prototype.easing;

/**
 * @record
 * @extends {AnimationEffectTimingProperties}
 */
var KeyframeEffectOptions = function() {};

/**
 * Possible values: 'replace', 'accumulate'
 * @type {string|undefined}
 */
KeyframeEffectOptions.prototype.iterationComposite;

/**
 * Possible values: 'replace', 'add', 'accumulate'
 * @type {string|undefined}
 */
KeyframeEffectOptions.prototype.composite;

/**
 * @record
 * @extends {KeyframeEffectOptions}
 */
var KeyframeAnimationOptions = function() {};

/** @type {string|undefined} */
KeyframeAnimationOptions.prototype.id;


/**
 * @record
 * @extends {AnimationEffectTimingProperties}
 */
var ComputedTimingProperties = function() {};

/** @type {number} */
ComputedTimingProperties.prototype.endTime;

/** @type {number} */
ComputedTimingProperties.prototype.activeDuration;

/** @type {?number} */
ComputedTimingProperties.prototype.localTime;

/** @type {?number} */
ComputedTimingProperties.prototype.progress;

/** @type {?number} */
ComputedTimingProperties.prototype.currentIteration;


/**
 * @interface
 */
var AnimationEffectTimingReadOnly = function() {};

/** @type {number} */
AnimationEffectTimingReadOnly.prototype.delay;

/** @type {number} */
AnimationEffectTimingReadOnly.prototype.endDelay;

/** @type {string} */
AnimationEffectTimingReadOnly.prototype.fill;

/** @type {number} */
AnimationEffectTimingReadOnly.prototype.iterationStart;

/** @type {number} */
AnimationEffectTimingReadOnly.prototype.iterations;

/** @type {number|string} */
AnimationEffectTimingReadOnly.prototype.duration;

/** @type {string} */
AnimationEffectTimingReadOnly.prototype.direction;

/** @type {string} */
AnimationEffectTimingReadOnly.prototype.easing;


/**
 * @interface
 * @extends {AnimationEffectTimingReadOnly}
 */
var AnimationEffectTiming = function() {};


/**
 * @interface
 */
var AnimationTimeline = function() {};

/** @type {?number} */
AnimationTimeline.prototype.currentTime;


/**
 * @constructor
 * @implements {AnimationTimeline}
 */
var DocumentTimeline = function() {};

/** @override */
DocumentTimeline.prototype.currentTime;


/** @type {!DocumentTimeline} */
Document.prototype.timeline;

/**
 * Externs for the Web Animations API (Level 2 / Groups).
 *
 * This defines externs for the "-next" version of the Web Animations API
 * polyfill found online at:
 *    https://github.com/web-animations/web-animations.js
 *
 * These features are NOT natively implemented in browsers and are not clearly
 * part of the official spec. This is NOT intended to be exhaustive, and
 * requires the base externs from web-animations.js.
 *
 */


/** @type {Element} */
KeyframeEffectReadOnly.prototype.target;

/** @type {?function(number, !KeyframeEffect, !Animation)|undefined} */
KeyframeEffectReadOnly.prototype.onsample;


/**
 * @param {!AnimationEffect} effect
 * @return {!Animation}
 */
DocumentTimeline.prototype.play = function(effect) {};

/**
 * @return {!Array<!Animation>}
 */
DocumentTimeline.prototype.getAnimations = function() {};


/**
 * @param {!Array<!AnimationEffect>} children
 * @param {AnimationEffectTimingProperties=} timing
 * @constructor
 * @implements {AnimationEffect}
 */
var SequenceEffect = function(children, timing) {};

/** @override */
SequenceEffect.prototype.getComputedTiming = function() {};

/** @override */
SequenceEffect.prototype.timing;

/** @type {!Array<!AnimationEffect>} */
SequenceEffect.prototype.children;


/**
 * @param {!Array<!AnimationEffect>} children
 * @param {AnimationEffectTimingProperties=} timing
 * @constructor
 * @implements {AnimationEffect}
 */
var GroupEffect = function(children, timing) {};

/** @override */
GroupEffect.prototype.getComputedTiming = function() {};

/** @override */
GroupEffect.prototype.timing;

/** @type {!Array<!AnimationEffect>} */
GroupEffect.prototype.children;
/*
 * Copyright 2017 The Closure Compiler Authors
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/**
 * @fileoverview Externs for web app manifest APIs.
 *
 * @see https://www.w3.org/TR/appmanifest/
 * @externs
 */

/**
 * @see https://www.w3.org/TR/appmanifest/#beforeinstallpromptevent-interface
 * @constructor
 * @extends {Event}
 */
function BeforeInstallPromptEvent() {}

/** @type {!Promise<{outcome: !AppBannerPromptOutcome}>} */
BeforeInstallPromptEvent.prototype.userChoice;

/** @return {!Promise<!PromptResponseObject>} */
BeforeInstallPromptEvent.prototype.prompt = function() {};

/**
 * @typedef {string}
 * @see https://www.w3.org/TR/appmanifest/#appbannerpromptoutcome-enum
 * Possible values: 'accepted', 'dismissed'
 */
var AppBannerPromptOutcome;

/** @typedef {{userChoice: !AppBannerPromptOutcome}} */
var PromptResponseObject;

/** @type {?function(!BeforeInstallPromptEvent)} */
Window.prototype.onbeforeinstallprompt;

/** @type {?function(!Event)} */
Window.prototype.onappinstalled;
/*
 * Copyright 2017 The Closure Compiler Authors
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/**
 * @fileoverview Definitions for WebAssembly JS API
 *
 *  @see http://webassembly.org/docs/js/
 *
 * @externs
 * @author loorongjie@gmail.com (Loo Rong Jie)
 */

 /**
 * @const
 */
var WebAssembly = {};

/**
 * @constructor
 * @param {!BufferSource} bytes
 */
WebAssembly.Module = function(bytes) {};

/**
 * @constructor
 * @param {!WebAssembly.Module} moduleObject
 * @param {Object=} importObject
 */
WebAssembly.Instance = function(moduleObject, importObject) {};

/**
 * @typedef {{initial:number, maximum:(number|undefined)}}
 */
var MemoryDescriptor;

/**
 * @constructor
 * @param {MemoryDescriptor} memoryDescriptor
 */
WebAssembly.Memory = function(memoryDescriptor) {};

/**
 * @typedef {{element:string, initial:number, maximum:(number|undefined)}}
 */
var TableDescriptor;

/**
 * @constructor
 * @param {TableDescriptor} tableDescriptor
 */
WebAssembly.Table = function(tableDescriptor) {};

/**
 * @constructor
 * @extends {Error}
 */
WebAssembly.CompileError = function() {};

/**
 * @constructor
 * @extends {Error}
 */
WebAssembly.LinkError = function() {};

/**
 * @constructor
 * @extends {Error}
 */
WebAssembly.RuntimeError = function() {};

// Note: Closure compiler does not support function overloading, omit this overload for now.
// {function(!WebAssembly.Module, Object=):!Promise<!WebAssembly.Instance>}
/**
 * @param {!BufferSource} moduleObject
 * @param {Object=} importObject
 * @return {!Promise<{module:!WebAssembly.Module, instance:!WebAssembly.Instance}>}
 */
WebAssembly.instantiate = function(moduleObject, importObject) {};

/**
 * @param {!Promise<!Response>} moduleStream
 * @param {Object=} importObject
 * @return {!Promise<{module:!WebAssembly.Module, instance:!WebAssembly.Instance}>}
 */
WebAssembly.instantiateStreaming = function(moduleStream, importObject) {};

/**
 * @param {!BufferSource} bytes
 * @return {!Promise<!WebAssembly.Module>}
 */
WebAssembly.compile = function(bytes) {};

/**
 * @param {!Promise<!Response>} moduleStream
 * @return {!Promise<!WebAssembly.Module>}
 */
WebAssembly.compileStreaming = function(moduleStream) {};

/**
 * @param {!BufferSource} bytes
 * @return {boolean}
 * @nosideeffects
 */
WebAssembly.validate = function(bytes) {};

/**
 * @param {!WebAssembly.Module} moduleObject
 * @return {!Array<{name:string, kind:string}>}
 */
WebAssembly.Module.exports = function(moduleObject) {};

/**
 * @param {!WebAssembly.Module} moduleObject
 * @return {!Array<{module:string, name:string, kind:string}>}
 */
WebAssembly.Module.imports = function(moduleObject) {};

/**
 * @param {!WebAssembly.Module} moduleObject
 * @param {string} sectionName
 * @return {!Array<!ArrayBuffer>}
 */
WebAssembly.Module.customSections = function(moduleObject, sectionName) {};

WebAssembly.Instance.prototype.exports;

/**
 * @param {number} delta
 * @return {number}
 */
WebAssembly.Memory.prototype.grow = function(delta) {};

/**
 * @type {!ArrayBuffer}
 */
WebAssembly.Memory.prototype.buffer;

/**
 * @param {number} delta
 * @return {number}
 */
WebAssembly.Table.prototype.grow = function(delta) {};

/**
 * @type {number}
 */
WebAssembly.Table.prototype.length;

/** @typedef {function(...)} */
var TableFunction;

/**
 * @param {number} index
 * @return {TableFunction}
 */
WebAssembly.Table.prototype.get = function(index) {};

/**
 * @param {number} index
 * @param {?TableFunction} value
 * @return {undefined}
 */
WebAssembly.Table.prototype.set = function(index, value) {};
/*
 * Copyright 2019 The Closure Compiler Authors
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/**
 * @fileoverview Definitions for WebGL functions as described at
 * http://www.khronos.org/registry/webgl/specs/latest/
 *
 * This file is current up to the WebGL 2.0 Compute spec.
 *
 * This relies on webgl2.js and html5.js being included for WebGL2, Canvas and
 * Typed Array support.
 *
 * @externs
 */


/**
 * @constructor
 * @extends {WebGL2RenderingContext}
 * @see https://www.khronos.org/registry/webgl/specs/latest/2.0-compute/#webgl2-compute-context
 */
function WebGL2ComputeRenderingContext() {}


/** @const {number} */
WebGL2ComputeRenderingContext.COMPUTE_SHADER;

/** @const {number} */
WebGL2ComputeRenderingContext.MAX_COMPUTE_UNIFORM_BLOCKS;

/** @const {number} */
WebGL2ComputeRenderingContext.MAX_COMPUTE_TEXTURE_IMAGE_UNITS;

/** @const {number} */
WebGL2ComputeRenderingContext.MAX_COMPUTE_IMAGE_UNIFORMS;

/** @const {number} */
WebGL2ComputeRenderingContext.MAX_COMPUTE_SHARED_MEMORY_SIZE;

/** @const {number} */
WebGL2ComputeRenderingContext.MAX_COMPUTE_UNIFORM_COMPONENTS;

/** @const {number} */
WebGL2ComputeRenderingContext.MAX_COMPUTE_ATOMIC_COUNTER_BUFFERS;

/** @const {number} */
WebGL2ComputeRenderingContext.MAX_COMPUTE_ATOMIC_COUNTERS;

/** @const {number} */
WebGL2ComputeRenderingContext.MAX_COMBINED_COMPUTE_UNIFORM_COMPONENTS;

/** @const {number} */
WebGL2ComputeRenderingContext.MAX_COMPUTE_WORK_GROUP_INVOCATIONS;

/** @const {number} */
WebGL2ComputeRenderingContext.MAX_COMPUTE_WORK_GROUP_COUNT;

/** @const {number} */
WebGL2ComputeRenderingContext.MAX_COMPUTE_WORK_GROUP_SIZE;

/** @const {number} */
WebGL2ComputeRenderingContext.COMPUTE_WORK_GROUP_SIZE;

/** @const {number} */
WebGL2ComputeRenderingContext.DISPATCH_INDIRECT_BUFFER;

/** @const {number} */
WebGL2ComputeRenderingContext.DISPATCH_INDIRECT_BUFFER_BINDING;

/** @const {number} */
WebGL2ComputeRenderingContext.COMPUTE_SHADER_BIT;

/** @const {number} */
WebGL2ComputeRenderingContext.DRAW_INDIRECT_BUFFER;

/** @const {number} */
WebGL2ComputeRenderingContext.DRAW_INDIRECT_BUFFER_BINDING;

/** @const {number} */
WebGL2ComputeRenderingContext.MAX_UNIFORM_LOCATIONS;

/** @const {number} */
WebGL2ComputeRenderingContext.FRAMEBUFFER_DEFAULT_WIDTH;

/** @const {number} */
WebGL2ComputeRenderingContext.FRAMEBUFFER_DEFAULT_HEIGHT;

/** @const {number} */
WebGL2ComputeRenderingContext.FRAMEBUFFER_DEFAULT_SAMPLES;

/** @const {number} */
WebGL2ComputeRenderingContext.FRAMEBUFFER_DEFAULT_FIXED_SAMPLE_LOCATIONS;

/** @const {number} */
WebGL2ComputeRenderingContext.MAX_FRAMEBUFFER_WIDTH;

/** @const {number} */
WebGL2ComputeRenderingContext.MAX_FRAMEBUFFER_HEIGHT;

/** @const {number} */
WebGL2ComputeRenderingContext.MAX_FRAMEBUFFER_SAMPLES;

/** @const {number} */
WebGL2ComputeRenderingContext.UNIFORM;

/** @const {number} */
WebGL2ComputeRenderingContext.UNIFORM_BLOCK;

/** @const {number} */
WebGL2ComputeRenderingContext.PROGRAM_INPUT;

/** @const {number} */
WebGL2ComputeRenderingContext.PROGRAM_OUTPUT;

/** @const {number} */
WebGL2ComputeRenderingContext.BUFFER_VARIABLE;

/** @const {number} */
WebGL2ComputeRenderingContext.SHADER_STORAGE_BLOCK;

/** @const {number} */
WebGL2ComputeRenderingContext.ATOMIC_COUNTER_BUFFER;

/** @const {number} */
WebGL2ComputeRenderingContext.TRANSFORM_FEEDBACK_VARYING;

/** @const {number} */
WebGL2ComputeRenderingContext.ACTIVE_RESOURCES;

/** @const {number} */
WebGL2ComputeRenderingContext.MAX_NAME_LENGTH;

/** @const {number} */
WebGL2ComputeRenderingContext.MAX_NUM_ACTIVE_VARIABLES;

/** @const {number} */
WebGL2ComputeRenderingContext.NAME_LENGTH;

/** @const {number} */
WebGL2ComputeRenderingContext.TYPE;

/** @const {number} */
WebGL2ComputeRenderingContext.ARRAY_SIZE;

/** @const {number} */
WebGL2ComputeRenderingContext.OFFSET;

/** @const {number} */
WebGL2ComputeRenderingContext.BLOCK_INDEX;

/** @const {number} */
WebGL2ComputeRenderingContext.ARRAY_STRIDE;

/** @const {number} */
WebGL2ComputeRenderingContext.MATRIX_STRIDE;

/** @const {number} */
WebGL2ComputeRenderingContext.IS_ROW_MAJOR;

/** @const {number} */
WebGL2ComputeRenderingContext.ATOMIC_COUNTER_BUFFER_INDEX;

/** @const {number} */
WebGL2ComputeRenderingContext.BUFFER_BINDING;

/** @const {number} */
WebGL2ComputeRenderingContext.BUFFER_DATA_SIZE;

/** @const {number} */
WebGL2ComputeRenderingContext.NUM_ACTIVE_VARIABLES;

/** @const {number} */
WebGL2ComputeRenderingContext.ACTIVE_VARIABLES;

/** @const {number} */
WebGL2ComputeRenderingContext.REFERENCED_BY_VERTEX_SHADER;

/** @const {number} */
WebGL2ComputeRenderingContext.REFERENCED_BY_FRAGMENT_SHADER;

/** @const {number} */
WebGL2ComputeRenderingContext.REFERENCED_BY_COMPUTE_SHADER;

/** @const {number} */
WebGL2ComputeRenderingContext.TOP_LEVEL_ARRAY_SIZE;

/** @const {number} */
WebGL2ComputeRenderingContext.TOP_LEVEL_ARRAY_STRIDE;

/** @const {number} */
WebGL2ComputeRenderingContext.LOCATION;

/** @const {number} */
WebGL2ComputeRenderingContext.VERTEX_SHADER_BIT;

/** @const {number} */
WebGL2ComputeRenderingContext.FRAGMENT_SHADER_BIT;

/** @const {number} */
WebGL2ComputeRenderingContext.ALL_SHADER_BITS;

/** @const {number} */
WebGL2ComputeRenderingContext.ATOMIC_COUNTER_BUFFER_BINDING;

/** @const {number} */
WebGL2ComputeRenderingContext.ATOMIC_COUNTER_BUFFER_START;

/** @const {number} */
WebGL2ComputeRenderingContext.ATOMIC_COUNTER_BUFFER_SIZE;

/** @const {number} */
WebGL2ComputeRenderingContext.MAX_VERTEX_ATOMIC_COUNTER_BUFFERS;

/** @const {number} */
WebGL2ComputeRenderingContext.MAX_FRAGMENT_ATOMIC_COUNTER_BUFFERS;

/** @const {number} */
WebGL2ComputeRenderingContext.MAX_COMBINED_ATOMIC_COUNTER_BUFFERS;

/** @const {number} */
WebGL2ComputeRenderingContext.MAX_VERTEX_ATOMIC_COUNTERS;

/** @const {number} */
WebGL2ComputeRenderingContext.MAX_FRAGMENT_ATOMIC_COUNTERS;

/** @const {number} */
WebGL2ComputeRenderingContext.MAX_COMBINED_ATOMIC_COUNTERS;

/** @const {number} */
WebGL2ComputeRenderingContext.MAX_ATOMIC_COUNTER_BUFFER_SIZE;

/** @const {number} */
WebGL2ComputeRenderingContext.MAX_ATOMIC_COUNTER_BUFFER_BINDINGS;

/** @const {number} */
WebGL2ComputeRenderingContext.ACTIVE_ATOMIC_COUNTER_BUFFERS;

/** @const {number} */
WebGL2ComputeRenderingContext.UNSIGNED_INT_ATOMIC_COUNTER;

/** @const {number} */
WebGL2ComputeRenderingContext.MAX_IMAGE_UNITS;

/** @const {number} */
WebGL2ComputeRenderingContext.MAX_VERTEX_IMAGE_UNIFORMS;

/** @const {number} */
WebGL2ComputeRenderingContext.MAX_FRAGMENT_IMAGE_UNIFORMS;

/** @const {number} */
WebGL2ComputeRenderingContext.MAX_COMBINED_IMAGE_UNIFORMS;

/** @const {number} */
WebGL2ComputeRenderingContext.IMAGE_BINDING_NAME;

/** @const {number} */
WebGL2ComputeRenderingContext.IMAGE_BINDING_LEVEL;

/** @const {number} */
WebGL2ComputeRenderingContext.IMAGE_BINDING_LAYERED;

/** @const {number} */
WebGL2ComputeRenderingContext.IMAGE_BINDING_LAYER;

/** @const {number} */
WebGL2ComputeRenderingContext.IMAGE_BINDING_ACCESS;

/** @const {number} */
WebGL2ComputeRenderingContext.IMAGE_BINDING_FORMAT;

/** @const {number} */
WebGL2ComputeRenderingContext.VERTEX_ATTRIB_ARRAY_BARRIER_BIT;

/** @const {number} */
WebGL2ComputeRenderingContext.ELEMENT_ARRAY_BARRIER_BIT;

/** @const {number} */
WebGL2ComputeRenderingContext.UNIFORM_BARRIER_BIT;

/** @const {number} */
WebGL2ComputeRenderingContext.TEXTURE_FETCH_BARRIER_BIT;

/** @const {number} */
WebGL2ComputeRenderingContext.SHADER_IMAGE_ACCESS_BARRIER_BIT;

/** @const {number} */
WebGL2ComputeRenderingContext.COMMAND_BARRIER_BIT;

/** @const {number} */
WebGL2ComputeRenderingContext.PIXEL_BUFFER_BARRIER_BIT;

/** @const {number} */
WebGL2ComputeRenderingContext.TEXTURE_UPDATE_BARRIER_BIT;

/** @const {number} */
WebGL2ComputeRenderingContext.BUFFER_UPDATE_BARRIER_BIT;

/** @const {number} */
WebGL2ComputeRenderingContext.FRAMEBUFFER_BARRIER_BIT;

/** @const {number} */
WebGL2ComputeRenderingContext.TRANSFORM_FEEDBACK_BARRIER_BIT;

/** @const {number} */
WebGL2ComputeRenderingContext.ATOMIC_COUNTER_BARRIER_BIT;

/** @const {number} */
WebGL2ComputeRenderingContext.SHADER_STORAGE_BARRIER_BIT;

/** @const {number} */
WebGL2ComputeRenderingContext.ALL_BARRIER_BITS;

/** @const {number} */
WebGL2ComputeRenderingContext.IMAGE_2D;

/** @const {number} */
WebGL2ComputeRenderingContext.IMAGE_3D;

/** @const {number} */
WebGL2ComputeRenderingContext.IMAGE_CUBE;

/** @const {number} */
WebGL2ComputeRenderingContext.IMAGE_2D_ARRAY;

/** @const {number} */
WebGL2ComputeRenderingContext.INT_IMAGE_2D;

/** @const {number} */
WebGL2ComputeRenderingContext.INT_IMAGE_3D;

/** @const {number} */
WebGL2ComputeRenderingContext.INT_IMAGE_CUBE;

/** @const {number} */
WebGL2ComputeRenderingContext.INT_IMAGE_2D_ARRAY;

/** @const {number} */
WebGL2ComputeRenderingContext.UNSIGNED_INT_IMAGE_2D;

/** @const {number} */
WebGL2ComputeRenderingContext.UNSIGNED_INT_IMAGE_3D;

/** @const {number} */
WebGL2ComputeRenderingContext.UNSIGNED_INT_IMAGE_CUBE;

/** @const {number} */
WebGL2ComputeRenderingContext.UNSIGNED_INT_IMAGE_2D_ARRAY;

/** @const {number} */
WebGL2ComputeRenderingContext.IMAGE_FORMAT_COMPATIBILITY_TYPE;

/** @const {number} */
WebGL2ComputeRenderingContext.IMAGE_FORMAT_COMPATIBILITY_BY_SIZE;

/** @const {number} */
WebGL2ComputeRenderingContext.IMAGE_FORMAT_COMPATIBILITY_BY_CLASS;

/** @const {number} */
WebGL2ComputeRenderingContext.READ_ONLY;

/** @const {number} */
WebGL2ComputeRenderingContext.WRITE_ONLY;

/** @const {number} */
WebGL2ComputeRenderingContext.READ_WRITE;

/** @const {number} */
WebGL2ComputeRenderingContext.SHADER_STORAGE_BUFFER;

/** @const {number} */
WebGL2ComputeRenderingContext.SHADER_STORAGE_BUFFER_BINDING;

/** @const {number} */
WebGL2ComputeRenderingContext.SHADER_STORAGE_BUFFER_START;

/** @const {number} */
WebGL2ComputeRenderingContext.SHADER_STORAGE_BUFFER_SIZE;

/** @const {number} */
WebGL2ComputeRenderingContext.MAX_VERTEX_SHADER_STORAGE_BLOCKS;

/** @const {number} */
WebGL2ComputeRenderingContext.MAX_FRAGMENT_SHADER_STORAGE_BLOCKS;

/** @const {number} */
WebGL2ComputeRenderingContext.MAX_COMPUTE_SHADER_STORAGE_BLOCKS;

/** @const {number} */
WebGL2ComputeRenderingContext.MAX_COMBINED_SHADER_STORAGE_BLOCKS;

/** @const {number} */
WebGL2ComputeRenderingContext.MAX_SHADER_STORAGE_BUFFER_BINDINGS;

/** @const {number} */
WebGL2ComputeRenderingContext.MAX_SHADER_STORAGE_BLOCK_SIZE;

/** @const {number} */
WebGL2ComputeRenderingContext.SHADER_STORAGE_BUFFER_OFFSET_ALIGNMENT;

/** @const {number} */
WebGL2ComputeRenderingContext.MAX_COMBINED_SHADER_OUTPUT_RESOURCES;

/** @const {number} */
WebGL2ComputeRenderingContext.DEPTH_STENCIL_TEXTURE_MODE;

/** @const {number} */
WebGL2ComputeRenderingContext.STENCIL_INDEX;

/** @const {number} */
WebGL2ComputeRenderingContext.MIN_PROGRAM_TEXTURE_GATHER_OFFSET;

/** @const {number} */
WebGL2ComputeRenderingContext.MAX_PROGRAM_TEXTURE_GATHER_OFFSET;

/** @const {number} */
WebGL2ComputeRenderingContext.SAMPLE_POSITION;

/** @const {number} */
WebGL2ComputeRenderingContext.SAMPLE_MASK;

/** @const {number} */
WebGL2ComputeRenderingContext.SAMPLE_MASK_VALUE;

/** @const {number} */
WebGL2ComputeRenderingContext.TEXTURE_2D_MULTISAMPLE;

/** @const {number} */
WebGL2ComputeRenderingContext.MAX_SAMPLE_MASK_WORDS;

/** @const {number} */
WebGL2ComputeRenderingContext.MAX_COLOR_TEXTURE_SAMPLES;

/** @const {number} */
WebGL2ComputeRenderingContext.MAX_DEPTH_TEXTURE_SAMPLES;

/** @const {number} */
WebGL2ComputeRenderingContext.MAX_INTEGER_SAMPLES;

/** @const {number} */
WebGL2ComputeRenderingContext.TEXTURE_BINDING_2D_MULTISAMPLE;

/** @const {number} */
WebGL2ComputeRenderingContext.TEXTURE_SAMPLES;

/** @const {number} */
WebGL2ComputeRenderingContext.TEXTURE_FIXED_SAMPLE_LOCATIONS;

/** @const {number} */
WebGL2ComputeRenderingContext.TEXTURE_WIDTH;

/** @const {number} */
WebGL2ComputeRenderingContext.TEXTURE_HEIGHT;

/** @const {number} */
WebGL2ComputeRenderingContext.TEXTURE_DEPTH;

/** @const {number} */
WebGL2ComputeRenderingContext.TEXTURE_INTERNAL_FORMAT;

/** @const {number} */
WebGL2ComputeRenderingContext.TEXTURE_RED_SIZE;

/** @const {number} */
WebGL2ComputeRenderingContext.TEXTURE_GREEN_SIZE;

/** @const {number} */
WebGL2ComputeRenderingContext.TEXTURE_BLUE_SIZE;

/** @const {number} */
WebGL2ComputeRenderingContext.TEXTURE_ALPHA_SIZE;

/** @const {number} */
WebGL2ComputeRenderingContext.TEXTURE_DEPTH_SIZE;

/** @const {number} */
WebGL2ComputeRenderingContext.TEXTURE_STENCIL_SIZE;

/** @const {number} */
WebGL2ComputeRenderingContext.TEXTURE_SHARED_SIZE;

/** @const {number} */
WebGL2ComputeRenderingContext.TEXTURE_RED_TYPE;

/** @const {number} */
WebGL2ComputeRenderingContext.TEXTURE_GREEN_TYPE;

/** @const {number} */
WebGL2ComputeRenderingContext.TEXTURE_BLUE_TYPE;

/** @const {number} */
WebGL2ComputeRenderingContext.TEXTURE_ALPHA_TYPE;

/** @const {number} */
WebGL2ComputeRenderingContext.TEXTURE_DEPTH_TYPE;

/** @const {number} */
WebGL2ComputeRenderingContext.TEXTURE_COMPRESSED;

/** @const {number} */
WebGL2ComputeRenderingContext.SAMPLER_2D_MULTISAMPLE;

/** @const {number} */
WebGL2ComputeRenderingContext.INT_SAMPLER_2D_MULTISAMPLE;

/** @const {number} */
WebGL2ComputeRenderingContext.UNSIGNED_INT_SAMPLER_2D_MULTISAMPLE;

/** @const {number} */
WebGL2ComputeRenderingContext.VERTEX_ATTRIB_BINDING;

/** @const {number} */
WebGL2ComputeRenderingContext.VERTEX_ATTRIB_RELATIVE_OFFSET;

/** @const {number} */
WebGL2ComputeRenderingContext.VERTEX_BINDING_DIVISOR;

/** @const {number} */
WebGL2ComputeRenderingContext.VERTEX_BINDING_OFFSET;

/** @const {number} */
WebGL2ComputeRenderingContext.VERTEX_BINDING_STRIDE;

/** @const {number} */
WebGL2ComputeRenderingContext.VERTEX_BINDING_BUFFER;

/** @const {number} */
WebGL2ComputeRenderingContext.MAX_VERTEX_ATTRIB_RELATIVE_OFFSET;

/** @const {number} */
WebGL2ComputeRenderingContext.MAX_VERTEX_ATTRIB_BINDINGS;

/** @const {number} */
WebGL2ComputeRenderingContext.MAX_VERTEX_ATTRIB_STRIDE;


/** @const {number} */
WebGL2ComputeRenderingContext.prototype.COMPUTE_SHADER;

/** @const {number} */
WebGL2ComputeRenderingContext.prototype.MAX_COMPUTE_UNIFORM_BLOCKS;

/** @const {number} */
WebGL2ComputeRenderingContext.prototype.MAX_COMPUTE_TEXTURE_IMAGE_UNITS;

/** @const {number} */
WebGL2ComputeRenderingContext.prototype.MAX_COMPUTE_IMAGE_UNIFORMS;

/** @const {number} */
WebGL2ComputeRenderingContext.prototype.MAX_COMPUTE_SHARED_MEMORY_SIZE;

/** @const {number} */
WebGL2ComputeRenderingContext.prototype.MAX_COMPUTE_UNIFORM_COMPONENTS;

/** @const {number} */
WebGL2ComputeRenderingContext.prototype.MAX_COMPUTE_ATOMIC_COUNTER_BUFFERS;

/** @const {number} */
WebGL2ComputeRenderingContext.prototype.MAX_COMPUTE_ATOMIC_COUNTERS;

/** @const {number} */
WebGL2ComputeRenderingContext.prototype.MAX_COMBINED_COMPUTE_UNIFORM_COMPONENTS;

/** @const {number} */
WebGL2ComputeRenderingContext.prototype.MAX_COMPUTE_WORK_GROUP_INVOCATIONS;

/** @const {number} */
WebGL2ComputeRenderingContext.prototype.MAX_COMPUTE_WORK_GROUP_COUNT;

/** @const {number} */
WebGL2ComputeRenderingContext.prototype.MAX_COMPUTE_WORK_GROUP_SIZE;

/** @const {number} */
WebGL2ComputeRenderingContext.prototype.COMPUTE_WORK_GROUP_SIZE;

/** @const {number} */
WebGL2ComputeRenderingContext.prototype.DISPATCH_INDIRECT_BUFFER;

/** @const {number} */
WebGL2ComputeRenderingContext.prototype.DISPATCH_INDIRECT_BUFFER_BINDING;

/** @const {number} */
WebGL2ComputeRenderingContext.prototype.COMPUTE_SHADER_BIT;

/** @const {number} */
WebGL2ComputeRenderingContext.prototype.DRAW_INDIRECT_BUFFER;

/** @const {number} */
WebGL2ComputeRenderingContext.prototype.DRAW_INDIRECT_BUFFER_BINDING;

/** @const {number} */
WebGL2ComputeRenderingContext.prototype.MAX_UNIFORM_LOCATIONS;

/** @const {number} */
WebGL2ComputeRenderingContext.prototype.FRAMEBUFFER_DEFAULT_WIDTH;

/** @const {number} */
WebGL2ComputeRenderingContext.prototype.FRAMEBUFFER_DEFAULT_HEIGHT;

/** @const {number} */
WebGL2ComputeRenderingContext.prototype.FRAMEBUFFER_DEFAULT_SAMPLES;

/** @const {number} */
WebGL2ComputeRenderingContext.prototype
    .FRAMEBUFFER_DEFAULT_FIXED_SAMPLE_LOCATIONS;

/** @const {number} */
WebGL2ComputeRenderingContext.prototype.MAX_FRAMEBUFFER_WIDTH;

/** @const {number} */
WebGL2ComputeRenderingContext.prototype.MAX_FRAMEBUFFER_HEIGHT;

/** @const {number} */
WebGL2ComputeRenderingContext.prototype.MAX_FRAMEBUFFER_SAMPLES;

/** @const {number} */
WebGL2ComputeRenderingContext.prototype.UNIFORM;

/** @const {number} */
WebGL2ComputeRenderingContext.prototype.UNIFORM_BLOCK;

/** @const {number} */
WebGL2ComputeRenderingContext.prototype.PROGRAM_INPUT;

/** @const {number} */
WebGL2ComputeRenderingContext.prototype.PROGRAM_OUTPUT;

/** @const {number} */
WebGL2ComputeRenderingContext.prototype.BUFFER_VARIABLE;

/** @const {number} */
WebGL2ComputeRenderingContext.prototype.SHADER_STORAGE_BLOCK;

/** @const {number} */
WebGL2ComputeRenderingContext.prototype.ATOMIC_COUNTER_BUFFER;

/** @const {number} */
WebGL2ComputeRenderingContext.prototype.TRANSFORM_FEEDBACK_VARYING;

/** @const {number} */
WebGL2ComputeRenderingContext.prototype.ACTIVE_RESOURCES;

/** @const {number} */
WebGL2ComputeRenderingContext.prototype.MAX_NAME_LENGTH;

/** @const {number} */
WebGL2ComputeRenderingContext.prototype.MAX_NUM_ACTIVE_VARIABLES;

/** @const {number} */
WebGL2ComputeRenderingContext.prototype.NAME_LENGTH;

/** @const {number} */
WebGL2ComputeRenderingContext.prototype.TYPE;

/** @const {number} */
WebGL2ComputeRenderingContext.prototype.ARRAY_SIZE;

/** @const {number} */
WebGL2ComputeRenderingContext.prototype.OFFSET;

/** @const {number} */
WebGL2ComputeRenderingContext.prototype.BLOCK_INDEX;

/** @const {number} */
WebGL2ComputeRenderingContext.prototype.ARRAY_STRIDE;

/** @const {number} */
WebGL2ComputeRenderingContext.prototype.MATRIX_STRIDE;

/** @const {number} */
WebGL2ComputeRenderingContext.prototype.IS_ROW_MAJOR;

/** @const {number} */
WebGL2ComputeRenderingContext.prototype.ATOMIC_COUNTER_BUFFER_INDEX;

/** @const {number} */
WebGL2ComputeRenderingContext.prototype.BUFFER_BINDING;

/** @const {number} */
WebGL2ComputeRenderingContext.prototype.BUFFER_DATA_SIZE;

/** @const {number} */
WebGL2ComputeRenderingContext.prototype.NUM_ACTIVE_VARIABLES;

/** @const {number} */
WebGL2ComputeRenderingContext.prototype.ACTIVE_VARIABLES;

/** @const {number} */
WebGL2ComputeRenderingContext.prototype.REFERENCED_BY_VERTEX_SHADER;

/** @const {number} */
WebGL2ComputeRenderingContext.prototype.REFERENCED_BY_FRAGMENT_SHADER;

/** @const {number} */
WebGL2ComputeRenderingContext.prototype.REFERENCED_BY_COMPUTE_SHADER;

/** @const {number} */
WebGL2ComputeRenderingContext.prototype.TOP_LEVEL_ARRAY_SIZE;

/** @const {number} */
WebGL2ComputeRenderingContext.prototype.TOP_LEVEL_ARRAY_STRIDE;

/** @const {number} */
WebGL2ComputeRenderingContext.prototype.LOCATION;

/** @const {number} */
WebGL2ComputeRenderingContext.prototype.VERTEX_SHADER_BIT;

/** @const {number} */
WebGL2ComputeRenderingContext.prototype.FRAGMENT_SHADER_BIT;

/** @const {number} */
WebGL2ComputeRenderingContext.prototype.ALL_SHADER_BITS;

/** @const {number} */
WebGL2ComputeRenderingContext.prototype.ATOMIC_COUNTER_BUFFER_BINDING;

/** @const {number} */
WebGL2ComputeRenderingContext.prototype.ATOMIC_COUNTER_BUFFER_START;

/** @const {number} */
WebGL2ComputeRenderingContext.prototype.ATOMIC_COUNTER_BUFFER_SIZE;

/** @const {number} */
WebGL2ComputeRenderingContext.prototype.MAX_VERTEX_ATOMIC_COUNTER_BUFFERS;

/** @const {number} */
WebGL2ComputeRenderingContext.prototype.MAX_FRAGMENT_ATOMIC_COUNTER_BUFFERS;

/** @const {number} */
WebGL2ComputeRenderingContext.prototype.MAX_COMBINED_ATOMIC_COUNTER_BUFFERS;

/** @const {number} */
WebGL2ComputeRenderingContext.prototype.MAX_VERTEX_ATOMIC_COUNTERS;

/** @const {number} */
WebGL2ComputeRenderingContext.prototype.MAX_FRAGMENT_ATOMIC_COUNTERS;

/** @const {number} */
WebGL2ComputeRenderingContext.prototype.MAX_COMBINED_ATOMIC_COUNTERS;

/** @const {number} */
WebGL2ComputeRenderingContext.prototype.MAX_ATOMIC_COUNTER_BUFFER_SIZE;

/** @const {number} */
WebGL2ComputeRenderingContext.prototype.MAX_ATOMIC_COUNTER_BUFFER_BINDINGS;

/** @const {number} */
WebGL2ComputeRenderingContext.prototype.ACTIVE_ATOMIC_COUNTER_BUFFERS;

/** @const {number} */
WebGL2ComputeRenderingContext.prototype.UNSIGNED_INT_ATOMIC_COUNTER;

/** @const {number} */
WebGL2ComputeRenderingContext.prototype.MAX_IMAGE_UNITS;

/** @const {number} */
WebGL2ComputeRenderingContext.prototype.MAX_VERTEX_IMAGE_UNIFORMS;

/** @const {number} */
WebGL2ComputeRenderingContext.prototype.MAX_FRAGMENT_IMAGE_UNIFORMS;

/** @const {number} */
WebGL2ComputeRenderingContext.prototype.MAX_COMBINED_IMAGE_UNIFORMS;

/** @const {number} */
WebGL2ComputeRenderingContext.prototype.IMAGE_BINDING_NAME;

/** @const {number} */
WebGL2ComputeRenderingContext.prototype.IMAGE_BINDING_LEVEL;

/** @const {number} */
WebGL2ComputeRenderingContext.prototype.IMAGE_BINDING_LAYERED;

/** @const {number} */
WebGL2ComputeRenderingContext.prototype.IMAGE_BINDING_LAYER;

/** @const {number} */
WebGL2ComputeRenderingContext.prototype.IMAGE_BINDING_ACCESS;

/** @const {number} */
WebGL2ComputeRenderingContext.prototype.IMAGE_BINDING_FORMAT;

/** @const {number} */
WebGL2ComputeRenderingContext.prototype.VERTEX_ATTRIB_ARRAY_BARRIER_BIT;

/** @const {number} */
WebGL2ComputeRenderingContext.prototype.ELEMENT_ARRAY_BARRIER_BIT;

/** @const {number} */
WebGL2ComputeRenderingContext.prototype.UNIFORM_BARRIER_BIT;

/** @const {number} */
WebGL2ComputeRenderingContext.prototype.TEXTURE_FETCH_BARRIER_BIT;

/** @const {number} */
WebGL2ComputeRenderingContext.prototype.SHADER_IMAGE_ACCESS_BARRIER_BIT;

/** @const {number} */
WebGL2ComputeRenderingContext.prototype.COMMAND_BARRIER_BIT;

/** @const {number} */
WebGL2ComputeRenderingContext.prototype.PIXEL_BUFFER_BARRIER_BIT;

/** @const {number} */
WebGL2ComputeRenderingContext.prototype.TEXTURE_UPDATE_BARRIER_BIT;

/** @const {number} */
WebGL2ComputeRenderingContext.prototype.BUFFER_UPDATE_BARRIER_BIT;

/** @const {number} */
WebGL2ComputeRenderingContext.prototype.FRAMEBUFFER_BARRIER_BIT;

/** @const {number} */
WebGL2ComputeRenderingContext.prototype.TRANSFORM_FEEDBACK_BARRIER_BIT;

/** @const {number} */
WebGL2ComputeRenderingContext.prototype.ATOMIC_COUNTER_BARRIER_BIT;

/** @const {number} */
WebGL2ComputeRenderingContext.prototype.SHADER_STORAGE_BARRIER_BIT;

/** @const {number} */
WebGL2ComputeRenderingContext.prototype.ALL_BARRIER_BITS;

/** @const {number} */
WebGL2ComputeRenderingContext.prototype.IMAGE_2D;

/** @const {number} */
WebGL2ComputeRenderingContext.prototype.IMAGE_3D;

/** @const {number} */
WebGL2ComputeRenderingContext.prototype.IMAGE_CUBE;

/** @const {number} */
WebGL2ComputeRenderingContext.prototype.IMAGE_2D_ARRAY;

/** @const {number} */
WebGL2ComputeRenderingContext.prototype.INT_IMAGE_2D;

/** @const {number} */
WebGL2ComputeRenderingContext.prototype.INT_IMAGE_3D;

/** @const {number} */
WebGL2ComputeRenderingContext.prototype.INT_IMAGE_CUBE;

/** @const {number} */
WebGL2ComputeRenderingContext.prototype.INT_IMAGE_2D_ARRAY;

/** @const {number} */
WebGL2ComputeRenderingContext.prototype.UNSIGNED_INT_IMAGE_2D;

/** @const {number} */
WebGL2ComputeRenderingContext.prototype.UNSIGNED_INT_IMAGE_3D;

/** @const {number} */
WebGL2ComputeRenderingContext.prototype.UNSIGNED_INT_IMAGE_CUBE;

/** @const {number} */
WebGL2ComputeRenderingContext.prototype.UNSIGNED_INT_IMAGE_2D_ARRAY;

/** @const {number} */
WebGL2ComputeRenderingContext.prototype.IMAGE_FORMAT_COMPATIBILITY_TYPE;

/** @const {number} */
WebGL2ComputeRenderingContext.prototype.IMAGE_FORMAT_COMPATIBILITY_BY_SIZE;

/** @const {number} */
WebGL2ComputeRenderingContext.prototype.IMAGE_FORMAT_COMPATIBILITY_BY_CLASS;

/** @const {number} */
WebGL2ComputeRenderingContext.prototype.READ_ONLY;

/** @const {number} */
WebGL2ComputeRenderingContext.prototype.WRITE_ONLY;

/** @const {number} */
WebGL2ComputeRenderingContext.prototype.READ_WRITE;

/** @const {number} */
WebGL2ComputeRenderingContext.prototype.SHADER_STORAGE_BUFFER;

/** @const {number} */
WebGL2ComputeRenderingContext.prototype.SHADER_STORAGE_BUFFER_BINDING;

/** @const {number} */
WebGL2ComputeRenderingContext.prototype.SHADER_STORAGE_BUFFER_START;

/** @const {number} */
WebGL2ComputeRenderingContext.prototype.SHADER_STORAGE_BUFFER_SIZE;

/** @const {number} */
WebGL2ComputeRenderingContext.prototype.MAX_VERTEX_SHADER_STORAGE_BLOCKS;

/** @const {number} */
WebGL2ComputeRenderingContext.prototype.MAX_FRAGMENT_SHADER_STORAGE_BLOCKS;

/** @const {number} */
WebGL2ComputeRenderingContext.prototype.MAX_COMPUTE_SHADER_STORAGE_BLOCKS;

/** @const {number} */
WebGL2ComputeRenderingContext.prototype.MAX_COMBINED_SHADER_STORAGE_BLOCKS;

/** @const {number} */
WebGL2ComputeRenderingContext.prototype.MAX_SHADER_STORAGE_BUFFER_BINDINGS;

/** @const {number} */
WebGL2ComputeRenderingContext.prototype.MAX_SHADER_STORAGE_BLOCK_SIZE;

/** @const {number} */
WebGL2ComputeRenderingContext.prototype.SHADER_STORAGE_BUFFER_OFFSET_ALIGNMENT;

/** @const {number} */
WebGL2ComputeRenderingContext.prototype.MAX_COMBINED_SHADER_OUTPUT_RESOURCES;

/** @const {number} */
WebGL2ComputeRenderingContext.prototype.DEPTH_STENCIL_TEXTURE_MODE;

/** @const {number} */
WebGL2ComputeRenderingContext.prototype.STENCIL_INDEX;

/** @const {number} */
WebGL2ComputeRenderingContext.prototype.MIN_PROGRAM_TEXTURE_GATHER_OFFSET;

/** @const {number} */
WebGL2ComputeRenderingContext.prototype.MAX_PROGRAM_TEXTURE_GATHER_OFFSET;

/** @const {number} */
WebGL2ComputeRenderingContext.prototype.SAMPLE_POSITION;

/** @const {number} */
WebGL2ComputeRenderingContext.prototype.SAMPLE_MASK;

/** @const {number} */
WebGL2ComputeRenderingContext.prototype.SAMPLE_MASK_VALUE;

/** @const {number} */
WebGL2ComputeRenderingContext.prototype.TEXTURE_2D_MULTISAMPLE;

/** @const {number} */
WebGL2ComputeRenderingContext.prototype.MAX_SAMPLE_MASK_WORDS;

/** @const {number} */
WebGL2ComputeRenderingContext.prototype.MAX_COLOR_TEXTURE_SAMPLES;

/** @const {number} */
WebGL2ComputeRenderingContext.prototype.MAX_DEPTH_TEXTURE_SAMPLES;

/** @const {number} */
WebGL2ComputeRenderingContext.prototype.MAX_INTEGER_SAMPLES;

/** @const {number} */
WebGL2ComputeRenderingContext.prototype.TEXTURE_BINDING_2D_MULTISAMPLE;

/** @const {number} */
WebGL2ComputeRenderingContext.prototype.TEXTURE_SAMPLES;

/** @const {number} */
WebGL2ComputeRenderingContext.prototype.TEXTURE_FIXED_SAMPLE_LOCATIONS;

/** @const {number} */
WebGL2ComputeRenderingContext.prototype.TEXTURE_WIDTH;

/** @const {number} */
WebGL2ComputeRenderingContext.prototype.TEXTURE_HEIGHT;

/** @const {number} */
WebGL2ComputeRenderingContext.prototype.TEXTURE_DEPTH;

/** @const {number} */
WebGL2ComputeRenderingContext.prototype.TEXTURE_INTERNAL_FORMAT;

/** @const {number} */
WebGL2ComputeRenderingContext.prototype.TEXTURE_RED_SIZE;

/** @const {number} */
WebGL2ComputeRenderingContext.prototype.TEXTURE_GREEN_SIZE;

/** @const {number} */
WebGL2ComputeRenderingContext.prototype.TEXTURE_BLUE_SIZE;

/** @const {number} */
WebGL2ComputeRenderingContext.prototype.TEXTURE_ALPHA_SIZE;

/** @const {number} */
WebGL2ComputeRenderingContext.prototype.TEXTURE_DEPTH_SIZE;

/** @const {number} */
WebGL2ComputeRenderingContext.prototype.TEXTURE_STENCIL_SIZE;

/** @const {number} */
WebGL2ComputeRenderingContext.prototype.TEXTURE_SHARED_SIZE;

/** @const {number} */
WebGL2ComputeRenderingContext.prototype.TEXTURE_RED_TYPE;

/** @const {number} */
WebGL2ComputeRenderingContext.prototype.TEXTURE_GREEN_TYPE;

/** @const {number} */
WebGL2ComputeRenderingContext.prototype.TEXTURE_BLUE_TYPE;

/** @const {number} */
WebGL2ComputeRenderingContext.prototype.TEXTURE_ALPHA_TYPE;

/** @const {number} */
WebGL2ComputeRenderingContext.prototype.TEXTURE_DEPTH_TYPE;

/** @const {number} */
WebGL2ComputeRenderingContext.prototype.TEXTURE_COMPRESSED;

/** @const {number} */
WebGL2ComputeRenderingContext.prototype.SAMPLER_2D_MULTISAMPLE;

/** @const {number} */
WebGL2ComputeRenderingContext.prototype.INT_SAMPLER_2D_MULTISAMPLE;

/** @const {number} */
WebGL2ComputeRenderingContext.prototype.UNSIGNED_INT_SAMPLER_2D_MULTISAMPLE;

/** @const {number} */
WebGL2ComputeRenderingContext.prototype.VERTEX_ATTRIB_BINDING;

/** @const {number} */
WebGL2ComputeRenderingContext.prototype.VERTEX_ATTRIB_RELATIVE_OFFSET;

/** @const {number} */
WebGL2ComputeRenderingContext.prototype.VERTEX_BINDING_DIVISOR;

/** @const {number} */
WebGL2ComputeRenderingContext.prototype.VERTEX_BINDING_OFFSET;

/** @const {number} */
WebGL2ComputeRenderingContext.prototype.VERTEX_BINDING_STRIDE;

/** @const {number} */
WebGL2ComputeRenderingContext.prototype.VERTEX_BINDING_BUFFER;

/** @const {number} */
WebGL2ComputeRenderingContext.prototype.MAX_VERTEX_ATTRIB_RELATIVE_OFFSET;

/** @const {number} */
WebGL2ComputeRenderingContext.prototype.MAX_VERTEX_ATTRIB_BINDINGS;

/** @const {number} */
WebGL2ComputeRenderingContext.prototype.MAX_VERTEX_ATTRIB_STRIDE;


/**
 * @param {number} num_groups_x
 * @param {number} num_groups_y
 * @param {number} num_groups_z
 * @return {undefined}
 */
WebGL2ComputeRenderingContext.prototype.dispatchCompute = function(
    num_groups_x, num_groups_y, num_groups_z) {};

/**
 * @param {number} offset
 * @return {undefined}
 */
WebGL2ComputeRenderingContext.prototype.dispatchComputeIndirect = function(
    offset) {};

/**
 * @param {number} mode
 * @param {number} offset
 * @return {undefined}
 */
WebGL2ComputeRenderingContext.prototype.drawArraysIndirect = function(
    mode, offset) {};

/**
 * @param {number} mode
 * @param {number} type
 * @param {number} offset
 * @return {undefined}
 */
WebGL2ComputeRenderingContext.prototype.drawElementsIndirect = function(
    mode, type, offset) {};

/**
 * @param {number} target
 * @param {number} pname
 * @param {number} param
 * @return {undefined}
 */
WebGL2ComputeRenderingContext.prototype.framebufferParameter = function(
    target, pname, param) {};

/**
 * @param {number} target
 * @param {number} pname
 * @return {*}
 */
WebGL2ComputeRenderingContext.prototype.getFramebufferParameter = function(
    target, pname) {};

/**
 * @param {!WebGLProgram} program
 * @param {number} programInterface
 * @param {number} pname
 * @return {*}
 */
WebGL2ComputeRenderingContext.prototype.getProgramInterfaceParameter = function(
    program, programInterface, pname) {};

/**
 * @param {!WebGLProgram} program
 * @param {number} programInterface
 * @param {number} index
 * @param {!Array<number>} props
 * @return {?Array<*>}
 */
WebGL2ComputeRenderingContext.prototype.getProgramResource = function(
    program, programInterface, index, props) {};

/**
 * @param {!WebGLProgram} program
 * @param {number} programInterface
 * @param {string} name
 * @return {number}
 */
WebGL2ComputeRenderingContext.prototype.getProgramResourceIndex = function(
    program, programInterface, name) {};

/**
 * @param {!WebGLProgram} program
 * @param {number} programInterface
 * @param {number} index
 * @return {?string}
 */
WebGL2ComputeRenderingContext.prototype.getProgramResourceName = function(
    program, programInterface, index) {};

/**
 * @param {!WebGLProgram} program
 * @param {number} programInterface
 * @param {string} name
 * @return {*}
 */
WebGL2ComputeRenderingContext.prototype.getProgramResourceLocation = function(
    program, programInterface, name) {};

/**
 * @param {?WebGLProgram} program
 * @param {?WebGLUniformLocation} location
 * @param {number} v0
 * @return {undefined}
 */
WebGL2ComputeRenderingContext.prototype.programUniform1i = function(
    program, location, v0) {};

/**
 * @param {?WebGLProgram} program
 * @param {?WebGLUniformLocation} location
 * @param {number} v0
 * @param {number} v1
 * @return {undefined}
 */
WebGL2ComputeRenderingContext.prototype.programUniform2i = function(
    program, location, v0, v1) {};

/**
 * @param {?WebGLProgram} program
 * @param {?WebGLUniformLocation} location
 * @param {number} v0
 * @param {number} v1
 * @param {number} v2
 * @return {undefined}
 */
WebGL2ComputeRenderingContext.prototype.programUniform3i = function(
    program, location, v0, v1, v2) {};

/**
 * @param {?WebGLProgram} program
 * @param {?WebGLUniformLocation} location
 * @param {number} v0
 * @param {number} v1
 * @param {number} v2
 * @param {number} v3
 * @return {undefined}
 */
WebGL2ComputeRenderingContext.prototype.programUniform4i = function(
    program, location, v0, v1, v2, v3) {};

/**
 * @param {?WebGLProgram} program
 * @param {?WebGLUniformLocation} location
 * @param {number} v0
 * @return {undefined}
 */
WebGL2ComputeRenderingContext.prototype.programUniform1ui = function(
    program, location, v0) {};

/**
 * @param {?WebGLProgram} program
 * @param {?WebGLUniformLocation} location
 * @param {number} v0
 * @param {number} v1
 * @return {undefined}
 */
WebGL2ComputeRenderingContext.prototype.programUniform2ui = function(
    program, location, v0, v1) {};

/**
 * @param {?WebGLProgram} program
 * @param {?WebGLUniformLocation} location
 * @param {number} v0
 * @param {number} v1
 * @param {number} v2
 * @return {undefined}
 */
WebGL2ComputeRenderingContext.prototype.programUniform3ui = function(
    program, location, v0, v1, v2) {};

/**
 * @param {?WebGLProgram} program
 * @param {?WebGLUniformLocation} location
 * @param {number} v0
 * @param {number} v1
 * @param {number} v2
 * @param {number} v3
 * @return {undefined}
 */
WebGL2ComputeRenderingContext.prototype.programUniform4ui = function(
    program, location, v0, v1, v2, v3) {};

/**
 * @param {?WebGLProgram} program
 * @param {?WebGLUniformLocation} location
 * @param {number} v0
 * @return {undefined}
 */
WebGL2ComputeRenderingContext.prototype.programUniform1f = function(
    program, location, v0) {};

/**
 * @param {?WebGLProgram} program
 * @param {?WebGLUniformLocation} location
 * @param {number} v0
 * @param {number} v1
 * @return {undefined}
 */
WebGL2ComputeRenderingContext.prototype.programUniform2f = function(
    program, location, v0, v1) {};

/**
 * @param {?WebGLProgram} program
 * @param {?WebGLUniformLocation} location
 * @param {number} v0
 * @param {number} v1
 * @param {number} v2
 * @return {undefined}
 */
WebGL2ComputeRenderingContext.prototype.programUniform3f = function(
    program, location, v0, v1, v2) {};

/**
 * @param {?WebGLProgram} program
 * @param {?WebGLUniformLocation} location
 * @param {number} v0
 * @param {number} v1
 * @param {number} v2
 * @param {number} v3
 * @return {undefined}
 */
WebGL2ComputeRenderingContext.prototype.programUniform4f = function(
    program, location, v0, v1, v2, v3) {};

/**
 * @param {?WebGLProgram} program
 * @param {?WebGLUniformLocation} location
 * @param {number} count
 * @param {!Int32Array|!Array<number>|!Array<boolean>} data
 * @return {undefined}
 */
WebGL2ComputeRenderingContext.prototype.programUniform1iv = function(
    program, location, count, data) {};

/**
 * @param {?WebGLProgram} program
 * @param {?WebGLUniformLocation} location
 * @param {number} count
 * @param {!Int32Array|!Array<number>|!Array<boolean>} data
 * @return {undefined}
 */
WebGL2ComputeRenderingContext.prototype.programUniform2iv = function(
    program, location, count, data) {};

/**
 * @param {?WebGLProgram} program
 * @param {?WebGLUniformLocation} location
 * @param {number} count
 * @param {!Int32Array|!Array<number>|!Array<boolean>} data
 * @return {undefined}
 */
WebGL2ComputeRenderingContext.prototype.programUniform3iv = function(
    program, location, count, data) {};

/**
 * @param {?WebGLProgram} program
 * @param {?WebGLUniformLocation} location
 * @param {number} count
 * @param {!Int32Array|!Array<number>|!Array<boolean>} data
 * @return {undefined}
 */
WebGL2ComputeRenderingContext.prototype.programUniform4iv = function(
    program, location, count, data) {};

/**
 * @param {?WebGLProgram} program
 * @param {?WebGLUniformLocation} location
 * @param {number} count
 * @param {!Uint32Array|!Array<number>|!Array<boolean>} data
 * @return {undefined}
 */
WebGL2ComputeRenderingContext.prototype.programUniform1uiv = function(
    program, location, count, data) {};

/**
 * @param {?WebGLProgram} program
 * @param {?WebGLUniformLocation} location
 * @param {number} count
 * @param {!Uint32Array|!Array<number>|!Array<boolean>} data
 * @return {undefined}
 */
WebGL2ComputeRenderingContext.prototype.programUniform2uiv = function(
    program, location, count, data) {};

/**
 * @param {?WebGLProgram} program
 * @param {?WebGLUniformLocation} location
 * @param {number} count
 * @param {!Uint32Array|!Array<number>|!Array<boolean>} data
 * @return {undefined}
 */
WebGL2ComputeRenderingContext.prototype.programUniform3uiv = function(
    program, location, count, data) {};

/**
 * @param {?WebGLProgram} program
 * @param {?WebGLUniformLocation} location
 * @param {number} count
 * @param {!Uint32Array|!Array<number>|!Array<boolean>} data
 * @return {undefined}
 */
WebGL2ComputeRenderingContext.prototype.programUniform4uiv = function(
    program, location, count, data) {};

/**
 * @param {?WebGLProgram} program
 * @param {?WebGLUniformLocation} location
 * @param {number} count
 * @param {!Float32Array|!Array<number>} data
 * @return {undefined}
 */
WebGL2ComputeRenderingContext.prototype.programUniform1fv = function(
    program, location, count, data) {};

/**
 * @param {?WebGLProgram} program
 * @param {?WebGLUniformLocation} location
 * @param {number} count
 * @param {!Float32Array|!Array<number>} data
 * @return {undefined}
 */
WebGL2ComputeRenderingContext.prototype.programUniform2fv = function(
    program, location, count, data) {};

/**
 * @param {?WebGLProgram} program
 * @param {?WebGLUniformLocation} location
 * @param {number} count
 * @param {!Float32Array|!Array<number>} data
 * @return {undefined}
 */
WebGL2ComputeRenderingContext.prototype.programUniform3fv = function(
    program, location, count, data) {};

/**
 * @param {?WebGLProgram} program
 * @param {?WebGLUniformLocation} location
 * @param {number} count
 * @param {!Float32Array|!Array<number>} data
 * @return {undefined}
 */
WebGL2ComputeRenderingContext.prototype.programUniform4fv = function(
    program, location, count, data) {};

/**
 * @param {?WebGLProgram} program
 * @param {?WebGLUniformLocation} location
 * @param {number} count
 * @param {boolean} transpose
 * @param {!Float32Array|!Array<number>} data
 * @return {undefined}
 */
WebGL2ComputeRenderingContext.prototype.programUniformMatrix2fv = function(
    program, location, count, transpose, data) {};

/**
 * @param {?WebGLProgram} program
 * @param {?WebGLUniformLocation} location
 * @param {number} count
 * @param {boolean} transpose
 * @param {!Float32Array|!Array<number>} data
 * @return {undefined}
 */
WebGL2ComputeRenderingContext.prototype.programUniformMatrix3fv = function(
    program, location, count, transpose, data) {};

/**
 * @param {?WebGLProgram} program
 * @param {?WebGLUniformLocation} location
 * @param {number} count
 * @param {boolean} transpose
 * @param {!Float32Array|!Array<number>} data
 * @return {undefined}
 */
WebGL2ComputeRenderingContext.prototype.programUniformMatrix4fv = function(
    program, location, count, transpose, data) {};

/**
 * @param {?WebGLProgram} program
 * @param {?WebGLUniformLocation} location
 * @param {number} count
 * @param {boolean} transpose
 * @param {!Float32Array|!Array<number>} data
 * @return {undefined}
 */
WebGL2ComputeRenderingContext.prototype.programUniformMatrix2x3fv = function(
    program, location, count, transpose, data) {};

/**
 * @param {?WebGLProgram} program
 * @param {?WebGLUniformLocation} location
 * @param {number} count
 * @param {boolean} transpose
 * @param {!Float32Array|!Array<number>} data
 * @return {undefined}
 */
WebGL2ComputeRenderingContext.prototype.programUniformMatrix3x2fv = function(
    program, location, count, transpose, data) {};

/**
 * @param {?WebGLProgram} program
 * @param {?WebGLUniformLocation} location
 * @param {number} count
 * @param {boolean} transpose
 * @param {!Float32Array|!Array<number>} data
 * @return {undefined}
 */
WebGL2ComputeRenderingContext.prototype.programUniformMatrix2x4fv = function(
    program, location, count, transpose, data) {};

/**
 * @param {?WebGLProgram} program
 * @param {?WebGLUniformLocation} location
 * @param {number} count
 * @param {boolean} transpose
 * @param {!Float32Array|!Array<number>} data
 * @return {undefined}
 */
WebGL2ComputeRenderingContext.prototype.programUniformMatrix4x2fv = function(
    program, location, count, transpose, data) {};

/**
 * @param {?WebGLProgram} program
 * @param {?WebGLUniformLocation} location
 * @param {number} count
 * @param {boolean} transpose
 * @param {!Float32Array|!Array<number>} data
 * @return {undefined}
 */
WebGL2ComputeRenderingContext.prototype.programUniformMatrix3x4fv = function(
    program, location, count, transpose, data) {};

/**
 * @param {?WebGLProgram} program
 * @param {?WebGLUniformLocation} location
 * @param {number} count
 * @param {boolean} transpose
 * @param {!Float32Array|!Array<number>} data
 * @return {undefined}
 */
WebGL2ComputeRenderingContext.prototype.programUniformMatrix4x3fv = function(
    program, location, count, transpose, data) {};

/**
 * @param {number} unit
 * @param {?WebGLTexture} texture
 * @param {number} level
 * @param {boolean} layered
 * @param {number} layer
 * @param {number} access
 * @param {number} format
 * @return {undefined}
 */
WebGL2ComputeRenderingContext.prototype.bindImageTexture = function(
    unit, texture, level, layered, layer, access, format) {};

/**
 * @param {number} barriers
 * @return {undefined}
 */
WebGL2ComputeRenderingContext.prototype.memoryBarrier = function(barriers) {};

/**
 * @param {number} barriers
 * @return {undefined}
 */
WebGL2ComputeRenderingContext.prototype.memoryBarrierByRegion = function(
    barriers) {};

/**
 * @param {number} target
 * @param {number} samples
 * @param {number} internalformat
 * @param {number} width
 * @param {number} height
 * @param {boolean} fixedsamplelocations
 * @return {undefined}
 */
WebGL2ComputeRenderingContext.prototype.texStorage2DMultisample = function(
    target, samples, internalformat, width, height, fixedsamplelocations) {};

/**
 * @param {number} target
 * @param {number} level
 * @param {number} pname
 * @return {*}
 */
WebGL2ComputeRenderingContext.prototype.getTexLevelParameter = function(
    target, level, pname) {};

/**
 * @param {number} pname
 * @param {number} index
 * @return {*}
 */
WebGL2ComputeRenderingContext.prototype.getMultisample = function(
    pname, index) {};

/**
 * @param {number} index
 * @param {number} mask
 * @return {undefined}
 */
WebGL2ComputeRenderingContext.prototype.sampleMask = function(index, mask) {};

/**
 * @param {number} bindingindex
 * @param {?WebGLBuffer} buffer
 * @param {number} offset
 * @param {number} stride
 * @return {undefined}
 */
WebGL2ComputeRenderingContext.prototype.bindVertexBuffer = function(
    bindingindex, buffer, offset, stride) {};

/**
 * @param {number} attribindex
 * @param {number} size
 * @param {number} type
 * @param {boolean} normalized
 * @param {number} relativeoffset
 * @return {undefined}
 */
WebGL2ComputeRenderingContext.prototype.vertexAttribFormat = function(
    attribindex, size, type, normalized, relativeoffset) {};

/**
 * @param {number} attribindex
 * @param {number} size
 * @param {number} type
 * @param {number} relativeoffset
 * @return {undefined}
 */
WebGL2ComputeRenderingContext.prototype.vertexAttribIFormat = function(
    attribindex, size, type, relativeoffset) {};

/**
 * @param {number} attribindex
 * @param {number} bindingindex
 * @return {undefined}
 */
WebGL2ComputeRenderingContext.prototype.vertexAttribBinding = function(
    attribindex, bindingindex) {};

/**
 * @param {number} bindingindex
 * @param {number} divisor
 * @return {undefined}
 */
WebGL2ComputeRenderingContext.prototype.vertexBindingDivisor = function(
    bindingindex, divisor) {};
/*
 * Copyright 2018 The Closure Compiler Authors
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/**
 * @fileoverview Definitions for WebGL functions as described at
 * http://www.khronos.org/registry/webgl/specs/latest/
 *
 * This file is current up to the WebGL 2.0 spec.
 *
 * This relies on webgl.js and html5.js being included for WebGL1, Canvas and
 * Typed Array support.
 *
 * @externs
 */


/**
 * @constructor
 * @extends {WebGLRenderingContext}
 */
function WebGL2RenderingContext() {}



/** @const {number} */
WebGL2RenderingContext.UNPACK_ROW_LENGTH;

/** @const {number} */
WebGL2RenderingContext.UNPACK_SKIP_ROWS;

/** @const {number} */
WebGL2RenderingContext.UNPACK_SKIP_PIXELS;

/** @const {number} */
WebGL2RenderingContext.PACK_ROW_LENGTH;

/** @const {number} */
WebGL2RenderingContext.PACK_SKIP_ROWS;

/** @const {number} */
WebGL2RenderingContext.PACK_SKIP_PIXELS;

/** @const {number} */
WebGL2RenderingContext.COLOR;

/** @const {number} */
WebGL2RenderingContext.DEPTH;

/** @const {number} */
WebGL2RenderingContext.STENCIL;

/** @const {number} */
WebGL2RenderingContext.RED;

/** @const {number} */
WebGL2RenderingContext.RGB8;

/** @const {number} */
WebGL2RenderingContext.RGBA8;

/** @const {number} */
WebGL2RenderingContext.RGB10_A2;

/** @const {number} */
WebGL2RenderingContext.TEXTURE_BINDING_3D;

/** @const {number} */
WebGL2RenderingContext.UNPACK_SKIP_IMAGES;

/** @const {number} */
WebGL2RenderingContext.UNPACK_IMAGE_HEIGHT;

/** @const {number} */
WebGL2RenderingContext.TEXTURE_3D;

/** @const {number} */
WebGL2RenderingContext.TEXTURE_WRAP_R;

/** @const {number} */
WebGL2RenderingContext.MAX_3D_TEXTURE_SIZE;

/** @const {number} */
WebGL2RenderingContext.UNSIGNED_INT_2_10_10_10_REV;

/** @const {number} */
WebGL2RenderingContext.MAX_ELEMENTS_VERTICES;

/** @const {number} */
WebGL2RenderingContext.MAX_ELEMENTS_INDICES;

/** @const {number} */
WebGL2RenderingContext.TEXTURE_MIN_LOD;

/** @const {number} */
WebGL2RenderingContext.TEXTURE_MAX_LOD;

/** @const {number} */
WebGL2RenderingContext.TEXTURE_BASE_LEVEL;

/** @const {number} */
WebGL2RenderingContext.TEXTURE_MAX_LEVEL;

/** @const {number} */
WebGL2RenderingContext.MIN;

/** @const {number} */
WebGL2RenderingContext.MAX;

/** @const {number} */
WebGL2RenderingContext.DEPTH_COMPONENT24;

/** @const {number} */
WebGL2RenderingContext.MAX_TEXTURE_LOD_BIAS;

/** @const {number} */
WebGL2RenderingContext.TEXTURE_COMPARE_MODE;

/** @const {number} */
WebGL2RenderingContext.TEXTURE_COMPARE_FUNC;

/** @const {number} */
WebGL2RenderingContext.CURRENT_QUERY;

/** @const {number} */
WebGL2RenderingContext.QUERY_RESULT;

/** @const {number} */
WebGL2RenderingContext.QUERY_RESULT_AVAILABLE;

/** @const {number} */
WebGL2RenderingContext.STREAM_READ;

/** @const {number} */
WebGL2RenderingContext.STREAM_COPY;

/** @const {number} */
WebGL2RenderingContext.STATIC_READ;

/** @const {number} */
WebGL2RenderingContext.STATIC_COPY;

/** @const {number} */
WebGL2RenderingContext.DYNAMIC_READ;

/** @const {number} */
WebGL2RenderingContext.DYNAMIC_COPY;

/** @const {number} */
WebGL2RenderingContext.MAX_DRAW_BUFFERS;

/** @const {number} */
WebGL2RenderingContext.DRAW_BUFFER0;

/** @const {number} */
WebGL2RenderingContext.DRAW_BUFFER1;

/** @const {number} */
WebGL2RenderingContext.DRAW_BUFFER2;

/** @const {number} */
WebGL2RenderingContext.DRAW_BUFFER3;

/** @const {number} */
WebGL2RenderingContext.DRAW_BUFFER4;

/** @const {number} */
WebGL2RenderingContext.DRAW_BUFFER5;

/** @const {number} */
WebGL2RenderingContext.DRAW_BUFFER6;

/** @const {number} */
WebGL2RenderingContext.DRAW_BUFFER7;

/** @const {number} */
WebGL2RenderingContext.DRAW_BUFFER8;

/** @const {number} */
WebGL2RenderingContext.DRAW_BUFFER9;

/** @const {number} */
WebGL2RenderingContext.DRAW_BUFFER10;

/** @const {number} */
WebGL2RenderingContext.DRAW_BUFFER11;

/** @const {number} */
WebGL2RenderingContext.DRAW_BUFFER12;

/** @const {number} */
WebGL2RenderingContext.DRAW_BUFFER13;

/** @const {number} */
WebGL2RenderingContext.DRAW_BUFFER14;

/** @const {number} */
WebGL2RenderingContext.DRAW_BUFFER15;

/** @const {number} */
WebGL2RenderingContext.MAX_FRAGMENT_UNIFORM_COMPONENTS;

/** @const {number} */
WebGL2RenderingContext.MAX_VERTEX_UNIFORM_COMPONENTS;

/** @const {number} */
WebGL2RenderingContext.SAMPLER_3D;

/** @const {number} */
WebGL2RenderingContext.SAMPLER_2D_SHADOW;

/** @const {number} */
WebGL2RenderingContext.FRAGMENT_SHADER_DERIVATIVE_HINT;

/** @const {number} */
WebGL2RenderingContext.PIXEL_PACK_BUFFER;

/** @const {number} */
WebGL2RenderingContext.PIXEL_UNPACK_BUFFER;

/** @const {number} */
WebGL2RenderingContext.PIXEL_PACK_BUFFER_BINDING;

/** @const {number} */
WebGL2RenderingContext.PIXEL_UNPACK_BUFFER_BINDING;

/** @const {number} */
WebGL2RenderingContext.FLOAT_MAT2x3;

/** @const {number} */
WebGL2RenderingContext.FLOAT_MAT2x4;

/** @const {number} */
WebGL2RenderingContext.FLOAT_MAT3x2;

/** @const {number} */
WebGL2RenderingContext.FLOAT_MAT3x4;

/** @const {number} */
WebGL2RenderingContext.FLOAT_MAT4x2;

/** @const {number} */
WebGL2RenderingContext.FLOAT_MAT4x3;

/** @const {number} */
WebGL2RenderingContext.SRGB;

/** @const {number} */
WebGL2RenderingContext.SRGB8;

/** @const {number} */
WebGL2RenderingContext.SRGB8_ALPHA8;

/** @const {number} */
WebGL2RenderingContext.COMPARE_REF_TO_TEXTURE;

/** @const {number} */
WebGL2RenderingContext.RGBA32F;

/** @const {number} */
WebGL2RenderingContext.RGB32F;

/** @const {number} */
WebGL2RenderingContext.RGBA16F;

/** @const {number} */
WebGL2RenderingContext.RGB16F;

/** @const {number} */
WebGL2RenderingContext.VERTEX_ATTRIB_ARRAY_INTEGER;

/** @const {number} */
WebGL2RenderingContext.MAX_ARRAY_TEXTURE_LAYERS;

/** @const {number} */
WebGL2RenderingContext.MIN_PROGRAM_TEXEL_OFFSET;

/** @const {number} */
WebGL2RenderingContext.MAX_PROGRAM_TEXEL_OFFSET;

/** @const {number} */
WebGL2RenderingContext.MAX_VARYING_COMPONENTS;

/** @const {number} */
WebGL2RenderingContext.TEXTURE_2D_ARRAY;

/** @const {number} */
WebGL2RenderingContext.TEXTURE_BINDING_2D_ARRAY;

/** @const {number} */
WebGL2RenderingContext.R11F_G11F_B10F;

/** @const {number} */
WebGL2RenderingContext.UNSIGNED_INT_10F_11F_11F_REV;

/** @const {number} */
WebGL2RenderingContext.RGB9_E5;

/** @const {number} */
WebGL2RenderingContext.UNSIGNED_INT_5_9_9_9_REV;

/** @const {number} */
WebGL2RenderingContext.TRANSFORM_FEEDBACK_BUFFER_MODE;

/** @const {number} */
WebGL2RenderingContext.MAX_TRANSFORM_FEEDBACK_SEPARATE_COMPONENTS;

/** @const {number} */
WebGL2RenderingContext.TRANSFORM_FEEDBACK_VARYINGS;

/** @const {number} */
WebGL2RenderingContext.TRANSFORM_FEEDBACK_BUFFER_START;

/** @const {number} */
WebGL2RenderingContext.TRANSFORM_FEEDBACK_BUFFER_SIZE;

/** @const {number} */
WebGL2RenderingContext.TRANSFORM_FEEDBACK_PRIMITIVES_WRITTEN;

/** @const {number} */
WebGL2RenderingContext.RASTERIZER_DISCARD;

/** @const {number} */
WebGL2RenderingContext.MAX_TRANSFORM_FEEDBACK_INTERLEAVED_COMPONENTS;

/** @const {number} */
WebGL2RenderingContext.MAX_TRANSFORM_FEEDBACK_SEPARATE_ATTRIBS;

/** @const {number} */
WebGL2RenderingContext.INTERLEAVED_ATTRIBS;

/** @const {number} */
WebGL2RenderingContext.SEPARATE_ATTRIBS;

/** @const {number} */
WebGL2RenderingContext.TRANSFORM_FEEDBACK_BUFFER;

/** @const {number} */
WebGL2RenderingContext.TRANSFORM_FEEDBACK_BUFFER_BINDING;

/** @const {number} */
WebGL2RenderingContext.RGBA32UI;

/** @const {number} */
WebGL2RenderingContext.RGB32UI;

/** @const {number} */
WebGL2RenderingContext.RGBA16UI;

/** @const {number} */
WebGL2RenderingContext.RGB16UI;

/** @const {number} */
WebGL2RenderingContext.RGBA8UI;

/** @const {number} */
WebGL2RenderingContext.RGB8UI;

/** @const {number} */
WebGL2RenderingContext.RGBA32I;

/** @const {number} */
WebGL2RenderingContext.RGB32I;

/** @const {number} */
WebGL2RenderingContext.RGBA16I;

/** @const {number} */
WebGL2RenderingContext.RGB16I;

/** @const {number} */
WebGL2RenderingContext.RGBA8I;

/** @const {number} */
WebGL2RenderingContext.RGB8I;

/** @const {number} */
WebGL2RenderingContext.RED_INTEGER;

/** @const {number} */
WebGL2RenderingContext.RGB_INTEGER;

/** @const {number} */
WebGL2RenderingContext.RGBA_INTEGER;

/** @const {number} */
WebGL2RenderingContext.SAMPLER_2D_ARRAY;

/** @const {number} */
WebGL2RenderingContext.SAMPLER_2D_ARRAY_SHADOW;

/** @const {number} */
WebGL2RenderingContext.SAMPLER_CUBE_SHADOW;

/** @const {number} */
WebGL2RenderingContext.UNSIGNED_INT_VEC2;

/** @const {number} */
WebGL2RenderingContext.UNSIGNED_INT_VEC3;

/** @const {number} */
WebGL2RenderingContext.UNSIGNED_INT_VEC4;

/** @const {number} */
WebGL2RenderingContext.INT_SAMPLER_2D;

/** @const {number} */
WebGL2RenderingContext.INT_SAMPLER_3D;

/** @const {number} */
WebGL2RenderingContext.INT_SAMPLER_CUBE;

/** @const {number} */
WebGL2RenderingContext.INT_SAMPLER_2D_ARRAY;

/** @const {number} */
WebGL2RenderingContext.UNSIGNED_INT_SAMPLER_2D;

/** @const {number} */
WebGL2RenderingContext.UNSIGNED_INT_SAMPLER_3D;

/** @const {number} */
WebGL2RenderingContext.UNSIGNED_INT_SAMPLER_CUBE;

/** @const {number} */
WebGL2RenderingContext.UNSIGNED_INT_SAMPLER_2D_ARRAY;

/** @const {number} */
WebGL2RenderingContext.DEPTH_COMPONENT32F;

/** @const {number} */
WebGL2RenderingContext.DEPTH32F_STENCIL8;

/** @const {number} */
WebGL2RenderingContext.FLOAT_32_UNSIGNED_INT_24_8_REV;

/** @const {number} */
WebGL2RenderingContext.FRAMEBUFFER_ATTACHMENT_COLOR_ENCODING;

/** @const {number} */
WebGL2RenderingContext.FRAMEBUFFER_ATTACHMENT_COMPONENT_TYPE;

/** @const {number} */
WebGL2RenderingContext.FRAMEBUFFER_ATTACHMENT_RED_SIZE;

/** @const {number} */
WebGL2RenderingContext.FRAMEBUFFER_ATTACHMENT_GREEN_SIZE;

/** @const {number} */
WebGL2RenderingContext.FRAMEBUFFER_ATTACHMENT_BLUE_SIZE;

/** @const {number} */
WebGL2RenderingContext.FRAMEBUFFER_ATTACHMENT_ALPHA_SIZE;

/** @const {number} */
WebGL2RenderingContext.FRAMEBUFFER_ATTACHMENT_DEPTH_SIZE;

/** @const {number} */
WebGL2RenderingContext.FRAMEBUFFER_ATTACHMENT_STENCIL_SIZE;

/** @const {number} */
WebGL2RenderingContext.FRAMEBUFFER_DEFAULT;

/** @const {number} */
WebGL2RenderingContext.DEPTH_STENCIL_ATTACHMENT;

/** @const {number} */
WebGL2RenderingContext.DEPTH_STENCIL;

/** @const {number} */
WebGL2RenderingContext.UNSIGNED_INT_24_8;

/** @const {number} */
WebGL2RenderingContext.DEPTH24_STENCIL8;

/** @const {number} */
WebGL2RenderingContext.UNSIGNED_NORMALIZED;

/** @const {number} */
WebGL2RenderingContext.DRAW_FRAMEBUFFER_BINDING;

/** @const {number} */
WebGL2RenderingContext.READ_FRAMEBUFFER;

/** @const {number} */
WebGL2RenderingContext.DRAW_FRAMEBUFFER;

/** @const {number} */
WebGL2RenderingContext.READ_FRAMEBUFFER_BINDING;

/** @const {number} */
WebGL2RenderingContext.RENDERBUFFER_SAMPLES;

/** @const {number} */
WebGL2RenderingContext.FRAMEBUFFER_ATTACHMENT_TEXTURE_LAYER;

/** @const {number} */
WebGL2RenderingContext.MAX_COLOR_ATTACHMENTS;

/** @const {number} */
WebGL2RenderingContext.COLOR_ATTACHMENT1;

/** @const {number} */
WebGL2RenderingContext.COLOR_ATTACHMENT2;

/** @const {number} */
WebGL2RenderingContext.COLOR_ATTACHMENT3;

/** @const {number} */
WebGL2RenderingContext.COLOR_ATTACHMENT4;

/** @const {number} */
WebGL2RenderingContext.COLOR_ATTACHMENT5;

/** @const {number} */
WebGL2RenderingContext.COLOR_ATTACHMENT6;

/** @const {number} */
WebGL2RenderingContext.COLOR_ATTACHMENT7;

/** @const {number} */
WebGL2RenderingContext.COLOR_ATTACHMENT8;

/** @const {number} */
WebGL2RenderingContext.COLOR_ATTACHMENT9;

/** @const {number} */
WebGL2RenderingContext.COLOR_ATTACHMENT10;

/** @const {number} */
WebGL2RenderingContext.COLOR_ATTACHMENT11;

/** @const {number} */
WebGL2RenderingContext.COLOR_ATTACHMENT12;

/** @const {number} */
WebGL2RenderingContext.COLOR_ATTACHMENT13;

/** @const {number} */
WebGL2RenderingContext.COLOR_ATTACHMENT14;

/** @const {number} */
WebGL2RenderingContext.COLOR_ATTACHMENT15;

/** @const {number} */
WebGL2RenderingContext.FRAMEBUFFER_INCOMPLETE_MULTISAMPLE;

/** @const {number} */
WebGL2RenderingContext.MAX_SAMPLES;

/** @const {number} */
WebGL2RenderingContext.HALF_FLOAT;

/** @const {number} */
WebGL2RenderingContext.RG;

/** @const {number} */
WebGL2RenderingContext.RG_INTEGER;

/** @const {number} */
WebGL2RenderingContext.R8;

/** @const {number} */
WebGL2RenderingContext.RG8;

/** @const {number} */
WebGL2RenderingContext.R16F;

/** @const {number} */
WebGL2RenderingContext.R32F;

/** @const {number} */
WebGL2RenderingContext.RG16F;

/** @const {number} */
WebGL2RenderingContext.RG32F;

/** @const {number} */
WebGL2RenderingContext.R8I;

/** @const {number} */
WebGL2RenderingContext.R8UI;

/** @const {number} */
WebGL2RenderingContext.R16I;

/** @const {number} */
WebGL2RenderingContext.R16UI;

/** @const {number} */
WebGL2RenderingContext.R32I;

/** @const {number} */
WebGL2RenderingContext.R32UI;

/** @const {number} */
WebGL2RenderingContext.RG8I;

/** @const {number} */
WebGL2RenderingContext.RG8UI;

/** @const {number} */
WebGL2RenderingContext.RG16I;

/** @const {number} */
WebGL2RenderingContext.RG16UI;

/** @const {number} */
WebGL2RenderingContext.RG32I;

/** @const {number} */
WebGL2RenderingContext.RG32UI;

/** @const {number} */
WebGL2RenderingContext.VERTEX_ARRAY_BINDING;

/** @const {number} */
WebGL2RenderingContext.R8_SNORM;

/** @const {number} */
WebGL2RenderingContext.RG8_SNORM;

/** @const {number} */
WebGL2RenderingContext.RGB8_SNORM;

/** @const {number} */
WebGL2RenderingContext.RGBA8_SNORM;

/** @const {number} */
WebGL2RenderingContext.SIGNED_NORMALIZED;

/** @const {number} */
WebGL2RenderingContext.COPY_READ_BUFFER;

/** @const {number} */
WebGL2RenderingContext.COPY_WRITE_BUFFER;

/** @const {number} */
WebGL2RenderingContext.COPY_READ_BUFFER_BINDING;

/** @const {number} */
WebGL2RenderingContext.COPY_WRITE_BUFFER_BINDING;

/** @const {number} */
WebGL2RenderingContext.UNIFORM_BUFFER;

/** @const {number} */
WebGL2RenderingContext.UNIFORM_BUFFER_BINDING;

/** @const {number} */
WebGL2RenderingContext.UNIFORM_BUFFER_START;

/** @const {number} */
WebGL2RenderingContext.UNIFORM_BUFFER_SIZE;

/** @const {number} */
WebGL2RenderingContext.MAX_VERTEX_UNIFORM_BLOCKS;

/** @const {number} */
WebGL2RenderingContext.MAX_FRAGMENT_UNIFORM_BLOCKS;

/** @const {number} */
WebGL2RenderingContext.MAX_COMBINED_UNIFORM_BLOCKS;

/** @const {number} */
WebGL2RenderingContext.MAX_UNIFORM_BUFFER_BINDINGS;

/** @const {number} */
WebGL2RenderingContext.MAX_UNIFORM_BLOCK_SIZE;

/** @const {number} */
WebGL2RenderingContext.MAX_COMBINED_VERTEX_UNIFORM_COMPONENTS;

/** @const {number} */
WebGL2RenderingContext.MAX_COMBINED_FRAGMENT_UNIFORM_COMPONENTS;

/** @const {number} */
WebGL2RenderingContext.UNIFORM_BUFFER_OFFSET_ALIGNMENT;

/** @const {number} */
WebGL2RenderingContext.ACTIVE_UNIFORM_BLOCKS;

/** @const {number} */
WebGL2RenderingContext.UNIFORM_TYPE;

/** @const {number} */
WebGL2RenderingContext.UNIFORM_SIZE;

/** @const {number} */
WebGL2RenderingContext.UNIFORM_BLOCK_INDEX;

/** @const {number} */
WebGL2RenderingContext.UNIFORM_OFFSET;

/** @const {number} */
WebGL2RenderingContext.UNIFORM_ARRAY_STRIDE;

/** @const {number} */
WebGL2RenderingContext.UNIFORM_MATRIX_STRIDE;

/** @const {number} */
WebGL2RenderingContext.UNIFORM_IS_ROW_MAJOR;

/** @const {number} */
WebGL2RenderingContext.UNIFORM_BLOCK_BINDING;

/** @const {number} */
WebGL2RenderingContext.UNIFORM_BLOCK_DATA_SIZE;

/** @const {number} */
WebGL2RenderingContext.UNIFORM_BLOCK_ACTIVE_UNIFORMS;

/** @const {number} */
WebGL2RenderingContext.UNIFORM_BLOCK_ACTIVE_UNIFORM_INDICES;

/** @const {number} */
WebGL2RenderingContext.UNIFORM_BLOCK_REFERENCED_BY_VERTEX_SHADER;

/** @const {number} */
WebGL2RenderingContext.UNIFORM_BLOCK_REFERENCED_BY_FRAGMENT_SHADER;

/** @const {number} */
WebGL2RenderingContext.INVALID_INDEX;

/** @const {number} */
WebGL2RenderingContext.MAX_VERTEX_OUTPUT_COMPONENTS;

/** @const {number} */
WebGL2RenderingContext.MAX_FRAGMENT_INPUT_COMPONENTS;

/** @const {number} */
WebGL2RenderingContext.MAX_SERVER_WAIT_TIMEOUT;

/** @const {number} */
WebGL2RenderingContext.OBJECT_TYPE;

/** @const {number} */
WebGL2RenderingContext.SYNC_CONDITION;

/** @const {number} */
WebGL2RenderingContext.SYNC_STATUS;

/** @const {number} */
WebGL2RenderingContext.SYNC_FLAGS;

/** @const {number} */
WebGL2RenderingContext.SYNC_FENCE;

/** @const {number} */
WebGL2RenderingContext.SYNC_GPU_COMMANDS_COMPLETE;

/** @const {number} */
WebGL2RenderingContext.UNSIGNALED;

/** @const {number} */
WebGL2RenderingContext.SIGNALED;

/** @const {number} */
WebGL2RenderingContext.ALREADY_SIGNALED;

/** @const {number} */
WebGL2RenderingContext.TIMEOUT_EXPIRED;

/** @const {number} */
WebGL2RenderingContext.CONDITION_SATISFIED;

/** @const {number} */
WebGL2RenderingContext.WAIT_FAILED;

/** @const {number} */
WebGL2RenderingContext.SYNC_FLUSH_COMMANDS_BIT;

/** @const {number} */
WebGL2RenderingContext.VERTEX_ATTRIB_ARRAY_DIVISOR;

/** @const {number} */
WebGL2RenderingContext.ANY_SAMPLES_PASSED;

/** @const {number} */
WebGL2RenderingContext.ANY_SAMPLES_PASSED_CONSERVATIVE;

/** @const {number} */
WebGL2RenderingContext.SAMPLER_BINDING;

/** @const {number} */
WebGL2RenderingContext.RGB10_A2UI;

/** @const {number} */
WebGL2RenderingContext.INT_2_10_10_10_REV;

/** @const {number} */
WebGL2RenderingContext.TRANSFORM_FEEDBACK;

/** @const {number} */
WebGL2RenderingContext.TRANSFORM_FEEDBACK_PAUSED;

/** @const {number} */
WebGL2RenderingContext.TRANSFORM_FEEDBACK_ACTIVE;

/** @const {number} */
WebGL2RenderingContext.TRANSFORM_FEEDBACK_BINDING;

/** @const {number} */
WebGL2RenderingContext.TEXTURE_IMMUTABLE_FORMAT;

/** @const {number} */
WebGL2RenderingContext.MAX_ELEMENT_INDEX;

/** @const {number} */
WebGL2RenderingContext.TEXTURE_IMMUTABLE_LEVELS;

/** @const {number} */
WebGL2RenderingContext.TIMEOUT_IGNORED;

/** @const {number} */
WebGL2RenderingContext.MAX_CLIENT_WAIT_TIMEOUT_WEBGL;


/** @const {number} */
WebGL2RenderingContext.prototype.UNPACK_ROW_LENGTH;

/** @const {number} */
WebGL2RenderingContext.prototype.UNPACK_SKIP_ROWS;

/** @const {number} */
WebGL2RenderingContext.prototype.UNPACK_SKIP_PIXELS;

/** @const {number} */
WebGL2RenderingContext.prototype.PACK_ROW_LENGTH;

/** @const {number} */
WebGL2RenderingContext.prototype.PACK_SKIP_ROWS;

/** @const {number} */
WebGL2RenderingContext.prototype.PACK_SKIP_PIXELS;

/** @const {number} */
WebGL2RenderingContext.prototype.COLOR;

/** @const {number} */
WebGL2RenderingContext.prototype.DEPTH;

/** @const {number} */
WebGL2RenderingContext.prototype.STENCIL;

/** @const {number} */
WebGL2RenderingContext.prototype.RED;

/** @const {number} */
WebGL2RenderingContext.prototype.RGB8;

/** @const {number} */
WebGL2RenderingContext.prototype.RGBA8;

/** @const {number} */
WebGL2RenderingContext.prototype.RGB10_A2;

/** @const {number} */
WebGL2RenderingContext.prototype.TEXTURE_BINDING_3D;

/** @const {number} */
WebGL2RenderingContext.prototype.UNPACK_SKIP_IMAGES;

/** @const {number} */
WebGL2RenderingContext.prototype.UNPACK_IMAGE_HEIGHT;

/** @const {number} */
WebGL2RenderingContext.prototype.TEXTURE_3D;

/** @const {number} */
WebGL2RenderingContext.prototype.TEXTURE_WRAP_R;

/** @const {number} */
WebGL2RenderingContext.prototype.MAX_3D_TEXTURE_SIZE;

/** @const {number} */
WebGL2RenderingContext.prototype.UNSIGNED_INT_2_10_10_10_REV;

/** @const {number} */
WebGL2RenderingContext.prototype.MAX_ELEMENTS_VERTICES;

/** @const {number} */
WebGL2RenderingContext.prototype.MAX_ELEMENTS_INDICES;

/** @const {number} */
WebGL2RenderingContext.prototype.TEXTURE_MIN_LOD;

/** @const {number} */
WebGL2RenderingContext.prototype.TEXTURE_MAX_LOD;

/** @const {number} */
WebGL2RenderingContext.prototype.TEXTURE_BASE_LEVEL;

/** @const {number} */
WebGL2RenderingContext.prototype.TEXTURE_MAX_LEVEL;

/** @const {number} */
WebGL2RenderingContext.prototype.MIN;

/** @const {number} */
WebGL2RenderingContext.prototype.MAX;

/** @const {number} */
WebGL2RenderingContext.prototype.DEPTH_COMPONENT24;

/** @const {number} */
WebGL2RenderingContext.prototype.MAX_TEXTURE_LOD_BIAS;

/** @const {number} */
WebGL2RenderingContext.prototype.TEXTURE_COMPARE_MODE;

/** @const {number} */
WebGL2RenderingContext.prototype.TEXTURE_COMPARE_FUNC;

/** @const {number} */
WebGL2RenderingContext.prototype.CURRENT_QUERY;

/** @const {number} */
WebGL2RenderingContext.prototype.QUERY_RESULT;

/** @const {number} */
WebGL2RenderingContext.prototype.QUERY_RESULT_AVAILABLE;

/** @const {number} */
WebGL2RenderingContext.prototype.STREAM_READ;

/** @const {number} */
WebGL2RenderingContext.prototype.STREAM_COPY;

/** @const {number} */
WebGL2RenderingContext.prototype.STATIC_READ;

/** @const {number} */
WebGL2RenderingContext.prototype.STATIC_COPY;

/** @const {number} */
WebGL2RenderingContext.prototype.DYNAMIC_READ;

/** @const {number} */
WebGL2RenderingContext.prototype.DYNAMIC_COPY;

/** @const {number} */
WebGL2RenderingContext.prototype.MAX_DRAW_BUFFERS;

/** @const {number} */
WebGL2RenderingContext.prototype.DRAW_BUFFER0;

/** @const {number} */
WebGL2RenderingContext.prototype.DRAW_BUFFER1;

/** @const {number} */
WebGL2RenderingContext.prototype.DRAW_BUFFER2;

/** @const {number} */
WebGL2RenderingContext.prototype.DRAW_BUFFER3;

/** @const {number} */
WebGL2RenderingContext.prototype.DRAW_BUFFER4;

/** @const {number} */
WebGL2RenderingContext.prototype.DRAW_BUFFER5;

/** @const {number} */
WebGL2RenderingContext.prototype.DRAW_BUFFER6;

/** @const {number} */
WebGL2RenderingContext.prototype.DRAW_BUFFER7;

/** @const {number} */
WebGL2RenderingContext.prototype.DRAW_BUFFER8;

/** @const {number} */
WebGL2RenderingContext.prototype.DRAW_BUFFER9;

/** @const {number} */
WebGL2RenderingContext.prototype.DRAW_BUFFER10;

/** @const {number} */
WebGL2RenderingContext.prototype.DRAW_BUFFER11;

/** @const {number} */
WebGL2RenderingContext.prototype.DRAW_BUFFER12;

/** @const {number} */
WebGL2RenderingContext.prototype.DRAW_BUFFER13;

/** @const {number} */
WebGL2RenderingContext.prototype.DRAW_BUFFER14;

/** @const {number} */
WebGL2RenderingContext.prototype.DRAW_BUFFER15;

/** @const {number} */
WebGL2RenderingContext.prototype.MAX_FRAGMENT_UNIFORM_COMPONENTS;

/** @const {number} */
WebGL2RenderingContext.prototype.MAX_VERTEX_UNIFORM_COMPONENTS;

/** @const {number} */
WebGL2RenderingContext.prototype.SAMPLER_3D;

/** @const {number} */
WebGL2RenderingContext.prototype.SAMPLER_2D_SHADOW;

/** @const {number} */
WebGL2RenderingContext.prototype.FRAGMENT_SHADER_DERIVATIVE_HINT;

/** @const {number} */
WebGL2RenderingContext.prototype.PIXEL_PACK_BUFFER;

/** @const {number} */
WebGL2RenderingContext.prototype.PIXEL_UNPACK_BUFFER;

/** @const {number} */
WebGL2RenderingContext.prototype.PIXEL_PACK_BUFFER_BINDING;

/** @const {number} */
WebGL2RenderingContext.prototype.PIXEL_UNPACK_BUFFER_BINDING;

/** @const {number} */
WebGL2RenderingContext.prototype.FLOAT_MAT2x3;

/** @const {number} */
WebGL2RenderingContext.prototype.FLOAT_MAT2x4;

/** @const {number} */
WebGL2RenderingContext.prototype.FLOAT_MAT3x2;

/** @const {number} */
WebGL2RenderingContext.prototype.FLOAT_MAT3x4;

/** @const {number} */
WebGL2RenderingContext.prototype.FLOAT_MAT4x2;

/** @const {number} */
WebGL2RenderingContext.prototype.FLOAT_MAT4x3;

/** @const {number} */
WebGL2RenderingContext.prototype.SRGB;

/** @const {number} */
WebGL2RenderingContext.prototype.SRGB8;

/** @const {number} */
WebGL2RenderingContext.prototype.SRGB8_ALPHA8;

/** @const {number} */
WebGL2RenderingContext.prototype.COMPARE_REF_TO_TEXTURE;

/** @const {number} */
WebGL2RenderingContext.prototype.RGBA32F;

/** @const {number} */
WebGL2RenderingContext.prototype.RGB32F;

/** @const {number} */
WebGL2RenderingContext.prototype.RGBA16F;

/** @const {number} */
WebGL2RenderingContext.prototype.RGB16F;

/** @const {number} */
WebGL2RenderingContext.prototype.VERTEX_ATTRIB_ARRAY_INTEGER;

/** @const {number} */
WebGL2RenderingContext.prototype.MAX_ARRAY_TEXTURE_LAYERS;

/** @const {number} */
WebGL2RenderingContext.prototype.MIN_PROGRAM_TEXEL_OFFSET;

/** @const {number} */
WebGL2RenderingContext.prototype.MAX_PROGRAM_TEXEL_OFFSET;

/** @const {number} */
WebGL2RenderingContext.prototype.MAX_VARYING_COMPONENTS;

/** @const {number} */
WebGL2RenderingContext.prototype.TEXTURE_2D_ARRAY;

/** @const {number} */
WebGL2RenderingContext.prototype.TEXTURE_BINDING_2D_ARRAY;

/** @const {number} */
WebGL2RenderingContext.prototype.R11F_G11F_B10F;

/** @const {number} */
WebGL2RenderingContext.prototype.UNSIGNED_INT_10F_11F_11F_REV;

/** @const {number} */
WebGL2RenderingContext.prototype.RGB9_E5;

/** @const {number} */
WebGL2RenderingContext.prototype.UNSIGNED_INT_5_9_9_9_REV;

/** @const {number} */
WebGL2RenderingContext.prototype.TRANSFORM_FEEDBACK_BUFFER_MODE;

/** @const {number} */
WebGL2RenderingContext.prototype.MAX_TRANSFORM_FEEDBACK_SEPARATE_COMPONENTS;

/** @const {number} */
WebGL2RenderingContext.prototype.TRANSFORM_FEEDBACK_VARYINGS;

/** @const {number} */
WebGL2RenderingContext.prototype.TRANSFORM_FEEDBACK_BUFFER_START;

/** @const {number} */
WebGL2RenderingContext.prototype.TRANSFORM_FEEDBACK_BUFFER_SIZE;

/** @const {number} */
WebGL2RenderingContext.prototype.TRANSFORM_FEEDBACK_PRIMITIVES_WRITTEN;

/** @const {number} */
WebGL2RenderingContext.prototype.RASTERIZER_DISCARD;

/** @const {number} */
WebGL2RenderingContext.prototype.MAX_TRANSFORM_FEEDBACK_INTERLEAVED_COMPONENTS =
    0x8C8A;

/** @const {number} */
WebGL2RenderingContext.prototype.MAX_TRANSFORM_FEEDBACK_SEPARATE_ATTRIBS;

/** @const {number} */
WebGL2RenderingContext.prototype.INTERLEAVED_ATTRIBS;

/** @const {number} */
WebGL2RenderingContext.prototype.SEPARATE_ATTRIBS;

/** @const {number} */
WebGL2RenderingContext.prototype.TRANSFORM_FEEDBACK_BUFFER;

/** @const {number} */
WebGL2RenderingContext.prototype.TRANSFORM_FEEDBACK_BUFFER_BINDING;

/** @const {number} */
WebGL2RenderingContext.prototype.RGBA32UI;

/** @const {number} */
WebGL2RenderingContext.prototype.RGB32UI;

/** @const {number} */
WebGL2RenderingContext.prototype.RGBA16UI;

/** @const {number} */
WebGL2RenderingContext.prototype.RGB16UI;

/** @const {number} */
WebGL2RenderingContext.prototype.RGBA8UI;

/** @const {number} */
WebGL2RenderingContext.prototype.RGB8UI;

/** @const {number} */
WebGL2RenderingContext.prototype.RGBA32I;

/** @const {number} */
WebGL2RenderingContext.prototype.RGB32I;

/** @const {number} */
WebGL2RenderingContext.prototype.RGBA16I;

/** @const {number} */
WebGL2RenderingContext.prototype.RGB16I;

/** @const {number} */
WebGL2RenderingContext.prototype.RGBA8I;

/** @const {number} */
WebGL2RenderingContext.prototype.RGB8I;

/** @const {number} */
WebGL2RenderingContext.prototype.RED_INTEGER;

/** @const {number} */
WebGL2RenderingContext.prototype.RGB_INTEGER;

/** @const {number} */
WebGL2RenderingContext.prototype.RGBA_INTEGER;

/** @const {number} */
WebGL2RenderingContext.prototype.SAMPLER_2D_ARRAY;

/** @const {number} */
WebGL2RenderingContext.prototype.SAMPLER_2D_ARRAY_SHADOW;

/** @const {number} */
WebGL2RenderingContext.prototype.SAMPLER_CUBE_SHADOW;

/** @const {number} */
WebGL2RenderingContext.prototype.UNSIGNED_INT_VEC2;

/** @const {number} */
WebGL2RenderingContext.prototype.UNSIGNED_INT_VEC3;

/** @const {number} */
WebGL2RenderingContext.prototype.UNSIGNED_INT_VEC4;

/** @const {number} */
WebGL2RenderingContext.prototype.INT_SAMPLER_2D;

/** @const {number} */
WebGL2RenderingContext.prototype.INT_SAMPLER_3D;

/** @const {number} */
WebGL2RenderingContext.prototype.INT_SAMPLER_CUBE;

/** @const {number} */
WebGL2RenderingContext.prototype.INT_SAMPLER_2D_ARRAY;

/** @const {number} */
WebGL2RenderingContext.prototype.UNSIGNED_INT_SAMPLER_2D;

/** @const {number} */
WebGL2RenderingContext.prototype.UNSIGNED_INT_SAMPLER_3D;

/** @const {number} */
WebGL2RenderingContext.prototype.UNSIGNED_INT_SAMPLER_CUBE;

/** @const {number} */
WebGL2RenderingContext.prototype.UNSIGNED_INT_SAMPLER_2D_ARRAY;

/** @const {number} */
WebGL2RenderingContext.prototype.DEPTH_COMPONENT32F;

/** @const {number} */
WebGL2RenderingContext.prototype.DEPTH32F_STENCIL8;

/** @const {number} */
WebGL2RenderingContext.prototype.FLOAT_32_UNSIGNED_INT_24_8_REV;

/** @const {number} */
WebGL2RenderingContext.prototype.FRAMEBUFFER_ATTACHMENT_COLOR_ENCODING;

/** @const {number} */
WebGL2RenderingContext.prototype.FRAMEBUFFER_ATTACHMENT_COMPONENT_TYPE;

/** @const {number} */
WebGL2RenderingContext.prototype.FRAMEBUFFER_ATTACHMENT_RED_SIZE;

/** @const {number} */
WebGL2RenderingContext.prototype.FRAMEBUFFER_ATTACHMENT_GREEN_SIZE;

/** @const {number} */
WebGL2RenderingContext.prototype.FRAMEBUFFER_ATTACHMENT_BLUE_SIZE;

/** @const {number} */
WebGL2RenderingContext.prototype.FRAMEBUFFER_ATTACHMENT_ALPHA_SIZE;

/** @const {number} */
WebGL2RenderingContext.prototype.FRAMEBUFFER_ATTACHMENT_DEPTH_SIZE;

/** @const {number} */
WebGL2RenderingContext.prototype.FRAMEBUFFER_ATTACHMENT_STENCIL_SIZE;

/** @const {number} */
WebGL2RenderingContext.prototype.FRAMEBUFFER_DEFAULT;

/** @const {number} */
WebGL2RenderingContext.prototype.DEPTH_STENCIL_ATTACHMENT;

/** @const {number} */
WebGL2RenderingContext.prototype.DEPTH_STENCIL;

/** @const {number} */
WebGL2RenderingContext.prototype.UNSIGNED_INT_24_8;

/** @const {number} */
WebGL2RenderingContext.prototype.DEPTH24_STENCIL8;

/** @const {number} */
WebGL2RenderingContext.prototype.UNSIGNED_NORMALIZED;

/** @const {number} */
WebGL2RenderingContext.prototype.DRAW_FRAMEBUFFER_BINDING;

/** @const {number} */
WebGL2RenderingContext.prototype.READ_FRAMEBUFFER;

/** @const {number} */
WebGL2RenderingContext.prototype.DRAW_FRAMEBUFFER;

/** @const {number} */
WebGL2RenderingContext.prototype.READ_FRAMEBUFFER_BINDING;

/** @const {number} */
WebGL2RenderingContext.prototype.RENDERBUFFER_SAMPLES;

/** @const {number} */
WebGL2RenderingContext.prototype.FRAMEBUFFER_ATTACHMENT_TEXTURE_LAYER;

/** @const {number} */
WebGL2RenderingContext.prototype.MAX_COLOR_ATTACHMENTS;

/** @const {number} */
WebGL2RenderingContext.prototype.COLOR_ATTACHMENT1;

/** @const {number} */
WebGL2RenderingContext.prototype.COLOR_ATTACHMENT2;

/** @const {number} */
WebGL2RenderingContext.prototype.COLOR_ATTACHMENT3;

/** @const {number} */
WebGL2RenderingContext.prototype.COLOR_ATTACHMENT4;

/** @const {number} */
WebGL2RenderingContext.prototype.COLOR_ATTACHMENT5;

/** @const {number} */
WebGL2RenderingContext.prototype.COLOR_ATTACHMENT6;

/** @const {number} */
WebGL2RenderingContext.prototype.COLOR_ATTACHMENT7;

/** @const {number} */
WebGL2RenderingContext.prototype.COLOR_ATTACHMENT8;

/** @const {number} */
WebGL2RenderingContext.prototype.COLOR_ATTACHMENT9;

/** @const {number} */
WebGL2RenderingContext.prototype.COLOR_ATTACHMENT10;

/** @const {number} */
WebGL2RenderingContext.prototype.COLOR_ATTACHMENT11;

/** @const {number} */
WebGL2RenderingContext.prototype.COLOR_ATTACHMENT12;

/** @const {number} */
WebGL2RenderingContext.prototype.COLOR_ATTACHMENT13;

/** @const {number} */
WebGL2RenderingContext.prototype.COLOR_ATTACHMENT14;

/** @const {number} */
WebGL2RenderingContext.prototype.COLOR_ATTACHMENT15;

/** @const {number} */
WebGL2RenderingContext.prototype.FRAMEBUFFER_INCOMPLETE_MULTISAMPLE;

/** @const {number} */
WebGL2RenderingContext.prototype.MAX_SAMPLES;

/** @const {number} */
WebGL2RenderingContext.prototype.HALF_FLOAT;

/** @const {number} */
WebGL2RenderingContext.prototype.RG;

/** @const {number} */
WebGL2RenderingContext.prototype.RG_INTEGER;

/** @const {number} */
WebGL2RenderingContext.prototype.R8;

/** @const {number} */
WebGL2RenderingContext.prototype.RG8;

/** @const {number} */
WebGL2RenderingContext.prototype.R16F;

/** @const {number} */
WebGL2RenderingContext.prototype.R32F;

/** @const {number} */
WebGL2RenderingContext.prototype.RG16F;

/** @const {number} */
WebGL2RenderingContext.prototype.RG32F;

/** @const {number} */
WebGL2RenderingContext.prototype.R8I;

/** @const {number} */
WebGL2RenderingContext.prototype.R8UI;

/** @const {number} */
WebGL2RenderingContext.prototype.R16I;

/** @const {number} */
WebGL2RenderingContext.prototype.R16UI;

/** @const {number} */
WebGL2RenderingContext.prototype.R32I;

/** @const {number} */
WebGL2RenderingContext.prototype.R32UI;

/** @const {number} */
WebGL2RenderingContext.prototype.RG8I;

/** @const {number} */
WebGL2RenderingContext.prototype.RG8UI;

/** @const {number} */
WebGL2RenderingContext.prototype.RG16I;

/** @const {number} */
WebGL2RenderingContext.prototype.RG16UI;

/** @const {number} */
WebGL2RenderingContext.prototype.RG32I;

/** @const {number} */
WebGL2RenderingContext.prototype.RG32UI;

/** @const {number} */
WebGL2RenderingContext.prototype.VERTEX_ARRAY_BINDING;

/** @const {number} */
WebGL2RenderingContext.prototype.R8_SNORM;

/** @const {number} */
WebGL2RenderingContext.prototype.RG8_SNORM;

/** @const {number} */
WebGL2RenderingContext.prototype.RGB8_SNORM;

/** @const {number} */
WebGL2RenderingContext.prototype.RGBA8_SNORM;

/** @const {number} */
WebGL2RenderingContext.prototype.SIGNED_NORMALIZED;

/** @const {number} */
WebGL2RenderingContext.prototype.COPY_READ_BUFFER;

/** @const {number} */
WebGL2RenderingContext.prototype.COPY_WRITE_BUFFER;

/** @const {number} */
WebGL2RenderingContext.prototype.COPY_READ_BUFFER_BINDING;

/** @const {number} */
WebGL2RenderingContext.prototype.COPY_WRITE_BUFFER_BINDING;

/** @const {number} */
WebGL2RenderingContext.prototype.UNIFORM_BUFFER;

/** @const {number} */
WebGL2RenderingContext.prototype.UNIFORM_BUFFER_BINDING;

/** @const {number} */
WebGL2RenderingContext.prototype.UNIFORM_BUFFER_START;

/** @const {number} */
WebGL2RenderingContext.prototype.UNIFORM_BUFFER_SIZE;

/** @const {number} */
WebGL2RenderingContext.prototype.MAX_VERTEX_UNIFORM_BLOCKS;

/** @const {number} */
WebGL2RenderingContext.prototype.MAX_FRAGMENT_UNIFORM_BLOCKS;

/** @const {number} */
WebGL2RenderingContext.prototype.MAX_COMBINED_UNIFORM_BLOCKS;

/** @const {number} */
WebGL2RenderingContext.prototype.MAX_UNIFORM_BUFFER_BINDINGS;

/** @const {number} */
WebGL2RenderingContext.prototype.MAX_UNIFORM_BLOCK_SIZE;

/** @const {number} */
WebGL2RenderingContext.prototype.MAX_COMBINED_VERTEX_UNIFORM_COMPONENTS;

/** @const {number} */
WebGL2RenderingContext.prototype.MAX_COMBINED_FRAGMENT_UNIFORM_COMPONENTS;

/** @const {number} */
WebGL2RenderingContext.prototype.UNIFORM_BUFFER_OFFSET_ALIGNMENT;

/** @const {number} */
WebGL2RenderingContext.prototype.ACTIVE_UNIFORM_BLOCKS;

/** @const {number} */
WebGL2RenderingContext.prototype.UNIFORM_TYPE;

/** @const {number} */
WebGL2RenderingContext.prototype.UNIFORM_SIZE;

/** @const {number} */
WebGL2RenderingContext.prototype.UNIFORM_BLOCK_INDEX;

/** @const {number} */
WebGL2RenderingContext.prototype.UNIFORM_OFFSET;

/** @const {number} */
WebGL2RenderingContext.prototype.UNIFORM_ARRAY_STRIDE;

/** @const {number} */
WebGL2RenderingContext.prototype.UNIFORM_MATRIX_STRIDE;

/** @const {number} */
WebGL2RenderingContext.prototype.UNIFORM_IS_ROW_MAJOR;

/** @const {number} */
WebGL2RenderingContext.prototype.UNIFORM_BLOCK_BINDING;

/** @const {number} */
WebGL2RenderingContext.prototype.UNIFORM_BLOCK_DATA_SIZE;

/** @const {number} */
WebGL2RenderingContext.prototype.UNIFORM_BLOCK_ACTIVE_UNIFORMS;

/** @const {number} */
WebGL2RenderingContext.prototype.UNIFORM_BLOCK_ACTIVE_UNIFORM_INDICES;

/** @const {number} */
WebGL2RenderingContext.prototype.UNIFORM_BLOCK_REFERENCED_BY_VERTEX_SHADER;

/** @const {number} */
WebGL2RenderingContext.prototype.UNIFORM_BLOCK_REFERENCED_BY_FRAGMENT_SHADER;

/** @const {number} */
WebGL2RenderingContext.prototype.INVALID_INDEX;

/** @const {number} */
WebGL2RenderingContext.prototype.MAX_VERTEX_OUTPUT_COMPONENTS;

/** @const {number} */
WebGL2RenderingContext.prototype.MAX_FRAGMENT_INPUT_COMPONENTS;

/** @const {number} */
WebGL2RenderingContext.prototype.MAX_SERVER_WAIT_TIMEOUT;

/** @const {number} */
WebGL2RenderingContext.prototype.OBJECT_TYPE;

/** @const {number} */
WebGL2RenderingContext.prototype.SYNC_CONDITION;

/** @const {number} */
WebGL2RenderingContext.prototype.SYNC_STATUS;

/** @const {number} */
WebGL2RenderingContext.prototype.SYNC_FLAGS;

/** @const {number} */
WebGL2RenderingContext.prototype.SYNC_FENCE;

/** @const {number} */
WebGL2RenderingContext.prototype.SYNC_GPU_COMMANDS_COMPLETE;

/** @const {number} */
WebGL2RenderingContext.prototype.UNSIGNALED;

/** @const {number} */
WebGL2RenderingContext.prototype.SIGNALED;

/** @const {number} */
WebGL2RenderingContext.prototype.ALREADY_SIGNALED;

/** @const {number} */
WebGL2RenderingContext.prototype.TIMEOUT_EXPIRED;

/** @const {number} */
WebGL2RenderingContext.prototype.CONDITION_SATISFIED;

/** @const {number} */
WebGL2RenderingContext.prototype.WAIT_FAILED;

/** @const {number} */
WebGL2RenderingContext.prototype.SYNC_FLUSH_COMMANDS_BIT;

/** @const {number} */
WebGL2RenderingContext.prototype.VERTEX_ATTRIB_ARRAY_DIVISOR;

/** @const {number} */
WebGL2RenderingContext.prototype.ANY_SAMPLES_PASSED;

/** @const {number} */
WebGL2RenderingContext.prototype.ANY_SAMPLES_PASSED_CONSERVATIVE;

/** @const {number} */
WebGL2RenderingContext.prototype.SAMPLER_BINDING;

/** @const {number} */
WebGL2RenderingContext.prototype.RGB10_A2UI;

/** @const {number} */
WebGL2RenderingContext.prototype.INT_2_10_10_10_REV;

/** @const {number} */
WebGL2RenderingContext.prototype.TRANSFORM_FEEDBACK;

/** @const {number} */
WebGL2RenderingContext.prototype.TRANSFORM_FEEDBACK_PAUSED;

/** @const {number} */
WebGL2RenderingContext.prototype.TRANSFORM_FEEDBACK_ACTIVE;

/** @const {number} */
WebGL2RenderingContext.prototype.TRANSFORM_FEEDBACK_BINDING;

/** @const {number} */
WebGL2RenderingContext.prototype.TEXTURE_IMMUTABLE_FORMAT;

/** @const {number} */
WebGL2RenderingContext.prototype.MAX_ELEMENT_INDEX;

/** @const {number} */
WebGL2RenderingContext.prototype.TEXTURE_IMMUTABLE_LEVELS;

/** @const {number} */
WebGL2RenderingContext.prototype.TIMEOUT_IGNORED;

/** @const {number} */
WebGL2RenderingContext.prototype.MAX_CLIENT_WAIT_TIMEOUT_WEBGL;

/* Buffer objects */

/**
 * @param {number} target
 * @param {?ArrayBufferView|?ArrayBuffer|number} data
 * @param {number} usage
 * @param {number=} opt_srcOffset
 * @param {number=} opt_length
 * @return {undefined}
 * @override
 */
WebGL2RenderingContext.prototype.bufferData = function(
    target, data, usage, opt_srcOffset, opt_length) {};

/**
 * @param {number} target
 * @param {number} offset
 * @param {?ArrayBufferView|?ArrayBuffer} data
 * @param {number=} opt_srcOffset
 * @param {number=} opt_length
 * @return {undefined}
 * @override
 */
WebGL2RenderingContext.prototype.bufferSubData = function(
    target, offset, data, opt_srcOffset, opt_length) {};

/**
 * @param {number} readTarget
 * @param {number} writeTarget
 * @param {number} readOffset
 * @param {number} writeOffset
 * @param {number} size
 * @return {undefined}
 */
WebGL2RenderingContext.prototype.copyBufferSubData = function(
    readTarget, writeTarget, readOffset, writeOffset, size) {};

/**
 * @param {number} target
 * @param {number} srcByteOffset
 * @param {?ArrayBufferView|?ArrayBuffer} dstBuffer
 * @param {number=} opt_dstOffset
 * @param {number=} opt_length
 * @return {undefined}
 */
WebGL2RenderingContext.prototype.getBufferSubData = function(
    target, srcByteOffset, dstBuffer, opt_dstOffset, opt_length) {};

/* Framebuffer objects */

/**
 * @param {number} srcX0
 * @param {number} srcY0
 * @param {number} srcX1
 * @param {number} srcY1
 * @param {number} dstX0
 * @param {number} dstY0
 * @param {number} dstX1
 * @param {number} dstY1
 * @param {number} mask
 * @param {number} filter
 * @return {undefined}
 */
WebGL2RenderingContext.prototype.blitFramebuffer = function(
    srcX0, srcY0, srcX1, srcY1, dstX0, dstY0, dstX1, dstY1, mask, filter) {};

/**
 * @param {number} target
 * @param {number} attachment
 * @param {?WebGLTexture} texture
 * @param {number} level
 * @param {number} layer
 * @return {undefined}
 */
WebGL2RenderingContext.prototype.framebufferTextureLayer = function(
    target, attachment, texture, level, layer) {};

/**
 * @param {number} target
 * @param {!Array<number>} attachments
 * @return {undefined}
 */
WebGL2RenderingContext.prototype.invalidateFramebuffer = function(
    target, attachments) {};

/**
 * @param {number} target
 * @param {!Array<number>} attachments
 * @param {number} x
 * @param {number} y
 * @param {number} width
 * @param {number} height
 * @return {undefined}
 */
WebGL2RenderingContext.prototype.invalidateSubFramebuffer = function(
    target, attachments, x, y, width, height) {};

/**
 * @param {number} src
 * @return {undefined}
 */
WebGL2RenderingContext.prototype.readBuffer = function(src) {};

/* Renderbuffer objects */

/**
 * @param {number} target
 * @param {number} internalformat
 * @param {number} pname
 * @return {*}
 * @nosideeffects
 */
WebGL2RenderingContext.prototype.getInternalformatParameter = function(
    target, internalformat, pname) {};

/**
 * @param {number} target
 * @param {number} samples
 * @param {number} internalformat
 * @param {number} width
 * @param {number} height
 * @return {undefined}
 */
WebGL2RenderingContext.prototype.renderbufferStorageMultisample = function(
    target, samples, internalformat, width, height) {};

/* Texture objects */

/**
 * @param {number} target
 * @param {number} levels
 * @param {number} internalformat
 * @param {number} width
 * @param {number} height
 * @return {undefined}
 */
WebGL2RenderingContext.prototype.texStorage2D = function(
    target, levels, internalformat, width, height) {};

/**
 * @param {number} target
 * @param {number} levels
 * @param {number} internalformat
 * @param {number} width
 * @param {number} height
 * @param {number} depth
 * @return {undefined}
 */
WebGL2RenderingContext.prototype.texStorage3D = function(
    target, levels, internalformat, width, height, depth) {};

/**
 * @param {number} target
 * @param {number} level
 * @param {number} internalformat
 * @param {number} formatOrWidth
 * @param {number} typeOrHeight
 * @param {?TexImageSource|number} imgOrBorder
 * @param {number=} opt_format
 * @param {number=} opt_type
 * @param {?ArrayBufferView|?TexImageSource|number=} opt_imgOrOffset
 * @param {number=} opt_srcOffset
 * @return {undefined}
 * @override
 */
WebGL2RenderingContext.prototype.texImage2D = function(
    target, level, internalformat, formatOrWidth, typeOrHeight, imgOrBorder,
    opt_format, opt_type, opt_imgOrOffset, opt_srcOffset) {};

/**
 * @param {number} target
 * @param {number} level
 * @param {number} xoffset
 * @param {number} yoffset
 * @param {number} formatOrWidth
 * @param {number} typeOrHeight
 * @param {?TexImageSource|number} dataOrFormat
 * @param {number=} opt_type
 * @param {?ArrayBufferView|?TexImageSource|number=} opt_imgOrOffset
 * @param {number=} opt_srcOffset
 * @return {undefined}
 * @override
 */
WebGL2RenderingContext.prototype.texSubImage2D = function(
    target, level, xoffset, yoffset, formatOrWidth, typeOrHeight, dataOrFormat,
    opt_type, opt_imgOrOffset, opt_srcOffset) {};

/**
 * @param {number} target
 * @param {number} level
 * @param {number} internalformat
 * @param {number} width
 * @param {number} height
 * @param {number} depth
 * @param {number} border
 * @param {number} format
 * @param {number} type
 * @param {?ArrayBufferView|?TexImageSource|number} srcData
 * @param {number=} opt_srcOffset
 * @return {undefined}
 */
WebGL2RenderingContext.prototype.texImage3D = function(
    target, level, internalformat, width, height, depth, border, format, type,
    srcData, opt_srcOffset) {};

/**
 * @param {number} target
 * @param {number} level
 * @param {number} xoffset
 * @param {number} yoffset
 * @param {number} zoffset
 * @param {number} width
 * @param {number} height
 * @param {number} depth
 * @param {number} format
 * @param {number} type
 * @param {?ArrayBufferView|?TexImageSource|number} srcData
 * @param {number=} opt_srcOffset
 * @return {undefined}
 */
WebGL2RenderingContext.prototype.texSubImage3D = function(
    target, level, xoffset, yoffset, zoffset, width, height, depth, format,
    type, srcData, opt_srcOffset) {};

/**
 * @param {number} target
 * @param {number} level
 * @param {number} xoffset
 * @param {number} yoffset
 * @param {number} zoffset
 * @param {number} x
 * @param {number} y
 * @param {number} width
 * @param {number} height
 * @return {undefined}
 */
WebGL2RenderingContext.prototype.copyTexSubImage3D = function(
    target, level, xoffset, yoffset, zoffset, x, y, width, height) {};

/**
 * @param {number} target
 * @param {number} level
 * @param {number} internalformat
 * @param {number} width
 * @param {number} height
 * @param {number} border
 * @param {?ArrayBufferView|number} srcDataOrSize
 * @param {number=} opt_srcOffset
 * @param {number=} opt_srcLengthOverride
 * @return {undefined}
 * @override
 */
WebGL2RenderingContext.prototype.compressedTexImage2D = function(
    target, level, internalformat, width, height, border, srcDataOrSize,
    opt_srcOffset, opt_srcLengthOverride) {};

/**
 * @param {number} target
 * @param {number} level
 * @param {number} internalformat
 * @param {number} width
 * @param {number} height
 * @param {number} depth
 * @param {number} border
 * @param {!ArrayBufferView|number} srcDataOrSize
 * @param {number=} opt_srcOffset
 * @param {number=} opt_srcLengthOverride
 * @return {undefined}
 */
WebGL2RenderingContext.prototype.compressedTexImage3D = function(
    target, level, internalformat, width, height, depth, border, srcDataOrSize,
    opt_srcOffset, opt_srcLengthOverride) {};


/**
 * @param {number} target
 * @param {number} level
 * @param {number} xoffset
 * @param {number} yoffset
 * @param {number} width
 * @param {number} height
 * @param {number} format
 * @param {?ArrayBufferView|number} srcDataOrSize
 * @param {number=} opt_srcOffset
 * @param {number=} opt_srcLengthOverride
 * @return {undefined}
 * @override
 */
WebGL2RenderingContext.prototype.compressedTexSubImage2D = function(
    target, level, xoffset, yoffset, width, height, format, srcDataOrSize,
    opt_srcOffset, opt_srcLengthOverride) {};


/**
 * @param {number} target
 * @param {number} level
 * @param {number} xoffset
 * @param {number} yoffset
 * @param {number} zoffset
 * @param {number} width
 * @param {number} height
 * @param {number} depth
 * @param {number} format
 * @param {!ArrayBufferView|number} srcDataOrSize
 * @param {number=} opt_srcOffset
 * @param {number=} opt_srcLengthOverride
 * @return {undefined}
 */
WebGL2RenderingContext.prototype.compressedTexSubImage3D = function(
    target, level, xoffset, yoffset, zoffset, width, height, depth, format,
    srcDataOrSize, opt_srcOffset, opt_srcLengthOverride) {};

/* Programs and shaders */

/**
 * @param {!WebGLProgram} program
 * @param {string} name
 * @return {number}
 * @nosideeffects
 */
WebGL2RenderingContext.prototype.getFragDataLocation = function(
    program, name) {};

/* Uniforms */

/**
 * @param {?WebGLUniformLocation} location
 * @param {number} v0
 * @return {undefined}
 */
WebGL2RenderingContext.prototype.uniform1ui = function(location, v0) {};

/**
 * @param {?WebGLUniformLocation} location
 * @param {number} v0
 * @param {number} v1
 * @return {undefined}
 */
WebGL2RenderingContext.prototype.uniform2ui = function(location, v0, v1) {};

/**
 * @param {?WebGLUniformLocation} location
 * @param {number} v0
 * @param {number} v1
 * @param {number} v2
 * @return {undefined}
 */
WebGL2RenderingContext.prototype.uniform3ui = function(location, v0, v1, v2) {};

/**
 * @param {?WebGLUniformLocation} location
 * @param {number} v0
 * @param {number} v1
 * @param {number} v2
 * @param {number} v3
 * @return {undefined}
 */
WebGL2RenderingContext.prototype.uniform4ui = function(
    location, v0, v1, v2, v3) {};


/**
 * @param {?WebGLUniformLocation} location
 * @param {?Float32Array|?Array<number>} data
 * @param {number=} opt_srcOffset
 * @param {number=} opt_srcLength
 * @return {undefined}
 * @override
 */
WebGL2RenderingContext.prototype.uniform1fv = function(
    location, data, opt_srcOffset, opt_srcLength) {};

/**
 * @param {?WebGLUniformLocation} location
 * @param {?Float32Array|?Array<number>} data
 * @param {number=} opt_srcOffset
 * @param {number=} opt_srcLength
 * @return {undefined}
 * @override
 */
WebGL2RenderingContext.prototype.uniform2fv = function(
    location, data, opt_srcOffset, opt_srcLength) {};

/**
 * @param {?WebGLUniformLocation} location
 * @param {?Float32Array|?Array<number>} data
 * @param {number=} opt_srcOffset
 * @param {number=} opt_srcLength
 * @return {undefined}
 * @override
 */
WebGL2RenderingContext.prototype.uniform3fv = function(
    location, data, opt_srcOffset, opt_srcLength) {};

/**
 * @param {?WebGLUniformLocation} location
 * @param {?Float32Array|?Array<number>} data
 * @param {number=} opt_srcOffset
 * @param {number=} opt_srcLength
 * @return {undefined}
 * @override
 */
WebGL2RenderingContext.prototype.uniform4fv = function(
    location, data, opt_srcOffset, opt_srcLength) {};

/**
 * @param {?WebGLUniformLocation} location
 * @param {?Int32Array|?Array<number>|?Array<boolean>} data
 * @param {number=} opt_srcOffset
 * @param {number=} opt_srcLength
 * @return {undefined}
 * @override
 */
WebGL2RenderingContext.prototype.uniform1iv = function(
    location, data, opt_srcOffset, opt_srcLength) {};

/**
 * @param {?WebGLUniformLocation} location
 * @param {?Int32Array|?Array<number>|?Array<boolean>} data
 * @param {number=} opt_srcOffset
 * @param {number=} opt_srcLength
 * @return {undefined}
 * @override
 */
WebGL2RenderingContext.prototype.uniform2iv = function(
    location, data, opt_srcOffset, opt_srcLength) {};

/**
 * @param {?WebGLUniformLocation} location
 * @param {?Int32Array|?Array<number>|?Array<boolean>} data
 * @param {number=} opt_srcOffset
 * @param {number=} opt_srcLength
 * @return {undefined}
 * @override
 */
WebGL2RenderingContext.prototype.uniform3iv = function(
    location, data, opt_srcOffset, opt_srcLength) {};

/**
 * @param {?WebGLUniformLocation} location
 * @param {?Int32Array|?Array<number>|?Array<boolean>} data
 * @param {number=} opt_srcOffset
 * @param {number=} opt_srcLength
 * @return {undefined}
 * @override
 */
WebGL2RenderingContext.prototype.uniform4iv = function(
    location, data, opt_srcOffset, opt_srcLength) {};


/**
 * @param {?WebGLUniformLocation} location
 * @param {!Uint32Array|!Array<number>|!Array<boolean>} data
 * @param {number=} opt_srcOffset
 * @param {number=} opt_srcLength
 * @return {undefined}
 */
WebGL2RenderingContext.prototype.uniform1uiv = function(
    location, data, opt_srcOffset, opt_srcLength) {};

/**
 * @param {?WebGLUniformLocation} location
 * @param {!Uint32Array|!Array<number>|!Array<boolean>} data
 * @param {number=} opt_srcOffset
 * @param {number=} opt_srcLength
 * @return {undefined}
 */
WebGL2RenderingContext.prototype.uniform2uiv = function(
    location, data, opt_srcOffset, opt_srcLength) {};

/**
 * @param {?WebGLUniformLocation} location
 * @param {!Uint32Array|!Array<number>|!Array<boolean>} data
 * @param {number=} opt_srcOffset
 * @param {number=} opt_srcLength
 * @return {undefined}
 */
WebGL2RenderingContext.prototype.uniform3uiv = function(
    location, data, opt_srcOffset, opt_srcLength) {};

/**
 * @param {?WebGLUniformLocation} location
 * @param {!Uint32Array|!Array<number>|!Array<boolean>} data
 * @param {number=} opt_srcOffset
 * @param {number=} opt_srcLength
 * @return {undefined}
 */
WebGL2RenderingContext.prototype.uniform4uiv = function(
    location, data, opt_srcOffset, opt_srcLength) {};

/**
 * @param {?WebGLUniformLocation} location
 * @param {boolean} transpose
 * @param {?Float32Array|?Array<number>} data
 * @param {number=} opt_srcOffset
 * @param {number=} opt_srcLength
 * @return {undefined}
 * @override
 */
WebGL2RenderingContext.prototype.uniformMatrix2fv = function(
    location, transpose, data, opt_srcOffset, opt_srcLength) {};

/**
 * @param {?WebGLUniformLocation} location
 * @param {boolean} transpose
 * @param {!Float32Array|!Array<number>} data
 * @param {number=} opt_srcOffset
 * @param {number=} opt_srcLength
 * @return {undefined}
 */
WebGL2RenderingContext.prototype.uniformMatrix3x2fv = function(
    location, transpose, data, opt_srcOffset, opt_srcLength) {};

/**
 * @param {?WebGLUniformLocation} location
 * @param {boolean} transpose
 * @param {!Float32Array|!Array<number>} data
 * @param {number=} opt_srcOffset
 * @param {number=} opt_srcLength
 * @return {undefined}
 */
WebGL2RenderingContext.prototype.uniformMatrix4x2fv = function(
    location, transpose, data, opt_srcOffset, opt_srcLength) {};

/**
 * @param {?WebGLUniformLocation} location
 * @param {boolean} transpose
 * @param {!Float32Array|!Array<number>} data
 * @param {number=} opt_srcOffset
 * @param {number=} opt_srcLength
 * @return {undefined}
 */
WebGL2RenderingContext.prototype.uniformMatrix2x3fv = function(
    location, transpose, data, opt_srcOffset, opt_srcLength) {};

/**
 * @param {?WebGLUniformLocation} location
 * @param {boolean} transpose
 * @param {?Float32Array|?Array<number>} data
 * @param {number=} opt_srcOffset
 * @param {number=} opt_srcLength
 * @return {undefined}
 * @override
 */
WebGL2RenderingContext.prototype.uniformMatrix3fv = function(
    location, transpose, data, opt_srcOffset, opt_srcLength) {};

/**
 * @param {?WebGLUniformLocation} location
 * @param {boolean} transpose
 * @param {!Float32Array|!Array<number>} data
 * @param {number=} opt_srcOffset
 * @param {number=} opt_srcLength
 * @return {undefined}
 */
WebGL2RenderingContext.prototype.uniformMatrix4x3fv = function(
    location, transpose, data, opt_srcOffset, opt_srcLength) {};

/**
 * @param {?WebGLUniformLocation} location
 * @param {boolean} transpose
 * @param {!Float32Array|!Array<number>} data
 * @param {number=} opt_srcOffset
 * @param {number=} opt_srcLength
 * @return {undefined}
 */
WebGL2RenderingContext.prototype.uniformMatrix2x4fv = function(
    location, transpose, data, opt_srcOffset, opt_srcLength) {};

/**
 * @param {?WebGLUniformLocation} location
 * @param {boolean} transpose
 * @param {!Float32Array|!Array<number>} data
 * @param {number=} opt_srcOffset
 * @param {number=} opt_srcLength
 * @return {undefined}
 */
WebGL2RenderingContext.prototype.uniformMatrix3x4fv = function(
    location, transpose, data, opt_srcOffset, opt_srcLength) {};

/**
 * @param {?WebGLUniformLocation} location
 * @param {boolean} transpose
 * @param {?Float32Array|?Array<number>} data
 * @param {number=} opt_srcOffset
 * @param {number=} opt_srcLength
 * @return {undefined}
 * @override
 */
WebGL2RenderingContext.prototype.uniformMatrix4fv = function(
    location, transpose, data, opt_srcOffset, opt_srcLength) {};

/* Vertex attribs */

/**
 * @param {number} index
 * @param {number} x
 * @param {number} y
 * @param {number} z
 * @param {number} w
 * @return {undefined}
 */
WebGL2RenderingContext.prototype.vertexAttribI4i = function(
    index, x, y, z, w) {};

/**
 * @param {number} index
 * @param {!Int32Array|!Array<number>|!Array<boolean>} values
 * @return {undefined}
 */
WebGL2RenderingContext.prototype.vertexAttribI4iv = function(index, values) {};

/**
 * @param {number} index
 * @param {number} x
 * @param {number} y
 * @param {number} z
 * @param {number} w
 * @return {undefined}
 */
WebGL2RenderingContext.prototype.vertexAttribI4ui = function(
    index, x, y, z, w) {};

/**
 * @param {number} index
 * @param {!Uint32Array|!Array<number>|!Array<boolean>} values
 * @return {undefined}
 */
WebGL2RenderingContext.prototype.vertexAttribI4uiv = function(index, values) {};

/**
 * @param {number} index
 * @param {number} size
 * @param {number} type
 * @param {number} stride
 * @param {number} offset
 * @return {undefined}
 */
WebGL2RenderingContext.prototype.vertexAttribIPointer = function(
    index, size, type, stride, offset) {};

/* Writing to the drawing buffer */

/**
 * @param {number} index
 * @param {number} divisor
 * @return {undefined}
 */
WebGL2RenderingContext.prototype.vertexAttribDivisor = function(
    index, divisor) {};

/**
 * @param {number} mode
 * @param {number} first
 * @param {number} count
 * @param {number} instanceCount
 * @return {undefined}
 */
WebGL2RenderingContext.prototype.drawArraysInstanced = function(
    mode, first, count, instanceCount) {};

/**
 * @param {number} mode
 * @param {number} count
 * @param {number} type
 * @param {number} offset
 * @param {number} instanceCount
 * @return {undefined}
 */
WebGL2RenderingContext.prototype.drawElementsInstanced = function(
    mode, count, type, offset, instanceCount) {};

/**
 * @param {number} mode
 * @param {number} start
 * @param {number} end
 * @param {number} count
 * @param {number} type
 * @param {number} offset
 * @return {undefined}
 */
WebGL2RenderingContext.prototype.drawRangeElements = function(
    mode, start, end, count, type, offset) {};

/* Reading back pixels */

/**
 * @param {number} x
 * @param {number} y
 * @param {number} width
 * @param {number} height
 * @param {number} format
 * @param {number} type
 * @param {?ArrayBufferView|number} dstDataOrOffset
 * @param {number=} opt_dstOffset
 * @return {undefined}
 * @override
 */
WebGL2RenderingContext.prototype.readPixels = function(
    x, y, width, height, format, type, dstDataOrOffset, opt_dstOffset) {};

/* Multiple Render Targets */

/**
 * @param {!Array<number>} buffers
 * @return {undefined}
 */
WebGL2RenderingContext.prototype.drawBuffers = function(buffers) {};


/**
 * @param {number} buffer
 * @param {number} drawbuffer
 * @param {!Float32Array|!Array<number>} values
 * @param {number=} opt_srcOffset
 * @return {undefined}
 */
WebGL2RenderingContext.prototype.clearBufferfv = function(
    buffer, drawbuffer, values, opt_srcOffset) {};

/**
 * @param {number} buffer
 * @param {number} drawbuffer
 * @param {!Int32Array|!Array<number>|!Array<boolean>} values
 * @param {number=} opt_srcOffset
 * @return {undefined}
 */
WebGL2RenderingContext.prototype.clearBufferiv = function(
    buffer, drawbuffer, values, opt_srcOffset) {};

/**
 * @param {number} buffer
 * @param {number} drawbuffer
 * @param {!Uint32Array|!Array<number>|!Array<boolean>} values
 * @param {number=} opt_srcOffset
 * @return {undefined}
 */
WebGL2RenderingContext.prototype.clearBufferuiv = function(
    buffer, drawbuffer, values, opt_srcOffset) {};

/**
 * @param {number} buffer
 * @param {number} drawbuffer
 * @param {number} depth
 * @param {number} stencil
 * @return {undefined}
 */
WebGL2RenderingContext.prototype.clearBufferfi = function(
    buffer, drawbuffer, depth, stencil) {};

/* Query Objects */

/**
 * @return {?WebGLQuery}
 */
WebGL2RenderingContext.prototype.createQuery = function() {};

/**
 * @param {?WebGLQuery} query
 * @return {undefined}
 */
WebGL2RenderingContext.prototype.deleteQuery = function(query) {};

/**
 * @param {?WebGLQuery} query
 * @return {boolean}
 */
WebGL2RenderingContext.prototype.isQuery = function(query) {};

/**
 * @param {number} target
 * @param {!WebGLQuery} query
 * @return {undefined}
 */
WebGL2RenderingContext.prototype.beginQuery = function(target, query) {};

/**
 * @param {number} target
 * @return {undefined}
 */
WebGL2RenderingContext.prototype.endQuery = function(target) {};

/**
 * @param {number} target
 * @param {number} pname
 * @return {?WebGLQuery}
 * @nosideeffects
 */
WebGL2RenderingContext.prototype.getQuery = function(target, pname) {};

/**
 * @param {!WebGLQuery} query
 * @param {number} pname
 * @return {*}
 */
WebGL2RenderingContext.prototype.getQueryParameter = function(query, pname) {};

/* Sampler Objects */

/**
 * @return {?WebGLSampler}
 */
WebGL2RenderingContext.prototype.createSampler = function() {};

/**
 * @param {?WebGLSampler} sampler
 * @return {undefined}
 */
WebGL2RenderingContext.prototype.deleteSampler = function(sampler) {};

/**
 * @param {?WebGLSampler} sampler
 * @return {boolean}
 */
WebGL2RenderingContext.prototype.isSampler = function(sampler) {};

/**
 * @param {number} unit
 * @param {?WebGLSampler} sampler
 * @return {undefined}
 */
WebGL2RenderingContext.prototype.bindSampler = function(unit, sampler) {};

/**
 * @param {!WebGLSampler} sampler
 * @param {number} pname
 * @param {number} param
 * @return {undefined}
 */
WebGL2RenderingContext.prototype.samplerParameteri = function(
    sampler, pname, param) {};

/**
 * @param {!WebGLSampler} sampler
 * @param {number} pname
 * @param {number} param
 * @return {undefined}
 */
WebGL2RenderingContext.prototype.samplerParameterf = function(
    sampler, pname, param) {};

/**
 * @param {!WebGLSampler} sampler
 * @param {number} pname
 * @return {*}
 * @nosideeffects
 */
WebGL2RenderingContext.prototype.getSamplerParameter = function(
    sampler, pname) {};

/* Sync objects */

/**
 * @param {number} condition
 * @param {number} flags
 * @return {?WebGLSync}
 */
WebGL2RenderingContext.prototype.fenceSync = function(condition, flags) {};

/**
 * @param {?WebGLSync} sync
 * @return {boolean}
 */
WebGL2RenderingContext.prototype.isSync = function(sync) {};

/**
 * @param {?WebGLSync} sync
 * @return {undefined}
 */
WebGL2RenderingContext.prototype.deleteSync = function(sync) {};

/**
 * @param {!WebGLSync} sync
 * @param {number} flags
 * @param {number} timeout
 * @return {undefined}
 */
WebGL2RenderingContext.prototype.clientWaitSync = function(
    sync, flags, timeout) {};

/**
 * @param {!WebGLSync} sync
 * @param {number} flags
 * @param {number} timeout
 * @return {undefined}
 */
WebGL2RenderingContext.prototype.waitSync = function(sync, flags, timeout) {};

/**
 * @param {!WebGLSync} sync
 * @param {number} pname
 * @return {*}
 */
WebGL2RenderingContext.prototype.getSyncParameter = function(sync, pname) {};

/* Transform Feedback */

/**
 * @return {?WebGLTransformFeedback}
 */
WebGL2RenderingContext.prototype.createTransformFeedback = function() {};

/**
 * @param {?WebGLTransformFeedback} tf
 * @return {undefined}
 */
WebGL2RenderingContext.prototype.deleteTransformFeedback = function(tf) {};

/**
 * @param {?WebGLTransformFeedback} tf
 * @return {boolean}
 */
WebGL2RenderingContext.prototype.isTransformFeedback = function(tf) {};

/**
 * @param {number} target
 * @param {?WebGLTransformFeedback} tf
 * @return {undefined}
 */
WebGL2RenderingContext.prototype.bindTransformFeedback = function(
    target, tf) {};

/**
 * @param {number} primitiveMode
 * @return {undefined}
 */
WebGL2RenderingContext.prototype.beginTransformFeedback = function(
    primitiveMode) {};

/**
 * @return {undefined}
 */
WebGL2RenderingContext.prototype.endTransformFeedback = function() {};

/**
 * @param {!WebGLProgram} program
 * @param {!Array<string>} varyings
 * @param {number} bufferMode
 * @return {undefined}
 */
WebGL2RenderingContext.prototype.transformFeedbackVaryings = function(
    program, varyings, bufferMode) {};

/**
 * @param {!WebGLProgram} program
 * @param {number} index
 * @return {?WebGLActiveInfo}
 * @nosideeffects
 */
WebGL2RenderingContext.prototype.getTransformFeedbackVarying = function(
    program, index) {};

/**
 * @return {undefined}
 */
WebGL2RenderingContext.prototype.pauseTransformFeedback = function() {};

/**
 * @return {undefined}
 */
WebGL2RenderingContext.prototype.resumeTransformFeedback = function() {};

/* Uniform Buffer Objects and Transform Feedback Buffers */

/**
 * @param {number} target
 * @param {number} index
 * @param {?WebGLBuffer} buffer
 * @return {undefined}
 */
WebGL2RenderingContext.prototype.bindBufferBase = function(
    target, index, buffer) {};

/**
 * @param {number} target
 * @param {number} index
 * @param {?WebGLBuffer} buffer
 * @param {number} offset
 * @param {number} size
 * @return {undefined}
 */
WebGL2RenderingContext.prototype.bindBufferRange = function(
    target, index, buffer, offset, size) {};

/**
 * @param {number} target
 * @param {number} index
 * @return {*}
 */
WebGL2RenderingContext.prototype.getIndexedParameter = function(
    target, index) {};

/**
 * @param {!WebGLProgram} program
 * @param {!Array<string>} uniformNames
 * @return {!Array<number>}
 */
WebGL2RenderingContext.prototype.getUniformIndices = function(
    program, uniformNames) {};

/**
 * @param {!WebGLProgram} program
 * @param {!Array<number>} uniformIndices
 * @param {number} pname
 * @return {*}
 */
WebGL2RenderingContext.prototype.getActiveUniforms = function(
    program, uniformIndices, pname) {};

/**
 * @param {!WebGLProgram} program
 * @param {string} uniformBlockName
 * @return {number}
 * @nosideeffects
 */
WebGL2RenderingContext.prototype.getUniformBlockIndex = function(
    program, uniformBlockName) {};

/**
 * @param {!WebGLProgram} program
 * @param {number} uniformBlockIndex
 * @param {number} pname
 * @return {*}
 */
WebGL2RenderingContext.prototype.getActiveUniformBlockParameter = function(
    program, uniformBlockIndex, pname) {};

/**
 * @param {!WebGLProgram} program
 * @param {number} uniformBlockIndex
 * @return {?string}
 * @nosideeffects
 */
WebGL2RenderingContext.prototype.getActiveUniformBlockName = function(
    program, uniformBlockIndex) {};

/**
 * @param {!WebGLProgram} program
 * @param {number} uniformBlockIndex
 * @param {number} uniformBlockBinding
 * @return {undefined}
 */
WebGL2RenderingContext.prototype.uniformBlockBinding = function(
    program, uniformBlockIndex, uniformBlockBinding) {};

/* Vertex Array Objects */

/**
 * @return {?WebGLVertexArrayObject}
 */
WebGL2RenderingContext.prototype.createVertexArray = function() {};

/**
 * @param {?WebGLVertexArrayObject} vertexArray
 * @return {undefined}
 */
WebGL2RenderingContext.prototype.deleteVertexArray = function(vertexArray) {};

/**
 * @param {?WebGLVertexArrayObject} vertexArray
 * @return {boolean}
 */
WebGL2RenderingContext.prototype.isVertexArray = function(vertexArray) {};

/**
 * @param {?WebGLVertexArrayObject} array
 * @return {undefined}
 */
WebGL2RenderingContext.prototype.bindVertexArray = function(array) {};


/**
 * @constructor
 * @extends {WebGLObject}
 */
function WebGLQuery() {}


/**
 * @constructor
 * @extends {WebGLObject}
 */
function WebGLSampler() {}


/**
 * @constructor
 * @extends {WebGLObject}
 */
function WebGLSync() {}


/**
 * @constructor
 * @extends {WebGLObject}
 */
function WebGLTransformFeedback() {}


/**
 * @constructor
 * @extends {WebGLObject}
 */
function WebGLVertexArrayObject() {}
/*
 * Copyright 2010 The Closure Compiler Authors
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/**
 * @fileoverview Definitions for WebGL functions as described at
 * http://www.khronos.org/registry/webgl/specs/latest/
 *
 * This file is current up to the WebGL 1.0.1 spec, including extensions.
 *
 * This relies on html5.js being included for Canvas and Typed Array support.
 *
 * This includes some extensions defined at
 * http://www.khronos.org/registry/webgl/extensions/
 *
 * @externs
 */


/**
 * @typedef {ImageBitmap|ImageData|HTMLImageElement|HTMLCanvasElement|
 *     HTMLVideoElement|OffscreenCanvas}
 */
var TexImageSource;

/**
 * @constructor
 */
function WebGLRenderingContext() {}


/** @const {number} */
WebGLRenderingContext.DEPTH_BUFFER_BIT;

/** @const {number} */
WebGLRenderingContext.STENCIL_BUFFER_BIT;

/** @const {number} */
WebGLRenderingContext.COLOR_BUFFER_BIT;

/** @const {number} */
WebGLRenderingContext.POINTS;

/** @const {number} */
WebGLRenderingContext.LINES;

/** @const {number} */
WebGLRenderingContext.LINE_LOOP;

/** @const {number} */
WebGLRenderingContext.LINE_STRIP;

/** @const {number} */
WebGLRenderingContext.TRIANGLES;

/** @const {number} */
WebGLRenderingContext.TRIANGLE_STRIP;

/** @const {number} */
WebGLRenderingContext.TRIANGLE_FAN;

/** @const {number} */
WebGLRenderingContext.ZERO;

/** @const {number} */
WebGLRenderingContext.ONE;

/** @const {number} */
WebGLRenderingContext.SRC_COLOR;

/** @const {number} */
WebGLRenderingContext.ONE_MINUS_SRC_COLOR;

/** @const {number} */
WebGLRenderingContext.SRC_ALPHA;

/** @const {number} */
WebGLRenderingContext.ONE_MINUS_SRC_ALPHA;

/** @const {number} */
WebGLRenderingContext.DST_ALPHA;

/** @const {number} */
WebGLRenderingContext.ONE_MINUS_DST_ALPHA;

/** @const {number} */
WebGLRenderingContext.DST_COLOR;

/** @const {number} */
WebGLRenderingContext.ONE_MINUS_DST_COLOR;

/** @const {number} */
WebGLRenderingContext.SRC_ALPHA_SATURATE;

/** @const {number} */
WebGLRenderingContext.FUNC_ADD;

/** @const {number} */
WebGLRenderingContext.BLEND_EQUATION;

/** @const {number} */
WebGLRenderingContext.BLEND_EQUATION_RGB;

/** @const {number} */
WebGLRenderingContext.BLEND_EQUATION_ALPHA;

/** @const {number} */
WebGLRenderingContext.FUNC_SUBTRACT;

/** @const {number} */
WebGLRenderingContext.FUNC_REVERSE_SUBTRACT;

/** @const {number} */
WebGLRenderingContext.BLEND_DST_RGB;

/** @const {number} */
WebGLRenderingContext.BLEND_SRC_RGB;

/** @const {number} */
WebGLRenderingContext.BLEND_DST_ALPHA;

/** @const {number} */
WebGLRenderingContext.BLEND_SRC_ALPHA;

/** @const {number} */
WebGLRenderingContext.CONSTANT_COLOR;

/** @const {number} */
WebGLRenderingContext.ONE_MINUS_CONSTANT_COLOR;

/** @const {number} */
WebGLRenderingContext.CONSTANT_ALPHA;

/** @const {number} */
WebGLRenderingContext.ONE_MINUS_CONSTANT_ALPHA;

/** @const {number} */
WebGLRenderingContext.BLEND_COLOR;

/** @const {number} */
WebGLRenderingContext.ARRAY_BUFFER;

/** @const {number} */
WebGLRenderingContext.ELEMENT_ARRAY_BUFFER;

/** @const {number} */
WebGLRenderingContext.ARRAY_BUFFER_BINDING;

/** @const {number} */
WebGLRenderingContext.ELEMENT_ARRAY_BUFFER_BINDING;

/** @const {number} */
WebGLRenderingContext.STREAM_DRAW;

/** @const {number} */
WebGLRenderingContext.STATIC_DRAW;

/** @const {number} */
WebGLRenderingContext.DYNAMIC_DRAW;

/** @const {number} */
WebGLRenderingContext.BUFFER_SIZE;

/** @const {number} */
WebGLRenderingContext.BUFFER_USAGE;

/** @const {number} */
WebGLRenderingContext.CURRENT_VERTEX_ATTRIB;

/** @const {number} */
WebGLRenderingContext.FRONT;

/** @const {number} */
WebGLRenderingContext.BACK;

/** @const {number} */
WebGLRenderingContext.FRONT_AND_BACK;

/** @const {number} */
WebGLRenderingContext.CULL_FACE;

/** @const {number} */
WebGLRenderingContext.BLEND;

/** @const {number} */
WebGLRenderingContext.DITHER;

/** @const {number} */
WebGLRenderingContext.STENCIL_TEST;

/** @const {number} */
WebGLRenderingContext.DEPTH_TEST;

/** @const {number} */
WebGLRenderingContext.SCISSOR_TEST;

/** @const {number} */
WebGLRenderingContext.POLYGON_OFFSET_FILL;

/** @const {number} */
WebGLRenderingContext.SAMPLE_ALPHA_TO_COVERAGE;

/** @const {number} */
WebGLRenderingContext.SAMPLE_COVERAGE;

/** @const {number} */
WebGLRenderingContext.NO_ERROR;

/** @const {number} */
WebGLRenderingContext.INVALID_ENUM;

/** @const {number} */
WebGLRenderingContext.INVALID_VALUE;

/** @const {number} */
WebGLRenderingContext.INVALID_OPERATION;

/** @const {number} */
WebGLRenderingContext.OUT_OF_MEMORY;

/** @const {number} */
WebGLRenderingContext.CW;

/** @const {number} */
WebGLRenderingContext.CCW;

/** @const {number} */
WebGLRenderingContext.LINE_WIDTH;

/** @const {number} */
WebGLRenderingContext.ALIASED_POINT_SIZE_RANGE;

/** @const {number} */
WebGLRenderingContext.ALIASED_LINE_WIDTH_RANGE;

/** @const {number} */
WebGLRenderingContext.CULL_FACE_MODE;

/** @const {number} */
WebGLRenderingContext.FRONT_FACE;

/** @const {number} */
WebGLRenderingContext.DEPTH_RANGE;

/** @const {number} */
WebGLRenderingContext.DEPTH_WRITEMASK;

/** @const {number} */
WebGLRenderingContext.DEPTH_CLEAR_VALUE;

/** @const {number} */
WebGLRenderingContext.DEPTH_FUNC;

/** @const {number} */
WebGLRenderingContext.STENCIL_CLEAR_VALUE;

/** @const {number} */
WebGLRenderingContext.STENCIL_FUNC;

/** @const {number} */
WebGLRenderingContext.STENCIL_FAIL;

/** @const {number} */
WebGLRenderingContext.STENCIL_PASS_DEPTH_FAIL;

/** @const {number} */
WebGLRenderingContext.STENCIL_PASS_DEPTH_PASS;

/** @const {number} */
WebGLRenderingContext.STENCIL_REF;

/** @const {number} */
WebGLRenderingContext.STENCIL_VALUE_MASK;

/** @const {number} */
WebGLRenderingContext.STENCIL_WRITEMASK;

/** @const {number} */
WebGLRenderingContext.STENCIL_BACK_FUNC;

/** @const {number} */
WebGLRenderingContext.STENCIL_BACK_FAIL;

/** @const {number} */
WebGLRenderingContext.STENCIL_BACK_PASS_DEPTH_FAIL;

/** @const {number} */
WebGLRenderingContext.STENCIL_BACK_PASS_DEPTH_PASS;

/** @const {number} */
WebGLRenderingContext.STENCIL_BACK_REF;

/** @const {number} */
WebGLRenderingContext.STENCIL_BACK_VALUE_MASK;

/** @const {number} */
WebGLRenderingContext.STENCIL_BACK_WRITEMASK;

/** @const {number} */
WebGLRenderingContext.VIEWPORT;

/** @const {number} */
WebGLRenderingContext.SCISSOR_BOX;

/** @const {number} */
WebGLRenderingContext.COLOR_CLEAR_VALUE;

/** @const {number} */
WebGLRenderingContext.COLOR_WRITEMASK;

/** @const {number} */
WebGLRenderingContext.UNPACK_ALIGNMENT;

/** @const {number} */
WebGLRenderingContext.PACK_ALIGNMENT;

/** @const {number} */
WebGLRenderingContext.MAX_TEXTURE_SIZE;

/** @const {number} */
WebGLRenderingContext.MAX_VIEWPORT_DIMS;

/** @const {number} */
WebGLRenderingContext.SUBPIXEL_BITS;

/** @const {number} */
WebGLRenderingContext.RED_BITS;

/** @const {number} */
WebGLRenderingContext.GREEN_BITS;

/** @const {number} */
WebGLRenderingContext.BLUE_BITS;

/** @const {number} */
WebGLRenderingContext.ALPHA_BITS;

/** @const {number} */
WebGLRenderingContext.DEPTH_BITS;

/** @const {number} */
WebGLRenderingContext.STENCIL_BITS;

/** @const {number} */
WebGLRenderingContext.POLYGON_OFFSET_UNITS;

/** @const {number} */
WebGLRenderingContext.POLYGON_OFFSET_FACTOR;

/** @const {number} */
WebGLRenderingContext.TEXTURE_BINDING_2D;

/** @const {number} */
WebGLRenderingContext.SAMPLE_BUFFERS;

/** @const {number} */
WebGLRenderingContext.SAMPLES;

/** @const {number} */
WebGLRenderingContext.SAMPLE_COVERAGE_VALUE;

/** @const {number} */
WebGLRenderingContext.SAMPLE_COVERAGE_INVERT;

/** @const {number} */
WebGLRenderingContext.COMPRESSED_TEXTURE_FORMATS;

/** @const {number} */
WebGLRenderingContext.DONT_CARE;

/** @const {number} */
WebGLRenderingContext.FASTEST;

/** @const {number} */
WebGLRenderingContext.NICEST;

/** @const {number} */
WebGLRenderingContext.GENERATE_MIPMAP_HINT;

/** @const {number} */
WebGLRenderingContext.BYTE;

/** @const {number} */
WebGLRenderingContext.UNSIGNED_BYTE;

/** @const {number} */
WebGLRenderingContext.SHORT;

/** @const {number} */
WebGLRenderingContext.UNSIGNED_SHORT;

/** @const {number} */
WebGLRenderingContext.INT;

/** @const {number} */
WebGLRenderingContext.UNSIGNED_INT;

/** @const {number} */
WebGLRenderingContext.FLOAT;

/** @const {number} */
WebGLRenderingContext.DEPTH_COMPONENT;

/** @const {number} */
WebGLRenderingContext.ALPHA;

/** @const {number} */
WebGLRenderingContext.RGB;

/** @const {number} */
WebGLRenderingContext.RGBA;

/** @const {number} */
WebGLRenderingContext.LUMINANCE;

/** @const {number} */
WebGLRenderingContext.LUMINANCE_ALPHA;

/** @const {number} */
WebGLRenderingContext.UNSIGNED_SHORT_4_4_4_4;

/** @const {number} */
WebGLRenderingContext.UNSIGNED_SHORT_5_5_5_1;

/** @const {number} */
WebGLRenderingContext.UNSIGNED_SHORT_5_6_5;

/** @const {number} */
WebGLRenderingContext.FRAGMENT_SHADER;

/** @const {number} */
WebGLRenderingContext.VERTEX_SHADER;

/** @const {number} */
WebGLRenderingContext.MAX_VERTEX_ATTRIBS;

/** @const {number} */
WebGLRenderingContext.MAX_VERTEX_UNIFORM_VECTORS;

/** @const {number} */
WebGLRenderingContext.MAX_VARYING_VECTORS;

/** @const {number} */
WebGLRenderingContext.MAX_COMBINED_TEXTURE_IMAGE_UNITS;

/** @const {number} */
WebGLRenderingContext.MAX_VERTEX_TEXTURE_IMAGE_UNITS;

/** @const {number} */
WebGLRenderingContext.MAX_TEXTURE_IMAGE_UNITS;

/** @const {number} */
WebGLRenderingContext.MAX_FRAGMENT_UNIFORM_VECTORS;

/** @const {number} */
WebGLRenderingContext.SHADER_TYPE;

/** @const {number} */
WebGLRenderingContext.DELETE_STATUS;

/** @const {number} */
WebGLRenderingContext.LINK_STATUS;

/** @const {number} */
WebGLRenderingContext.VALIDATE_STATUS;

/** @const {number} */
WebGLRenderingContext.ATTACHED_SHADERS;

/** @const {number} */
WebGLRenderingContext.ACTIVE_UNIFORMS;

/** @const {number} */
WebGLRenderingContext.ACTIVE_ATTRIBUTES;

/** @const {number} */
WebGLRenderingContext.SHADING_LANGUAGE_VERSION;

/** @const {number} */
WebGLRenderingContext.CURRENT_PROGRAM;

/** @const {number} */
WebGLRenderingContext.NEVER;

/** @const {number} */
WebGLRenderingContext.LESS;

/** @const {number} */
WebGLRenderingContext.EQUAL;

/** @const {number} */
WebGLRenderingContext.LEQUAL;

/** @const {number} */
WebGLRenderingContext.GREATER;

/** @const {number} */
WebGLRenderingContext.NOTEQUAL;

/** @const {number} */
WebGLRenderingContext.GEQUAL;

/** @const {number} */
WebGLRenderingContext.ALWAYS;

/** @const {number} */
WebGLRenderingContext.KEEP;

/** @const {number} */
WebGLRenderingContext.REPLACE;

/** @const {number} */
WebGLRenderingContext.INCR;

/** @const {number} */
WebGLRenderingContext.DECR;

/** @const {number} */
WebGLRenderingContext.INVERT;

/** @const {number} */
WebGLRenderingContext.INCR_WRAP;

/** @const {number} */
WebGLRenderingContext.DECR_WRAP;

/** @const {number} */
WebGLRenderingContext.VENDOR;

/** @const {number} */
WebGLRenderingContext.RENDERER;

/** @const {number} */
WebGLRenderingContext.VERSION;

/** @const {number} */
WebGLRenderingContext.NEAREST;

/** @const {number} */
WebGLRenderingContext.LINEAR;

/** @const {number} */
WebGLRenderingContext.NEAREST_MIPMAP_NEAREST;

/** @const {number} */
WebGLRenderingContext.LINEAR_MIPMAP_NEAREST;

/** @const {number} */
WebGLRenderingContext.NEAREST_MIPMAP_LINEAR;

/** @const {number} */
WebGLRenderingContext.LINEAR_MIPMAP_LINEAR;

/** @const {number} */
WebGLRenderingContext.TEXTURE_MAG_FILTER;

/** @const {number} */
WebGLRenderingContext.TEXTURE_MIN_FILTER;

/** @const {number} */
WebGLRenderingContext.TEXTURE_WRAP_S;

/** @const {number} */
WebGLRenderingContext.TEXTURE_WRAP_T;

/** @const {number} */
WebGLRenderingContext.TEXTURE_2D;

/** @const {number} */
WebGLRenderingContext.TEXTURE;

/** @const {number} */
WebGLRenderingContext.TEXTURE_CUBE_MAP;

/** @const {number} */
WebGLRenderingContext.TEXTURE_BINDING_CUBE_MAP;

/** @const {number} */
WebGLRenderingContext.TEXTURE_CUBE_MAP_POSITIVE_X;

/** @const {number} */
WebGLRenderingContext.TEXTURE_CUBE_MAP_NEGATIVE_X;

/** @const {number} */
WebGLRenderingContext.TEXTURE_CUBE_MAP_POSITIVE_Y;

/** @const {number} */
WebGLRenderingContext.TEXTURE_CUBE_MAP_NEGATIVE_Y;

/** @const {number} */
WebGLRenderingContext.TEXTURE_CUBE_MAP_POSITIVE_Z;

/** @const {number} */
WebGLRenderingContext.TEXTURE_CUBE_MAP_NEGATIVE_Z;

/** @const {number} */
WebGLRenderingContext.MAX_CUBE_MAP_TEXTURE_SIZE;

/** @const {number} */
WebGLRenderingContext.TEXTURE0;

/** @const {number} */
WebGLRenderingContext.TEXTURE1;

/** @const {number} */
WebGLRenderingContext.TEXTURE2;

/** @const {number} */
WebGLRenderingContext.TEXTURE3;

/** @const {number} */
WebGLRenderingContext.TEXTURE4;

/** @const {number} */
WebGLRenderingContext.TEXTURE5;

/** @const {number} */
WebGLRenderingContext.TEXTURE6;

/** @const {number} */
WebGLRenderingContext.TEXTURE7;

/** @const {number} */
WebGLRenderingContext.TEXTURE8;

/** @const {number} */
WebGLRenderingContext.TEXTURE9;

/** @const {number} */
WebGLRenderingContext.TEXTURE10;

/** @const {number} */
WebGLRenderingContext.TEXTURE11;

/** @const {number} */
WebGLRenderingContext.TEXTURE12;

/** @const {number} */
WebGLRenderingContext.TEXTURE13;

/** @const {number} */
WebGLRenderingContext.TEXTURE14;

/** @const {number} */
WebGLRenderingContext.TEXTURE15;

/** @const {number} */
WebGLRenderingContext.TEXTURE16;

/** @const {number} */
WebGLRenderingContext.TEXTURE17;

/** @const {number} */
WebGLRenderingContext.TEXTURE18;

/** @const {number} */
WebGLRenderingContext.TEXTURE19;

/** @const {number} */
WebGLRenderingContext.TEXTURE20;

/** @const {number} */
WebGLRenderingContext.TEXTURE21;

/** @const {number} */
WebGLRenderingContext.TEXTURE22;

/** @const {number} */
WebGLRenderingContext.TEXTURE23;

/** @const {number} */
WebGLRenderingContext.TEXTURE24;

/** @const {number} */
WebGLRenderingContext.TEXTURE25;

/** @const {number} */
WebGLRenderingContext.TEXTURE26;

/** @const {number} */
WebGLRenderingContext.TEXTURE27;

/** @const {number} */
WebGLRenderingContext.TEXTURE28;

/** @const {number} */
WebGLRenderingContext.TEXTURE29;

/** @const {number} */
WebGLRenderingContext.TEXTURE30;

/** @const {number} */
WebGLRenderingContext.TEXTURE31;

/** @const {number} */
WebGLRenderingContext.ACTIVE_TEXTURE;

/** @const {number} */
WebGLRenderingContext.REPEAT;

/** @const {number} */
WebGLRenderingContext.CLAMP_TO_EDGE;

/** @const {number} */
WebGLRenderingContext.MIRRORED_REPEAT;

/** @const {number} */
WebGLRenderingContext.FLOAT_VEC2;

/** @const {number} */
WebGLRenderingContext.FLOAT_VEC3;

/** @const {number} */
WebGLRenderingContext.FLOAT_VEC4;

/** @const {number} */
WebGLRenderingContext.INT_VEC2;

/** @const {number} */
WebGLRenderingContext.INT_VEC3;

/** @const {number} */
WebGLRenderingContext.INT_VEC4;

/** @const {number} */
WebGLRenderingContext.BOOL;

/** @const {number} */
WebGLRenderingContext.BOOL_VEC2;

/** @const {number} */
WebGLRenderingContext.BOOL_VEC3;

/** @const {number} */
WebGLRenderingContext.BOOL_VEC4;

/** @const {number} */
WebGLRenderingContext.FLOAT_MAT2;

/** @const {number} */
WebGLRenderingContext.FLOAT_MAT3;

/** @const {number} */
WebGLRenderingContext.FLOAT_MAT4;

/** @const {number} */
WebGLRenderingContext.SAMPLER_2D;

/** @const {number} */
WebGLRenderingContext.SAMPLER_CUBE;

/** @const {number} */
WebGLRenderingContext.VERTEX_ATTRIB_ARRAY_ENABLED;

/** @const {number} */
WebGLRenderingContext.VERTEX_ATTRIB_ARRAY_SIZE;

/** @const {number} */
WebGLRenderingContext.VERTEX_ATTRIB_ARRAY_STRIDE;

/** @const {number} */
WebGLRenderingContext.VERTEX_ATTRIB_ARRAY_TYPE;

/** @const {number} */
WebGLRenderingContext.VERTEX_ATTRIB_ARRAY_NORMALIZED;

/** @const {number} */
WebGLRenderingContext.VERTEX_ATTRIB_ARRAY_POINTER;

/** @const {number} */
WebGLRenderingContext.VERTEX_ATTRIB_ARRAY_BUFFER_BINDING;

/** @const {number} */
WebGLRenderingContext.IMPLEMENTATION_COLOR_READ_FORMAT;

/** @const {number} */
WebGLRenderingContext.IMPLEMENTATION_COLOR_READ_TYPE;

/** @const {number} */
WebGLRenderingContext.COMPILE_STATUS;

/** @const {number} */
WebGLRenderingContext.LOW_FLOAT;

/** @const {number} */
WebGLRenderingContext.MEDIUM_FLOAT;

/** @const {number} */
WebGLRenderingContext.HIGH_FLOAT;

/** @const {number} */
WebGLRenderingContext.LOW_INT;

/** @const {number} */
WebGLRenderingContext.MEDIUM_INT;

/** @const {number} */
WebGLRenderingContext.HIGH_INT;

/** @const {number} */
WebGLRenderingContext.FRAMEBUFFER;

/** @const {number} */
WebGLRenderingContext.RENDERBUFFER;

/** @const {number} */
WebGLRenderingContext.RGBA4;

/** @const {number} */
WebGLRenderingContext.RGB5_A1;

/** @const {number} */
WebGLRenderingContext.RGB565;

/** @const {number} */
WebGLRenderingContext.DEPTH_COMPONENT16;

/** @const {number} */
WebGLRenderingContext.STENCIL_INDEX;

/** @const {number} */
WebGLRenderingContext.STENCIL_INDEX8;

/** @const {number} */
WebGLRenderingContext.DEPTH_STENCIL;

/** @const {number} */
WebGLRenderingContext.RENDERBUFFER_WIDTH;

/** @const {number} */
WebGLRenderingContext.RENDERBUFFER_HEIGHT;

/** @const {number} */
WebGLRenderingContext.RENDERBUFFER_INTERNAL_FORMAT;

/** @const {number} */
WebGLRenderingContext.RENDERBUFFER_RED_SIZE;

/** @const {number} */
WebGLRenderingContext.RENDERBUFFER_GREEN_SIZE;

/** @const {number} */
WebGLRenderingContext.RENDERBUFFER_BLUE_SIZE;

/** @const {number} */
WebGLRenderingContext.RENDERBUFFER_ALPHA_SIZE;

/** @const {number} */
WebGLRenderingContext.RENDERBUFFER_DEPTH_SIZE;

/** @const {number} */
WebGLRenderingContext.RENDERBUFFER_STENCIL_SIZE;

/** @const {number} */
WebGLRenderingContext.FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE;

/** @const {number} */
WebGLRenderingContext.FRAMEBUFFER_ATTACHMENT_OBJECT_NAME;

/** @const {number} */
WebGLRenderingContext.FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL;

/** @const {number} */
WebGLRenderingContext.FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE;

/** @const {number} */
WebGLRenderingContext.COLOR_ATTACHMENT0;

/** @const {number} */
WebGLRenderingContext.DEPTH_ATTACHMENT;

/** @const {number} */
WebGLRenderingContext.STENCIL_ATTACHMENT;

/** @const {number} */
WebGLRenderingContext.DEPTH_STENCIL_ATTACHMENT;

/** @const {number} */
WebGLRenderingContext.NONE;

/** @const {number} */
WebGLRenderingContext.FRAMEBUFFER_COMPLETE;

/** @const {number} */
WebGLRenderingContext.FRAMEBUFFER_INCOMPLETE_ATTACHMENT;

/** @const {number} */
WebGLRenderingContext.FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT;

/** @const {number} */
WebGLRenderingContext.FRAMEBUFFER_INCOMPLETE_DIMENSIONS;

/** @const {number} */
WebGLRenderingContext.FRAMEBUFFER_UNSUPPORTED;

/** @const {number} */
WebGLRenderingContext.FRAMEBUFFER_BINDING;

/** @const {number} */
WebGLRenderingContext.RENDERBUFFER_BINDING;

/** @const {number} */
WebGLRenderingContext.MAX_RENDERBUFFER_SIZE;

/** @const {number} */
WebGLRenderingContext.INVALID_FRAMEBUFFER_OPERATION;

/** @const {number} */
WebGLRenderingContext.UNPACK_FLIP_Y_WEBGL;

/** @const {number} */
WebGLRenderingContext.UNPACK_PREMULTIPLY_ALPHA_WEBGL;

/** @const {number} */
WebGLRenderingContext.CONTEXT_LOST_WEBGL;

/** @const {number} */
WebGLRenderingContext.UNPACK_COLORSPACE_CONVERSION_WEBGL;

/** @const {number} */
WebGLRenderingContext.BROWSER_DEFAULT_WEBGL;


/** @const {number} */
WebGLRenderingContext.prototype.DEPTH_BUFFER_BIT;

/** @const {number} */
WebGLRenderingContext.prototype.STENCIL_BUFFER_BIT;

/** @const {number} */
WebGLRenderingContext.prototype.COLOR_BUFFER_BIT;

/** @const {number} */
WebGLRenderingContext.prototype.POINTS;

/** @const {number} */
WebGLRenderingContext.prototype.LINES;

/** @const {number} */
WebGLRenderingContext.prototype.LINE_LOOP;

/** @const {number} */
WebGLRenderingContext.prototype.LINE_STRIP;

/** @const {number} */
WebGLRenderingContext.prototype.TRIANGLES;

/** @const {number} */
WebGLRenderingContext.prototype.TRIANGLE_STRIP;

/** @const {number} */
WebGLRenderingContext.prototype.TRIANGLE_FAN;

/** @const {number} */
WebGLRenderingContext.prototype.ZERO;

/** @const {number} */
WebGLRenderingContext.prototype.ONE;

/** @const {number} */
WebGLRenderingContext.prototype.SRC_COLOR;

/** @const {number} */
WebGLRenderingContext.prototype.ONE_MINUS_SRC_COLOR;

/** @const {number} */
WebGLRenderingContext.prototype.SRC_ALPHA;

/** @const {number} */
WebGLRenderingContext.prototype.ONE_MINUS_SRC_ALPHA;

/** @const {number} */
WebGLRenderingContext.prototype.DST_ALPHA;

/** @const {number} */
WebGLRenderingContext.prototype.ONE_MINUS_DST_ALPHA;

/** @const {number} */
WebGLRenderingContext.prototype.DST_COLOR;

/** @const {number} */
WebGLRenderingContext.prototype.ONE_MINUS_DST_COLOR;

/** @const {number} */
WebGLRenderingContext.prototype.SRC_ALPHA_SATURATE;

/** @const {number} */
WebGLRenderingContext.prototype.FUNC_ADD;

/** @const {number} */
WebGLRenderingContext.prototype.BLEND_EQUATION;

/** @const {number} */
WebGLRenderingContext.prototype.BLEND_EQUATION_RGB;

/** @const {number} */
WebGLRenderingContext.prototype.BLEND_EQUATION_ALPHA;

/** @const {number} */
WebGLRenderingContext.prototype.FUNC_SUBTRACT;

/** @const {number} */
WebGLRenderingContext.prototype.FUNC_REVERSE_SUBTRACT;

/** @const {number} */
WebGLRenderingContext.prototype.BLEND_DST_RGB;

/** @const {number} */
WebGLRenderingContext.prototype.BLEND_SRC_RGB;

/** @const {number} */
WebGLRenderingContext.prototype.BLEND_DST_ALPHA;

/** @const {number} */
WebGLRenderingContext.prototype.BLEND_SRC_ALPHA;

/** @const {number} */
WebGLRenderingContext.prototype.CONSTANT_COLOR;

/** @const {number} */
WebGLRenderingContext.prototype.ONE_MINUS_CONSTANT_COLOR;

/** @const {number} */
WebGLRenderingContext.prototype.CONSTANT_ALPHA;

/** @const {number} */
WebGLRenderingContext.prototype.ONE_MINUS_CONSTANT_ALPHA;

/** @const {number} */
WebGLRenderingContext.prototype.BLEND_COLOR;

/** @const {number} */
WebGLRenderingContext.prototype.ARRAY_BUFFER;

/** @const {number} */
WebGLRenderingContext.prototype.ELEMENT_ARRAY_BUFFER;

/** @const {number} */
WebGLRenderingContext.prototype.ARRAY_BUFFER_BINDING;

/** @const {number} */
WebGLRenderingContext.prototype.ELEMENT_ARRAY_BUFFER_BINDING;

/** @const {number} */
WebGLRenderingContext.prototype.STREAM_DRAW;

/** @const {number} */
WebGLRenderingContext.prototype.STATIC_DRAW;

/** @const {number} */
WebGLRenderingContext.prototype.DYNAMIC_DRAW;

/** @const {number} */
WebGLRenderingContext.prototype.BUFFER_SIZE;

/** @const {number} */
WebGLRenderingContext.prototype.BUFFER_USAGE;

/** @const {number} */
WebGLRenderingContext.prototype.CURRENT_VERTEX_ATTRIB;

/** @const {number} */
WebGLRenderingContext.prototype.FRONT;

/** @const {number} */
WebGLRenderingContext.prototype.BACK;

/** @const {number} */
WebGLRenderingContext.prototype.FRONT_AND_BACK;

/** @const {number} */
WebGLRenderingContext.prototype.CULL_FACE;

/** @const {number} */
WebGLRenderingContext.prototype.BLEND;

/** @const {number} */
WebGLRenderingContext.prototype.DITHER;

/** @const {number} */
WebGLRenderingContext.prototype.STENCIL_TEST;

/** @const {number} */
WebGLRenderingContext.prototype.DEPTH_TEST;

/** @const {number} */
WebGLRenderingContext.prototype.SCISSOR_TEST;

/** @const {number} */
WebGLRenderingContext.prototype.POLYGON_OFFSET_FILL;

/** @const {number} */
WebGLRenderingContext.prototype.SAMPLE_ALPHA_TO_COVERAGE;

/** @const {number} */
WebGLRenderingContext.prototype.SAMPLE_COVERAGE;

/** @const {number} */
WebGLRenderingContext.prototype.NO_ERROR;

/** @const {number} */
WebGLRenderingContext.prototype.INVALID_ENUM;

/** @const {number} */
WebGLRenderingContext.prototype.INVALID_VALUE;

/** @const {number} */
WebGLRenderingContext.prototype.INVALID_OPERATION;

/** @const {number} */
WebGLRenderingContext.prototype.OUT_OF_MEMORY;

/** @const {number} */
WebGLRenderingContext.prototype.CW;

/** @const {number} */
WebGLRenderingContext.prototype.CCW;

/** @const {number} */
WebGLRenderingContext.prototype.LINE_WIDTH;

/** @const {number} */
WebGLRenderingContext.prototype.ALIASED_POINT_SIZE_RANGE;

/** @const {number} */
WebGLRenderingContext.prototype.ALIASED_LINE_WIDTH_RANGE;

/** @const {number} */
WebGLRenderingContext.prototype.CULL_FACE_MODE;

/** @const {number} */
WebGLRenderingContext.prototype.FRONT_FACE;

/** @const {number} */
WebGLRenderingContext.prototype.DEPTH_RANGE;

/** @const {number} */
WebGLRenderingContext.prototype.DEPTH_WRITEMASK;

/** @const {number} */
WebGLRenderingContext.prototype.DEPTH_CLEAR_VALUE;

/** @const {number} */
WebGLRenderingContext.prototype.DEPTH_FUNC;

/** @const {number} */
WebGLRenderingContext.prototype.STENCIL_CLEAR_VALUE;

/** @const {number} */
WebGLRenderingContext.prototype.STENCIL_FUNC;

/** @const {number} */
WebGLRenderingContext.prototype.STENCIL_FAIL;

/** @const {number} */
WebGLRenderingContext.prototype.STENCIL_PASS_DEPTH_FAIL;

/** @const {number} */
WebGLRenderingContext.prototype.STENCIL_PASS_DEPTH_PASS;

/** @const {number} */
WebGLRenderingContext.prototype.STENCIL_REF;

/** @const {number} */
WebGLRenderingContext.prototype.STENCIL_VALUE_MASK;

/** @const {number} */
WebGLRenderingContext.prototype.STENCIL_WRITEMASK;

/** @const {number} */
WebGLRenderingContext.prototype.STENCIL_BACK_FUNC;

/** @const {number} */
WebGLRenderingContext.prototype.STENCIL_BACK_FAIL;

/** @const {number} */
WebGLRenderingContext.prototype.STENCIL_BACK_PASS_DEPTH_FAIL;

/** @const {number} */
WebGLRenderingContext.prototype.STENCIL_BACK_PASS_DEPTH_PASS;

/** @const {number} */
WebGLRenderingContext.prototype.STENCIL_BACK_REF;

/** @const {number} */
WebGLRenderingContext.prototype.STENCIL_BACK_VALUE_MASK;

/** @const {number} */
WebGLRenderingContext.prototype.STENCIL_BACK_WRITEMASK;

/** @const {number} */
WebGLRenderingContext.prototype.VIEWPORT;

/** @const {number} */
WebGLRenderingContext.prototype.SCISSOR_BOX;

/** @const {number} */
WebGLRenderingContext.prototype.COLOR_CLEAR_VALUE;

/** @const {number} */
WebGLRenderingContext.prototype.COLOR_WRITEMASK;

/** @const {number} */
WebGLRenderingContext.prototype.UNPACK_ALIGNMENT;

/** @const {number} */
WebGLRenderingContext.prototype.PACK_ALIGNMENT;

/** @const {number} */
WebGLRenderingContext.prototype.MAX_TEXTURE_SIZE;

/** @const {number} */
WebGLRenderingContext.prototype.MAX_VIEWPORT_DIMS;

/** @const {number} */
WebGLRenderingContext.prototype.SUBPIXEL_BITS;

/** @const {number} */
WebGLRenderingContext.prototype.RED_BITS;

/** @const {number} */
WebGLRenderingContext.prototype.GREEN_BITS;

/** @const {number} */
WebGLRenderingContext.prototype.BLUE_BITS;

/** @const {number} */
WebGLRenderingContext.prototype.ALPHA_BITS;

/** @const {number} */
WebGLRenderingContext.prototype.DEPTH_BITS;

/** @const {number} */
WebGLRenderingContext.prototype.STENCIL_BITS;

/** @const {number} */
WebGLRenderingContext.prototype.POLYGON_OFFSET_UNITS;

/** @const {number} */
WebGLRenderingContext.prototype.POLYGON_OFFSET_FACTOR;

/** @const {number} */
WebGLRenderingContext.prototype.TEXTURE_BINDING_2D;

/** @const {number} */
WebGLRenderingContext.prototype.SAMPLE_BUFFERS;

/** @const {number} */
WebGLRenderingContext.prototype.SAMPLES;

/** @const {number} */
WebGLRenderingContext.prototype.SAMPLE_COVERAGE_VALUE;

/** @const {number} */
WebGLRenderingContext.prototype.SAMPLE_COVERAGE_INVERT;

/** @const {number} */
WebGLRenderingContext.prototype.COMPRESSED_TEXTURE_FORMATS;

/** @const {number} */
WebGLRenderingContext.prototype.DONT_CARE;

/** @const {number} */
WebGLRenderingContext.prototype.FASTEST;

/** @const {number} */
WebGLRenderingContext.prototype.NICEST;

/** @const {number} */
WebGLRenderingContext.prototype.GENERATE_MIPMAP_HINT;

/** @const {number} */
WebGLRenderingContext.prototype.BYTE;

/** @const {number} */
WebGLRenderingContext.prototype.UNSIGNED_BYTE;

/** @const {number} */
WebGLRenderingContext.prototype.SHORT;

/** @const {number} */
WebGLRenderingContext.prototype.UNSIGNED_SHORT;

/** @const {number} */
WebGLRenderingContext.prototype.INT;

/** @const {number} */
WebGLRenderingContext.prototype.UNSIGNED_INT;

/** @const {number} */
WebGLRenderingContext.prototype.FLOAT;

/** @const {number} */
WebGLRenderingContext.prototype.DEPTH_COMPONENT;

/** @const {number} */
WebGLRenderingContext.prototype.ALPHA;

/** @const {number} */
WebGLRenderingContext.prototype.RGB;

/** @const {number} */
WebGLRenderingContext.prototype.RGBA;

/** @const {number} */
WebGLRenderingContext.prototype.LUMINANCE;

/** @const {number} */
WebGLRenderingContext.prototype.LUMINANCE_ALPHA;

/** @const {number} */
WebGLRenderingContext.prototype.UNSIGNED_SHORT_4_4_4_4;

/** @const {number} */
WebGLRenderingContext.prototype.UNSIGNED_SHORT_5_5_5_1;

/** @const {number} */
WebGLRenderingContext.prototype.UNSIGNED_SHORT_5_6_5;

/** @const {number} */
WebGLRenderingContext.prototype.FRAGMENT_SHADER;

/** @const {number} */
WebGLRenderingContext.prototype.VERTEX_SHADER;

/** @const {number} */
WebGLRenderingContext.prototype.MAX_VERTEX_ATTRIBS;

/** @const {number} */
WebGLRenderingContext.prototype.MAX_VERTEX_UNIFORM_VECTORS;

/** @const {number} */
WebGLRenderingContext.prototype.MAX_VARYING_VECTORS;

/** @const {number} */
WebGLRenderingContext.prototype.MAX_COMBINED_TEXTURE_IMAGE_UNITS;

/** @const {number} */
WebGLRenderingContext.prototype.MAX_VERTEX_TEXTURE_IMAGE_UNITS;

/** @const {number} */
WebGLRenderingContext.prototype.MAX_TEXTURE_IMAGE_UNITS;

/** @const {number} */
WebGLRenderingContext.prototype.MAX_FRAGMENT_UNIFORM_VECTORS;

/** @const {number} */
WebGLRenderingContext.prototype.SHADER_TYPE;

/** @const {number} */
WebGLRenderingContext.prototype.DELETE_STATUS;

/** @const {number} */
WebGLRenderingContext.prototype.LINK_STATUS;

/** @const {number} */
WebGLRenderingContext.prototype.VALIDATE_STATUS;

/** @const {number} */
WebGLRenderingContext.prototype.ATTACHED_SHADERS;

/** @const {number} */
WebGLRenderingContext.prototype.ACTIVE_UNIFORMS;

/** @const {number} */
WebGLRenderingContext.prototype.ACTIVE_ATTRIBUTES;

/** @const {number} */
WebGLRenderingContext.prototype.SHADING_LANGUAGE_VERSION;

/** @const {number} */
WebGLRenderingContext.prototype.CURRENT_PROGRAM;

/** @const {number} */
WebGLRenderingContext.prototype.NEVER;

/** @const {number} */
WebGLRenderingContext.prototype.LESS;

/** @const {number} */
WebGLRenderingContext.prototype.EQUAL;

/** @const {number} */
WebGLRenderingContext.prototype.LEQUAL;

/** @const {number} */
WebGLRenderingContext.prototype.GREATER;

/** @const {number} */
WebGLRenderingContext.prototype.NOTEQUAL;

/** @const {number} */
WebGLRenderingContext.prototype.GEQUAL;

/** @const {number} */
WebGLRenderingContext.prototype.ALWAYS;

/** @const {number} */
WebGLRenderingContext.prototype.KEEP;

/** @const {number} */
WebGLRenderingContext.prototype.REPLACE;

/** @const {number} */
WebGLRenderingContext.prototype.INCR;

/** @const {number} */
WebGLRenderingContext.prototype.DECR;

/** @const {number} */
WebGLRenderingContext.prototype.INVERT;

/** @const {number} */
WebGLRenderingContext.prototype.INCR_WRAP;

/** @const {number} */
WebGLRenderingContext.prototype.DECR_WRAP;

/** @const {number} */
WebGLRenderingContext.prototype.VENDOR;

/** @const {number} */
WebGLRenderingContext.prototype.RENDERER;

/** @const {number} */
WebGLRenderingContext.prototype.VERSION;

/** @const {number} */
WebGLRenderingContext.prototype.NEAREST;

/** @const {number} */
WebGLRenderingContext.prototype.LINEAR;

/** @const {number} */
WebGLRenderingContext.prototype.NEAREST_MIPMAP_NEAREST;

/** @const {number} */
WebGLRenderingContext.prototype.LINEAR_MIPMAP_NEAREST;

/** @const {number} */
WebGLRenderingContext.prototype.NEAREST_MIPMAP_LINEAR;

/** @const {number} */
WebGLRenderingContext.prototype.LINEAR_MIPMAP_LINEAR;

/** @const {number} */
WebGLRenderingContext.prototype.TEXTURE_MAG_FILTER;

/** @const {number} */
WebGLRenderingContext.prototype.TEXTURE_MIN_FILTER;

/** @const {number} */
WebGLRenderingContext.prototype.TEXTURE_WRAP_S;

/** @const {number} */
WebGLRenderingContext.prototype.TEXTURE_WRAP_T;

/** @const {number} */
WebGLRenderingContext.prototype.TEXTURE_2D;

/** @const {number} */
WebGLRenderingContext.prototype.TEXTURE;

/** @const {number} */
WebGLRenderingContext.prototype.TEXTURE_CUBE_MAP;

/** @const {number} */
WebGLRenderingContext.prototype.TEXTURE_BINDING_CUBE_MAP;

/** @const {number} */
WebGLRenderingContext.prototype.TEXTURE_CUBE_MAP_POSITIVE_X;

/** @const {number} */
WebGLRenderingContext.prototype.TEXTURE_CUBE_MAP_NEGATIVE_X;

/** @const {number} */
WebGLRenderingContext.prototype.TEXTURE_CUBE_MAP_POSITIVE_Y;

/** @const {number} */
WebGLRenderingContext.prototype.TEXTURE_CUBE_MAP_NEGATIVE_Y;

/** @const {number} */
WebGLRenderingContext.prototype.TEXTURE_CUBE_MAP_POSITIVE_Z;

/** @const {number} */
WebGLRenderingContext.prototype.TEXTURE_CUBE_MAP_NEGATIVE_Z;

/** @const {number} */
WebGLRenderingContext.prototype.MAX_CUBE_MAP_TEXTURE_SIZE;

/** @const {number} */
WebGLRenderingContext.prototype.TEXTURE0;

/** @const {number} */
WebGLRenderingContext.prototype.TEXTURE1;

/** @const {number} */
WebGLRenderingContext.prototype.TEXTURE2;

/** @const {number} */
WebGLRenderingContext.prototype.TEXTURE3;

/** @const {number} */
WebGLRenderingContext.prototype.TEXTURE4;

/** @const {number} */
WebGLRenderingContext.prototype.TEXTURE5;

/** @const {number} */
WebGLRenderingContext.prototype.TEXTURE6;

/** @const {number} */
WebGLRenderingContext.prototype.TEXTURE7;

/** @const {number} */
WebGLRenderingContext.prototype.TEXTURE8;

/** @const {number} */
WebGLRenderingContext.prototype.TEXTURE9;

/** @const {number} */
WebGLRenderingContext.prototype.TEXTURE10;

/** @const {number} */
WebGLRenderingContext.prototype.TEXTURE11;

/** @const {number} */
WebGLRenderingContext.prototype.TEXTURE12;

/** @const {number} */
WebGLRenderingContext.prototype.TEXTURE13;

/** @const {number} */
WebGLRenderingContext.prototype.TEXTURE14;

/** @const {number} */
WebGLRenderingContext.prototype.TEXTURE15;

/** @const {number} */
WebGLRenderingContext.prototype.TEXTURE16;

/** @const {number} */
WebGLRenderingContext.prototype.TEXTURE17;

/** @const {number} */
WebGLRenderingContext.prototype.TEXTURE18;

/** @const {number} */
WebGLRenderingContext.prototype.TEXTURE19;

/** @const {number} */
WebGLRenderingContext.prototype.TEXTURE20;

/** @const {number} */
WebGLRenderingContext.prototype.TEXTURE21;

/** @const {number} */
WebGLRenderingContext.prototype.TEXTURE22;

/** @const {number} */
WebGLRenderingContext.prototype.TEXTURE23;

/** @const {number} */
WebGLRenderingContext.prototype.TEXTURE24;

/** @const {number} */
WebGLRenderingContext.prototype.TEXTURE25;

/** @const {number} */
WebGLRenderingContext.prototype.TEXTURE26;

/** @const {number} */
WebGLRenderingContext.prototype.TEXTURE27;

/** @const {number} */
WebGLRenderingContext.prototype.TEXTURE28;

/** @const {number} */
WebGLRenderingContext.prototype.TEXTURE29;

/** @const {number} */
WebGLRenderingContext.prototype.TEXTURE30;

/** @const {number} */
WebGLRenderingContext.prototype.TEXTURE31;

/** @const {number} */
WebGLRenderingContext.prototype.ACTIVE_TEXTURE;

/** @const {number} */
WebGLRenderingContext.prototype.REPEAT;

/** @const {number} */
WebGLRenderingContext.prototype.CLAMP_TO_EDGE;

/** @const {number} */
WebGLRenderingContext.prototype.MIRRORED_REPEAT;

/** @const {number} */
WebGLRenderingContext.prototype.FLOAT_VEC2;

/** @const {number} */
WebGLRenderingContext.prototype.FLOAT_VEC3;

/** @const {number} */
WebGLRenderingContext.prototype.FLOAT_VEC4;

/** @const {number} */
WebGLRenderingContext.prototype.INT_VEC2;

/** @const {number} */
WebGLRenderingContext.prototype.INT_VEC3;

/** @const {number} */
WebGLRenderingContext.prototype.INT_VEC4;

/** @const {number} */
WebGLRenderingContext.prototype.BOOL;

/** @const {number} */
WebGLRenderingContext.prototype.BOOL_VEC2;

/** @const {number} */
WebGLRenderingContext.prototype.BOOL_VEC3;

/** @const {number} */
WebGLRenderingContext.prototype.BOOL_VEC4;

/** @const {number} */
WebGLRenderingContext.prototype.FLOAT_MAT2;

/** @const {number} */
WebGLRenderingContext.prototype.FLOAT_MAT3;

/** @const {number} */
WebGLRenderingContext.prototype.FLOAT_MAT4;

/** @const {number} */
WebGLRenderingContext.prototype.SAMPLER_2D;

/** @const {number} */
WebGLRenderingContext.prototype.SAMPLER_CUBE;

/** @const {number} */
WebGLRenderingContext.prototype.VERTEX_ATTRIB_ARRAY_ENABLED;

/** @const {number} */
WebGLRenderingContext.prototype.VERTEX_ATTRIB_ARRAY_SIZE;

/** @const {number} */
WebGLRenderingContext.prototype.VERTEX_ATTRIB_ARRAY_STRIDE;

/** @const {number} */
WebGLRenderingContext.prototype.VERTEX_ATTRIB_ARRAY_TYPE;

/** @const {number} */
WebGLRenderingContext.prototype.VERTEX_ATTRIB_ARRAY_NORMALIZED;

/** @const {number} */
WebGLRenderingContext.prototype.VERTEX_ATTRIB_ARRAY_POINTER;

/** @const {number} */
WebGLRenderingContext.prototype.VERTEX_ATTRIB_ARRAY_BUFFER_BINDING;

/** @const {number} */
WebGLRenderingContext.prototype.COMPILE_STATUS;

/** @const {number} */
WebGLRenderingContext.prototype.LOW_FLOAT;

/** @const {number} */
WebGLRenderingContext.prototype.MEDIUM_FLOAT;

/** @const {number} */
WebGLRenderingContext.prototype.HIGH_FLOAT;

/** @const {number} */
WebGLRenderingContext.prototype.LOW_INT;

/** @const {number} */
WebGLRenderingContext.prototype.MEDIUM_INT;

/** @const {number} */
WebGLRenderingContext.prototype.HIGH_INT;

/** @const {number} */
WebGLRenderingContext.prototype.FRAMEBUFFER;

/** @const {number} */
WebGLRenderingContext.prototype.RENDERBUFFER;

/** @const {number} */
WebGLRenderingContext.prototype.RGBA4;

/** @const {number} */
WebGLRenderingContext.prototype.RGB5_A1;

/** @const {number} */
WebGLRenderingContext.prototype.RGB565;

/** @const {number} */
WebGLRenderingContext.prototype.DEPTH_COMPONENT16;

/** @const {number} */
WebGLRenderingContext.prototype.STENCIL_INDEX;

/** @const {number} */
WebGLRenderingContext.prototype.STENCIL_INDEX8;

/** @const {number} */
WebGLRenderingContext.prototype.DEPTH_STENCIL;

/** @const {number} */
WebGLRenderingContext.prototype.RENDERBUFFER_WIDTH;

/** @const {number} */
WebGLRenderingContext.prototype.RENDERBUFFER_HEIGHT;

/** @const {number} */
WebGLRenderingContext.prototype.RENDERBUFFER_INTERNAL_FORMAT;

/** @const {number} */
WebGLRenderingContext.prototype.RENDERBUFFER_RED_SIZE;

/** @const {number} */
WebGLRenderingContext.prototype.RENDERBUFFER_GREEN_SIZE;

/** @const {number} */
WebGLRenderingContext.prototype.RENDERBUFFER_BLUE_SIZE;

/** @const {number} */
WebGLRenderingContext.prototype.RENDERBUFFER_ALPHA_SIZE;

/** @const {number} */
WebGLRenderingContext.prototype.RENDERBUFFER_DEPTH_SIZE;

/** @const {number} */
WebGLRenderingContext.prototype.RENDERBUFFER_STENCIL_SIZE;

/** @const {number} */
WebGLRenderingContext.prototype.FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE;

/** @const {number} */
WebGLRenderingContext.prototype.FRAMEBUFFER_ATTACHMENT_OBJECT_NAME;

/** @const {number} */
WebGLRenderingContext.prototype.FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL;

/** @const {number} */
WebGLRenderingContext.prototype.FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE;

/** @const {number} */
WebGLRenderingContext.prototype.COLOR_ATTACHMENT0;

/** @const {number} */
WebGLRenderingContext.prototype.DEPTH_ATTACHMENT;

/** @const {number} */
WebGLRenderingContext.prototype.STENCIL_ATTACHMENT;

/** @const {number} */
WebGLRenderingContext.prototype.DEPTH_STENCIL_ATTACHMENT;

/** @const {number} */
WebGLRenderingContext.prototype.NONE;

/** @const {number} */
WebGLRenderingContext.prototype.FRAMEBUFFER_COMPLETE;

/** @const {number} */
WebGLRenderingContext.prototype.FRAMEBUFFER_INCOMPLETE_ATTACHMENT;

/** @const {number} */
WebGLRenderingContext.prototype.FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT;

/** @const {number} */
WebGLRenderingContext.prototype.FRAMEBUFFER_INCOMPLETE_DIMENSIONS;

/** @const {number} */
WebGLRenderingContext.prototype.FRAMEBUFFER_UNSUPPORTED;

/** @const {number} */
WebGLRenderingContext.prototype.FRAMEBUFFER_BINDING;

/** @const {number} */
WebGLRenderingContext.prototype.RENDERBUFFER_BINDING;

/** @const {number} */
WebGLRenderingContext.prototype.MAX_RENDERBUFFER_SIZE;

/** @const {number} */
WebGLRenderingContext.prototype.INVALID_FRAMEBUFFER_OPERATION;

/** @const {number} */
WebGLRenderingContext.prototype.UNPACK_FLIP_Y_WEBGL;

/** @const {number} */
WebGLRenderingContext.prototype.UNPACK_PREMULTIPLY_ALPHA_WEBGL;

/** @const {number} */
WebGLRenderingContext.prototype.CONTEXT_LOST_WEBGL;

/** @const {number} */
WebGLRenderingContext.prototype.UNPACK_COLORSPACE_CONVERSION_WEBGL;

/** @const {number} */
WebGLRenderingContext.prototype.BROWSER_DEFAULT_WEBGL;


/**
 * @type {!HTMLCanvasElement}
 */
WebGLRenderingContext.prototype.canvas;

/**
 * @type {number}
 */
WebGLRenderingContext.prototype.drawingBufferWidth;

/**
 * @type {number}
 */
WebGLRenderingContext.prototype.drawingBufferHeight;

/**
 * @return {!WebGLContextAttributes}
 * @nosideeffects
 */
WebGLRenderingContext.prototype.getContextAttributes = function() {};

/**
 * @return {boolean}
 * @nosideeffects
 */
WebGLRenderingContext.prototype.isContextLost = function() {};

/**
 * @return {!Array<string>}
 * @nosideeffects
 */
WebGLRenderingContext.prototype.getSupportedExtensions = function() {};

/**
 * Note that this has side effects by enabling the extension even if the
 * result is not used.
 * @param {string} name
 * @return {Object}
 */
WebGLRenderingContext.prototype.getExtension = function(name) {};

/**
 * @param {number} texture
 * @return {undefined}
 */
WebGLRenderingContext.prototype.activeTexture = function(texture) {};

/**
 * @param {WebGLProgram} program
 * @param {WebGLShader} shader
 * @return {undefined}
 */
WebGLRenderingContext.prototype.attachShader = function(program, shader) {};

/**
 * @param {WebGLProgram} program
 * @param {number} index
 * @param {string} name
 * @return {undefined}
 */
WebGLRenderingContext.prototype.bindAttribLocation = function(
    program, index, name) {};

/**
 * @param {number} target
 * @param {WebGLBuffer} buffer
 * @return {undefined}
 */
WebGLRenderingContext.prototype.bindBuffer = function(target, buffer) {};

/**
 * @param {number} target
 * @param {WebGLFramebuffer} buffer
 * @return {undefined}
 */
WebGLRenderingContext.prototype.bindFramebuffer = function(target, buffer) {};

/**
 * @param {number} target
 * @param {WebGLRenderbuffer} buffer
 * @return {undefined}
 */
WebGLRenderingContext.prototype.bindRenderbuffer = function(target, buffer) {};

/**
 * @param {number} target
 * @param {WebGLTexture} texture
 * @return {undefined}
 */
WebGLRenderingContext.prototype.bindTexture = function(target, texture) {};

/**
 * @param {number} red
 * @param {number} green
 * @param {number} blue
 * @param {number} alpha
 * @return {undefined}
 */
WebGLRenderingContext.prototype.blendColor = function(
    red, green, blue, alpha) {};

/**
 * @param {number} mode
 * @return {undefined}
 */
WebGLRenderingContext.prototype.blendEquation = function(mode) {};

/**
 * @param {number} modeRGB
 * @param {number} modeAlpha
 * @return {undefined}
 */
WebGLRenderingContext.prototype.blendEquationSeparate = function(
    modeRGB, modeAlpha) {};

/**
 * @param {number} sfactor
 * @param {number} dfactor
 * @return {undefined}
 */
WebGLRenderingContext.prototype.blendFunc = function(sfactor, dfactor) {};

/**
 * @param {number} srcRGB
 * @param {number} dstRGB
 * @param {number} srcAlpha
 * @param {number} dstAlpha
 * @return {undefined}
 */
WebGLRenderingContext.prototype.blendFuncSeparate = function(
    srcRGB, dstRGB, srcAlpha, dstAlpha) {};

/**
 * @param {number} target
 * @param {ArrayBufferView|ArrayBuffer|number} data
 * @param {number} usage
 * @return {undefined}
 */
WebGLRenderingContext.prototype.bufferData = function(target, data, usage) {};

/**
 * @param {number} target
 * @param {number} offset
 * @param {ArrayBufferView|ArrayBuffer} data
 * @return {undefined}
 */
WebGLRenderingContext.prototype.bufferSubData = function(
    target, offset, data) {};

/**
 * @param {number} target
 * @return {number}
 */
WebGLRenderingContext.prototype.checkFramebufferStatus = function(target) {};

/**
 * @param {number} mask
 * @return {undefined}
 */
WebGLRenderingContext.prototype.clear = function(mask) {};

/**
 * @param {number} red
 * @param {number} green
 * @param {number} blue
 * @param {number} alpha
 * @return {undefined}
 */
WebGLRenderingContext.prototype.clearColor = function(
    red, green, blue, alpha) {};

/**
 * @param {number} depth
 * @return {undefined}
 */
WebGLRenderingContext.prototype.clearDepth = function(depth) {};

/**
 * @param {number} s
 * @return {undefined}
 */
WebGLRenderingContext.prototype.clearStencil = function(s) {};

/**
 * @param {boolean} red
 * @param {boolean} green
 * @param {boolean} blue
 * @param {boolean} alpha
 * @return {undefined}
 */
WebGLRenderingContext.prototype.colorMask = function(
    red, green, blue, alpha) {};

/**
 * @param {WebGLShader} shader
 * @return {undefined}
 */
WebGLRenderingContext.prototype.compileShader = function(shader) {};

/**
 * @param {number} target
 * @param {number} level
 * @param {number} internalformat
 * @param {number} width
 * @param {number} height
 * @param {number} border
 * @param {ArrayBufferView} data
 * @return {undefined}
 */
WebGLRenderingContext.prototype.compressedTexImage2D = function(
    target, level, internalformat, width, height, border, data) {};

/**
 * @param {number} target
 * @param {number} level
 * @param {number} xoffset
 * @param {number} yoffset
 * @param {number} width
 * @param {number} height
 * @param {number} format
 * @param {ArrayBufferView} data
 * @return {undefined}
 */
WebGLRenderingContext.prototype.compressedTexSubImage2D = function(
    target, level, xoffset, yoffset, width, height, format, data) {};

/**
 * @param {number} target
 * @param {number} level
 * @param {number} format
 * @param {number} x
 * @param {number} y
 * @param {number} width
 * @param {number} height
 * @param {number} border
 * @return {undefined}
 */
WebGLRenderingContext.prototype.copyTexImage2D = function(
    target, level, format, x, y, width, height, border) {};

/**
 * @param {number} target
 * @param {number} level
 * @param {number} xoffset
 * @param {number} yoffset
 * @param {number} x
 * @param {number} y
 * @param {number} width
 * @param {number} height
 * @return {undefined}
 */
WebGLRenderingContext.prototype.copyTexSubImage2D = function(
    target, level, xoffset, yoffset, x, y, width, height) {};

/**
 * @return {!WebGLBuffer}
 * @nosideeffects
 */
WebGLRenderingContext.prototype.createBuffer = function() {};

/**
 * @return {!WebGLFramebuffer}
 * @nosideeffects
 */
WebGLRenderingContext.prototype.createFramebuffer = function() {};

/**
 * @return {!WebGLProgram}
 * @nosideeffects
 */
WebGLRenderingContext.prototype.createProgram = function() {};

/**
 * @return {!WebGLRenderbuffer}
 * @nosideeffects
 */
WebGLRenderingContext.prototype.createRenderbuffer = function() {};

/**
 * @param {number} type
 * @return {!WebGLShader}
 * @nosideeffects
 */
WebGLRenderingContext.prototype.createShader = function(type) {};

/**
 * @return {!WebGLTexture}
 * @nosideeffects
 */
WebGLRenderingContext.prototype.createTexture = function() {};

/**
 * @param {number} mode
 * @return {undefined}
 */
WebGLRenderingContext.prototype.cullFace = function(mode) {};

/**
 * @param {WebGLBuffer} buffer
 * @return {undefined}
 */
WebGLRenderingContext.prototype.deleteBuffer = function(buffer) {};

/**
 * @param {WebGLFramebuffer} buffer
 * @return {undefined}
 */
WebGLRenderingContext.prototype.deleteFramebuffer = function(buffer) {};

/**
 * @param {WebGLProgram} program
 * @return {undefined}
 */
WebGLRenderingContext.prototype.deleteProgram = function(program) {};

/**
 * @param {WebGLRenderbuffer} buffer
 * @return {undefined}
 */
WebGLRenderingContext.prototype.deleteRenderbuffer = function(buffer) {};

/**
 * @param {WebGLShader} shader
 * @return {undefined}
 */
WebGLRenderingContext.prototype.deleteShader = function(shader) {};

/**
 * @param {WebGLTexture} texture
 * @return {undefined}
 */
WebGLRenderingContext.prototype.deleteTexture = function(texture) {};

/**
 * @param {number} func
 * @return {undefined}
 */
WebGLRenderingContext.prototype.depthFunc = function(func) {};

/**
 * @param {boolean} flag
 * @return {undefined}
 */
WebGLRenderingContext.prototype.depthMask = function(flag) {};

/**
 * @param {number} nearVal
 * @param {number} farVal
 * @return {undefined}
 */
WebGLRenderingContext.prototype.depthRange = function(nearVal, farVal) {};

/**
 * @param {WebGLProgram} program
 * @param {WebGLShader} shader
 * @return {undefined}
 */
WebGLRenderingContext.prototype.detachShader = function(program, shader) {};

/**
 * @param {number} flags
 * @return {undefined}
 */
WebGLRenderingContext.prototype.disable = function(flags) {};

/**
 * @param {number} index
 * @return {undefined}
 */
WebGLRenderingContext.prototype.disableVertexAttribArray = function(
    index) {};

/**
 * @param {number} mode
 * @param {number} first
 * @param {number} count
 * @return {undefined}
 */
WebGLRenderingContext.prototype.drawArrays = function(mode, first, count) {};

/**
 * @param {number} mode
 * @param {number} count
 * @param {number} type
 * @param {number} offset
 * @return {undefined}
 */
WebGLRenderingContext.prototype.drawElements = function(
    mode, count, type, offset) {};

/**
 * @param {number} cap
 * @return {undefined}
 */
WebGLRenderingContext.prototype.enable = function(cap) {};

/**
 * @param {number} index
 * @return {undefined}
 */
WebGLRenderingContext.prototype.enableVertexAttribArray = function(
    index) {};

WebGLRenderingContext.prototype.finish = function() {};

WebGLRenderingContext.prototype.flush = function() {};

/**
 * @param {number} target
 * @param {number} attachment
 * @param {number} renderbuffertarget
 * @param {WebGLRenderbuffer} renderbuffer
 * @return {undefined}
 */
WebGLRenderingContext.prototype.framebufferRenderbuffer = function(
    target, attachment, renderbuffertarget, renderbuffer) {};

/**
 * @param {number} target
 * @param {number} attachment
 * @param {number} textarget
 * @param {WebGLTexture} texture
 * @param {number} level
 * @return {undefined}
 */
WebGLRenderingContext.prototype.framebufferTexture2D = function(
    target, attachment, textarget, texture, level) {};

/**
 * @param {number} mode
 * @return {undefined}
 */
WebGLRenderingContext.prototype.frontFace = function(mode) {};

/**
 * @param {number} target
 * @return {undefined}
 */
WebGLRenderingContext.prototype.generateMipmap = function(target) {};

/**
 * @param {WebGLProgram} program
 * @param {number} index
 * @return {WebGLActiveInfo}
 * @nosideeffects
 */
WebGLRenderingContext.prototype.getActiveAttrib = function(program, index) {};

/**
 * @param {WebGLProgram} program
 * @param {number} index
 * @return {WebGLActiveInfo}
 * @nosideeffects
 */
WebGLRenderingContext.prototype.getActiveUniform = function(program, index) {};

/**
 * @param {WebGLProgram} program
 * @return {!Array<WebGLShader>}
 * @nosideeffects
 */
WebGLRenderingContext.prototype.getAttachedShaders = function(program) {};

/**
 * @param {WebGLProgram} program
 * @param {string} name
 * @return {number}
 * @nosideeffects
 */
WebGLRenderingContext.prototype.getAttribLocation = function(program, name) {};

/**
 * @param {number} target
 * @param {number} pname
 * @return {*}
 * @nosideeffects
 */
WebGLRenderingContext.prototype.getBufferParameter = function(target, pname) {};

/**
 * @param {number} pname
 * @return {*}
 * @nosideeffects
 */
WebGLRenderingContext.prototype.getParameter = function(pname) {};

/**
 * @return {number}
 * @nosideeffects
 */
WebGLRenderingContext.prototype.getError = function() {};

/**
 * @param {number} target
 * @param {number} attachment
 * @param {number} pname
 * @return {*}
 * @nosideeffects
 */
WebGLRenderingContext.prototype.getFramebufferAttachmentParameter = function(
    target, attachment, pname) {};

/**
 * @param {WebGLProgram} program
 * @param {number} pname
 * @return {*}
 * @nosideeffects
 */
WebGLRenderingContext.prototype.getProgramParameter = function(
    program, pname) {};

/**
 * @param {WebGLProgram} program
 * @return {string}
 * @nosideeffects
 */
WebGLRenderingContext.prototype.getProgramInfoLog = function(program) {};

/**
 * @param {number} target
 * @param {number} pname
 * @return {*}
 * @nosideeffects
 */
WebGLRenderingContext.prototype.getRenderbufferParameter = function(
    target, pname) {};

/**
 * @param {WebGLShader} shader
 * @param {number} pname
 * @return {*}
 * @nosideeffects
 */
WebGLRenderingContext.prototype.getShaderParameter = function(shader, pname) {};

/**
 * @param {number} shadertype
 * @param {number} precisiontype
 * @return {WebGLShaderPrecisionFormat}
 * @nosideeffects
 */
WebGLRenderingContext.prototype.getShaderPrecisionFormat = function(shadertype,
    precisiontype) {};

/**
 * @param {WebGLShader} shader
 * @return {string}
 * @nosideeffects
 */
WebGLRenderingContext.prototype.getShaderInfoLog = function(shader) {};

/**
 * @param {WebGLShader} shader
 * @return {string}
 * @nosideeffects
 */
WebGLRenderingContext.prototype.getShaderSource = function(shader) {};

/**
 * @param {number} target
 * @param {number} pname
 * @return {*}
 * @nosideeffects
 */
WebGLRenderingContext.prototype.getTexParameter = function(target, pname) {};

/**
 * @param {WebGLProgram} program
 * @param {WebGLUniformLocation} location
 * @return {*}
 * @nosideeffects
 */
WebGLRenderingContext.prototype.getUniform = function(program, location) {};

/**
 * @param {WebGLProgram} program
 * @param {string} name
 * @return {WebGLUniformLocation}
 * @nosideeffects
 */
WebGLRenderingContext.prototype.getUniformLocation = function(program, name) {};

/**
 * @param {number} index
 * @param {number} pname
 * @return {*}
 * @nosideeffects
 */
WebGLRenderingContext.prototype.getVertexAttrib = function(index, pname) {};

/**
 * @param {number} index
 * @param {number} pname
 * @return {number}
 * @nosideeffects
 */
WebGLRenderingContext.prototype.getVertexAttribOffset = function(
    index, pname) {};

/**
 * @param {number} target
 * @param {number} mode
 * @return {undefined}
 */
WebGLRenderingContext.prototype.hint = function(target, mode) {};

/**
 * @param {WebGLObject} buffer
 * @return {boolean}
 * @nosideeffects
 */
WebGLRenderingContext.prototype.isBuffer = function(buffer) {};

/**
 * @param {number} cap
 * @return {boolean}
 * @nosideeffects
 */
WebGLRenderingContext.prototype.isEnabled = function(cap) {};

/**
 * @param {WebGLObject} framebuffer
 * @return {boolean}
 * @nosideeffects
 */
WebGLRenderingContext.prototype.isFramebuffer = function(framebuffer) {};

/**
 * @param {WebGLObject} program
 * @return {boolean}
 * @nosideeffects
 */
WebGLRenderingContext.prototype.isProgram = function(program) {};

/**
 * @param {WebGLObject} renderbuffer
 * @return {boolean}
 * @nosideeffects
 */
WebGLRenderingContext.prototype.isRenderbuffer = function(renderbuffer) {};

/**
 * @param {WebGLObject} shader
 * @return {boolean}
 * @nosideeffects
 */
WebGLRenderingContext.prototype.isShader = function(shader) {};

/**
 * @param {WebGLObject} texture
 * @return {boolean}
 * @nosideeffects
 */
WebGLRenderingContext.prototype.isTexture = function(texture) {};

/**
 * @param {number} width
 * @return {undefined}
 */
WebGLRenderingContext.prototype.lineWidth = function(width) {};

/**
 * @param {WebGLProgram} program
 * @return {undefined}
 */
WebGLRenderingContext.prototype.linkProgram = function(program) {};

/**
 * @param {number} pname
 * @param {number|boolean} param
 * @return {undefined}
 */
WebGLRenderingContext.prototype.pixelStorei = function(pname, param) {};

/**
 * @param {number} factor
 * @param {number} units
 * @return {undefined}
 */
WebGLRenderingContext.prototype.polygonOffset = function(factor, units) {};

/**
 * @param {number} x
 * @param {number} y
 * @param {number} width
 * @param {number} height
 * @param {number} format
 * @param {number} type
 * @param {ArrayBufferView} pixels
 * @return {undefined}
 */
WebGLRenderingContext.prototype.readPixels = function(
    x, y, width, height, format, type, pixels) {};

/**
 * @param {number} target
 * @param {number} internalformat
 * @param {number} width
 * @param {number} height
 * @return {undefined}
 */
WebGLRenderingContext.prototype.renderbufferStorage = function(
    target, internalformat, width, height) {};

/**
 * @param {number} coverage
 * @param {boolean} invert
 * @return {undefined}
 */
WebGLRenderingContext.prototype.sampleCoverage = function(coverage, invert) {};

/**
 * @param {number} x
 * @param {number} y
 * @param {number} width
 * @param {number} height
 * @return {undefined}
 */
WebGLRenderingContext.prototype.scissor = function(x, y, width, height) {};

/**
 * @param {WebGLShader} shader
 * @param {string} source
 * @return {undefined}
 */
WebGLRenderingContext.prototype.shaderSource = function(shader, source) {};

/**
 * @param {number} func
 * @param {number} ref
 * @param {number} mask
 * @return {undefined}
 */
WebGLRenderingContext.prototype.stencilFunc = function(func, ref, mask) {};

/**
 * @param {number} face
 * @param {number} func
 * @param {number} ref
 * @param {number} mask
 * @return {undefined}
 */
WebGLRenderingContext.prototype.stencilFuncSeparate = function(
    face, func, ref, mask) {};

/**
 * @param {number} mask
 * @return {undefined}
 */
WebGLRenderingContext.prototype.stencilMask = function(mask) {};

/**
 * @param {number} face
 * @param {number} mask
 * @return {undefined}
 */
WebGLRenderingContext.prototype.stencilMaskSeparate = function(face, mask) {};

/**
 * @param {number} fail
 * @param {number} zfail
 * @param {number} zpass
 * @return {undefined}
 */
WebGLRenderingContext.prototype.stencilOp = function(fail, zfail, zpass) {};

/**
 * @param {number} face
 * @param {number} fail
 * @param {number} zfail
 * @param {number} zpass
 * @return {undefined}
 */
WebGLRenderingContext.prototype.stencilOpSeparate = function(
    face, fail, zfail, zpass) {};

/**
 * @param {number} target
 * @param {number} level
 * @param {number} internalformat
 * @param {number} format or width
 * @param {number} type or height
 * @param {?TexImageSource|number} img or border
 * @param {number=} opt_format
 * @param {number=} opt_type
 * @param {ArrayBufferView=} opt_pixels
 * @return {undefined}
 */
WebGLRenderingContext.prototype.texImage2D = function(
    target, level, internalformat, format, type, img, opt_format, opt_type,
    opt_pixels) {};

/**
 * @param {number} target
 * @param {number} pname
 * @param {number} param
 * @return {undefined}
 */
WebGLRenderingContext.prototype.texParameterf = function(
    target, pname, param) {};

/**
 * @param {number} target
 * @param {number} pname
 * @param {number} param
 * @return {undefined}
 */
WebGLRenderingContext.prototype.texParameteri = function(
    target, pname, param) {};

/**
 * @param {number} target
 * @param {number} level
 * @param {number} xoffset
 * @param {number} yoffset
 * @param {number} format or width
 * @param {number} type or height
 * @param {?TexImageSource|number} data or format
 * @param {number=} opt_type
 * @param {ArrayBufferView=} opt_pixels
 * @return {undefined}
 */
WebGLRenderingContext.prototype.texSubImage2D = function(
    target, level, xoffset, yoffset, format, type, data, opt_type,
    opt_pixels) {};

/**
 * @param {WebGLUniformLocation} location
 * @param {number} value
 * @return {undefined}
 */
WebGLRenderingContext.prototype.uniform1f = function(location, value) {};

/**
 * @param {WebGLUniformLocation} location
 * @param {Float32Array|Array<number>} value
 * @return {undefined}
 */
WebGLRenderingContext.prototype.uniform1fv = function(location, value) {};

/**
 * @param {WebGLUniformLocation} location
 * @param {number|boolean} value
 * @return {undefined}
 */
WebGLRenderingContext.prototype.uniform1i = function(location, value) {};

/**
 * @param {WebGLUniformLocation} location
 * @param {Int32Array|Array<number>|Array<boolean>} value
 * @return {undefined}
 */
WebGLRenderingContext.prototype.uniform1iv = function(location, value) {};

/**
 * @param {WebGLUniformLocation} location
 * @param {number} value1
 * @param {number} value2
 * @return {undefined}
 */
WebGLRenderingContext.prototype.uniform2f = function(
    location, value1, value2) {};

/**
 * @param {WebGLUniformLocation} location
 * @param {Float32Array|Array<number>} value
 * @return {undefined}
 */
WebGLRenderingContext.prototype.uniform2fv = function(location, value) {};

/**
 * @param {WebGLUniformLocation} location
 * @param {number|boolean} value1
 * @param {number|boolean} value2
 * @return {undefined}
 */
WebGLRenderingContext.prototype.uniform2i = function(
    location, value1, value2) {};

/**
 * @param {WebGLUniformLocation} location
 * @param {Int32Array|Array<number>|Array<boolean>} value
 * @return {undefined}
 */
WebGLRenderingContext.prototype.uniform2iv = function(location, value) {};

/**
 * @param {WebGLUniformLocation} location
 * @param {number} value1
 * @param {number} value2
 * @param {number} value3
 * @return {undefined}
 */
WebGLRenderingContext.prototype.uniform3f = function(
    location, value1, value2, value3) {};

/**
 * @param {WebGLUniformLocation} location
 * @param {Float32Array|Array<number>} value
 * @return {undefined}
 */
WebGLRenderingContext.prototype.uniform3fv = function(location, value) {};

/**
 * @param {WebGLUniformLocation} location
 * @param {number|boolean} value1
 * @param {number|boolean} value2
 * @param {number|boolean} value3
 * @return {undefined}
 */
WebGLRenderingContext.prototype.uniform3i = function(
    location, value1, value2, value3) {};

/**
 * @param {WebGLUniformLocation} location
 * @param {Int32Array|Array<number>|Array<boolean>} value
 * @return {undefined}
 */
WebGLRenderingContext.prototype.uniform3iv = function(location, value) {};

/**
 * @param {WebGLUniformLocation} location
 * @param {number} value1
 * @param {number} value2
 * @param {number} value3
 * @param {number} value4
 * @return {undefined}
 */
WebGLRenderingContext.prototype.uniform4f = function(
    location, value1, value2, value3, value4) {};

/**
 * @param {WebGLUniformLocation} location
 * @param {Float32Array|Array<number>} value
 * @return {undefined}
 */
WebGLRenderingContext.prototype.uniform4fv = function(location, value) {};

/**
 * @param {WebGLUniformLocation} location
 * @param {number|boolean} value1
 * @param {number|boolean} value2
 * @param {number|boolean} value3
 * @param {number|boolean} value4
 * @return {undefined}
 */
WebGLRenderingContext.prototype.uniform4i = function(
    location, value1, value2, value3, value4) {};

/**
 * @param {WebGLUniformLocation} location
 * @param {Int32Array|Array<number>|Array<boolean>} value
 * @return {undefined}
 */
WebGLRenderingContext.prototype.uniform4iv = function(location, value) {};

/**
 * @param {WebGLUniformLocation} location
 * @param {boolean} transpose
 * @param {Float32Array|Array<number>} data
 * @return {undefined}
 */
WebGLRenderingContext.prototype.uniformMatrix2fv = function(
    location, transpose, data) {};

/**
 * @param {WebGLUniformLocation} location
 * @param {boolean} transpose
 * @param {Float32Array|Array<number>} data
 * @return {undefined}
 */
WebGLRenderingContext.prototype.uniformMatrix3fv = function(
    location, transpose, data) {};

/**
 * @param {WebGLUniformLocation} location
 * @param {boolean} transpose
 * @param {Float32Array|Array<number>} data
 * @return {undefined}
 */
WebGLRenderingContext.prototype.uniformMatrix4fv = function(
    location, transpose, data) {};

/**
 * @param {WebGLProgram} program
 * @return {undefined}
 */
WebGLRenderingContext.prototype.useProgram = function(program) {};

/**
 * @param {WebGLProgram} program
 * @return {undefined}
 */
WebGLRenderingContext.prototype.validateProgram = function(program) {};

/**
 * @param {number} indx
 * @param {number} x
 * @return {undefined}
 */
WebGLRenderingContext.prototype.vertexAttrib1f = function(indx, x) {};

/**
 * @param {number} indx
 * @param {Float32Array|Array<number>} values
 * @return {undefined}
 */
WebGLRenderingContext.prototype.vertexAttrib1fv = function(indx, values) {};

/**
 * @param {number} indx
 * @param {number} x
 * @param {number} y
 * @return {undefined}
 */
WebGLRenderingContext.prototype.vertexAttrib2f = function(
    indx, x, y) {};

/**
 * @param {number} indx
 * @param {Float32Array|Array<number>} values
 * @return {undefined}
 */
WebGLRenderingContext.prototype.vertexAttrib2fv = function(
    indx, values) {};

/**
 * @param {number} indx
 * @param {number} x
 * @param {number} y
 * @param {number} z
 * @return {undefined}
 */
WebGLRenderingContext.prototype.vertexAttrib3f = function(
    indx, x, y, z) {};

/**
 * @param {number} indx
 * @param {Float32Array|Array<number>} values
 * @return {undefined}
 */
WebGLRenderingContext.prototype.vertexAttrib3fv = function(indx, values) {};

/**
 * @param {number} indx
 * @param {number} x
 * @param {number} y
 * @param {number} z
 * @param {number} w
 * @return {undefined}
 */
WebGLRenderingContext.prototype.vertexAttrib4f = function(
    indx, x, y, z, w) {};

/**
 * @param {number} indx
 * @param {Float32Array|Array<number>} values
 * @return {undefined}
 */
WebGLRenderingContext.prototype.vertexAttrib4fv = function(indx, values) {};

/**
 * @param {number} indx
 * @param {number} size
 * @param {number} type
 * @param {boolean} normalized
 * @param {number} stride
 * @param {number} offset
 * @return {undefined}
 */
WebGLRenderingContext.prototype.vertexAttribPointer = function(
    indx, size, type, normalized, stride, offset) {};

/**
 * @param {number} x
 * @param {number} y
 * @param {number} width
 * @param {number} height
 * @return {undefined}
 */
WebGLRenderingContext.prototype.viewport = function(x, y, width, height) {};


/**
 * @constructor
 */
function WebGLContextAttributes() {}

/**
 * @type {boolean}
 */
WebGLContextAttributes.prototype.alpha;

/**
 * @type {boolean}
 */
WebGLContextAttributes.prototype.depth;

/**
 * @type {boolean}
 */
WebGLContextAttributes.prototype.stencil;

/**
 * @type {boolean}
 */
WebGLContextAttributes.prototype.antialias;

/**
 * @type {boolean}
 */
WebGLContextAttributes.prototype.premultipliedAlpha;

/**
 * @type {boolean}
 */
WebGLContextAttributes.prototype.preserveDrawingBuffer;

/**
 * @type {boolean}
 */
WebGLContextAttributes.prototype.desynchronized;

/**
 * @type {boolean}
 */
WebGLContextAttributes.prototype.failIfMajorPerformanceCaveat;

/**
 * Possible values: 'default', 'low-power', 'high-performance'
 * @type {string}
 */
WebGLContextAttributes.prototype.powerPreference;

/**
 * @param {string} eventType
 * @constructor
 * @extends {Event}
 */
function WebGLContextEvent(eventType) {}

/**
 * @type {string}
 */
WebGLContextEvent.prototype.statusMessage;


/**
 * @constructor
 */
function WebGLShaderPrecisionFormat() {}

/**
 * @type {number}
 */
WebGLShaderPrecisionFormat.prototype.rangeMin;

/**
 * @type {number}
 */
WebGLShaderPrecisionFormat.prototype.rangeMax;

/**
 * @type {number}
 */
WebGLShaderPrecisionFormat.prototype.precision;


/**
 * @constructor
 */
function WebGLObject() {}


/**
 * @constructor
 * @extends {WebGLObject}
 */
function WebGLBuffer() {}


/**
 * @constructor
 * @extends {WebGLObject}
 */
function WebGLFramebuffer() {}


/**
 * @constructor
 * @extends {WebGLObject}
 */
function WebGLProgram() {}


/**
 * @constructor
 * @extends {WebGLObject}
 */
function WebGLRenderbuffer() {}


/**
 * @constructor
 * @extends {WebGLObject}
 */
function WebGLShader() {}


/**
 * @constructor
 * @extends {WebGLObject}
 */
function WebGLTexture() {}


/**
 * @constructor
 */
function WebGLActiveInfo() {}

/** @type {number} */
WebGLActiveInfo.prototype.size;

/** @type {number} */
WebGLActiveInfo.prototype.type;

/** @type {string} */
WebGLActiveInfo.prototype.name;


/**
 * @constructor
 */
function WebGLUniformLocation() {}


/**
 * @see http://www.khronos.org/registry/webgl/extensions/OES_texture_float/
 * @constructor
 */
function OES_texture_float() {}


/**
 * @see http://www.khronos.org/registry/webgl/extensions/OES_texture_half_float/
 * @constructor
 */
function OES_texture_half_float() {}

/** @type {number} */
OES_texture_half_float.prototype.HALF_FLOAT_OES;


/**
 * @see http://www.khronos.org/registry/webgl/extensions/WEBGL_lose_context/
 * @constructor
 */
function WEBGL_lose_context() {}

WEBGL_lose_context.prototype.loseContext = function() {};

WEBGL_lose_context.prototype.restoreContext = function() {};


/**
 * @see http://www.khronos.org/registry/webgl/extensions/OES_standard_derivatives/
 * @constructor
 */
function OES_standard_derivatives() {}

/** @type {number} */
OES_standard_derivatives.prototype.FRAGMENT_SHADER_DERIVATIVE_HINT_OES;


/**
 * @see http://www.khronos.org/registry/webgl/extensions/OES_vertex_array_object/
 * @constructor
 * @extends {WebGLObject}
 */
function WebGLVertexArrayObjectOES() {}


/**
 * @see http://www.khronos.org/registry/webgl/extensions/OES_vertex_array_object/
 * @constructor
 */
function OES_vertex_array_object() {}

/** @type {number} */
OES_vertex_array_object.prototype.VERTEX_ARRAY_BINDING_OES;

/**
 * @return {WebGLVertexArrayObjectOES}
 * @nosideeffects
 */
OES_vertex_array_object.prototype.createVertexArrayOES = function() {};

/**
 * @param {WebGLVertexArrayObjectOES} arrayObject
 * @return {undefined}
 */
OES_vertex_array_object.prototype.deleteVertexArrayOES =
    function(arrayObject) {};

/**
 * @param {WebGLVertexArrayObjectOES} arrayObject
 * @return {boolean}
 * @nosideeffects
 */
OES_vertex_array_object.prototype.isVertexArrayOES = function(arrayObject) {};

/**
 * @param {WebGLVertexArrayObjectOES} arrayObject
 * @return {undefined}
 */
OES_vertex_array_object.prototype.bindVertexArrayOES = function(arrayObject) {};


/**
 * @see http://www.khronos.org/registry/webgl/extensions/WEBGL_debug_renderer_info/
 * @constructor
 */
function WEBGL_debug_renderer_info() {}

/** @const {number} */
WEBGL_debug_renderer_info.prototype.UNMASKED_VENDOR_WEBGL;

/** @const {number} */
WEBGL_debug_renderer_info.prototype.UNMASKED_RENDERER_WEBGL;


/**
 * @see http://www.khronos.org/registry/webgl/extensions/WEBGL_debug_shaders/
 * @constructor
 */
function WEBGL_debug_shaders() {}

/**
 * @param {WebGLShader} shader
 * @return {string}
 * @nosideeffects
 */
WEBGL_debug_shaders.prototype.getTranslatedShaderSource = function(shader) {};


/**
 * @see http://www.khronos.org/registry/webgl/extensions/WEBGL_compressed_texture_s3tc/
 * @constructor
 */
function WEBGL_compressed_texture_s3tc() {}

/** @const {number} */
WEBGL_compressed_texture_s3tc.prototype.COMPRESSED_RGB_S3TC_DXT1_EXT;

/** @const {number} */
WEBGL_compressed_texture_s3tc.prototype.COMPRESSED_RGBA_S3TC_DXT1_EXT;

/** @const {number} */
WEBGL_compressed_texture_s3tc.prototype.COMPRESSED_RGBA_S3TC_DXT3_EXT;

/** @const {number} */
WEBGL_compressed_texture_s3tc.prototype.COMPRESSED_RGBA_S3TC_DXT5_EXT;


/**
 * @see http://www.khronos.org/registry/webgl/extensions/OES_depth_texture/
 * @constructor
 */
function OES_depth_texture() {}


/**
 * @see http://www.khronos.org/registry/webgl/extensions/OES_element_index_uint/
 * @constructor
 */
function OES_element_index_uint() {}


/**
 * @see http://www.khronos.org/registry/webgl/extensions/EXT_texture_filter_anisotropic/
 * @constructor
 */
function EXT_texture_filter_anisotropic() {}

/** @const {number} */
EXT_texture_filter_anisotropic.prototype.TEXTURE_MAX_ANISOTROPY_EXT;

/** @const {number} */
EXT_texture_filter_anisotropic.prototype.MAX_TEXTURE_MAX_ANISOTROPY_EXT;


/**
 * @see https://www.khronos.org/registry/webgl/extensions/WEBGL_draw_buffers/
 * @constructor
 */
function WEBGL_draw_buffers() {}

/** @const {number} */
WEBGL_draw_buffers.prototype.COLOR_ATTACHMENT0_WEBGL;

/** @const {number} */
WEBGL_draw_buffers.prototype.COLOR_ATTACHMENT1_WEBGL;

/** @const {number} */
WEBGL_draw_buffers.prototype.COLOR_ATTACHMENT2_WEBGL;

/** @const {number} */
WEBGL_draw_buffers.prototype.COLOR_ATTACHMENT3_WEBGL;

/** @const {number} */
WEBGL_draw_buffers.prototype.COLOR_ATTACHMENT4_WEBGL;

/** @const {number} */
WEBGL_draw_buffers.prototype.COLOR_ATTACHMENT5_WEBGL;

/** @const {number} */
WEBGL_draw_buffers.prototype.COLOR_ATTACHMENT6_WEBGL;

/** @const {number} */
WEBGL_draw_buffers.prototype.COLOR_ATTACHMENT7_WEBGL;

/** @const {number} */
WEBGL_draw_buffers.prototype.COLOR_ATTACHMENT8_WEBGL;

/** @const {number} */
WEBGL_draw_buffers.prototype.COLOR_ATTACHMENT9_WEBGL;

/** @const {number} */
WEBGL_draw_buffers.prototype.COLOR_ATTACHMENT10_WEBGL;

/** @const {number} */
WEBGL_draw_buffers.prototype.COLOR_ATTACHMENT11_WEBGL;

/** @const {number} */
WEBGL_draw_buffers.prototype.COLOR_ATTACHMENT12_WEBGL;

/** @const {number} */
WEBGL_draw_buffers.prototype.COLOR_ATTACHMENT13_WEBGL;

/** @const {number} */
WEBGL_draw_buffers.prototype.COLOR_ATTACHMENT14_WEBGL;

/** @const {number} */
WEBGL_draw_buffers.prototype.COLOR_ATTACHMENT15_WEBGL;

/** @const {number} */
WEBGL_draw_buffers.prototype.DRAW_BUFFER0_WEBGL;

/** @const {number} */
WEBGL_draw_buffers.prototype.DRAW_BUFFER1_WEBGL;

/** @const {number} */
WEBGL_draw_buffers.prototype.DRAW_BUFFER2_WEBGL;

/** @const {number} */
WEBGL_draw_buffers.prototype.DRAW_BUFFER3_WEBGL;

/** @const {number} */
WEBGL_draw_buffers.prototype.DRAW_BUFFER4_WEBGL;

/** @const {number} */
WEBGL_draw_buffers.prototype.DRAW_BUFFER5_WEBGL;

/** @const {number} */
WEBGL_draw_buffers.prototype.DRAW_BUFFER6_WEBGL;

/** @const {number} */
WEBGL_draw_buffers.prototype.DRAW_BUFFER7_WEBGL;

/** @const {number} */
WEBGL_draw_buffers.prototype.DRAW_BUFFER8_WEBGL;

/** @const {number} */
WEBGL_draw_buffers.prototype.DRAW_BUFFER9_WEBGL;

/** @const {number} */
WEBGL_draw_buffers.prototype.DRAW_BUFFER10_WEBGL;

/** @const {number} */
WEBGL_draw_buffers.prototype.DRAW_BUFFER11_WEBGL;

/** @const {number} */
WEBGL_draw_buffers.prototype.DRAW_BUFFER12_WEBGL;

/** @const {number} */
WEBGL_draw_buffers.prototype.DRAW_BUFFER13_WEBGL;

/** @const {number} */
WEBGL_draw_buffers.prototype.DRAW_BUFFER14_WEBGL;

/** @const {number} */
WEBGL_draw_buffers.prototype.DRAW_BUFFER15_WEBGL;

/** @const {number} */
WEBGL_draw_buffers.prototype.MAX_COLOR_ATTACHMENTS_WEBGL;

/** @const {number} */
WEBGL_draw_buffers.prototype.MAX_DRAW_BUFFERS_WEBGL;

/**
 * @param {Array<number>} buffers Draw buffers.
 * @return {undefined}
 */
WEBGL_draw_buffers.prototype.drawBuffersWEBGL = function(buffers) {};


/**
 * @see http://www.khronos.org/registry/webgl/extensions/ANGLE_instanced_arrays/
 * @constructor
 */
function ANGLE_instanced_arrays() {}


/** @const {number} */
ANGLE_instanced_arrays.prototype.VERTEX_ATTRIB_ARRAY_DIVISOR_ANGLE;


/**
 * @param {number} mode Primitive type.
 * @param {number} first First vertex.
 * @param {number} count Number of vertices per instance.
 * @param {number} primcount Number of instances.
 * @return {undefined}
 */
ANGLE_instanced_arrays.prototype.drawArraysInstancedANGLE = function(
    mode, first, count, primcount) {};


/**
 * @param {number} mode Primitive type.
 * @param {number} count Number of vertex indices per instance.
 * @param {number} type Type of a vertex index.
 * @param {number} offset Offset to the first vertex index.
 * @param {number} primcount Number of instances.
 * @return {undefined}
 */
ANGLE_instanced_arrays.prototype.drawElementsInstancedANGLE = function(
    mode, count, type, offset, primcount) {};


/**
 * @param {number} index Attribute index.
 * @param {number} divisor Instance divisor.
 * @return {undefined}
 */
ANGLE_instanced_arrays.prototype.vertexAttribDivisorANGLE = function(
    index, divisor) {};


/**
 * @see https://www.khronos.org/registry/webgl/extensions/EXT_color_buffer_half_float/
 * @interface
 */
function EXT_color_buffer_half_float() {}

/** @const {number} */
EXT_color_buffer_half_float.prototype.FRAMEBUFFER_ATTACHMENT_COMPONENT_TYPE_EXT;

/** @const {number} */
EXT_color_buffer_half_float.prototype.RGB16F_EXT;

/** @const {number} */
EXT_color_buffer_half_float.prototype.RGBA16F_EXT;

/** @const {number} */
EXT_color_buffer_half_float.prototype.UNSIGNED_NORMALIZED_EXT;


/**
 * @see https://www.khronos.org/registry/webgl/extensions/WEBGL_compressed_texture_etc1/
 * @interface
 */
function WEBGL_compressed_texture_etc1() {}

/** @const {number} */
WEBGL_compressed_texture_etc1.prototype.COMPRESSED_RGB_ETC1_WEBGL;
/*
 * Copyright 2008 The Closure Compiler Authors
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/**
 * @fileoverview Definitions for WebKit's custom CSS properties. Copied from:
 * {@link
 * http://trac.webkit.org/browser/trunk/Source/WebCore/css/CSSPropertyNames.in}
 *
 * If you make changes to this file, notice that every property appears
 * twice: once as an uppercase name and once as a lowercase name.
 * WebKit allows both. The uppercase version is preferred.
 *
 * @externs
 * @author nicksantos@google.com (Nick Santos)
 */

/** @type {string} */ CSSProperties.prototype.WebkitAlignContent;
/** @type {string} */ CSSProperties.prototype.WebkitAlignItems;
/** @type {string} */ CSSProperties.prototype.WebkitAlignSelf;
/** @type {string} */ CSSProperties.prototype.WebkitAnimation;
/** @type {string} */ CSSProperties.prototype.WebkitAnimationDelay;
/** @type {string} */ CSSProperties.prototype.WebkitAnimationDirection;
/** @type {string} */ CSSProperties.prototype.WebkitAnimationDuration;
/** @type {string} */ CSSProperties.prototype.WebkitAnimationFillMode;
/** @type {string} */ CSSProperties.prototype.WebkitAnimationIterationCount;
/** @type {string} */ CSSProperties.prototype.WebkitAnimationName;
/** @type {string} */ CSSProperties.prototype.WebkitAnimationPlayState;
/** @type {string} */ CSSProperties.prototype.WebkitAnimationTimingFunction;
/** @type {string} */ CSSProperties.prototype.WebkitAppearance;
/** @type {string} */ CSSProperties.prototype.WebkitAppRegion;
/** @type {string} */ CSSProperties.prototype.WebkitAspectRatio;
/** @type {string} */ CSSProperties.prototype.WebkitBackfaceVisibility;
/** @type {string} */ CSSProperties.prototype.WebkitBackgroundClip;
/** @type {string} */ CSSProperties.prototype.WebkitBackgroundComposite;
/** @type {string} */ CSSProperties.prototype.WebkitBackgroundOrigin;
/** @type {string} */ CSSProperties.prototype.WebkitBackgroundSize;
/** @type {string} */ CSSProperties.prototype.WebkitBinding;
/** @type {string} */ CSSProperties.prototype.WebkitBlendMode;
/** @type {string} */ CSSProperties.prototype.WebkitBorderAfter;
/** @type {string} */ CSSProperties.prototype.WebkitBorderAfterColor;
/** @type {string} */ CSSProperties.prototype.WebkitBorderAfterStyle;
/** @type {string} */ CSSProperties.prototype.WebkitBorderAfterWidth;
/** @type {string} */ CSSProperties.prototype.WebkitBorderBefore;
/** @type {string} */ CSSProperties.prototype.WebkitBorderBeforeColor;
/** @type {string} */ CSSProperties.prototype.WebkitBorderBeforeStyle;
/** @type {string} */ CSSProperties.prototype.WebkitBorderBeforeWidth;
/** @type {string} */ CSSProperties.prototype.WebkitBorderBottomLeftRadius;
/** @type {string} */ CSSProperties.prototype.WebkitBorderBottomRightRadius;
/** @type {string} */ CSSProperties.prototype.WebkitBorderEnd;
/** @type {string} */ CSSProperties.prototype.WebkitBorderEndColor;
/** @type {string} */ CSSProperties.prototype.WebkitBorderEndStyle;
/** @type {string} */ CSSProperties.prototype.WebkitBorderEndWidth;
/** @type {string} */ CSSProperties.prototype.WebkitBorderFit;
/** @type {string} */ CSSProperties.prototype.WebkitBorderHorizontalSpacing;
/** @type {string} */ CSSProperties.prototype.WebkitBorderImage;
/** @type {string} */ CSSProperties.prototype.WebkitBorderRadius;
/** @type {string} */ CSSProperties.prototype.WebkitBorderStart;
/** @type {string} */ CSSProperties.prototype.WebkitBorderStartColor;
/** @type {string} */ CSSProperties.prototype.WebkitBorderStartStyle;
/** @type {string} */ CSSProperties.prototype.WebkitBorderStartWidth;
/** @type {string} */ CSSProperties.prototype.WebkitBorderTopLeftRadius;
/** @type {string} */ CSSProperties.prototype.WebkitBorderTopRightRadius;
/** @type {string} */ CSSProperties.prototype.WebkitBorderVerticalSpacing;
/** @type {string} */ CSSProperties.prototype.WebkitBoxAlign;
/** @type {string} */ CSSProperties.prototype.WebkitBoxDecorationBreak;
/** @type {string} */ CSSProperties.prototype.WebkitBoxDirection;
/** @type {string} */ CSSProperties.prototype.WebkitBoxFlex;
/** @type {string} */ CSSProperties.prototype.WebkitBoxFlexGroup;
/** @type {string} */ CSSProperties.prototype.WebkitBoxLines;
/** @type {string} */ CSSProperties.prototype.WebkitBoxOrdinalGroup;
/** @type {string} */ CSSProperties.prototype.WebkitBoxOrient;
/** @type {string} */ CSSProperties.prototype.WebkitBoxPack;
/** @type {string} */ CSSProperties.prototype.WebkitBoxReflect;
/** @type {string} */ CSSProperties.prototype.WebkitBoxShadow;
/** @type {string} */ CSSProperties.prototype.WebkitBoxSizing;
/** @type {string} */ CSSProperties.prototype.WebkitColorCorrection;
/** @type {string} */ CSSProperties.prototype.WebkitColumnAxis;
/** @type {string} */ CSSProperties.prototype.WebkitColumnBreakAfter;
/** @type {string} */ CSSProperties.prototype.WebkitColumnBreakBefore;
/** @type {string} */ CSSProperties.prototype.WebkitColumnBreakInside;
/** @type {string} */ CSSProperties.prototype.WebkitColumnCount;
/** @type {string} */ CSSProperties.prototype.WebkitColumnGap;
/** @type {string} */ CSSProperties.prototype.WebkitColumnProgression;
/** @type {string} */ CSSProperties.prototype.WebkitColumnRule;
/** @type {string} */ CSSProperties.prototype.WebkitColumnRuleColor;
/** @type {string} */ CSSProperties.prototype.WebkitColumnRuleStyle;
/** @type {string} */ CSSProperties.prototype.WebkitColumnRuleWidth;
/** @type {string} */ CSSProperties.prototype.WebkitColumns;
/** @type {string} */ CSSProperties.prototype.WebkitColumnSpan;
/** @type {string} */ CSSProperties.prototype.WebkitColumnWidth;
/** @type {string} */ CSSProperties.prototype.WebkitDashboardRegion;
/** @type {string} */ CSSProperties.prototype.WebkitFilter;
/** @type {string} */ CSSProperties.prototype.WebkitFlex;
/** @type {string} */ CSSProperties.prototype.WebkitFlexBasis;
/** @type {string} */ CSSProperties.prototype.WebkitFlexDirection;
/** @type {string} */ CSSProperties.prototype.WebkitFlexFlow;
/** @type {string} */ CSSProperties.prototype.WebkitFlexGrow;
/** @type {string} */ CSSProperties.prototype.WebkitFlexShrink;
/** @type {string} */ CSSProperties.prototype.WebkitFlexWrap;
/** @type {string} */ CSSProperties.prototype.WebkitFlowFrom;
/** @type {string} */ CSSProperties.prototype.WebkitFlowInto;
/** @type {string} */ CSSProperties.prototype.WebkitFontSizeDelta;
/** @type {string} */ CSSProperties.prototype.WebkitFontSmoothing;
/** @type {string} */ CSSProperties.prototype.WebkitGridColumn;
/** @type {string} */ CSSProperties.prototype.WebkitGridColumns;
/** @type {string} */ CSSProperties.prototype.WebkitGridRow;
/** @type {string} */ CSSProperties.prototype.WebkitGridRows;
/** @type {string} */ CSSProperties.prototype.WebkitHighlight;
/** @type {string} */ CSSProperties.prototype.WebkitHyphenateCharacter;
/** @type {string} */ CSSProperties.prototype.WebkitHyphenateLimitAfter;
/** @type {string} */ CSSProperties.prototype.WebkitHyphenateLimitBefore;
/** @type {string} */ CSSProperties.prototype.WebkitHyphenateLimitLines;
/** @type {string} */ CSSProperties.prototype.WebkitHyphens;
/** @type {string} */ CSSProperties.prototype.WebkitJustifyContent;
/** @type {string} */ CSSProperties.prototype.WebkitLineAlign;
/** @type {string} */ CSSProperties.prototype.WebkitLineBoxContain;
/** @type {string} */ CSSProperties.prototype.WebkitLineBreak;
/** @type {string} */ CSSProperties.prototype.WebkitLineClamp;
/** @type {string} */ CSSProperties.prototype.WebkitLineGrid;
/** @type {string} */ CSSProperties.prototype.WebkitLineSnap;
/** @type {string} */ CSSProperties.prototype.WebkitLocale;
/** @type {string} */ CSSProperties.prototype.WebkitLogicalHeight;
/** @type {string} */ CSSProperties.prototype.WebkitLogicalWidth;
/** @type {string} */ CSSProperties.prototype.WebkitMarginAfter;
/** @type {string} */ CSSProperties.prototype.WebkitMarginAfterCollapse;
/** @type {string} */ CSSProperties.prototype.WebkitMarginBefore;
/** @type {string} */ CSSProperties.prototype.WebkitMarginBeforeCollapse;
/** @type {string} */ CSSProperties.prototype.WebkitMarginBottomCollapse;
/** @type {string} */ CSSProperties.prototype.WebkitMarginCollapse;
/** @type {string} */ CSSProperties.prototype.WebkitMarginEnd;
/** @type {string} */ CSSProperties.prototype.WebkitMarginStart;
/** @type {string} */ CSSProperties.prototype.WebkitMarginTopCollapse;
/** @type {string} */ CSSProperties.prototype.WebkitMarquee;
/** @type {string} */ CSSProperties.prototype.WebkitMarqueeDirection;
/** @type {string} */ CSSProperties.prototype.WebkitMarqueeIncrement;
/** @type {string} */ CSSProperties.prototype.WebkitMarqueeRepetition;
/** @type {string} */ CSSProperties.prototype.WebkitMarqueeSpeed;
/** @type {string} */ CSSProperties.prototype.WebkitMarqueeStyle;
/** @type {string} */ CSSProperties.prototype.WebkitMask;
/** @type {string} */ CSSProperties.prototype.WebkitMaskAttachment;
/** @type {string} */ CSSProperties.prototype.WebkitMaskBoxImage;
/** @type {string} */ CSSProperties.prototype.WebkitMaskBoxImageOutset;
/** @type {string} */ CSSProperties.prototype.WebkitMaskBoxImageRepeat;
/** @type {string} */ CSSProperties.prototype.WebkitMaskBoxImageSlice;
/** @type {string} */ CSSProperties.prototype.WebkitMaskBoxImageSource;
/** @type {string} */ CSSProperties.prototype.WebkitMaskBoxImageWidth;
/** @type {string} */ CSSProperties.prototype.WebkitMaskClip;
/** @type {string} */ CSSProperties.prototype.WebkitMaskComposite;
/** @type {string} */ CSSProperties.prototype.WebkitMaskImage;
/** @type {string} */ CSSProperties.prototype.WebkitMaskOrigin;
/** @type {string} */ CSSProperties.prototype.WebkitMaskPosition;
/** @type {string} */ CSSProperties.prototype.WebkitMaskPositionX;
/** @type {string} */ CSSProperties.prototype.WebkitMaskPositionY;
/** @type {string} */ CSSProperties.prototype.WebkitMaskRepeat;
/** @type {string} */ CSSProperties.prototype.WebkitMaskRepeatX;
/** @type {string} */ CSSProperties.prototype.WebkitMaskRepeatY;
/** @type {string} */ CSSProperties.prototype.WebkitMaskSize;
/** @type {string} */
CSSProperties.prototype.WebkitMatchNearestMailBlockquoteColor;
/** @type {string} */ CSSProperties.prototype.WebkitMaxLogicalHeight;
/** @type {string} */ CSSProperties.prototype.WebkitMaxLogicalWidth;
/** @type {string} */ CSSProperties.prototype.WebkitMinLogicalHeight;
/** @type {string} */ CSSProperties.prototype.WebkitMinLogicalWidth;
/** @type {string} */ CSSProperties.prototype.WebkitNbspMode;
/** @type {string} */ CSSProperties.prototype.WebkitOrder;
/** @type {string} */ CSSProperties.prototype.WebkitOverflowScrolling;
/** @type {string} */ CSSProperties.prototype.WebkitPaddingAfter;
/** @type {string} */ CSSProperties.prototype.WebkitPaddingBefore;
/** @type {string} */ CSSProperties.prototype.WebkitPaddingEnd;
/** @type {string} */ CSSProperties.prototype.WebkitPaddingStart;
/** @type {string} */ CSSProperties.prototype.WebkitPerspective;
/** @type {string} */ CSSProperties.prototype.WebkitPerspectiveOrigin;
/** @type {string} */ CSSProperties.prototype.WebkitPerspectiveOriginX;
/** @type {string} */ CSSProperties.prototype.WebkitPerspectiveOriginY;
/** @type {string} */ CSSProperties.prototype.WebkitPrintColorAdjust;
/** @type {string} */ CSSProperties.prototype.WebkitRegionBreakAfter;
/** @type {string} */ CSSProperties.prototype.WebkitRegionBreakBefore;
/** @type {string} */ CSSProperties.prototype.WebkitRegionBreakInside;
/** @type {string} */ CSSProperties.prototype.WebkitRegionOverflow;
/** @type {string} */ CSSProperties.prototype.WebkitRtlOrdering;
/** @type {string} */ CSSProperties.prototype.WebkitRubyPosition;
/** @type {string} */ CSSProperties.prototype.WebkitShapeInside;
/** @type {string} */ CSSProperties.prototype.WebkitShapeMargin;
/** @type {string} */ CSSProperties.prototype.WebkitShapeOutside;
/** @type {string} */ CSSProperties.prototype.WebkitShapePadding;
/** @type {string} */ CSSProperties.prototype.WebkitTapHighlightColor;
/** @type {string} */ CSSProperties.prototype.WebkitTextAlignLast;
/** @type {string} */ CSSProperties.prototype.WebkitTextCombine;
/** @type {string} */ CSSProperties.prototype.WebkitTextDecorationLine;
/** @type {string} */ CSSProperties.prototype.WebkitTextDecorationsInEffect;
/** @type {string} */ CSSProperties.prototype.WebkitTextDecorationStyle;
/** @type {string} */ CSSProperties.prototype.WebkitTextEmphasis;
/** @type {string} */ CSSProperties.prototype.WebkitTextEmphasisColor;
/** @type {string} */ CSSProperties.prototype.WebkitTextEmphasisPosition;
/** @type {string} */ CSSProperties.prototype.WebkitTextEmphasisStyle;
/** @type {string} */ CSSProperties.prototype.WebkitTextFillColor;
/** @type {string} */ CSSProperties.prototype.WebkitTextOrientation;
/** @type {string} */ CSSProperties.prototype.WebkitTextSecurity;
/** @type {string} */ CSSProperties.prototype.WebkitTextSizeAdjust;
/** @type {string} */ CSSProperties.prototype.WebkitTextStroke;
/** @type {string} */ CSSProperties.prototype.WebkitTextStrokeColor;
/** @type {string} */ CSSProperties.prototype.WebkitTextStrokeWidth;
/** @type {string} */ CSSProperties.prototype.WebkitTransform;
/** @type {string} */ CSSProperties.prototype.WebkitTransformOrigin;
/** @type {string} */ CSSProperties.prototype.WebkitTransformOriginX;
/** @type {string} */ CSSProperties.prototype.WebkitTransformOriginY;
/** @type {string} */ CSSProperties.prototype.WebkitTransformOriginZ;
/** @type {string} */ CSSProperties.prototype.WebkitTransformStyle;
/** @type {string} */ CSSProperties.prototype.WebkitTransition;
/** @type {string} */ CSSProperties.prototype.WebkitTransitionDelay;
/** @type {string} */ CSSProperties.prototype.WebkitTransitionDuration;
/** @type {string} */ CSSProperties.prototype.WebkitTransitionProperty;
/** @type {string} */ CSSProperties.prototype.WebkitTransitionRepeatCount;
/** @type {string} */ CSSProperties.prototype.WebkitTransitionTimingFunction;
/** @type {string} */ CSSProperties.prototype.WebkitUserDrag;
/** @type {string} */ CSSProperties.prototype.WebkitUserModify;
/** @type {string} */ CSSProperties.prototype.WebkitUserSelect;
/** @type {string} */ CSSProperties.prototype.WebkitWrap;
/** @type {string} */ CSSProperties.prototype.WebkitWrapFlow;
/** @type {string} */ CSSProperties.prototype.WebkitWrapThrough;
/** @type {string} */ CSSProperties.prototype.WebkitWritingMode;

// WebKit also adds bindings for the lowercase versions of these properties.
// The uppercase version is preferred.

/** @type {string} */ CSSProperties.prototype.webkitAlignContent;
/** @type {string} */ CSSProperties.prototype.webkitAlignItems;
/** @type {string} */ CSSProperties.prototype.webkitAlignSelf;
/** @type {string} */ CSSProperties.prototype.webkitAnimation;
/** @type {string} */ CSSProperties.prototype.webkitAnimationDelay;
/** @type {string} */ CSSProperties.prototype.webkitAnimationDirection;
/** @type {string} */ CSSProperties.prototype.webkitAnimationDuration;
/** @type {string} */ CSSProperties.prototype.webkitAnimationFillMode;
/** @type {string} */ CSSProperties.prototype.webkitAnimationIterationCount;
/** @type {string} */ CSSProperties.prototype.webkitAnimationName;
/** @type {string} */ CSSProperties.prototype.webkitAnimationPlayState;
/** @type {string} */ CSSProperties.prototype.webkitAnimationTimingFunction;
/** @type {string} */ CSSProperties.prototype.webkitAppearance;
/** @type {string} */ CSSProperties.prototype.webkitAppRegion;
/** @type {string} */ CSSProperties.prototype.webkitAspectRatio;
/** @type {string} */ CSSProperties.prototype.webkitBackfaceVisibility;
/** @type {string} */ CSSProperties.prototype.webkitBackgroundClip;
/** @type {string} */ CSSProperties.prototype.webkitBackgroundComposite;
/** @type {string} */ CSSProperties.prototype.webkitBackgroundOrigin;
/** @type {string} */ CSSProperties.prototype.webkitBackgroundSize;
/** @type {string} */ CSSProperties.prototype.webkitBinding;
/** @type {string} */ CSSProperties.prototype.webkitBlendMode;
/** @type {string} */ CSSProperties.prototype.webkitBorderAfter;
/** @type {string} */ CSSProperties.prototype.webkitBorderAfterColor;
/** @type {string} */ CSSProperties.prototype.webkitBorderAfterStyle;
/** @type {string} */ CSSProperties.prototype.webkitBorderAfterWidth;
/** @type {string} */ CSSProperties.prototype.webkitBorderBefore;
/** @type {string} */ CSSProperties.prototype.webkitBorderBeforeColor;
/** @type {string} */ CSSProperties.prototype.webkitBorderBeforeStyle;
/** @type {string} */ CSSProperties.prototype.webkitBorderBeforeWidth;
/** @type {string} */ CSSProperties.prototype.webkitBorderBottomLeftRadius;
/** @type {string} */ CSSProperties.prototype.webkitBorderBottomRightRadius;
/** @type {string} */ CSSProperties.prototype.webkitBorderEnd;
/** @type {string} */ CSSProperties.prototype.webkitBorderEndColor;
/** @type {string} */ CSSProperties.prototype.webkitBorderEndStyle;
/** @type {string} */ CSSProperties.prototype.webkitBorderEndWidth;
/** @type {string} */ CSSProperties.prototype.webkitBorderFit;
/** @type {string} */ CSSProperties.prototype.webkitBorderHorizontalSpacing;
/** @type {string} */ CSSProperties.prototype.webkitBorderImage;
/** @type {string} */ CSSProperties.prototype.webkitBorderRadius;
/** @type {string} */ CSSProperties.prototype.webkitBorderStart;
/** @type {string} */ CSSProperties.prototype.webkitBorderStartColor;
/** @type {string} */ CSSProperties.prototype.webkitBorderStartStyle;
/** @type {string} */ CSSProperties.prototype.webkitBorderStartWidth;
/** @type {string} */ CSSProperties.prototype.webkitBorderTopLeftRadius;
/** @type {string} */ CSSProperties.prototype.webkitBorderTopRightRadius;
/** @type {string} */ CSSProperties.prototype.webkitBorderVerticalSpacing;
/** @type {string} */ CSSProperties.prototype.webkitBoxAlign;
/** @type {string} */ CSSProperties.prototype.webkitBoxDecorationBreak;
/** @type {string} */ CSSProperties.prototype.webkitBoxDirection;
/** @type {string} */ CSSProperties.prototype.webkitBoxFlex;
/** @type {string} */ CSSProperties.prototype.webkitBoxFlexGroup;
/** @type {string} */ CSSProperties.prototype.webkitBoxLines;
/** @type {string} */ CSSProperties.prototype.webkitBoxOrdinalGroup;
/** @type {string} */ CSSProperties.prototype.webkitBoxOrient;
/** @type {string} */ CSSProperties.prototype.webkitBoxPack;
/** @type {string} */ CSSProperties.prototype.webkitBoxReflect;
/** @type {string} */ CSSProperties.prototype.webkitBoxShadow;
/** @type {string} */ CSSProperties.prototype.webkitBoxSizing;
/** @type {string} */ CSSProperties.prototype.webkitColorCorrection;
/** @type {string} */ CSSProperties.prototype.webkitColumnAxis;
/** @type {string} */ CSSProperties.prototype.webkitColumnBreakAfter;
/** @type {string} */ CSSProperties.prototype.webkitColumnBreakBefore;
/** @type {string} */ CSSProperties.prototype.webkitColumnBreakInside;
/** @type {string} */ CSSProperties.prototype.webkitColumnCount;
/** @type {string} */ CSSProperties.prototype.webkitColumnGap;
/** @type {string} */ CSSProperties.prototype.webkitColumnProgression;
/** @type {string} */ CSSProperties.prototype.webkitColumnRule;
/** @type {string} */ CSSProperties.prototype.webkitColumnRuleColor;
/** @type {string} */ CSSProperties.prototype.webkitColumnRuleStyle;
/** @type {string} */ CSSProperties.prototype.webkitColumnRuleWidth;
/** @type {string} */ CSSProperties.prototype.webkitColumns;
/** @type {string} */ CSSProperties.prototype.webkitColumnSpan;
/** @type {string} */ CSSProperties.prototype.webkitColumnWidth;
/** @type {string} */ CSSProperties.prototype.webkitDashboardRegion;
/** @type {string} */ CSSProperties.prototype.webkitFilter;
/** @type {string} */ CSSProperties.prototype.webkitFlex;
/** @type {string} */ CSSProperties.prototype.webkitFlexBasis;
/** @type {string} */ CSSProperties.prototype.webkitFlexDirection;
/** @type {string} */ CSSProperties.prototype.webkitFlexFlow;
/** @type {string} */ CSSProperties.prototype.webkitFlexGrow;
/** @type {string} */ CSSProperties.prototype.webkitFlexShrink;
/** @type {string} */ CSSProperties.prototype.webkitFlexWrap;
/** @type {string} */ CSSProperties.prototype.webkitFlowFrom;
/** @type {string} */ CSSProperties.prototype.webkitFlowInto;
/** @type {string} */ CSSProperties.prototype.webkitFontSizeDelta;
/** @type {string} */ CSSProperties.prototype.webkitFontSmoothing;
/** @type {string} */ CSSProperties.prototype.webkitGridColumn;
/** @type {string} */ CSSProperties.prototype.webkitGridColumns;
/** @type {string} */ CSSProperties.prototype.webkitGridRow;
/** @type {string} */ CSSProperties.prototype.webkitGridRows;
/** @type {string} */ CSSProperties.prototype.webkitHighlight;
/** @type {string} */ CSSProperties.prototype.webkitHyphenateCharacter;
/** @type {string} */ CSSProperties.prototype.webkitHyphenateLimitAfter;
/** @type {string} */ CSSProperties.prototype.webkitHyphenateLimitBefore;
/** @type {string} */ CSSProperties.prototype.webkitHyphenateLimitLines;
/** @type {string} */ CSSProperties.prototype.webkitHyphens;
/** @type {string} */ CSSProperties.prototype.webkitJustifyContent;
/** @type {string} */ CSSProperties.prototype.webkitLineAlign;
/** @type {string} */ CSSProperties.prototype.webkitLineBoxContain;
/** @type {string} */ CSSProperties.prototype.webkitLineBreak;
/** @type {string} */ CSSProperties.prototype.webkitLineClamp;
/** @type {string} */ CSSProperties.prototype.webkitLineGrid;
/** @type {string} */ CSSProperties.prototype.webkitLineSnap;
/** @type {string} */ CSSProperties.prototype.webkitLocale;
/** @type {string} */ CSSProperties.prototype.webkitLogicalHeight;
/** @type {string} */ CSSProperties.prototype.webkitLogicalWidth;
/** @type {string} */ CSSProperties.prototype.webkitMarginAfter;
/** @type {string} */ CSSProperties.prototype.webkitMarginAfterCollapse;
/** @type {string} */ CSSProperties.prototype.webkitMarginBefore;
/** @type {string} */ CSSProperties.prototype.webkitMarginBeforeCollapse;
/** @type {string} */ CSSProperties.prototype.webkitMarginBottomCollapse;
/** @type {string} */ CSSProperties.prototype.webkitMarginCollapse;
/** @type {string} */ CSSProperties.prototype.webkitMarginEnd;
/** @type {string} */ CSSProperties.prototype.webkitMarginStart;
/** @type {string} */ CSSProperties.prototype.webkitMarginTopCollapse;
/** @type {string} */ CSSProperties.prototype.webkitMarquee;
/** @type {string} */ CSSProperties.prototype.webkitMarqueeDirection;
/** @type {string} */ CSSProperties.prototype.webkitMarqueeIncrement;
/** @type {string} */ CSSProperties.prototype.webkitMarqueeRepetition;
/** @type {string} */ CSSProperties.prototype.webkitMarqueeSpeed;
/** @type {string} */ CSSProperties.prototype.webkitMarqueeStyle;
/** @type {string} */ CSSProperties.prototype.webkitMask;
/** @type {string} */ CSSProperties.prototype.webkitMaskAttachment;
/** @type {string} */ CSSProperties.prototype.webkitMaskBoxImage;
/** @type {string} */ CSSProperties.prototype.webkitMaskBoxImageOutset;
/** @type {string} */ CSSProperties.prototype.webkitMaskBoxImageRepeat;
/** @type {string} */ CSSProperties.prototype.webkitMaskBoxImageSlice;
/** @type {string} */ CSSProperties.prototype.webkitMaskBoxImageSource;
/** @type {string} */ CSSProperties.prototype.webkitMaskBoxImageWidth;
/** @type {string} */ CSSProperties.prototype.webkitMaskClip;
/** @type {string} */ CSSProperties.prototype.webkitMaskComposite;
/** @type {string} */ CSSProperties.prototype.webkitMaskImage;
/** @type {string} */ CSSProperties.prototype.webkitMaskOrigin;
/** @type {string} */ CSSProperties.prototype.webkitMaskPosition;
/** @type {string} */ CSSProperties.prototype.webkitMaskPositionX;
/** @type {string} */ CSSProperties.prototype.webkitMaskPositionY;
/** @type {string} */ CSSProperties.prototype.webkitMaskRepeat;
/** @type {string} */ CSSProperties.prototype.webkitMaskRepeatX;
/** @type {string} */ CSSProperties.prototype.webkitMaskRepeatY;
/** @type {string} */ CSSProperties.prototype.webkitMaskSize;
/** @type {string} */
CSSProperties.prototype.webkitMatchNearestMailBlockquoteColor;
/** @type {string} */ CSSProperties.prototype.webkitMaxLogicalHeight;
/** @type {string} */ CSSProperties.prototype.webkitMaxLogicalWidth;
/** @type {string} */ CSSProperties.prototype.webkitMinLogicalHeight;
/** @type {string} */ CSSProperties.prototype.webkitMinLogicalWidth;
/** @type {string} */ CSSProperties.prototype.webkitNbspMode;
/** @type {string} */ CSSProperties.prototype.webkitOrder;
/** @type {string} */ CSSProperties.prototype.webkitOverflowScrolling;
/** @type {string} */ CSSProperties.prototype.webkitPaddingAfter;
/** @type {string} */ CSSProperties.prototype.webkitPaddingBefore;
/** @type {string} */ CSSProperties.prototype.webkitPaddingEnd;
/** @type {string} */ CSSProperties.prototype.webkitPaddingStart;
/** @type {string} */ CSSProperties.prototype.webkitPerspective;
/** @type {string} */ CSSProperties.prototype.webkitPerspectiveOrigin;
/** @type {string} */ CSSProperties.prototype.webkitPerspectiveOriginX;
/** @type {string} */ CSSProperties.prototype.webkitPerspectiveOriginY;
/** @type {string} */ CSSProperties.prototype.webkitPrintColorAdjust;
/** @type {string} */ CSSProperties.prototype.webkitRegionBreakAfter;
/** @type {string} */ CSSProperties.prototype.webkitRegionBreakBefore;
/** @type {string} */ CSSProperties.prototype.webkitRegionBreakInside;
/** @type {string} */ CSSProperties.prototype.webkitRegionOverflow;
/** @type {string} */ CSSProperties.prototype.webkitRtlOrdering;
/** @type {string} */ CSSProperties.prototype.webkitRubyPosition;
/** @type {string} */ CSSProperties.prototype.webkitShapeInside;
/** @type {string} */ CSSProperties.prototype.webkitShapeMargin;
/** @type {string} */ CSSProperties.prototype.webkitShapeOutside;
/** @type {string} */ CSSProperties.prototype.webkitShapePadding;
/** @type {string} */ CSSProperties.prototype.webkitTapHighlightColor;
/** @type {string} */ CSSProperties.prototype.webkitTextAlignLast;
/** @type {string} */ CSSProperties.prototype.webkitTextCombine;
/** @type {string} */ CSSProperties.prototype.webkitTextDecorationLine;
/** @type {string} */ CSSProperties.prototype.webkitTextDecorationsInEffect;
/** @type {string} */ CSSProperties.prototype.webkitTextDecorationStyle;
/** @type {string} */ CSSProperties.prototype.webkitTextEmphasis;
/** @type {string} */ CSSProperties.prototype.webkitTextEmphasisColor;
/** @type {string} */ CSSProperties.prototype.webkitTextEmphasisPosition;
/** @type {string} */ CSSProperties.prototype.webkitTextEmphasisStyle;
/** @type {string} */ CSSProperties.prototype.webkitTextFillColor;
/** @type {string} */ CSSProperties.prototype.webkitTextOrientation;
/** @type {string} */ CSSProperties.prototype.webkitTextSecurity;
/** @type {string} */ CSSProperties.prototype.webkitTextSizeAdjust;
/** @type {string} */ CSSProperties.prototype.webkitTextStroke;
/** @type {string} */ CSSProperties.prototype.webkitTextStrokeColor;
/** @type {string} */ CSSProperties.prototype.webkitTextStrokeWidth;
/** @type {string} */ CSSProperties.prototype.webkitTransform;
/** @type {string} */ CSSProperties.prototype.webkitTransformOrigin;
/** @type {string} */ CSSProperties.prototype.webkitTransformOriginX;
/** @type {string} */ CSSProperties.prototype.webkitTransformOriginY;
/** @type {string} */ CSSProperties.prototype.webkitTransformOriginZ;
/** @type {string} */ CSSProperties.prototype.webkitTransformStyle;
/** @type {string} */ CSSProperties.prototype.webkitTransition;
/** @type {string} */ CSSProperties.prototype.webkitTransitionDelay;
/** @type {string} */ CSSProperties.prototype.webkitTransitionDuration;
/** @type {string} */ CSSProperties.prototype.webkitTransitionProperty;
/** @type {string} */ CSSProperties.prototype.webkitTransitionRepeatCount;
/** @type {string} */ CSSProperties.prototype.webkitTransitionTimingFunction;
/** @type {string} */ CSSProperties.prototype.webkitUserDrag;
/** @type {string} */ CSSProperties.prototype.webkitUserModify;
/** @type {string} */ CSSProperties.prototype.webkitUserSelect;
/** @type {string} */ CSSProperties.prototype.webkitWrap;
/** @type {string} */ CSSProperties.prototype.webkitWrapFlow;
/** @type {string} */ CSSProperties.prototype.webkitWrapThrough;
/** @type {string} */ CSSProperties.prototype.webkitWritingMode;

/**
 * @constructor
 * @param {number} x
 * @param {number} y
 */
function WebKitPoint(x, y) {}

/** @type {number} */
WebKitPoint.prototype.x;

/** @type {number} */
WebKitPoint.prototype.y;
/*
 * Copyright 2008 The Closure Compiler Authors
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/**
 * @fileoverview Definitions for all the extensions over W3C's DOM
 *  specification by WebKit. This file depends on w3c_dom2.js.
 *  All the provided definitions has been type annotated
 *
 * @externs
 */

/**
 * @param {boolean=} opt_center
 * @see https://bugzilla.mozilla.org/show_bug.cgi?id=403510
 * @return {undefined}
 */
Element.prototype.scrollIntoViewIfNeeded = function(opt_center) {};

/**
 * @constructor
 * @see http://trac.webkit.org/browser/trunk/Source/WebCore/inspector/ScriptProfileNode.idl
 */
function ScriptProfileNode() {};

/** @type {string} */
ScriptProfileNode.prototype.functionName;

/** @type {string} */
ScriptProfileNode.prototype.url;

/** @type {number} */
ScriptProfileNode.prototype.lineNumber;

/** @type {number} */
ScriptProfileNode.prototype.totalTime;

/** @type {number} */
ScriptProfileNode.prototype.selfTime;

/** @type {number} */
ScriptProfileNode.prototype.numberOfCalls;

/** @type {Array<ScriptProfileNode>} */
ScriptProfileNode.prototype.children;

/** @type {boolean} */
ScriptProfileNode.prototype.visible;

/** @type {number} */
ScriptProfileNode.prototype.callUID;

/**
 * @constructor
 * @see http://trac.webkit.org/browser/trunk/Source/WebCore/inspector/ScriptProfile.idl
 */
function ScriptProfile() {};

/** @type {string} */
ScriptProfile.prototype.title;

/** @type {number} */
ScriptProfile.prototype.uid;

/** @type {ScriptProfileNode} */
ScriptProfile.prototype.head;

/**
 * @type {number}
 * @see http://developer.android.com/reference/android/webkit/WebView.html
 */
Window.prototype.devicePixelRatio;

/**
 * @param {string} contextId
 * @param {string} name
 * @param {number} width
 * @param {number} height
 * @nosideeffects
 * @return {undefined}
 */
Document.prototype.getCSSCanvasContext =
    function(contextId, name, width, height) {};

/**
 * @param {number} x
 * @param {number} y
 * @return {?Range}
 * @nosideeffects
 * @see https://developer.mozilla.org/en-US/docs/Web/API/Document/caretRangeFromPoint
 */
Document.prototype.caretRangeFromPoint = function(x, y) {};

/**
 * @return {!Promise<boolean>}
 * @nosideeffects
 * @see https://webkit.org/blog/8124/introducing-storage-access-api
 */
Document.prototype.hasStorageAccess = function() {};

/**
 * @return {!Promise<void>}
 * @see https://webkit.org/blog/8124/introducing-storage-access-api
 * @see https://developer.mozilla.org/docs/Web/API/Document/requestStorageAccess#Syntax
 */
Document.prototype.requestStorageAccess = function() {};
/*
 * Copyright 2009 The Closure Compiler Authors
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/**
 * @fileoverview Definitions for all the extensions over W3C's
 *  event specification by WebKit. This file depends on w3c_event.js.
 *  All the provided definitions have been type annotated
 *
 * @externs
 */

/** @type {number} */
Event.prototype.wheelDeltaX;

/** @type {number} */
Event.prototype.wheelDeltaY;

/**
 * @constructor
 * @extends {Event}
 * @see http://developer.apple.com/library/safari/documentation/AudioVideo/Reference/WebKitAnimationEventClassReference/WebKitAnimationEvent/WebKitAnimationEvent.html
 */
function WebKitAnimationEvent() {}

/**
 * @const {string}
 */
WebKitAnimationEvent.prototype.animationName;

/**
 * @const {number}
 */
WebKitAnimationEvent.prototype.elapsedTime;
/*
 * Copyright 2010 The Closure Compiler Authors
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/**
 * @fileoverview Definitions for W3C's Notifications specification.
 * @externs
 */

/**
 * @typedef {{
 *     dir: (string|undefined),
 *     lang: (string|undefined),
 *     body: (string|undefined),
 *     tag: (string|undefined),
 *     image: (string|undefined),
 *     icon: (string|undefined),
 *     badge: (string|undefined),
 *     vibrate: (!Array<number>|undefined),
 *     timestamp: (number|undefined),
 *     renotify: (boolean|undefined),
 *     silent: (boolean|undefined),
 *     requireInteraction: (boolean|undefined),
 *     data: (*|undefined),
 *     actions: (!Array<!NotificationAction>|undefined),
 * }}
 * TODO(user): change the type of data to a serializable object
 * (https://html.spec.whatwg.org/multipage/structured-data.html).
 *
 * @see http://notifications.spec.whatwg.org/#notification
 */
var NotificationOptions;

/**
 * @typedef {{action: string, title: string, icon: (string|undefined)}}
 * @see https://notifications.spec.whatwg.org/#dictdef-notificationoptions
 */
var NotificationAction;

/**
 * @typedef {{tag: (string|undefined)}}
 * @see https://notifications.spec.whatwg.org/#dictdef-getnotificationoptions
 */
var GetNotificationOptions;

/** @interface */
var NotificationOptionsInterface_ = function() {}
/** @type {string} */ NotificationOptionsInterface_.prototype.dir;
/** @type {string} */ NotificationOptionsInterface_.prototype.lang;
/** @type {string} */ NotificationOptionsInterface_.prototype.body;
/** @type {string} */ NotificationOptionsInterface_.prototype.tag;
/** @type {string} */ NotificationOptionsInterface_.prototype.icon;
/** @type {boolean} */
  NotificationOptionsInterface_.prototype.requireInteraction;

/**
 * @param {string} title
 * @param {NotificationOptions=} opt_options
 * @constructor
 * @implements {EventTarget}
 * @see http://notifications.spec.whatwg.org/#notification
 */
function Notification(title, opt_options) {}

/**
 * @type {string}
 */
Notification.permission;

/**
 * @param {NotificationPermissionCallback=} opt_callback
 * @return {!Promise<string>}
 */
Notification.requestPermission = function(opt_callback) {};

/** @override */
Notification.prototype.addEventListener = function(
    type, listener, opt_options) {};

/** @override */
Notification.prototype.removeEventListener = function(
    type, listener, opt_options) {};

/** @override */
Notification.prototype.dispatchEvent = function(evt) {};

/**
 * @type {string}
 */
Notification.prototype.title;

/**
 * @type {string}
 */
Notification.prototype.body;

/**
 * @type {string}
 */
Notification.prototype.icon;

/**
 * The string used by clients to identify the notification.
 * @type {string}
 */
Notification.prototype.tag;

/**
 * The ID used by clients to uniquely identify notifications to eliminate
 * duplicate notifications.
 * @type {string}
 * @deprecated Use NotificationOptions.tag instead.
 */
Notification.prototype.replaceId;

/**
 * @type {*}
 */
Notification.prototype.data;

/**
 * The string used by clients to specify the directionality (rtl/ltr) of the
 * notification.
 * @type {string}
 * @deprecated Use NotificationOptions.titleDir and bodyDir instead.
 */
Notification.prototype.dir;

/**
 * Displays the notification.
 * @return {undefined}
 */
Notification.prototype.show = function() {};

/**
 * Prevents the notification from being displayed, or closes it if it is already
 * displayed.
 * @return {undefined}
 */
Notification.prototype.cancel = function() {};

/**
 * Prevents the notification from being displayed, or closes it if it is already
 * displayed.
 * @return {undefined}
 */
Notification.prototype.close = function() {};

/**
 * An event handler called when notification is closed.
 * @type {?function(Event)}
 */
Notification.prototype.onclose;

/**
 * An event handler called if the notification could not be displayed due to
 * an error (i.e. resource could not be loaded).
 * @type {?function(Event)}
 */
Notification.prototype.onerror;

/**
 * An event handler called when the notification has become visible.
 * @type {?function(Event)}
 * @deprecated Use onshow instead.
 */
Notification.prototype.ondisplay;

/**
 * An event handler called when the notification has become visible.
 * @type {?function(Event)}
 */
Notification.prototype.onshow;

/**
 * An event handler called when the notification has been clicked on.
 * @type {?function(Event)}
 */
Notification.prototype.onclick;



/**
 * @typedef {function(string)}
 * @see http://notifications.spec.whatwg.org/#notificationpermissioncallback
 */
var NotificationPermissionCallback;

/**
 * @constructor
 * @see http://dev.w3.org/2006/webapi/WebNotifications/publish/#dialog-if
 * @deprecated Use Notification instead.
 */
function NotificationCenter() {}

/**
 * Creates a text+icon notification and displays it to the user.
 * @param {string} iconUrl
 * @param {string} title
 * @param {string} body
 * @return {Notification}
 */
NotificationCenter.prototype.createNotification =
    function(iconUrl, title, body) {};

/**
 * Creates an HTML notification and displays it to the user.
 * @param {string} url
 * @return {Notification}
 */
NotificationCenter.prototype.createHTMLNotification = function(url) {};

/**
 * Checks if the user has permission to display notifications.
 * @return {number}
 */
NotificationCenter.prototype.checkPermission = function() {};

/**
 * Requests permission from the user to display notifications.
 * @param {Function=} opt_callback
 * @return {void}
 */
NotificationCenter.prototype.requestPermission = function(opt_callback) {};

/**
 * WebKit browsers expose the NotificationCenter API through
 * window.webkitNotifications.
 * @type {NotificationCenter}
 */
Window.prototype.webkitNotifications;


/**
 * @see https://notifications.spec.whatwg.org/#notificationevent
 * @constructor
 * @param {string} type
 * @param {!ExtendableEventInit=} opt_eventInitDict
 * @extends {ExtendableEvent}
 */
function NotificationEvent(type, opt_eventInitDict) {}

/** @type {!Notification} */
NotificationEvent.prototype.notification;

/** @type {string} */
NotificationEvent.prototype.action;
/*
 * Copyright 2016 The Closure Compiler Authors
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/**
 * @fileoverview Definitions for WKWebView's User Content interface.
 *   https://developer.apple.com/library/prerelease/ios/documentation/WebKit/Reference/WKUserContentController_Ref/
 *   https://trac.webkit.org/browser/trunk/Source/WebCore/page/WebKitNamespace.h
 *
 * @externs
 */

/** @constructor */
function WebKitNamespace() {}


/**
 * @type {!UserMessageHandlersNamespace}
 */
WebKitNamespace.prototype.messageHandlers;


/**
 * @constructor
 * @implements {IObject<string, UserMessageHandler>}
 */
function UserMessageHandlersNamespace() {}


/** @constructor */
function UserMessageHandler() {}


/**
 * @param {*} message
 * @return {undefined}
 */
UserMessageHandler.prototype.postMessage = function(message) {};


/**
 * @const {!WebKitNamespace}
 */
var webkit;
/*
 * Copyright 2009 The Closure Compiler Authors
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/**
 * @fileoverview Definitions for W3C's WebStorage specification.
 * This file depends on w3c_dom1.js and w3c_event.js.
 * @externs
 */

/**
 * @interface
 * @see https://www.w3.org/TR/webstorage/#the-storage-interface
 */
function Storage() {}

/**
 * @const {number}
 */
Storage.prototype.length;

/**
 * @param {number} index
 * @return {?string}
 */
Storage.prototype.key = function(index) {};

/**
 * @param {string} key
 * @return {?string}
 */
Storage.prototype.getItem = function(key) {};

/**
 * @param {string} key
 * @param {string} data
 * @return {void}
 */
Storage.prototype.setItem = function(key, data) {};

/**
 * @param {string} key
 * @return {void}
 */
Storage.prototype.removeItem = function(key) {};

/**
 * @return {void}
 */
Storage.prototype.clear = function() {};

/**
 * @interface
 * @see https://www.w3.org/TR/webstorage/#the-sessionstorage-attribute
 */
function WindowSessionStorage() {}

/**
 * @type {!Storage}
 */
WindowSessionStorage.prototype.sessionStorage;

/**
 * Window implements WindowSessionStorage
 *
 * @type {!Storage}
 */
Window.prototype.sessionStorage;

/**
 * @interface
 * @see https://www.w3.org/TR/webstorage/#the-localstorage-attribute
 */
function WindowLocalStorage() {}

/**
 * @type {!Storage}
 */
WindowLocalStorage.prototype.localStorage;

/**
 * Window implements WindowLocalStorage
 *
 * @type {!Storage}
 */
Window.prototype.localStorage;

/**
 * @record
 * @extends {EventInit}
 * @see https://www.w3.org/TR/webstorage/#the-storageevent-interface
 */
function StorageEventInit() {}

/** @type {undefined|string} */
StorageEventInit.prototype.key;

/** @type {undefined|string} */
StorageEventInit.prototype.oldValue;

/** @type {undefined|string} */
StorageEventInit.prototype.newValue;

/** @type {string} */
StorageEventInit.prototype.url;

/** @type {undefined|!Storage} */
StorageEventInit.prototype.storageArea;

/**
 * This is the storage event interface.
 * @see https://www.w3.org/TR/webstorage/#the-storage-event
 * @extends {Event}
 * @param {string} type
 * @param {!StorageEventInit=} eventInitDict
 * @constructor
 */
function StorageEvent(type, eventInitDict) {}

/**
 * @type {string}
 */
StorageEvent.prototype.key;

/**
 * @type {?string}
 */
StorageEvent.prototype.oldValue;

/**
 * @type {?string}
 */
StorageEvent.prototype.newValue;

/**
 * @type {string}
 */
StorageEvent.prototype.url;

/**
 * @type {?Storage}
 */
StorageEvent.prototype.storageArea;

/**
 * @param {string} typeArg
 * @param {boolean} canBubbleArg
 * @param {boolean} cancelableArg
 * @param {string} keyArg
 * @param {?string} oldValueArg
 * @param {?string} newValueArg
 * @param {string} urlArg
 * @param {?Storage} storageAreaArg
 * @return {void}
 */
StorageEvent.prototype.initStorageEvent = function(typeArg, canBubbleArg,
                                                   cancelableArg, keyArg,
                                                   oldValueArg, newValueArg,
                                                   urlArg, storageAreaArg) {};

/*
 * Copyright 2021 The Closure Compiler Authors
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/**
 * @fileoverview Definitions for ImageBitmapRenderingContext.
 *     https://html.spec.whatwg.org/multipage/canvas.html#the-imagebitmaprenderingcontext-interface
 * @externs
 */

/**
 * @constructor
 * @see https://html.spec.whatwg.org/multipage/canvas.html#the-imagebitmaprenderingcontext-interface
 */
function ImageBitmapRenderingContext() {}

/**
 * @param {?ImageBitmap} bitmap
 * @return {undefined}
 */
ImageBitmapRenderingContext.prototype.transferFromImageBitmap = function(
    bitmap) {};

/** @const {!HTMLCanvasElement|!OffscreenCanvas} */
ImageBitmapRenderingContext.prototype.canvas;
/*
 * Copyright 2019 The Closure Compiler Authors
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/**
 * @fileoverview Definitions for console debugging facilities.
 *     https://console.spec.whatwg.org/
 * @externs
 */

/**
 * @constructor
 * @see https://console.spec.whatwg.org/
 */
function Console() {};

/**
 * If condition is false, perform Logger("error", data).
 * @param {*} condition
 * @param {...*} var_data
 * @return {undefined}
 */
Console.prototype.assert = function(condition, var_data) {};

/**
 * @return {undefined}
 */
Console.prototype.clear = function() {};

/**
 * @param {...*} var_data
 * @return {undefined}
 */
Console.prototype.debug = function(var_data) {};

/**
 * @param {...*} var_data
 * @return {undefined}
 */
Console.prototype.error = function(var_data) {};

/**
 * @param {...*} var_data
 * @return {undefined}
 */
Console.prototype.info = function(var_data) {};

/**
 * @param {...*} var_data
 * @return {undefined}
 */
Console.prototype.log = function(var_data) {};

/**
 * @param {!Object} tabularData
 * @param {*=} properties
 * @return {undefined}
 */
Console.prototype.table = function(tabularData, properties) {};

/**
 * @param {...*} var_data
 * @return {undefined}
 */
Console.prototype.trace = function(var_data) {};

/**
 * @param {...*} var_data
 * @return {undefined}
 */
Console.prototype.warn = function(var_data) {};

/**
 * @param {*} item
 * @return {undefined}
 */
Console.prototype.dir = function(item) {};

/**
 * @param {...*} var_data
 * @return {undefined}
 */
Console.prototype.dirxml = function(var_data) {};

/**
 * @param {string=} label
 * @return {undefined}
 */
Console.prototype.count = function(label) {};

/**
 * @param {string=} label
 * @return {undefined}
 */
Console.prototype.countReset = function(label) {};

/**
 * @param {...*} var_data
 * @return {undefined}
 */
Console.prototype.group = function(var_data) {};

/**
 * @param {...*} var_data
 * @return {undefined}
 */
Console.prototype.groupCollapsed = function(var_data) {};

/**
 * @return {undefined}
 */
Console.prototype.groupEnd = function() {};

/**
 * @param {string} label
 * @return {undefined}
 */
Console.prototype.time = function(label) {};

/**
 * @param {string} label
 * @param {...*} data
 * @return {undefined}
 */
Console.prototype.timeLog = function(label, data) {};

/**
 * @param {string} label
 * @return {undefined}
 */
Console.prototype.timeEnd = function(label) {};

/** @type {!Console} */
Window.prototype.console;

/**
 * @type {!Console}
 * @suppress {duplicate}
 */
var console;
/*
 * Copyright 2015 The Closure Compiler Authors
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/**
 * @fileoverview Definitions for WHATWG's Encoding specification
 *     https://encoding.spec.whatwg.org
 * @externs
 */

/**
 * @constructor
 * @param {string=} encoding
 * @param {Object=} options
 */
function TextDecoder(encoding, options) {}

/** @type {string} **/ TextDecoder.prototype.encoding;
/** @type {boolean} **/ TextDecoder.prototype.fatal;
/** @type {boolean} **/ TextDecoder.prototype.ignoreBOM;

/**
 * @param {!BufferSource=} input
 * @param {?Object=} options
 * @return {string}
 * @see https://encoding.spec.whatwg.org/#textdecoder
 */
TextDecoder.prototype.decode = function decode(input, options) {};

/**
 * @constructor
 * @param {string=} utfLabel
 */
function TextEncoder(utfLabel) {}

/** @type {string} **/ TextEncoder.prototype.encoding;

/**
 * @param {string=} input
 * @return {!Uint8Array}
 */
TextEncoder.prototype.encode = function(input) {};

/**
 * @param {string} input
 * @param {!Uint8Array} uint8Array
 * @return {{read: number, written: number}}
 */
TextEncoder.prototype.encodeInto = function(input, uint8Array) {};
/*
 * Copyright 2021 The Closure Compiler Authors
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/**
 * @fileoverview APIs used to compress and decompress streams of data.
 * @see https://wicg.github.io/compression
 * @see https://github.com/WICG/compression/blob/master/explainer.md
 * @externs
 */

/**
 * @constructor
 * @see https://wicg.github.io/compression/#compressionstream
 * @param {string} format
 * @see https://wicg.github.io/compression/#supported-formats
 * @template IN_VALUE, OUT_VALUE
 */
function CompressionStream(format) {}

/**
 * @type {!ReadableStream<IN_VALUE>}
 */
CompressionStream.prototype.readable;

/**
 * @type {!WritableStream<OUT_VALUE>}
 */
CompressionStream.prototype.writable;

/**
 * @constructor
 * @see https://wicg.github.io/compression/#decompression-stream
 * @param {string} format
 * @see https://wicg.github.io/compression/#supported-formats
 * @template IN_VALUE, OUT_VALUE
 */
function DecompressionStream(format) {}

/**
 * @type {!ReadableStream<IN_VALUE>}
 */
DecompressionStream.prototype.readable;

/**
 * @type {!WritableStream<OUT_VALUE>}
 */
DecompressionStream.prototype.writable;/*
 * Copyright 2021 The Closure Compiler Authors
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/**
 * @fileoverview The current draft spec of constructable stylesheets.
 * @see https://wicg.github.io/construct-stylesheets/
 * @see https://developer.mozilla.org/en-US/docs/Web/API/CSSStyleSheet/CSSStyleSheet
 * @externs
 */

// https://wicg.github.io/construct-stylesheets/#dictdef-cssstylesheetinit
/** @type {(undefined|MediaList|string)} */
CSSStyleSheetInit.prototype.media;

/** @type {(undefined|string)} */
CSSStyleSheetInit.prototype.title;

/** @type {(undefined|boolean)} */
CSSStyleSheetInit.prototype.alternate;

/** @type {(undefined|boolean)} */
CSSStyleSheetInit.prototype.disabled;

/**
 * @param {string} text
 * @return {!Promise<!CSSStyleSheet>}
 * @see https://wicg.github.io/construct-stylesheets/#dom-cssstylesheet-replace
 */
CSSStyleSheet.prototype.replace = function(text) {};

/**
 * @param {string} text
 * @return {void}
 * @see https://wicg.github.io/construct-stylesheets/#dom-cssstylesheet-replacesync
 */
CSSStyleSheet.prototype.replaceSync = function(text) {};

/**
 * @type {!Array<!CSSStyleSheet>}
 * @see https://wicg.github.io/construct-stylesheets/#dom-documentorshadowroot-adoptedstylesheets
 */
Document.prototype.adoptedStyleSheets;

/**
 * @type {!Array<!CSSStyleSheet>}
 * @see https://wicg.github.io/construct-stylesheets/#dom-documentorshadowroot-adoptedstylesheets
 */
ShadowRoot.prototype.adoptedStyleSheets;
/*
 * Copyright 2021 The Closure Compiler Authors
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/**
 * @fileoverview APIs used for file/directory upload by drag-and-drop
 * @see https://wicg.github.io/entries-api
 * @see https://github.com/WICG/entries-api/blob/main/EXPLAINER.md
 * @externs
 */

/**
 * @see https://wicg.github.io/entries-api/#filesystementry
 * @constructor
 */
function FileSystemEntry() {}

/**
 * @see https://wicg.github.io/entries-api/#dom-filesystementry-isfile
 * @type {boolean}
 */
FileSystemEntry.prototype.isFile;

/**
 * @see https://wicg.github.io/entries-api/#dom-filesystementry-isdirectory
 * @type {boolean}
 */
FileSystemEntry.prototype.isDirectory;

/**
 * @see https://wicg.github.io/entries-api/#dom-filesystementry-name
 * @type {string}
 */
FileSystemEntry.prototype.name;

/**
 * @see https://wicg.github.io/entries-api/#dom-filesystementry-fullpath
 * @type {string}
 */
FileSystemEntry.prototype.fullPath;

/**
 * @see https://wicg.github.io/entries-api/#dom-filesystementry-filesystem
 * @type {!FileSystem}
 */
FileSystemEntry.prototype.filesystem;

/**
 * @see https://wicg.github.io/entries-api/#dom-filesystementry-getparent
 * @param {function(!FileSystemEntry)=} successCallback
 * @param {function(!DOMException)=} errorCallback
 * @return {undefined}
 */
FileSystemEntry.prototype.getParent = function(
    successCallback, errorCallback) {};

/**
 * @see https://wicg.github.io/entries-api/#filesystemdirectoryentry
 * @constructor
 * @extends {FileSystemEntry}
 */
function FileSystemDirectoryEntry() {}

/**
 * @see https://wicg.github.io/entries-api/#dom-filesystemdirectoryentry-createreader
 * @return {!FileSystemDirectoryReader}
 */
FileSystemDirectoryEntry.prototype.createReader = function() {};

/**
 * @see https://wicg.github.io/entries-api/#dom-filesystemdirectoryentry-getfile
 * @param {string|null=} path
 * @param {!FileSystemFlags=} options
 * @param {function(!FileSystemFileEntry)=} successCallback
 * @param {function(!DOMException)=} errorCallback
 * @return {undefined}
 */
FileSystemDirectoryEntry.prototype.getFile = function(
    path, options, successCallback, errorCallback) {};

/**
 * @see https://wicg.github.io/entries-api/#dom-filesystemdirectoryentry-getdirectory
 * @param {string|null=} path
 * @param {!FileSystemFlags=} options
 * @param {function(!FileSystemDirectoryEntry)=} successCallback
 * @param {function(!DOMException)=} errorCallback
 * @return {undefined}
 */
FileSystemDirectoryEntry.prototype.getDirectory = function(
    path, options, successCallback, errorCallback) {};

/**
 * @see https://wicg.github.io/entries-api/#dictdef-filesystemflags
 * @record
 */
function FileSystemFlags() {}

/**
 * @see https://wicg.github.io/entries-api/#dom-filesystemflags-create
 * @type {(undefined|boolean)}
 */
FileSystemFlags.prototype.create;

/**
 * @see https://wicg.github.io/entries-api/#dom-filesystemflags-exclusive
 * @type {(undefined|boolean)}
 */
FileSystemFlags.prototype.exclusive;

/**
 * @see https://wicg.github.io/entries-api/#filesystemdirectoryreader
 * @constructor
 */
function FileSystemDirectoryReader() {}

/**
 * @see https://wicg.github.io/entries-api/#dom-filesystemdirectoryentry-readentries
 * @param {function(!Array<FileSystemEntry>)} successCallback
 * @param {function(!DOMException)=} errorCallback
 * @return {undefined}
 */
FileSystemDirectoryReader.prototype.readEntries = function(
    successCallback, errorCallback) {};

/**
 * @see https://wicg.github.io/entries-api/#filesystemfileentry
 * @constructor
 * @extends {FileSystemEntry}
 */
function FileSystemFileEntry() {}

/**
 * @see https://wicg.github.io/entries-api/#dom-filesystemfileentry-file
 * @param {function(!File)} successCallback
 * @param {function(!DOMException)=} errorCallback
 * @return {undefined}
 */
FileSystemFileEntry.prototype.file = function(
    successCallback, errorCallback) {};

/**
 * @see https://wicg.github.io/entries-api/#filesystem
 * @constructor
 */
function FileSystem() {}

/**
 * @see https://wicg.github.io/entries-api/#dom-filesystem-name
 * @type {string}
 */
FileSystem.prototype.name;

/**
 * @see https://wicg.github.io/entries-api/#dom-filesystem-root
 * @type {!FileSystemDirectoryEntry}
 */
FileSystem.prototype.root;
/*
 * Copyright 2021 The Closure Compiler Authors
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/**
 * @fileoverview @externs
 * Externs for interfaces in //third_party/blink/renderer/modules/launch/*
 *
 * FileHandling Explainer:
 * https://github.com/WICG/file-handling/blob/main/explainer.md
 */

/** @interface */
var LaunchParams = function() {};

/** @type {!Array<!FileSystemHandle>} */
LaunchParams.prototype.files;

/** @typedef {function(!LaunchParams)} */
var LaunchConsumer;

/** @interface */
var LaunchQueue = function() {};

/** @param {!LaunchConsumer} consumer */
LaunchQueue.prototype.setConsumer = function(consumer) {};

/** @type {!LaunchQueue} */
window.launchQueue;
/*
 * Copyright 2020 The Closure Compiler Authors
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/**
 * File System Access
 * Draft Community Group Report, 18 November 2020
 * @externs
 * @see https://wicg.github.io/file-system-access/
 */



/**
 * @record
 * @struct
 * @see https://wicg.github.io/file-system-access/#dictdef-filesystemhandlepermissiondescriptor
 */
var FileSystemHandlePermissionDescriptor = function() {};

/** @type {undefined|string} */
FileSystemHandlePermissionDescriptor.prototype.mode;


/**
 * @typedef {string}
 * @see https://wicg.github.io/file-system-access/#enumdef-filesystemhandlekind
 */
var FileSystemHandleKind;


/**
 * @interface
 * @see https://wicg.github.io/file-system-access/#api-filesystemhandle
 */
var FileSystemHandle = function() {};

/** @const {!FileSystemHandleKind} */
FileSystemHandle.prototype.kind;

/** @const {string} */
FileSystemHandle.prototype.name;

/**
 * @param {!FileSystemHandle} other
 * @return {!Promise<boolean>}
 */
FileSystemHandle.prototype.isSameEntry = function(other) {};

/**
 * @param {!FileSystemHandlePermissionDescriptor=} opt_descriptor
 * @return {!Promise<!PermissionState>}
 */
FileSystemHandle.prototype.queryPermission = function(opt_descriptor) {};

/**
 * @param {!FileSystemHandlePermissionDescriptor=} opt_descriptor
 * @return {!Promise<!PermissionState>}
 */
FileSystemHandle.prototype.requestPermission = function(opt_descriptor) {};


/**
 * @record
 * @struct
 * @see https://wicg.github.io/file-system-access/#dictdef-filesystemcreatewritableoptions
 */
var FileSystemCreateWritableOptions = function() {};

/** @type {undefined|boolean} */
FileSystemCreateWritableOptions.prototype.keepExistingData;


/**
 * @interface
 * @extends {FileSystemHandle}
 * @see https://wicg.github.io/file-system-access/#api-filesystemfilehandle
 */
var FileSystemFileHandle = function() {};

/**
 * @return {!Promise<!File>}
 */
FileSystemFileHandle.prototype.getFile = function() {};

/**
 * @param {!FileSystemCreateWritableOptions=} opt_options
 * @return {!Promise<!FileSystemWritableFileStream>}
 */
FileSystemFileHandle.prototype.createWritable = function(opt_options) {};


/**
 * @record
 * @struct
 * @see https://wicg.github.io/file-system-access/#dictdef-filesystemgetfileoptions
 */
var FileSystemGetFileOptions = function() {};

/** @type {undefined|boolean} */
FileSystemGetFileOptions.prototype.create;


/**
 * @record
 * @struct
 * @see https://wicg.github.io/file-system-access/#dictdef-filesystemgetdirectoryoptions
 */
var FileSystemGetDirectoryOptions = function() {};

/** @type {undefined|boolean} */
FileSystemGetDirectoryOptions.prototype.create;


/**
 * @record
 * @struct
 * @see https://wicg.github.io/file-system-access/#dictdef-filesystemremoveoptions
 */
var FileSystemRemoveOptions = function() {};

/** @type {undefined|boolean} */
FileSystemRemoveOptions.prototype.recursive;


/**
 * @interface
 * @extends {FileSystemHandle}
 * @extends {AsyncIterable<!Array<string|!FileSystemHandle>>}
 * @see https://wicg.github.io/file-system-access/#api-filesystemdirectoryhandle
 * @see https://wicg.github.io/file-system-access/#api-filesystemdirectoryhandle-asynciterable
 */
var FileSystemDirectoryHandle = function() {};

/**
 * @param {string} name
 * @param {!FileSystemGetFileOptions=} opt_options
 * @return {!Promise<!FileSystemFileHandle>}
 */
FileSystemDirectoryHandle.prototype.getFileHandle = function(name, opt_options) {};

/**
 * @param {string} name
 * @param {!FileSystemGetDirectoryOptions=} opt_options
 * @return {!Promise<!FileSystemDirectoryHandle>}
 */
FileSystemDirectoryHandle.prototype.getDirectoryHandle = function(name, opt_options) {};

/**
 * @param {string} name
 * @param {!FileSystemRemoveOptions=} opt_options
 * @return {!Promise<void>}
 */
FileSystemDirectoryHandle.prototype.removeEntry = function(name, opt_options) {};

/**
 * @param {!FileSystemHandle} possibleDescendant
 * @return {!Promise<?Array<string>>}
 */
FileSystemDirectoryHandle.prototype.resolve = function(possibleDescendant) {};

/**
 * @return {!AsyncIterable<!Array<string|!FileSystemHandle>>}
 * @see https://wicg.github.io/file-system-access/#api-filesystemdirectoryhandle-asynciterable
 */
FileSystemDirectoryHandle.prototype.entries = function() {};

/**
 * @return {!AsyncIterable<!FileSystemHandle>}
 * @see https://wicg.github.io/file-system-access/#api-filesystemdirectoryhandle-asynciterable
 */
FileSystemDirectoryHandle.prototype.values = function() {};

/**
 * @return {!AsyncIterable<string>}
 * @see https://wicg.github.io/file-system-access/#api-filesystemdirectoryhandle-asynciterable
 */
FileSystemDirectoryHandle.prototype.keys = function() {};


/**
 * @typedef {string}
 * @see https://wicg.github.io/file-system-access/#enumdef-writecommandtype
 */
var WriteCommandType;


/**
 * @record
 * @struct
 * @see https://wicg.github.io/file-system-access/#dictdef-writeparams
 */
var WriteParams = function() {};

/** @type {!WriteCommandType} */
WriteParams.prototype.type;

/** @type {undefined|?number} */
WriteParams.prototype.size;

/** @type {undefined|?number} */
WriteParams.prototype.position;

/** @type {undefined|!BufferSource|!Blob|?string} */
WriteParams.prototype.data;


/**
 * @typedef {!BufferSource|!Blob|string|!WriteParams}
 * @see https://wicg.github.io/file-system-access/#typedefdef-filesystemwritechunktype
 */
var FileSystemWriteChunkType;


/**
 * @constructor
 * @extends {WritableStream}
 * @see https://wicg.github.io/file-system-access/#filesystemwritablefilestream
 */
var FileSystemWritableFileStream = function() {};

/**
 * @param {!FileSystemWriteChunkType} data
 * @return {!Promise<void>}
 */
FileSystemWritableFileStream.prototype.write = function(data) {};

/**
 * @param {number} position
 * @return {!Promise<void>}
 */
FileSystemWritableFileStream.prototype.seek = function(position) {};

/**
 * @param {number} size
 * @return {!Promise<void>}
 */
FileSystemWritableFileStream.prototype.truncate = function(size) {};


/**
 * @record
 * @struct
 * @see https://wicg.github.io/file-system-access/#dictdef-filepickeraccepttype
 */
var FilePickerAcceptType = function() {};

/** @type {undefined|string} */
FilePickerAcceptType.prototype.description;

/** @type {undefined|!Object<string,(string|!Array<string>)>} */
FilePickerAcceptType.prototype.accept;


/**
 * @record
 * @struct
 * @see https://wicg.github.io/file-system-access/#dictdef-filepickeroptions
 */
var FilePickerOptions = function() {};

/** @type {undefined|!Array<!FilePickerAcceptType>} */
FilePickerOptions.prototype.types;

/** @type {undefined|boolean} */
FilePickerOptions.prototype.excludeAcceptAllOption;


/**
 * @record
 * @struct
 * @extends {FilePickerOptions}
 * @see https://wicg.github.io/file-system-access/#dictdef-openfilepickeroptions
 */
var OpenFilePickerOptions = function() {};

/** @type {undefined|boolean} */
OpenFilePickerOptions.prototype.multiple;


/**
 * @record
 * @struct
 * @extends {FilePickerOptions}
 * @see https://wicg.github.io/file-system-access/#dictdef-savefilepickeroptions
 */
var SaveFilePickerOptions = function() {};


/**
 * @record
 * @struct
 * @see https://wicg.github.io/file-system-access/#dictdef-directorypickeroptions
 */
var DirectoryPickerOptions = function() {};


/**
 * @param {!OpenFilePickerOptions=} opt_options
 * @return {!Promise<!Array<!FileSystemFileHandle>>}
 * @see https://wicg.github.io/file-system-access/#local-filesystem
 */
Window.prototype.showOpenFilePicker = function(opt_options) {};


/**
 * @param {!SaveFilePickerOptions=} opt_options
 * @return {!Promise<!FileSystemFileHandle>}
 * @see https://wicg.github.io/file-system-access/#local-filesystem
 */
Window.prototype.showSaveFilePicker = function(opt_options) {};


/**
 * @param {!DirectoryPickerOptions=} opt_options
 * @return {!Promise<!FileSystemDirectoryHandle>}
 * @see https://wicg.github.io/file-system-access/#local-filesystem
 */
Window.prototype.showDirectoryPicker = function(opt_options) {};
/*
 * Copyright 2008 The Closure Compiler Authors
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/**
 * @fileoverview The spec of FLoC interface.
 * @see https://github.com/WICG/floc
 * @externs
 */

/**
 * @see https://wicg.github.io/floc/#interest-cohort-section
 * @record
 * @struct
 */
function InterestCohort() {}

/** @type {string} */
InterestCohort.prototype.id;

/** @type {string} */
InterestCohort.prototype.version;


/**
 * @return {!Promise<!InterestCohort>}
 * @see https://wicg.github.io/floc/#the-api
 */
Document.prototype.interestCohort = function() {};
/*
 * Copyright 2020 The Closure Compiler Authors
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/**
 * @fileoverview The current draft spec of ResizeObserver.
 * @see https://wicg.github.io/ResizeObserver/
 * @see https://developer.mozilla.org/en-US/docs/Web/API/ResizeObserver
 * @externs
 */

/**
 * @typedef {function(!Array<!ResizeObserverEntry>, !ResizeObserver)}
 */
var ResizeObserverCallback;

/**
 * @typedef {{box: string}}
 */
var ResizeObserverOptions;

/**
 * @typedef {{blockSize: number, inlineSize: number}}
 */
var ResizeObserverSize;

/**
 * @constructor
 * @param {!ResizeObserverCallback} callback
 * @see https://developer.mozilla.org/en-US/docs/Web/API/ResizeObserver/ResizeObserver
 */
function ResizeObserver(callback) {}

/**
 * @param {!Element} target
 * @param {!ResizeObserverOptions=} opt_options
 * @return {void}
 * @see https://developer.mozilla.org/en-US/docs/Web/API/ResizeObserver/observe
 */
ResizeObserver.prototype.observe = function(target, opt_options) {};

/**
 * @param {!Element} target
 * @return {void}
 * @see https://developer.mozilla.org/en-US/docs/Web/API/ResizeObserver/unobserve
 */
ResizeObserver.prototype.unobserve = function(target) {};

/**
 * @return {void}
 * @see https://developer.mozilla.org/en-US/docs/Web/API/ResizeObserver/disconnect
 */
ResizeObserver.prototype.disconnect = function() {};

/**
 * @interface
 * @see https://developer.mozilla.org/en-US/docs/Web/API/ResizeObserverEntry
 */
function ResizeObserverEntry() {}

/**
 * @const {!Array<!ResizeObserverSize>}
 * @see https://developer.mozilla.org/en-US/docs/Web/API/ResizeObserverEntry/borderBoxSize
 */
ResizeObserverEntry.prototype.borderBoxSize;

/**
 * @const {!Array<!ResizeObserverSize>}
 * @see https://developer.mozilla.org/en-US/docs/Web/API/ResizeObserverEntry/contentBoxSize
 */
ResizeObserverEntry.prototype.contentBoxSize;

/**
 * @const {!DOMRectReadOnly}
 * @see https://developer.mozilla.org/en-US/docs/Web/API/ResizeObserverEntry/contentRect
 */
ResizeObserverEntry.prototype.contentRect;

/**
 * @const {!Element}
 * @see https://developer.mozilla.org/en-US/docs/Web/API/ResizeObserverEntry/target
 */
ResizeObserverEntry.prototype.target;
/*
 * Copyright 2008 The Closure Compiler Authors
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/**
 * @fileoverview The spec of Trust Token interface.
 * @see https://github.com/WICG/trust-token-api
 * @externs
 */

/**
 * Trust Tokens operation (issuance, signing, and redemption) is specified via
 * an instance of the following parameters struct, provided via Fetch, XHR, or
 * the iframe tag
 * TODO(b/161890603): Trust Token: Remove the 'issuer' fields after Chrome 86
 * hits stable.
 * @record
 * @see https://docs.google.com/document/d/1qUjtKgA7nMv9YGMhi0xWKEojkSITKzGLdIcZgoz6ZkI
 */

function TrustTokenAttributeType() {}

/**
 * Possible values: 'token-request', 'send-srr', 'srr-token-redemption'
 * @type {string}
 */
TrustTokenAttributeType.prototype.type;

/** @type {string|undefined} */
TrustTokenAttributeType.prototype.issuer;

/** @type {!Array<string>|undefined} */
TrustTokenAttributeType.prototype.issuers;

/**
 * Possible values: 'none', 'refresh'
 * @type {string|undefined}
 */
TrustTokenAttributeType.prototype.refreshPolicy;

/**
 * Possible values: 'omit', 'include', 'headers-only'
 * @type {string|undefined}
 */
TrustTokenAttributeType.prototype.signRequestData;

/** @type {boolean|undefined} */
TrustTokenAttributeType.prototype.includeTimestampHeader;

/** @type {!Array<string>|undefined} */
TrustTokenAttributeType.prototype.additionalSignedHeaders;

/** @type {string|undefined} */
TrustTokenAttributeType.prototype.additionalSigningData;

/**
 * @type {?function(!TrustTokenAttributeType): void}
 * @see https://docs.google.com/document/d/1qUjtKgA7nMv9YGMhi0xWKEojkSITKzGLdIcZgoz6ZkI.
 */
XMLHttpRequest.prototype.setTrustToken;

/**
 * @param {!string} issuer The trust token issuer, e.g.
 *     https://adservice.google.com
 * @return {!Promise<boolean>}
 * @see https://docs.google.com/document/d/1TNnya6B8pyomDK2F1R9CL3dY10OAmqWlnCxsWyOBDVQ/edit
 */
Document.prototype.hasTrustToken = function(issuer) {};

/** @type {undefined|!TrustTokenAttributeType} */
RequestInit.prototype.trustToken;

/**
 * @type {undefined|!TrustTokenAttributeType}
 * @see https://github.com/WICG/trust-token-api#extension-iframe-activation
 */
HTMLIFrameElement.prototype.trustToken;
/*
 * Copyright 2008 The Closure Compiler Authors
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/**
 * @fileoverview The current draft spec of User Agent Client Hint interface.
 * @see https://wicg.github.io/ua-client-hints/#interface
 * @externs
 */

/**
 * @see https://wicg.github.io/ua-client-hints/#dictdef-navigatoruabrandversion
 * @record
 * @struct
 */
function NavigatorUABrandVersion() {}

/** @type {string} */
NavigatorUABrandVersion.prototype.brand;

/** @type {string} */
NavigatorUABrandVersion.prototype.version;


/**
 * @see https://wicg.github.io/ua-client-hints/#dictdef-uadatavalues
 * @record
 * @struct
 */
function UADataValues() {}

/** @type {string} */
UADataValues.prototype.platform;

/** @type {string} */
UADataValues.prototype.platformVersion;

/** @type {string} */
UADataValues.prototype.architecture;

/** @type {string} */
UADataValues.prototype.model;

/** @type {string} */
UADataValues.prototype.uaFullVersion;

/** @type {string} */
UADataValues.prototype.bitness;

/**
 * @see https://wicg.github.io/ua-client-hints/#navigatoruadata
 * @record
 * @struct
 */
function NavigatorUAData() {}

/** @type {!Array<!NavigatorUABrandVersion>} */
NavigatorUAData.prototype.brands;

/** @type {boolean} */
NavigatorUAData.prototype.mobile;

/** @type {string} */
NavigatorUAData.prototype.platform;

/**
 * @param {!Array<string>} hints
 * @return {!Promise<!UADataValues>}
 */
NavigatorUAData.prototype.getHighEntropyValues = function(hints) {};

/**
 * @type {?NavigatorUAData}
 * @see https://wicg.github.io/ua-client-hints/#interface
 */
Navigator.prototype.userAgentData;

/**
 * @type {?NavigatorUAData}
 * @see https://wicg.github.io/ua-client-hints/#interface
 */
WorkerNavigator.prototype.userAgentData;
/*
 * Copyright 2008 The Closure Compiler Authors
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/**
 * @fileoverview JavaScript Built-Ins for windows properties.
 *
 * @externs
 * @author stevey@google.com (Steve Yegge)
 */

// Window properties
// Only common properties are here.  Others such as open()
// should be used with an explicit Window object.

/**
 * @const {!Window}
 * @see https://developer.mozilla.org/en/DOM/window.top
 */
var top;

/**
 * @const {!Navigator}
 * @see https://developer.mozilla.org/en/DOM/window.navigator
 */
var navigator;

/**
 * @const {!HTMLDocument}
 * @see https://developer.mozilla.org/en/DOM/window.document
 */
var document;

/**
 * @const {!Location}
 * @see https://developer.mozilla.org/en/DOM/window.location
 * @suppress {duplicate}
 * @implicitCast
 */
var location;

/**
 * @const {!Screen}
 * @see https://developer.mozilla.org/En/DOM/window.screen
 */
var screen;

/**
 * @const {!Window}
 * @see https://developer.mozilla.org/En/DOM/Window.self
 */
var self;

/**
 * @type {!Window}
 * @see https://developer.mozilla.org/en/DOM/window
 */
var window;

/**
 * @const {boolean}
 * @see https://developer.mozilla.org/en-US/docs/Web/API/Window/isSecureContext
 */
var isSecureContext;

/**
 * @const {!VisualViewport}
 * @see https://developer.mozilla.org/en-US/docs/Web/API/Window/visualViewport
 */
var visualViewport;

/**
 * @param {*} message
 * @see https://developer.mozilla.org/en/DOM/window.alert
 * @return {undefined}
 */
function alert(message) {}

/**
 * @param {number=} immediateID
 * @see https://developer.mozilla.org/en-US/docs/DOM/window.clearImmediate
 * @see http://msdn.microsoft.com/en-us/library/ie/hh924825(v=vs.85).aspx
 * @return {undefined}
 */
function clearImmediate(immediateID) {}

/**
 * @param {?number|undefined} intervalID
 * @see https://developer.mozilla.org/en/DOM/window.clearInterval
 * @suppress {duplicate}
 * @return {undefined}
 */
function clearInterval(intervalID) {}

/**
 * @param {?number|undefined} timeoutID
 * @see https://developer.mozilla.org/en/DOM/window.clearTimeout
 * @suppress {duplicate}
 * @return {undefined}
 */
function clearTimeout(timeoutID) {}

/**
 * @param {*} message
 * @return {boolean}
 * @see https://developer.mozilla.org/en/DOM/window.confirm
 */
function confirm(message) {}

/**
 * @see https://developer.mozilla.org/en/DOM/window.dump
 * @param {*} x
 * @return {undefined}
 */
function dump(x) {}

/**
 * @param {string} message
 * @param {string=} opt_value
 * @return {?string}
 * @see https://developer.mozilla.org/en/DOM/window.prompt
 */
function prompt(message, opt_value) {}

/**
 * @param {function()} callback
 * @param {...?} callbackParams
 * @return {number}
 * @see https://developer.mozilla.org/en-US/docs/DOM/window.setImmediate
 * @see http://msdn.microsoft.com/en-us/library/ie/hh773176(v=vs.85).aspx
 */
function setImmediate(callback, callbackParams) {}

/**
 * @param {Function|!TrustedScript|string} callback
 * @param {number=} opt_delay
 * @param {...?} callbackParams
 * @return {number}
 * @see https://developer.mozilla.org/en/DOM/window.setInterval
 * @see https://html.spec.whatwg.org/multipage/webappapis.html#timers
 */
function setInterval(callback, opt_delay, callbackParams) {}

/**
 * @param {Function|!TrustedScript|string} callback
 * @param {number=} opt_delay
 * @param {...*} callbackParams
 * @return {number}
 * @see https://developer.mozilla.org/en/DOM/window.setTimeout
 * @see https://html.spec.whatwg.org/multipage/webappapis.html#timers
 */
function setTimeout(callback, opt_delay, callbackParams) {}

/**
 * Returns whether the object has a property with the specified name.
 *
 * @param {*} propertyName Implicitly cast to a string.
 * @return {boolean}
 * @nosideeffects
 * @see http://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/hasOwnProperty
 */
function hasOwnProperty (propertyName) {}

/**
 * @param {function():void} callback
 * @return {undefined}
 * @see https://developer.mozilla.org/en-US/docs/Web/API/WindowOrWorkerGlobalScope/queueMicrotask
 * @see https://html.spec.whatwg.org/multipage/timers-and-user-prompts.html#microtask-queuing
 */
function queueMicrotask(callback) {}
